
                         
   ROADMAP-MODERN-ERRORS  
                         


modern-errors-sourcemap:
  - Node.js:
     - already available:
        - CLI Node.js builtin flag:
           - builtin
           - in the future, will handle URI imports
        - node-source-map-support:
           - programmatic usage instead of CLI
           - lazy loading of source maps, at error creation time
     - i.e. only reasons for a plugin would be if it provided:
        - pros of both approaches above
        - updates error.stack only of AnyError instances (and children), not of other libraries, i.e. not global
  - browsers:
     - must handle stack traces of multiple engines, although those are very engine specific
     - must be async
        - i.e. must be instanceMethod
        - because:
           - inline source maps are bad since they increase network size of sources, which slows down UX
           - external source maps use URLs, i.e. require XHRs
              - but sync XHRs are bad practices as they freeze browsers

errors-preview:
  - add a preview line on top of ERROR.stack
  - FUNC(ERROR)->OBJ:
     - path "PATH"
     - url "URL"
     - line NUM
     - column NUM
     - preview STR
  - each returned property is undefined if issue
     - no exception, to make it safe
     - including:
        - argument has no stack STR property
        - no stack lines
        - no path found
        - error while reading|fetching file
        - cannot find line in file
  - sync
     - reason:
        - more convenient in error handlers
        - necessary in Error constructors
           - including plugin.set()
     - i.e. cannot fetch non-file: URL, only file paths|URLs
     - i.e. Node.js only
  - only try first innermost found path
  - noop if there is already a preview
     - including due to Node --enable-source-map, or to library itself
     - detected by checking if "STACK" either:
        - starts with ERROR.name
        - starts with "...: ERROR.message"
        - or if includes the preview line???
  - preview:
     - includes an empty line with an ^ character for the specific column
     - truncate:
        - on both sides
        - always 80 width, since final user might be different machine than current one
     - show previous|next lines???
  - strip ANSI sequences???
  - returned path is relative to cwd???
  - colors???
  - prefer --enable-source-maps CLI flag???
     - good error preview requires resolving source maps
  - use v8-specific stack parsing library
  - modern-errors-preview: plugin using errors-preview

Plugin to sanitize secure data
  - using wild-wild-path
