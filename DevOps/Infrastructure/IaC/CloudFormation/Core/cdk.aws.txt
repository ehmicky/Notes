
       
   CDK  
       



TODO:
  - https://docs.aws.amazon.com/cdk/api/v2/docs/aws-construct-library.html
  - https://cdkworkshop.com/
  - https://docs.aws.amazon.com/cdk/v2/guide/home.html
  - https://github.com/aws/aws-cdk
  - https://constructs.dev/
  - https://github.com/aws-samples/aws-cdk-examples/tree/master/typescript
  - https://github.com/Sceptre/sceptre-cdk-handler
  - https://cdk.dev/resources
  - https://github.com/kalaiser/awesome-cdk
  - check currently documented SERVICEs, with the list of aws_general doc

require('aws-cdk-lib/SERVICE')    #SLIB

{TYPE}                            #RESOLVABLE

new RESOURCE(CONSTRUCT)

this                              #Top-level CONSTRUCT
new Construct
 (PARENT_CONSTRUCT, 'CONSTRUCT')  #CONSTRUCT
Construct.isConstruct(VAL)->BOOL  #Like instanceof but cross-realm
CONSTRUCT.node                    #NODE

new Node(CONSTRUCT,               #NODE. CONSTRUCT's node within the scope tree
 PARENT_CONSTRUCT, 'CONSTRUCT')   #Scope tree is different from dependencies tree
NODE.id                           #'CONSTRUCT'. Unique within this scope tree
NODE.addr                         #STR. Id of the NODE + its parents, excluding ones with id 'Default'
                                  #Is hex SHA1 of NODE + parents, starting with 'c8'
                                  #Unique within all scope trees
NODE.path                         #STR. PATH_SEP-separated path in scope tree
Node.PATH_SEP                     #STR (def: '/')
NODE.scope                        #Current CONSTRUCT
                                  #undefined for root
NODE.scopes                       #Parents CONSTRUCT_ARR
NODE.root                         #Root CONSTRUCT
NODE.children                     #Children CONSTRUCT_ARR
NODE.defaultChild?                #Child CONSTRUCT with id 'Default' or 'Resource'
NODE.locked                       #BOOL???

NODE.findAll([ENUM])              #Traverse NODE descendants, depth-first
 ->CONSTRUCT_ARR                  #ENUM is PREORDER (def) or POSTORDER
NODE.findChild(id)                #Return a direct child by id.
NODE.getContext(key)              #Retrieves a value from tree context if present. Otherwise, would throw an error.
NODE.lock()                       #Locks this construct from allowing more children to be added.
NODE.setContext(key, value)       #This can be used to set contextual values.
NODE.tryFindChild(id)             #Return a direct child by id, or undefined.
NODE.tryGetContext(key)           #Retrieves a value from tree context.
NODE.tryRemoveChild(childName)    #Remove the child with the given name, if present.
NODE.addValidation(validation)    #Adds a validation to this construct.
NODE.validate()                   #Validates this construct.

NODE.metadata                     #METADATA_ARR???
METADATA.type                     #'VAR'
METADATA.data                     #VAL
METADATA.trace                    #STR_ARR. Stack trace.
NODE.addMetadata
 ('VAR', VAL[, OPTS])             #Add a METADATA
OPTS.stackTrace                   #BOOL (def: false). Sets METADATA.trace
OPTS.traceFromFunction            #FUNC (def: addMetadata), to start METADATA.trace from

DEPENDABLE                        #Trait of CONSTRUCT
Dependable.of(DEPENDABLE)
 .dependencyRoots
NODE.dependencies                 #CONSTRUCT_ARR. Get dependencies
Dependable.implement(DEPENDABLE,
 {dependencyRoots: CONSTRUCT_ARR})#Set dependencies
NODE.addDependency(DEPENDABLE...) #Add dependency
