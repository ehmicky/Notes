
                                  ┏━━━━━━━━━━━━━━━━━━━━┓
                                  ┃   CLOUDFORMATION   ┃
                                  ┗━━━━━━━━━━━━━━━━━━━━┛

ALTERNATIVES ==>                  #See Pulumi

VERSION ==>                       #2024-11-21

SUMMARY ==>                       #Template: local|API|UI|S3|SSM, validation, spec, price estimation, S3 package, metadata, policy
                                  #Stack: outputs declare|export|import, nested, role, events, SNS notifications, UI quick link, git sync, GitHub action
                                  #Resource: type, logical|physical ID, RESPROP|RESATTR, write|create-only RESPROP, DependsOn, lookup
                                  #Update: noop, replacement
                                  #Rollback: retry failed, manual|auto, timeout, monitoring time, alarm triggers
                                  #Delete: termination protection, DeletePolicy|UpdateReplacePolicy retain|snapshot
                                  #Changeset: create|update|import, review
                                  #Import: scan, generate template, deploy
                                  #Parameters: declare|use, constraints, rules, built-in, UI grouping
                                  #Functions: RESOURCE_MID|RESATTR, resolve, conditions, If|Equals|Not|And|Or, mappings, ForEach, Join|Split|Sub, Length|Select, ToJsonString|Base64
                                  #Wait: signal url|count|timeout, sleep, date|time
                                  #StackSet: admin|target account|role, self|service-managed, delegated admin, import, instances, region|account|orgUnit target, autoDeploy, account gate
                                  #StackSet operation: failure tolerance, operation|instance|region concurrency|order, retainStacks
                                  #Drift: set|stack|instance, diff
                                  #Macro: declare|use, logging, Lambda, transform, AWS::LanguageExtensions|Include
                                  #Custom resource: SNS|Lambda, create|update|delete, RESPROP|RESATTRs

EXTENSIONS ==>                    #See CloudFormation extensions doc
RESOURCES AS CODE ==>             #See CDK doc
                                  #Preferred
IMPROVED CLI ==>                  #See rain and sceptre doc
MOVE RESOURCES ==>                #See cfn-teleport doc
TEMPLATE LINTING ==>              #See cfn-lint doc
DIAGRAMS ==>                      #See aws-cloudformation-stacks-graph and cfn-diagram doc
POLICY AS CODE ==>                #See cfn-guard doc
CI/CD ==>                         #See aws-cloudformation-github-deploy and Git sync doc

S3_URL                            #'s3|http[s]://' to a S3 OBJECT

                                  ┌─────────┐
                                  │   API   │
                                  └─────────┘

SERVICE_DOMAIN                    #cloudformation.amazonaws.com
                                  #For sets: stacksets.amazonaws.com

FORMAT ==>                        #JSON
                                  #Uses REQ.Action|Version

REQ_ID                            #RES.ResponseMetadata.RequestId

PAGINATION ==>                    #REQ|RES.NextToken STR
                                  #REQ.MaxResults NUM:
                                  #  - usually defined, max|def 100
                                  #  - def 50, max 100: ListGeneratedTemplates()
                                  #  - not defined:
                                  #     - always 100: ListImports|ListExports(), DescribeChangeSet[Hooks](), ListHookResults()
                                  #     - use 1MB chunks instead: DescribeStacks|ListStacks(), ListStackResources(),
                                  #       DescribeStackEvents(), ListChangeSets(), DescribeAccountLimits()
                                  #Always limited to 100 items: DescribeStackResources()
                                  #No pagination in JavaScript: DescribeChangeSet[Hooks](), ListStackInstanceResourceDrifts(), ListStackSetAutoDeploymentTargets()

REQ.Client[Request]Token          #Idempotence STR, for some ACTIONs
                                  #In UI, is 'Console-ACTION-UUID'
                                  #Must be [[:alnum:]-], max 128 chars

PRICING ==>                       #Free, except for non-AWS managed ETYPEs (see extensions doc)

                                  ┌──────────┐
                                  │   AUTH   │
                                  └──────────┘

AWSCloudFormationFullAccess       #AWS managed POLICY allowing cloudformation:*
AWSCloudFormationReadOnlyAccess   #Same but readonly

                                  ┌─────────────────┐
                                  │   CLI HELPERS   │
                                  └─────────────────┘

cfn-*                             #Helper CLI scripts, implemented in Python, downloaded as OS package or binaries
                                  #Version 2.0-29

SHARED FLAGS ==>                  #With all except:
                                  #  - cfn-hup
                                  #  - cfn-signal with HANDLE_URL
--stack|-s                        #'STACK'
--role                            #'ROLE'
--access-key                      #ACCESS_KEY_ID
--secret-key                      #SECRET_ACCESS_KEY
--credential-file|-f              #'PATH' to INI_CREDS
--region                          #'REGION'
--url|-u                          #'URL'. CloudFormation endpoint

                                  ┌────────────┐
                                  │   LIMITS   │
                                  └────────────┘

ACCOUNT_LIMIT.Name                #STR. Available ones are documented in this doc
ACCOUNT_LIMIT.Value               #NUM

                                  ┌────────────────┐
                                  │   LIMITS API   │
                                  └────────────────┘

DescribeAccountLimits()           #Req: empty
                                  #Res: AccountLimits ACCOUNT_LIMIT_ARR

                                  ┌───────────────────┐
                                  │   TEMPLATE MAIN   │
                                  └───────────────────┘

TEMPLATE                          #Set of AWS RESOURCEs to deploy together
                                  #Specified declaratively either:
                                  #  - JSON
                                  #  - YAML: JSON-compatible, no << nor &REF
                                 ##To convert between JSON|YAML: see `rain fmt` doc
                                  #Should avoid secrets in it
STACK_TEMPLATE                    #TEMPLATE on a given STACK
STACK_TEMPLATE.StackName          #'STACK'|STACK_MID

SET|STACK[_TEMPLATE]|CHANGESET    #'TEMPLATE' contents as STR
 .TemplateBody                    #Max 51KB
SET|STACK[_TEMPLATE]|CHANGESET    #Same but as 'URL'
 .TemplateURL                     #Must be a S3 OBJECT or a SSM document
                                  #Can use `aws cloudformation package` or `sam package`
                                  #  - with SET: only `sam package`
SET|STACK|CHANGESET
 .UsePreviousTemplate             #BOOL (def: false). Re-use current TEMPLATE

TEMPLATE.AWSTemplateFormatVersion
STACK_TEMPLATE.Version            #Currently '2010-09-09'
[STACK_]TEMPLATE.Description      #STR. Max 1KB

SET|STACK[_TEMPLATE]|CHANGESET    #Whether includes RESTYPEs with potential security risk
 .Capabilities                    #Only used as a hint, e.g. by tools to warn users of those risks
                                  #STR_ARR among:
                                  #  - CAPABILITY_IAM: required when using:
                                  #     - IAM::User|Group|Role|UserToGroupAddition
                                  #     - IAM::AccessKey|InstanceProfile
                                  #     - IAM::Policy
                                  #  - CAPABILITY_NAMED_IAM: same but when using names instead of MID
                                  #  - CAPABILITY_RESOURCE_POLICY:
                                  #     - required when using:
                                  #        - IAM::Policy
                                  #        - Lambda::[LayerVersion]Permission
                                  #        - S3::BucketPolicy
                                  #        - SNS::TopicPolicy
                                  #        - SQS::QueuePolicy
                                  #        - Events::EventBusPolicy
                                  #        - ApplicationAutoScaling::ScalingPolicy
                                  #     - only with SAM
                                  #  - CAPABILITY_AUTO_EXPAND: see below
STACK_TEMPLATE.CapabilitiesReason #'RESOURCE,...' that need the Capabilities

STACK_TEMPLATE.ResourceTypes      #RESTYPE_ARR
STACK_TEMPLATE
 .TemplateSummaryConfig
 .TreatUnrecognizedResource
  TypesAsWarnings                 #BOOL (def: false). Unknown RESTYPEs set STACK_TEMPLATE.Warnings instead of failing
STACK_TEMPLATE.Warnings
 .UnrecognizedResourceTypes       #RESTYPE_ARR. Max 256

STACK_TEMPLATE.Errors             #TEMPLATE_ERROR_ARR
                                  #Only syntax errors, not semantic
TEMPLATE_ERROR.Code               #STR, e.g. 'ValidationError'
TEMPLATE_ERROR.Type               #STR, e.g. 'Sender'
TEMPLATE_ERROR.Message            #'ERROR'

                                  ┌──────────────────────┐
                                  │   TEMPLATE MAIN UI   │
                                  └──────────────────────┘

PACTION cloudformation:           #Allows uploadig TEMPLATE from UI
 CreateUploadBucket               #Max 1MB

                                  ┌────────────────────────┐
                                  │   TEMPLATE MAIN AUTH   │
                                  └────────────────────────┘

COND_KEY                          #'URL'. Only for Create|UpdateStack(), CreateChangeSet(), Create|UpdateStackSet(),
 cloudformation:TemplateUrl       #GetTemplateSummary|ValidateTemplate|EstimateTemplateCost()

                                  ┌───────────────────────┐
                                  │   TEMPLATE MAIN API   │
                                  └───────────────────────┘

GetTemplateSummary()              #Req: STACK_TEMPLATE
                                  #  - only StackName, TemplateBody, TemplateURL
                                  #  - only one with TemplateSummaryConfig, StackSetId|StackSetName -> StackSetName 'SET'|SET_MID
                                  #  - also OP: CallAs
                                  #Res: STACK_TEMPLATE
                                  #  - no StackName, TemplateBody, TemplateURL, Parameters[*].ParameterType|ParameterConstraints
                                  #  - only one with Version, ResourceTypes, ResourceIdentifierSummaries, Warnings

                                  ┌───────────────────────────┐
                                  │   TEMPLATE MAIN TOOLKIT   │
                                  └───────────────────────────┘

EDIT TEMPLATE ==>                 #When viewing a TEMPLATE file (YAML, not JSON):
                                  #  - syntax validation
                                  #  - autocompletion

                                  ┌────────────────────────┐
                                  │   TEMPLATE PRINT API   │
                                  └────────────────────────┘

GetTemplate()                     #Req: STACK_TEMPLATE
                                  #  - only StackName, StagesAvailable STR_ARR -> TemplateStage STR
                                  #  - only one with ChangeSetName
                                  #Res: STACK_TEMPLATE
                                  #  - only TemplateBody
                                  #  - only one with StagesAvailable

                                  ┌────────────────────────┐
                                  │   TEMPLATE PRINT CLI   │
                                  └────────────────────────┘

sceptre fetch-remote-template PATH#Prints GetTemplate()
                                  #Cannot set StagesAvailable, i.e. always 'Processed'

rain cat STACK                    #Prints GetTemplate()
--transformed|-t                  #Set StagesAvailable 'Processed' instead of default 'Original'
--unformatted|-u                  #No prettify

                                  ┌───────────────────────┐
                                  │   TEMPLATE VALIDATE   │
                                  └───────────────────────┘

TEMPLATE VALIDATION ==>           #Validates:
                                  #  - JSON|YAML syntax
                                  #  - TEMPLATE syntax

                                  ┌───────────────────────────┐
                                  │   TEMPLATE VALIDATE API   │
                                  └───────────────────────────┘

ValidateTemplate()                #Req: STACK_TEMPLATE
                                  #  - only TemplateBody, TemplateURL
                                  #Res: STACK_TEMPLATE
                                  #  - no StackName, TemplateBody, TemplateURL

                                  ┌───────────────────────────┐
                                  │   TEMPLATE VALIDATE CLI   │
                                  └───────────────────────────┘

sceptre validate GSPATH           #Does ValidateTemplate()

                                  ┌───────────────────────────┐
                                  │   TEMPLATE VALIDATE SAM   │
                                  └───────────────────────────┘

sam validate                      #Validate TEMPLATE:
                                  #  - JSON|YAML syntax
                                  #  - general TEMPLATE syntax (not as well as CloudFormation's ValidateTemplate())
                                  #  - AWS::Serverless::* syntax
--lint                            #BOOL (def: false, recommended: true). Run cfn-lint
                                  #Not very useful: can use cfn-lint directly

                                  ┌───────────────────┐
                                  │   TEMPLATE COST   │
                                  └───────────────────┘

TEMPLATE_COST.Url                 #URL to AWS Pricing Calculator

                                  ┌───────────────────────┐
                                  │   TEMPLATE COST API   │
                                  └───────────────────────┘

EstimateTemplateCost()            #Req: STACK_TEMPLATE
                                  #  - only TemplateBody, TemplateUrl, STACK.Parameters
                                  #Res: TEMPLATE_COST

                                  ┌───────────────────────┐
                                  │   TEMPLATE COST CLI   │
                                  └───────────────────────┘

sceptre estimate-cost GSPATH      #Does EstimateTemplateCost(), opening a browser

                                  ┌───────────────────┐
                                  │   TEMPLATE SPEC   │
                                  └───────────────────┘

SPEC                              #JSON document of all available RESTYPEs in a given REGION
                                  #There is an online documentation that is simpler to read
                                 ##There is a JSON schema available as cloudformation-template-schema (version 2022-12-07)
                                 ##For SAM, there is also one in aws/serverless-application-model GitHub repo
                                  #As of 2023-10-13, replaced by a different page using ESCHEMAs instead (more expressive)
                                  #  - can use DescribeType() to get it
SPEC.ResourceSpecificationVersion #'X.Y.Z'

SPEC.ResourceTypes.RESTYPE        #RESTYPE_SPEC
RESTYPE_SPEC|RESPROP_SPEC
 .Documentation                   #'URL' to online documentation

RESTYPE_SPEC.Properties.RESPROP   #RESPROP_SPEC. RESOURCE.RESPROP definition
SPEC
 .PropertyTypes['RESTYPE.MODEL']  #Same but when RESPROP_SPEC.Type is 'MODEL'
RESPROP_SPEC.PrimitiveType        #STR. Simple type, among 'String', 'Long|Integer|Double', 'Boolean', 'Timestamp', 'Json'
RESPROP_SPEC.Type                 #Type either:
                                  #  - 'MODEL': OBJ with values of different types
                                  #  - 'Map': OBJ with values of same types
                                  #  - 'List': ARR with values of same types
RESPROP_SPEC.[Primitive]ItemType  #Like RESATTR_SPEC.* but for ARR item type, when RESATTR_SPEC.Type is 'RESATTR,...'
RESPROP_SPEC.Required             #BOOL
RESPROP_SPEC.DuplicatesAllowed    #BOOL. Whether duplicate values allowed, if Type 'List'

RESTYPE_SPEC.Attributes.RESATTR   #RESATTR_SPEC. RESOURCE.RESATTR definition
RESATTR_SPEC.Type                 #Type either:
                                  #  - 'RESATTR': OBJ. Each OBJ property must be defined as an RESATTR2 called 'RESATTR.PROP'
                                  #  - 'List': like RESPROP_SPEC.*
RESATTR_SPEC.PrimitiveType
RESATTR_SPEC.[Primitive]ItemType  #Like RESPROP_SPEC.*

                                  ┌──────────────────────────┐
                                  │   TEMPLATE PACKAGE CLI   │
                                  └──────────────────────────┘

aws cloudformation package        #Replaces local 'PATH' in TEMPLATE by S3 OBJECT (as URL|OBJ, depending on RESPROP)
                                  #Automatically calls S3 PutObject()
                                  #  - 'OBJECT' name is MD5 checksum
                                  #Only for specific RESPROPs on specific RESTYPEs, documented in their respective docs
                                  #'PATH' can be relative|absolute
                                  #  - if DIR, zip it first
                                  #  - if missing, defaults to current DIR

--template-file                   #'PATH' to TEMPLATE as input
--output-template-file            #'PATH' to TEMPLATE after processing (def: stdout)
--use-json                        #Instead of YAML

--s3-bucket                       #S3 'BUCKET'
--s3-prefix                       #STR. S3 OBJECTs prefix
--force-upload                    #Unless specified, do not PutObject() if already exists with same MD5 checksum
--kms-key-id                      #KMS_KEY_ID to use with S3 OBJECTs
--metadata                        #OBJ attached to S3 OBJECTs

                                  ┌────────────────┐
                                  │   STACK MAIN   │
                                  └────────────────┘

STACK                             #Provisioning of a TEMPLATE
                                  #After deletion:
                                  #  - keep information (including TEMPLATE) for 90 days
                                  #  - shown by *StackResource*(), ListStacks() but not DescribeStacks()
                                  #Max 2e3 per ACCOUNT (soft, ACCOUNT_LIMIT 'StackLimit')
                                  #WAIT (DescribeStacks())
                                  #  - StackExists (every 5s, timeout 3m): when it exists
                                  #  - StackCreate|Import|Update|Rollback|DeleteComplete (every 30s, timeout 1h): when StackStatus has that value
STACK_ARN                         #arn:aws:cloudformation:REGION:ACCOUNT_ID:stack/STACK/STACK_MID

STACK.StackId                     #STACK_MID
STACK.StackName                   #'STACK'
                                  #Must be [[:alnum:]-], max 128 chars
STACK.CreationTime                #DATE
STACK.LastUpdatedTime             #DATE
STACK.DeletionTime                #DATE
STACK.Description                 #STR

STACK.StackStatus                 #'STATUS_STATE'
                                  #STATUS can be:
                                  #  - CREATE
                                  #  - IMPORT: import through a CHANGESET
                                  #  - UPDATE
                                  #  - UPDATE_COMPLETE_CLEANUP: after UPDATE, when deleting RESOURCEs that were replaced
                                  #  - ROLLBACK, IMPORT_ROLLBACK, UPDATE_ROLLBACK[_COMPLETE_CLEANUP]: on failure of any of the above
                                  #  - REVIEW: CHANGESET not executed yet
                                  #  - DELETE
                                  #STATE can be:
                                  #  - IN_PROGRESS: only one for REVIEW and UPDATE[_ROLLBACK]_COMPLETE_CLEANUP
                                  #  - COMPLETE
                                  #  - FAILED
                                  #     - not for IMPORT
STACK.StackStatusReason           #STR
STACK.DetailedStatus              #Additional information for following STACK.StackStatus:
                                  #  - CREATE_IN_PROGRESS:
                                  #     - undefined: RESOURCE creation started
                                  #     - 'CONFIGURATION_COMPLETE': RESOURCE created but still ongoing "stabilization"
                                  #        - i.e. still launching, and being polled by CloudFormation until fully ready
                                  #        - also called "eventual consistency check"
                                  #        - however, other RESOURCEs that depend on it can already proceed
                                  #  - CREATE_FAILED:
                                  #     - 'VALIDATION_FAILED': user input error (e.g. wrong RESPROPs)
                                  #     - undefined: other errors

STACK|CHANGESET.ResourceTypes     #RESTYPE_ARR. Fail if lacks a RESTYPE used in STACK|CHANGESET
                                  #Can be 'AWS::*' (def), 'AWS::SERVICE::RESOURCE|*', 'Custom::RESOURCE|*'

STACK|CHANGESET.Tags              #TAG_PAIRS
aws:cloudformation:*              #TAGs always on STACK
                                  #Also on the STACK's RESOURCEs, but only for specific RESTYPEs
aws:cloudformation:stack-id       #'STACK_ARN'
aws:cloudformation:stack-name     #'STACK'
aws:cloudformation:logical-id     #'RESOURCE'

STAGING ENVIRONMENT ==>           #For dev, staging, production, etc.
                                  #Must be one STACK per staging environment
                                  #But all using the same TEMPLATE, with different PARAMVALs
                                  #Must pass staging environment name as PARAM, to prefix RESOURCEs PhysicalResourceIds
                                  #  - but LogicalResourceId 'RESOURCE' can|must remain the same
                                  #If possible, should have one ACCOUNT per staging environment

                                  ┌───────────────────┐
                                  │   STACK MAIN UI   │
                                  └───────────────────┘

https://REGION.console.aws
 .amazon.com/cloudformation/home
 ?region=REGION
 #/stacks/create/review
 ?templateURL=URL
 &stackName=STACK                 #Link to UI page to create STACK
 &param_PARAM=VAL                 #PARAMs cannot use NoEcho

STACK.StackStatus                 #When *_FAILED, UI provides with link to likely cause: STACK EVENT and CloudTrail LLEVENT

                                  ┌─────────────────────┐
                                  │   STACK MAIN AUTH   │
                                  └─────────────────────┘

STACK|CHANGESET.RoleARN           #ROLE_ARN used for ACTIONs performed on by the STACK
                                  #Def: STS TEMP_TOKEN (i.e. based on current PRINCIPAL)
                                  #If specified, must:
                                  #  - be assumable by Principal.Service 'cloudformation.amazonaws.com'
                                  #  - be allowed to iam:PassRole
                                  #  - COND_KEY aws:SourceArn SET_ARN
                                  #  - COND_KEY aws:SourceAccount|SourceOrg*
COND_KEY cloudformation:RoleArn   #ROLE_ARN. Only with Create|Update|DeleteStack(), ContinueUpdateRollback|RollbackStack(),
                                  #CreateChangeSet(), Create|UpdateStackSet()

                                  ┌────────────────────┐
                                  │   STACK MAIN API   │
                                  └────────────────────┘

CreateStack()                     #Req: STACK
                                  #  - no StackId, *Time, Description, Outputs, StackStatus*, DetailedStatus, ChangeSetId,
                                  #    DriftInformation, ParentId, RootId, DeletionMode
                                  #  - no UsePreviousTemplate, StackPolicyDuringUpdate*
                                  #  - also ClientRequestToken
                                  #Res: STACK
                                  #  - only StackId
ListStacks()                      #Req: STACK
                                  #  - only StackStatus -> StackStatusFilter STR_ARR
                                  #Res: StackSummaries STACK_ARR
                                  #  - no Capabilities, DetailedStatus, ChangeSetId, DisableRollback, EnableTerminationProtection,
                                  #    NotificationARNs, Outputs, Parameters, RetainExceptOnCreate, RoleARN,
                                  #    RollbackConfiguration, Tags, TimeoutInMinutes, ResourceTypes, DeletionMode
                                  #  - Description -> TemplateDescription
DescribeStacks()                  #Req: STACK
                                  #  - only StackId|StackName -> StackName 'STACK'|STACK_MID
                                  #Res: Stacks STACK_ARR
                                  #  - no Template*, UsePreviousTemplate, OnFailure, StackPolicy*, ResourceTypes
                                  #Requires PACTION ListStacks

                                  ┌────────────────────┐
                                  │   STACK MAIN CLI   │
                                  └────────────────────┘

sceptre status GSPATH             #Print all STACK.StackStatus (using DescribeStacks())

rain ls [STACK] [CHANGESET]       #Print all STACK.StackName|StackStatus
                                  #If single STACK, also shows PARAMs, OUTPUTs, CHANGESETs
                                  #Using DescribeStacks|ListStacks|DescribeStackResource[s]()
--all|-a                          #For all REGIONs. Also prints deleted STACKs
                                  #If single STACK, also prints RESOURCEs
--changeset|-c                    #Shows CHANGESETs instead, and allow CHANGESET argument
--admin                           #Like `rain deploy`

cdk list|ls [STACKS...]           #Print all STACK.StackName
                                  #Def: all STACKs
--long|-l                         #BOOL (def: false). Print 'STACK', ACCOUNT_ID and REGION

rain watch STACK                  #Print STACK: StackName, StackStatus, errors, RESOURCEs
                                  #Updates every 2s
--wait|-w                         #Wait for changes to begin rather than refusing to watch an unchanging stack

                                  ┌──────────────────┐
                                  │   STACK NESTED   │
                                  └──────────────────┘

AWS::CloudFormation::Stack        #RESTYPE of a STACK
                                  #Child STACKs, created|updated|rolledback along the parent
                                  #Allows re-using TEMPLATE parts
                                  #Max 2500 RESOURCEs per child STACK
                                  #RESPROPs are same as STACK.*
                                  #  - except no ClientRequestToken, Deletion*, DetailedStatus, DriftInformation,
                                  #    RetainExceptOnCreate, RollbackConfiguration, OnFailure, ResourceTypes
STACK.ParentId                    #STACK2_MID
STACK.RootId                      #STACK2_MID
CHILD_STACK.RESOURCE              #Must be used inside parent STACK instead of 'RESOURCE' to refer to it

CHANGESET.IncludeNestedStacks     #BOOL (def: false). Whether should include child STACKs
                                  #If true, each child STACK has its own CHANGESET
CHANGESET.ParentChangeSetId       #CHANGESET_MID
CHANGESET.RootChangeSetId         #CHANGESET_MID
RESCHANGE.ChangeSetId             #CHANGESET_MID, when RESOURCE is child STACK

                                  ┌────────────────────┐
                                  │   STACK RESOURCE   │
                                  └────────────────────┘

TEMPLATE.Resources.RESOURCE       #RESOURCE
                                  #Max 500 per TEMPLATE
RESOURCE                          #AWS resource

STACK_RESOURCE                    #RESOURCE on a given STACK_TEMPLATE
STACK_RESOURCE.LogicalResourceId  #'RESOURCE'. RESOURCE identifier but only inside CloudFormation TEMPLATE
                                  #Does not change on create|delete, update nor replace
                                  #Must be [[:alnum:]], max 255 chars
                                  #Is based on TEMPLATE.Resources.RESOURCE key, i.e. cannot use dynamic RFUNC
STACK_RESOURCE.PhysicalResourceId #RESOURCE_MID. RESOURCE identifier in its own SERVICE
                                  #Always the value of a specific RESATTR on that RESOURCE
                                  #Usually, depending on RESTYPE: ARN, MID or 'NAME'
                                  #null if deleted or not created yet
                                  #Value is usually random:
                                  #  - MID: automatically generated by the AWS service
                                  #  - 'NAME': often based on a RESPROP
                                  #     - in that case, CloudFormation uses a default value with:
                                  #        - 'STACK' and STACK_MID prefix
                                  #        - LogicalResourceId
                                  #        - random suffix
                                  #     - but not random if RESPROP is explicitly set
                                  #  - ARN: often based on 'NAME', i.e. same comments
                                  #If random:
                                  #  - changes on create|delete and replace (but not update)
                                  #  - allows replacing the RESOURCE (since old one is deleted only after new one is created)
                                  #  - allows creating multiple STACKs from same TEMPLATE
                                  #Can use dynamic RFUNC
                                  #Max 1KB
RESOURCE.Type                     #'RESTYPE'. Max 256 chars
STACK_RESOURCE.ResourceType       #Can be:
                                  #  - 'AWS::SERVICE::RESOURCE': most AWS SERVICEs, including AWS::CloudFormation::* itself
                                  #  - 'ORG::SERVICE::RESOURCE': ETYPE
                                  #  - 'Custom::RESOURCE': CUSTOM_RESOURCE
                                  #If MODULE, ends with '::MODULE'
STACK_RESOURCE
 .LastUpdatedTimestamp            #DATE
[STACK_]RESOURCE.Description      #STR

STACK_RESOURCE.StackId            #STACK_MID
STACK_RESOURCE.StackName          #'STACK'

STACK_RESOURCE.ResourceStatus     #'STATUS_STATE'
                                  #STATUS can be:
                                  #  - CREATE
                                  #  - IMPORT: import through a CHANGESET
                                  #  - UPDATE
                                  #  - ROLLBACK, UPDATE_ROLLBACK, IMPORT_ROLLBACK: on failure of any of the above
                                  #  - DELETE
                                  #STATE can be IN_PROGRESS, COMPLETE, FAILED
                                  #  - also SKIPPED with DELETE
STACK_RESOURCE
 .ResourceStatusReason            #STR

RESOURCE.DependsOn                #'RESOURCE2'[_ARR]
                                  #Create RESOURCE2 before RESOURCE
                                  #When deleting RESOURCE2, delete RESOURCE first
                                  #By default, RESOURCEs are created|updated|deleted in parallel

RESOURCE.Properties.RESPROP       #STR[_ARR], NUM or BOOL
                                  #Usually same|similar as request payload of create|update ACTIONs of the RESTYPE
WRITE-ONLY ==>                    #Some RESPROPs are not returned but can be created|updated
CREATE-ONLY ==>                   #Some RESPROPs are returned and can be created but not updated

cfn-resources ['TEMPLATE_PATH']  ##List RESOURCEs: RESTYPE, 'RESOURCE'
                                 ##Sorted by RESTYPE, padded
                                 ##Def 'TEMPLATE_PATH': stdin
                                 ##Version 1.0.937

                                  ┌─────────────────────────┐
                                  │   STACK RESOURCE AUTH   │
                                  └─────────────────────────┘

COND_KEY
 cloudformation:ResourceTypes     #'RESTYPE'_ARR. Only with CreateStack|UpdateStack|CreateChangeSet()

                                  ┌────────────────────────┐
                                  │   STACK RESOURCE API   │
                                  └────────────────────────┘

ListStackResources()              #Req: STACK_RESOURCE
                                  #  - only StackId|StackName -> StackName 'STACK'|STACK_MID
                                  #Res: StackResourceSummaries STACK_RESOURCE_ARR
                                  #  - no StackId, StackName, Description, Metadata
DescribeStackResources()          #Req: STACK_RESOURCE
                                  #  - only *ResourceId, StackId|StackName -> StackName 'STACK'|STACK_MID
                                  #Res: StackResources STACK_RESOURCE_ARR
                                  #  - no Metadata
                                  #  - LastUpdatedTimestamp -> Timestamp
DescribeStackResource()           #Req: STACK_RESOURCE
                                  #  - only LogicalResourceId, StackId|StackName -> StackName 'STACK'|STACK_MID
                                  #Res: StackResourceDetail STACK_RESOURCE

                                  ┌────────────────────────┐
                                  │   STACK RESOURCE CLI   │
                                  └────────────────────────┘

sceptre list resources GSPATH     #Prints STACK_RESOURCEs, using DescribeStackResources()

rain ls STACK [CHANGESET] --all|-a
rain watch STACK                  #Prints STACK_RESOURCEs (see above)

                                  ┌────────────────────────┐
                                  │   STACK RESOURCE SAM   │
                                  └────────────────────────┘

sam list resources                #Print all STACK_RESOURCEs both:
                                  #  - locally: 'RESOURCE', using TEMPLATE
                                  #     - if using SAM transform, expand it first
                                  #  - deployed (if --stack-name set): RESOURCE_MID, using ListStackResources()
--output                          #Either 'table' (def) or 'json'

                                  ┌──────────────────┐
                                  │   STACK EVENTS   │
                                  └──────────────────┘

EVENT                             #Update of STACK[_RESOURCE], anytime their properties changes (including status)
                                  #I.e. meant as STACK history
EVENT.EventId                     #EVENT_MID
EVENT.Timestamp                   #DATE
                                  #Sorted by most recent to least

EVENT.LogicalResourceId
 |PhysicalResourceId|ResourceType
 |StackId|StackName
 |ResourceStatus[Reason]
 |DetailedStatus                  #Like STACK_RESOURCE.*
EVENT.ResourceProperties          #RESOURCE.Properties but as 'OBJ_JSON'

EVENT.ClientRequestToken          #STR. 1 per OP

STACK|CHANGESET.NotificationARNs  #SNS_TOPIC_ARN_ARR. Send to TOPIC each EVENT
AWS::NotificationARNs             #STACK.NotificationARNs
                                  #Built-in PARAM

                                  ┌─────────────────────┐
                                  │   STACK EVENTS UI   │
                                  └─────────────────────┘

TIMELINE ==>                      #EVENTs are shown as a Gantt chart
                                  #On failure:
                                  #  - likely causes are highlighted
                                  #  - can use AI ("Diagnose with Q") for debugging hint

                                  ┌──────────────────────┐
                                  │   STACK EVENTS API   │
                                  └──────────────────────┘

DescribeStackEvents()             #Req: EVENT
                                  #  - only StackName
                                  #Res: StackEvents EVENT_ARR

                                  ┌──────────────────────┐
                                  │   STACK EVENTS CLI   │
                                  └──────────────────────┘

rain logs STACK ['RESOURCE']      #Calls DescribeStackEvents(), with improved output
                                  #Only for 'RESOURCE' (def: all)
--all|-a                          #Unless set, exclude some logs which are not very useful: 'Resource creation Initiated', 'User Initiated', 'Transformation succeeded'
--chart|-c                        #Output as an HTML Gantt chart
--days|-d                         #Since NUM (def: unlim) days ago
--since-user-initiated|-s         #Since last EVENT with ResourceStatusReason 'User Initiated'
--length|-l                       #Max NUM (def: unlim) of EVENTs

cfplot.py STACK                   #Display STACK's EVENTs as an HTML Gantt chart
                                  #Includes nested STACKs
                                  #Version 2024-11-06
--region                          #'REGION' (def: 'us-east-2')
--profile                         #AWS 'PROFILE' (def: 'default')

                                  ┌──────────────────┐
                                  │   STACK UPDATE   │
                                  └──────────────────┘

NOOP ==>                          #No update if no RESOURCE.RESPROP has changed

TEMPLATE UPDATE ==>               #Can only update TEMPLATE.Description|Metadata|Conditions|*Policy if TEMPLATE.Resources is also modified

REPLACEMENT ==>                   #Depending on RESOURCE.RESPROP, is done:
                                  #  - NoInterruption: with an Update*()
                                  #  - MinorInterruption: with an Update*() with side-effects, e.g. EC2 instance restarting
                                  #  - Replacement: with a Create*() then Delete*()
                                  #     - retry Delete*() 3 times
                                  #     - often due to create-only RESPROP
                                  #     - few RESPROPs require Delete*() before Create*() instead
                                  #        - required when RESOURCE is a singleton, e.g. when physicalResourceId is hard-coded
                                  #        - but less safe
                                  #  - ReadOnly: cannot be updated, i.e. must recreate the STACK
TRIGGER ==>                       #RESPROP which only purpose is to trigger replacements

RESPROP_SPEC.UpdateType           #'Immutable|Mutable'. Whether update requires Replacement

RESOURCE.UpdateReplacePolicy      #STR. What to do with RESOURCE after it has been replaced on update
                                  #Same values as RESOURCE.DeletionPolicy, except no 'RetainExceptOnCreate'

RESOURCE.UpdatePolicy             #UPDATE_POLICY. Only for specific RESTYPEs, documented in their respective doc

                                  ┌──────────────────────┐
                                  │   STACK UPDATE API   │
                                  └──────────────────────┘

UpdateStack()                     #Req: STACK
                                  #  - no *Time, Description, Outputs, StackStatus*, DetailedStatus, ChangeSetId,
                                  #    DriftInformation, ParentId, RootId
                                  #  - StackId|StackName -> StackName 'STACK'|STACK_MID
                                  #  - no EnableTerminationProtection, OnFailure, Tags, TimeoutInMinutes, DeletionMode
                                  #  - also ClientRequestToken
                                  #Res: STACK
                                  #  - only StackId

                                  ┌────────────────────┐
                                  │   STACK ROLLBACK   │
                                  └────────────────────┘

STACK.ResourcesToSkip             #'RESOURCE'_ARR to set ResourceStatus to 'UPDATE_COMPLETE' without retrying rolling back
                                  #Only if RESOURCE.ResourceStatus is 'UPDATE_FAILED' due to rollback failure
                                  #Cannot be a nested STACK

STACK.OnFailure                   #STR. On Create|UpdateStack() error:
CHANGESET.OnStackFailure          #  - 'DO_NOTHING':
                                  #      - on create: do nothing
                                  #      - on update: only rollback errored RESOURCEs
                                  #  - 'ROLLBACK' (def): rollback all RESOURCEs
                                  #  - 'DELETE': delete the STACK|CHANGESET
                                  #Rollback wait for whole create|update to complete first (as opposed to start on first failure)
STACK|CHANGESET.DisableRollback   #BOOL (def: false). Same as OnFailure 'DO_NOTHING|ROLLBACK'

STACK.TimeoutInMinutes            #NUM (in mins, def: none). CreateStack() timeout

STACK|CHANGESET                   #STACK_ROLLBACK
 .RollbackConfiguration           #For all operations on the STACK, not just current one
STACK_ROLLBACK                    #NUM (def: 0, max: 3h). Wait for NUM minutes before:
 .MonitoringTimeInMinutes         #  - CreateStack(): setting as complete
                                  #  - UpdateStack(): starting cleanup phase
                                  #During that time, can rollback with either:
                                  #  - manual call to CancelUpdateStack()
                                  #  - ROLLBACK_TRIGGER

STACK_ROLLBACK.RollbackTriggers   #ROLLBACK_TRIGGER_ARR
                                  #Rollback Create|UpdateStack() when specific CloudWatch ALARM.StateValue is 'ALARM'
                                  #Max 5 items
ROLLBACK_TRIGGER.Type             #'AWS::CloudWatch::[Composite]Alarm'
ROLLBACK_TRIGGER.Arn              #ALARM_ARN

                                  ┌────────────────────────┐
                                  │   STACK ROLLBACK API   │
                                  └────────────────────────┘

CancelUpdateStack()               #Req: STACK
                                  #  - only StackId|StackName -> StackName 'STACK'|STACK_MID
                                  #  - also ClientRequestToken
                                  #Res: empty
                                  #If STACK.StackStatus UPDATE_IN_PROGRESS, set to UPDATE_ROLLBACK_*
RollbackStack()                   #Req: STACK
                                  #  - only StackName, RoleARN, RetainExceptOnCreate
                                  #  - also ClientRequestToken
                                  #Res: STACK
                                  #  - only StackId
                                  #When StackStatus 'CREATE|UPDATE_FAILED', rollback to most recent state with '*_COMPLETE' StackStatus
                                  #  - if none, deletes it
ContinueUpdateRollback()          #Req: STACK
                                  #  - only StackName, RoleARN
                                  #  - only one with ResourcesToSkip
                                  #  - also ClientRequestToken
                                  #Res: empty
                                  #When StackStatus 'UPDATE_ROLLBACK_FAILED', cannot update STACK nor use CHANGESET
                                  #This allows retrying update rollback

                                  ┌──────────────────┐
                                  │   STACK DELETE   │
                                  └──────────────────┘

STACK.EnableTerminationProtection #BOOL (def: false)
                                  #Do not allow deleting STACK
                                  #For nested STACKs, must be done on root STACK

RESOURCE.DeletionPolicy           #STR. What to do with RESOURCE when either:
                                  #  - STACK is deleted
                                  #  - RESOURCE is removed from TEMPLATE
                                  #Can be:
                                  #  - 'Delete' (def)
                                  #  - 'Retain': keep RESOURCE
                                  #  - 'RetainExceptOnCreate':
                                  #     - like 'Delete' if RESOURCE was rollbacked during creation
                                  #     - 'Retain' otherwise
                                  #  - 'Snapshot'
                                  #     - delete but create a snapshot
                                  #     - only for specific RESTYPEs
                                  #        - mostly database cluster and EC2 VOLUME
                                  #        - documented in their respective docs
STACK|CHANGESET
 .RetainExceptOnCreate            #BOOL (def: false). Force RESOURCE.DeletionPolicy 'RetainExceptOnCreate'

STACK.RetainResources             #'RESOURCE'_ARR ignored by DeleteStack()
                                  #Meant for STACKs in StackState 'DELETE_FAILED' due to issue
                                  #deleting those RESOURCEs (e.g. stateful RESTYPEs)
STACK.DeletionMode                #If 'FORCE_DELETE_STACK' (def: 'STANDARD'), delete STACK if it gets stuck
                                  #in StackState 'DELETE_FAILED' due to issue deleting some RESOURCEs

STATEFUL RESTYPES ==>             #RESTYPE with data, e.g. S3 BUCKET or databases
                                  #To avoid losing data:
                                  #  - put in own STACK
                                  #  - STACK.EnableTerminationProtection true
                                  #  - RESOURCE.DeletionPolicy 'Retain*'
                                  #  - avoid replacements
                                  #     - e.g. accidentally changing RESOURCE_LID or RESOURCE_MID due to renaming in CDK

                                  ┌──────────────────────┐
                                  │   STACK DELETE API   │
                                  └──────────────────────┘

DeleteStack()                     #Req: STACK
                                  #  - only RoleARN, StackId|StackName -> StackName 'STACK'|STACK_MID
                                  #  - only one with RetainResources
                                  #  - also ClientRequestToken, DeletionMode
                                  #Res: empty
UpdateTerminationProtection()     #Req: STACK
                                  #  - only StackName, EnableTerminationProtection
                                  #Res: STACK
                                  #  - only StackId

                                  ┌───────────────────────┐
                                  │   STACK DELETE CLLI   │
                                  └───────────────────────┘

rain ls STACK [CHANGESET] --all|-a#Prints delete STACKs (see above)

                                  ┌──────────────────────────┐
                                  │   STACK DELETE TOOLKIT   │
                                  └──────────────────────────┘

DELETE STACK ==>                  #Can be done

                                  ┌────────────────────┐
                                  │   CHANGESET MAIN   │
                                  └────────────────────┘

CHANGESET                         #Diff between STACK current|next version
                                  #After review, applied to STACK, resulting in a create|update
                                  #I.e. two-step create|update
                                  #WAIT (DescribeChangeSet(), every 30s, timeout 1h) ChangeSetCreateComplete: when CHANGESET.Status CREATE_COMPLETE
CHANGESET_ARN                     #arn:aws:cloudformation:REGION:ACCOUNT_ID:changeset/CHANGESET/ROOT_CHANGESET_MID
CHANGESET.ChangeSetId             #CHANGESET_MID
CHANGESET.ChangeSetName           #'CHANGESET'. Only [[:alnum:]-], max 128 chars
CHANGESET.Description             #STR. Max 1KB
CHANGESET.CreationTime            #DATE

CHANGESET.StackId                 #STACK_MID
CHANGESET.StackName               #'STACK'
STACK.ChangeSetId                 #CHANGESET_MID
STACK_TEMPLATE.ChangeSetName      #'CHANGESET'|CHANGESET_ARN

CHANGESET.ChangeSetType           #Can be:
                                  #  - 'CREATE': create STACK
                                  #     - STACK is created right away but empty: its RESOURCEs are only added once CHANGESET is executed
                                  #  - 'UPDATE' (def): update STACK
                                  #  - 'IMPORT': import, i.e. add existing RESOURCEs

CHANGESET.Status                  #STR among:
                                  #  - CREATE_PENDING, CREATE_IN_PROGRESS, CREATE_COMPLETE
                                  #  - DELETE_PENDING, DELETE_IN_PROGRESS, DELETE_COMPLETE, DELETE_FAILED
                                  #  - FAILED
                                  #ListChangeSets() always filters for CREATE_PENDING|IN_PROGRESS
CHANGESET.StatusReason            #STR
CHANGESET.ExecutionStatus         #STR among:
                                  #  - UNAVAILABLE: creation in progress
                                  #  - AVAILABLE: not executed yet
                                  #  - EXECUTE_IN_PROGRESS
                                  #  - EXECUTE_COMPLETE, EXECUTE_FAILED
                                  #  - OBSOLETE: STACK was updated by another ACTION|CHANGESET2, making current one obsolete

                                  ┌─────────────────────────┐
                                  │   CHANGESET MAIN AUTH   │
                                  └─────────────────────────┘

COND_KEY
 cloudformation:ChangeSetName     #'CHANGESET'. Only with *ChangeSet*()

                                  ┌────────────────────────┐
                                  │   CHANGESET MAIN API   │
                                  └────────────────────────┘

CreateChangeSet()                 #Req: CHANGESET
                                  #  - no Changes, ChangeSetId, CreationTime, *Status*, ParentChangeSetId,
                                  #    RootChangeSetId, StackId
                                  #  - only one with ChangeSetType, ResourcesToImport
                                  #  - only one with ResourceTypes, RoleARN
                                  #  - only one with TemplateBody, TemplateURL, UsePreviousTemplate
                                  #  - also ClientToken
                                  #Res: CHANGESET
                                  #  - only StackId, ChangeSetId -> Id
ListChangeSets()                  #Req: CHANGESET
                                  #  - only StackName
                                  #Res: Summaries CHANGESET_ARR
                                  #  - no Capabilities, Changes, NotificationARNs, OnStackFailure,
                                  #    Parameters, RollbackConfiguration, Tags
DescribeChangeSet()               #Req: CHANGESET
                                  #  - only ChangeSetName, StackName
                                  #  - only one with IncludePropertyValues
                                  #Res: CHANGESET
                                  #Paginates CHANGESET.Changes
ExecuteChangeSet()                #Req: CHANGESET
                                  #  - only ChangeSetName, StackName
                                  #  - only one with RetainExceptOnCreate, DisableRollback
                                  #  - also ClientRequestToken
                                  #Res: empty
DeleteChangeSet()                 #Req: CHANGESET
                                  #  - only ChangeSetName, StackName
                                  #Res: empty

                                  ┌────────────────────────┐
                                  │   CHANGESET MAIN CLI   │
                                  └────────────────────────┘

rain ls STACK                     #Prints CHANGESETs (see above)

                                  ┌──────────────────────────┐
                                  │   CHANGESET DEPLOY CLI   │
                                  └──────────────────────────┘

aws cloudformation deploy         #Do CreateChangeSet(), then ExecuteChangeSet() directly

--no-execute-changeset            #Only CreateChangeSet(), not ExecuteChangeSet()
--no-fail-on-empty-changeset      #Do not set non-0 exit code if CHANGESET is empty

--stack-name
--capabilities
--role-arn
--notification-arns
--tags                            #Like CreateChangeSet()
--parameter-overrides             #Like CreateChangeSet(), except as { PARAM: 'VAL', ... } and cannot add|remove PARAMs

--template-file                   #'PATH' to TEMPLATE
--s3-bucket
--s3-prefix
--force-upload
--kms-key-id                      #Like aws cloudformation package, but to use CHANGESET.TemplateURL instead

                                  ┌──────────────────────┐
                                  │   CHANGESET REVIEW   │
                                  └──────────────────────┘

CHANGESET.Changes                 #CHANGE_ARR, for review
CHANGE.Type                       #Always 'Resource'

CHANGE.ResourceChange             #RESCHANGE
RESCHANGE
 .ResourceType|LogicalResourceId
 |PhysicalResourceId|ModuleInfo   #Like STACK_RESOURCE.*
RESCHANGE.Action                  #Can be:
                                  #  - 'Add': create RESOURCE
                                  #  - 'Import'
                                  #  - 'Modify': update RESOURCE
                                  #  - 'Remove': delete RESOURCE
                                  #  - 'Dynamic': unknown
RESCHANGE.PolicyAction            #Action according to RESOURCE.Update[Replace]Policy|DeletionPolicy:
                                  #  - 'Delete', 'Retain', 'Snapshot': like RESOURCE.DeletionPolicy
                                  #  - 'ReplaceAndDelete|Retain|Snapshot': same but replace first
RESCHANGE.Scope                   #'PROP'_ARR with all CHANGE_TARGET.Attribute
                                  #Which RESOURCE.PROPs are being updated
                                  #Only with Action 'Modify'
RESCHANGE.Replacement             #Whether update will replace the RESOURCE. Can be:
                                  #  - 'True': CHANGE_TARGET.RequiresCreation 'Always' + CHANGE_DETAIL.Evaluation 'Static'
                                  #  - 'Conditional':
                                  #     - CHANGE_TARGET.RequiresCreation 'Always' + CHANGE_DETAIL.Evaluation 'Dynamic'
                                  #     - or CHANGE_TARGET.RequiresCreation 'Conditionally'
                                  #  - 'Never': CHANGE_TARGET.RequiresCreation 'Never'
                                  #Only with Action 'Modify'

RESCHANGE.Details                 #CHANGE_DETAIL_ARR
                                  #Only with Action 'Modify'
CHANGE_DETAIL.ChangeSource        #STR. Where change came from, among:
                                  #  - 'DirectModification': TEMPLATE
                                  #  - 'ResourceReference': { Ref } target
                                  #  - 'ParameterReference': { Ref: 'PARAM' } target
                                  #  - 'ResourceAttribute': { Fn::GetAtt } target
                                  #  - 'Automatic': nested STACK
CHANGE_DETAIL.CausingEntity       #STR, depending on ChangeSource:
                                  #  - 'DirectModification': none
                                  #  - 'ResourceReference': { Ref } value
                                  #  - 'ParameterReference': 'PARAM'
                                  #  - 'ResourceAttribute': RESATTR value
                                  #  - 'Automatic': 'STACK'
CHANGE_DETAIL.Evaluation          #Whether new value can be known before execution. Either:
                                  #  - 'Dynamic': e.g. when value is a { Ref } or { Fn::GetAtt }
                                  #  - 'Static': otherwise

CHANGE_DETAIL.Target              #CHANGE_TARGET. Which property will change in TEMPLATE
CHANGE_TARGET.Attribute           #'PROP' among: 'Properties', 'Metadata', 'CreationPolicy', 'UpdatePolicy', 'UpdateReplacePolicy', 'DeletionPolicy', 'Tags'
CHANGE_TARGET.Name                #'RESPROP'
                                  #Only with Attribute 'Properties'
CHANGE_TARGET.RequiresRecreation  #'Always', 'Never' or 'Conditionally'
                                  #Whether RESPROP update requires a Replacement
                                  #Only with Attribute 'Properties'

CHANGESET.IncludePropertyValues   #BOOL. If false (def), do not include the following fields
RESCHANGE                         #'OBJ_JSON' of RESOURCE context before|after update
 .BeforeContext|AfterContext      #I am not completely sure what this is
CHANGE_TARGET.AttributeChangeType #One of: 'Add', 'Modify', 'Remove'
CHANGE_TARGET.Path                #'VAR' being updated, i.e. RESOURCE.PROP.VAR
CHANGE_TARGET                     #'VAL' before|after update
 .BeforeValue|AfterValue          #Might be truncated

                                  ┌────────────────┐
                                  │   SCAN START   │
                                  └────────────────┘

SCAN                              #List all RESOURCEs in current ACCOUNT and REGION
                                  #Only 1 at once per ACCOUNT per REGION
                                  #Max 3 per day (1 if >=1e4 RESOURCEs)
                                  #Min 10m between SCANs
                                  #Max 1e5 RESOURCEs
                                  #Deleted after 30 days
SCAN.ResourceScanId               #arn:aws:cloudformation:REGION:ACCOUNT_ID:resourceScan/RESOURCE_SCAN_MID
SCAN.StartTime|EndTime            #DATE_NUM

SCAN.Status                       #'IN_PROGRESS', 'COMPLETE', 'FAILED' or 'EXPIRED'
SCAN.StatusReason                 #STR

SCAN.PercentageCompleted          #NUM
SCAN.ResourcesScanned             #NUM. undefined if Status 'IN_PROGRESS'
SCAN.ResourcesRead                #NUM. undefined if Status 'IN_PROGRESS'
SCAN.ResourcesTypes               #'RESTYPE'_ARR. undefined if Status 'IN_PROGRESS' or 'EXPIRED'

                                  ┌────────────────────┐
                                  │   SCAN START API   │
                                  └────────────────────┘

StartResourceScan()               #Req:
                                  #  - only ClientRequestToken STR (idempotency)
                                  #Res: SCAN
                                  #  - only ResourceScanId
ListResourceScans()               #Req: empty
                                  #Res: ResourceScanSummaries SCAN_ARR
                                  #  - no Resource*
DescribeResourceScan()            #Req: SCAN
                                  #  - only ResourceScanId
                                  #Res: SCAN

                                  ┌────────────────────┐
                                  │   SCAN RESOURCES   │
                                  └────────────────────┘

SCANNED_RESOURCE                  #List RESOURCEs from a SCAN
SCANNED_RESOURCE.ResourceScanId   #SCAN_ARN

SCANNED_RESOURCE.ResourceType     #STACK_RESOURCE.*
SCANNED_RESOURCE
 .ResourceIdentifier              #IMPORTED_RESOURCE.*

SCANNED_RESOURCE.TagKey           #'TAG'
SCANNED_RESOURCE.TagValue         #STR

SCANNED_RESOURCE.ManagedByStack   #BOOL. Whether managed by a CloudFormation STACK

                                  ┌────────────────────────┐
                                  │   SCAN RESOURCES API   │
                                  └────────────────────────┘

ListResourceScanResources()       #Req: SCANNED_RESOURCE
                                  #  - ResourceType -> ResourceTypePrefix
                                  #Res: RelatedResources SCANNED_RESOURCE_ARR
                                  #  - no ResourceScanId, Tag*
ListResourceScanRelatedResources()#Req: SCANNED_RESOURCE
                                  #  - only ResourceScanId
                                  #  - only Resources SCANNED_RESOURCE_ARR: ResourceType|ResourceIdentifier (required)
                                  #Res: RelatedResources SCANNED_RESOURCE_ARR
                                  #  - no ResourceScanId, Tag*

                                  ┌─────────────────────┐
                                  │   IMPORT TEMPLATE   │
                                  └─────────────────────┘

GENERATED_TEMPLATE                #TEMPLATE created from existing RESOURCEs ("IaC generator")
                                  #Not all RESTYPEs are supported (see list online)
                                  #Max 1e3 per ACCOUNT, max 5 at once
                                  #Max 500 RESOURCEs
GENERATED_TEMPLATE                #GENERATED_TEMPLATE_ARN
 .GeneratedTemplateId             #arn:aws:cloudformation:REGION:ACCOUNT_ID:generatedtemplate/GENERATED_TEMPLATE_MID
GENERATED_TEMPLATE
 .GeneratedTemplateName           #'GENERATED_TEMPLATE'. Max 128 chars
GENERATED_TEMPLATE.CreationTime   #DATE_NUM
GENERATED_TEMPLATE.LastUpdatedTime#DATE_NUM

GENERATED_TEMPLATE.StackId        #STACK_ARN of existing RESOURCEs
GENERATED_TEMPLATE.Resources      #GENERATED_RESOURCE_ARR
                                  #Max 500 items
GENERATED_TEMPLATE.Progress
 .ResourcesPending|Processing
 |Succeeded|Failed                #NUM of GENERATED_TEMPLATE.Resources
GENERATED_RESOURCE
 .LogicalResourceId|ResourceType  #Like STACK_RESOURCE.*
GENERATED_RESOURCE
 .ResourceIdentifier              #Like IMPORTED_RESOURCE.*
GENERATED_RESOURCE
 .ResourceStatus                  #One of: 'PENDING', 'IN_PROGRESS', 'COMPLETE', 'FAILED'
GENERATED_RESOURCE
 .ResourceStatusReason            #Like STACK_RESOURCE.*

GENERATED_TEMPLATE
 .RefreshAllResources             #BOOL (def: false). Update TEMPLATE with new RESPROPs, if they have drifted

GENERATED_TEMPLATE
 .TemplateConfiguration
 .UpdateReplacePolicy
 |DeletionPolicy                  #'DELETE' or 'RETAIN'. Set each RESOURCE.*Policy

GENERATED_TEMPLATE.Status         #Among:
                                  #  - CREATE_PENDING, CREATE_IN_PROGRESS
                                  #  - UPDATE_PENDING, UPDATE_IN_PROGRESS
                                  #  - DELETE_PENDING, DELETE_IN_PROGRESS
                                  #  - COMPLETE, FAILED
GENERATED_TEMPLATE.StatusReason   #STR

GENERATED_RESOURCE.Warnings       #GENERATED_WARNING_ARR
GENERATED_TEMPLATE.TotalWarnings  #NUM of GENERATED_RESOURCE.Warnings
GENERATED_WARNING.Type            #Issues with write-only RESPROPs, i.e. cannot be scanned but must be specified to create RESOURCE
                                  #One of:
                                  #  - 'MUTUALLY_EXCLUSIVE_PROPERTIES':
                                  #     - write-only RESPROPs both required and mutually exclusive
                                  #     - generated TEMPLATE:
                                  #        - has a PARAM for each RESPROP
                                  #           - their name starts with 'OneOf'
                                  #        - but sets only one RESPROP
                                  #  - 'MUTUALLY_EXCLUSIVE_TYPES':
                                  #     - a required write-only RESPROP has multiple possible types
                                  #     - generated TEMPLATE: picks only one type
                                  #  - 'UNSUPPORTED_PROPERTIES':
                                  #     - write-only RESPROP either:
                                  #        - ARR
                                  #           - because PARAMs cannot be ARR
                                  #        - not required
                                  #     - generated TEMPLATE: omit RESPROP
GENERATED_WARNING.Properties      #GENERATED_RESPROP_ARR
GENERATED_RESPROP.PropertyPath    #'VARR' (/-delimited)
GENERATED_RESPROP.Required        #BOOL
GENERATED_RESPROP.Description     #STR

GENERATED_TEMPLATE.Format         #Either 'JSON' (def) or 'YAML'
GENERATED_TEMPLATE.TemplateBody   #Like STACK_TEMPLATE.*

                                  ┌────────────────────────┐
                                  │   IMPORT TEMPLATE UI   │
                                  └────────────────────────┘

GENERATED_TEMPLATE                #Can use a SCAN
                                  #Can do a CHANGESET import

                                  ┌─────────────────────────┐
                                  │   IMPORT TEMPLATE API   │
                                  └─────────────────────────┘

CreateGeneratedTemplate()         #Req: GENERATED_TEMPLATE
                                  #  - no GeneratedTemplateId|Name, *Time, Status[Reason]|Progress|TotalWarnings
                                  #  - no Resources.ResourceStatus[Reason]|Warnings
                                  #  - StackId ARN -> StackName 'STACK'|ARN
                                  #Res: GENERATED_TEMPLATE
                                  #  - only GeneratedTemplateId
UpdateGeneratedTemplate()         #Req: GENERATED_TEMPLATE
                                  #  - no GeneratedTemplateId, *Time, Status[Reason]|Progress|TotalWarnings
                                  #  - no Resources.ResourceStatus[Reason]|Warnings
                                  #  - no StackId
                                  #  - GeneratedTemplateName -> [New]GeneratedTemplateName
                                  #  - Resources -> AddResources GENERATED_RESOURCE_ARR + RemoveResources 'RESOURCE'_ARR
                                  #  - only one with RefreshAllResources
                                  #Res: GENERATED_TEMPLATE
                                  #  - only GeneratedTemplateId
ListGeneratedTemplates()          #Req: empty
                                  #Res: Summaries GENERATED_TEMPLATE_ARR
                                  #  - no StackId, TemplateConfiguration, Progress, TotalWarnings
                                  #  - Resources -> NumberOfResources NUM
DescribeGeneratedTemplate()       #Req: GENERATED_TEMPLATE
                                  #  - only GeneratedTemplateId + GeneratedTemplateName -> GeneratedTemplateName 'GENERATED_TEMPLATE'|ARN
                                  #Res: GENERATED_TEMPLATE
GetGeneratedTemplate()            #Req: GENERATED_TEMPLATE
                                  #  - only GeneratedTemplateName
                                  #  - only one with Format
                                  #Res: GENERATED_TEMPLATE
                                  #  - only Status
                                  #  - only one with TemplateBody
DeleteGeneratedTemplate()         #Req: GENERATED_TEMPLATE
                                  #  - only GeneratedTemplateName

                                  ┌───────────────────┐
                                  │   IMPORT DEPLOY   │
                                  └───────────────────┘

CHANGESET.ResourcesToImport       #IMPORTED_RESOURCE_ARR. RESOURCEs that should not be created because they already exist
                                  #I.e. meant for RESOURCEs either:
                                  #  - created outside of CloudFormation
                                  #  - part of another STACK2, in which case they should be removed from it first, with DeletionPolicy 'RETAIN'
                                  #Only with ChangeSetType 'IMPORT'
                                  #Not all RESTYPEs can be imported (see online doc for list)
                                  #RESOURCE.DeletionPolicy must be specified
                                  #Target can be a child STACK, but not if it has children itself
                                  #Does not check whether the imported RESOURCE RESPROPs match the ones specified in TEMPLATE
                                  #  - i.e. should detect drift afterwards
                                  #Cannot import RESOURCE already imported by another STACK
                                  #Max 200 items
IMPORTED_RESOURCE.ResourceType    #RESTYPE
IMPORTED_RESOURCE
 .LogicalResourceId               #'RESOURCE', as declared in TEMPLATE.Resources.RESOURCE
IMPORTED_RESOURCE                 #IMPORTED_RESPROP_ARR. Equivalent to RESOURCE.PhysicalResourceId
 .ResourceIdentifier              #Max 256 items
IMPORTED_RESPROP.key              #'RESPROP'. Max 2KB
IMPORTED_RESPROP.value            #'VAL'. Max 2KB

STACK_TEMPLATE
 .ResourceIdentifierSummaries     #TO_IMPORT_RESTYPE_ARR
TO_IMPORT_RESTYPE.ResourceType    #RESTYPE
TO_IMPORT_RESTYPE
 .LogicialResourceIds             #'RESOURCE'_ARR
TO_IMPORT_RESTYPE
 .ResourceIdentifiers             #'RESPROP'_ARR that can be used as IMPORTED_RESPROP.key

CHANGESET.ImportExistingResources #BOOL (def: false). Automatically sets CHANGESET.ResourcesToImport using any TEMPLATE's RESOURCEs that:
                                  #  - have PhysicalResourceId explicitly set
                                  #  - already exist in current ACCOUNT
                                  #Does not require ChangeSetType 'IMPORT'

                                  ┌────────────────────────┐
                                  │   IMPORT DEPLOY AUTH   │
                                  └────────────────────────┘

COND_KEY
cloudformation:ImportResourceTypes#RESTYPE_ARR

                                  ┌─────────────────────┐
                                  │   PARAMETERS MAIN   │
                                  └─────────────────────┘

TEMPLATE.Parameters.PARAM         #PARAM. Inputs to the STACK. Declaration
                                  #'PARAM' must be [[:alnum::]], max 255 chars
                                  #Max 200 per TEMPLATE

STACK_TEMPLATE.Parameters         #STACK_PARAM_ARR. Same
STACK_PARAM.ParameterKey          #'PARAM'

STACK_PARAM.ParameterType         #One of:
PARAM.Type                        #  - 'String': STR
                                  #  - 'Number': NUM
                                  #     - converted to 'NUM' when used in a RFUNC
                                  #  - 'List<Number>': 'NUM,...'
                                  #     - converted to NUM_ARR when used in a RFUNC
                                  #  - 'CommaDelimitedList': 'STR,...'
                                  #     - converted to STR_ARR when used in a RFUNC
                                  #     - PARAM.Allowed* are for each STR
                                  #     - each STR is trimmed
                                  #  - 'RESTYPE' or 'List<RESTYPE>'
                                  #     - like STR, but with PARAM.AllowedValues guessed from current ACCOUNT
                                  #     - only for:
                                  #        - EC2: AvailabilityZone::Name, Image::Id, Instance::Id, KeyPair::KeyName,
                                  #          SecurityGroup::GroupName|Id, Subnet::Id, Volume::Id, VPC::Id
                                  #        - Route53: HostedZone::Id
PARAM.Min|MaxLength               #'NUM'. Only with Type 'String'
PARAM.Min|MaxValue                #'NUM'. Only with Type 'Number'
PARAM.AllowedPattern              #'REGEXP'
STACK_PARAM
 .ParameterConstraints
 .AllowedValues
PARAM.AllowedValues               #STR_ARR
STACK_PARAM.DefaultValue          #VAL
PARAM.Default                     #If none, required
[STACK_]PARAM.Description         #STR. Description of PARAM
                                  #Max 1KB
PARAM.ConstraintDescription       #STR. Description of PARAM validation
[STACK_]PARAM.NoEcho              #BOOL (def: false). Show '*****' when read
                                  #Exceptions: as STACK OUTPUT or STACK|RESOURCE metadata

STACK|CHANGESET|SET.Parameters    #PARAMVAL_ARR. STACK_PARAM value
INSTANCE.ParameterOverrides       #PARAMVAL_ARR. Can only change values, not add|remove STACK_PARAMs
PARAMVAL.ParameterKey             #'PARAM'
PARAMVAL.ParameterValue           #'VAL'
                                  #Max 4KB
PARAMVAL.UsePreviousValue         #BOOL (def: false)

{ Ref: 'PARAM' }                  #Replaced with PARAM value
                                  #Must be inside RESOURCE|OUTPUT.**

BUILT-IN PARAMS ==>               #Called "pseudo PARAMs"
AWS::StackId                      #STACK_MID
AWS::StackName                    #'STACK'
AWS::AccountId                    #ACCOUNT_ID
AWS::Region                       #'REGION'
AWS::Partition                    #'PARTITION'
AWS::URLSuffix                    #'AWS_DOMAIN'

ENVIRONMENT ==>                   #A common pattern is to use the same TEMPLATE but with different PARAMVALs
                                  #for different environments (dev, staging, production, etc.)

                                  ┌─────────────────────────┐
                                  │   PARAMETERS MAIN CLI   │
                                  └─────────────────────────┘

rain ls STACK [CHANGESET]         #Prints PARAMs (see above)

                                  ┌──────────────────────┐
                                  │   PARAMETERS RULES   │
                                  └──────────────────────┘

TEMPLATE.Rules.RULE               #RULE. Validate PARAMs
RULE.RuleCondition                #BOOL (def: true). Skip RULE if false

RULE.Assertions                   #ASSERT_ARR
ASSERT.Assert                     #BOOL. Fail STACK if false
ASSERT.AssertDescription          #STR

RFUNC ==>                         #Can only use !Ref|Equals|And|Not|Or
                                  #Can also use the following ones, only inside RULE.*

{ Fn::RefAll: RESTYPE }           #RESOURCE_MID_ARR of all RESOURCEs in current ACCOUNT with RESTYPE
{ Fn::ValueOfAll:                 #STR_ARR. RESATTR of all RESOURCEs in current ACCOUNT with RESTYPE
 [RESTYPE, 'RESATTR'] }           #Only available RESTYPE|RESATTR are for EC2:
                                  #  - VPC::Id: Tags.TAG, DefaultNetworkAcl, DefaultSecurityGroup
                                  #  - Subnet::Id: Tags.TAG, VpcId, AvailabilityZone
                                  #  - SecurityGroup::Id: Tags.TAG
{ Fn::ValueOf:                    #STR[_ARR]. Like { Fn::GetAtt } except:
 ['PARAM', 'RESATTR'] }           #  - use a PARAM which contains a RESOURCE_MID[_ARR]
                                  #  - only with above RESTYPE|RESATTRs

{ Fn::Contains: [STR_ARR, STR2] } #BOOL. If one STR == STR2
{ Fn::EachMemberEquals:
 [STR_ARR, STR2] }                #BOOL. All STR == STR2
{ Fn::EachMemberIn:
 [STR_ARR, STR2_ARR] }            #BOOL. All STR == one STR2

                                  ┌────────────────────────┐
                                  │   STACK OUTPUTS MAIN   │
                                  └────────────────────────┘

TEMPLATE.Outputs.OUTPUT           #OUTPUT. Values computed by a STACK
                                  #'OUTPUT' must be [[:alnum:]], max 255 chars
                                  #Max 200 per TEMPLATE (ACCOUNT_LIMIT 'StackOutputsLimit')
STACK.Outputs                     #STACK_OUTPUT_ARR. Same
STACK_OUTPUT.OutputKey            #'OUTPUT'

OUTPUT.Value
STACK_OUTPUT.OutputValue          #'VAL'
[STACK_]OUTPUT.Description        #STR. Max 1KB

                                  ┌────────────────────────────┐
                                  │   STACK OUTPUTS MAIN CLI   │
                                  └────────────────────────────┘

rain ls STACK [CHANGESET]         #Prints OUTPUTs (see above)

sceptre list outputs GSPATH       #Print STACK.Outputs, using DescribeStacks()
--export|-e                       #How to print, among:
                                  #  - default: flat
                                  #  - envvar: export SCEPTRE_{OUTPUT}=VAL
                                  #  - stackoutput[external]: !stack_output[_external] STACK.yaml::OUTPUT [VAL]

                                  ┌────────────────────────────┐
                                  │   STACK OUTPUTS MAIN SAM   │
                                  └────────────────────────────┘

sam list stack-outputs            #Print STACK.Outputs, using DescribeStacks()
--output                          #Either 'table' (def) or 'json'

                                  ┌──────────────────────────┐
                                  │   STACK OUTPUTS EXPORT   │
                                  └──────────────────────────┘

EXPORT                            #STACK OUTPUT that can be used in other STACKs, using { Fn::ImportValue }
                                  #Also called "cross-stack reference"
                                  #Must be in same REGION
                                  #If a STACK OUTPUT is used by another STACK2:
                                  #  - STACK cannot be deleted
                                  #  - OUTPUT is readonly
                                  #Should avoid secrets
OUTPUT.Export.Name
STACK_OUTPUT.ExportName
EXPORT.Name                       #'EXPORT'. Must be unique across all STACKs in current ACCOUNT
EXPORT.Value                      #'VAL'. OUTPUT.Value
EXPORT.ExportingStackId           #STACK_MID

{ Fn::ImportValue: 'EXPORT' }     #'VAL'
                                 ##With Pulumi, can use PFUNC:
                                 ##  - aws:cloudformation:getExport, with RPROPS.name 'EXPORT'
                                 ##  - aws-native:importValue, with RPROPS.name 'EXPORT'

                                  ┌──────────────────────────────┐
                                  │   STACK OUTPUTS EXPORT API   │
                                  └──────────────────────────────┘

ListExports()                     #Req: empty
                                  #Res: Exports EXPORT_ARR
ListImports()                     #Req: EXPORT
                                  #  - only Name -> ExportName
                                  #Res: Imports 'STACK'_ARR

                                  ┌────────────┐
                                  │   LOOKUP   │
                                  └────────────┘

AwsCommunity::Resource::Lookup    #Query|retrieve a given RESOURCE
                                  #If in same STACK, prefer { Ref } instead
                                  #If query is simple, prefer:
                                  #  - EXPORT
                                  #  - IMPORTED_RESOURCE: if not in a STACK
                                  #No RESATTRs if no match or if multiple ones

LOOKUP.TypeName                   #'RESTYPE'
LOOKUP.ResourceModel              #'RESPROPS_JSON', partial, to specify identifiers
                                  #RESOURCE.ResourceModel (see Cloud Control's doc)
RESATTR ResourceIdentifier        #'RESOURCE_MID'
RESATTR ResourceProperties        #'RESPROPS_JSON', full

LOOKUP.JmesPathQuery              #JMESPath 'EXPR' (see its doc) on the RESOURCE, to filter
                                  #Max 4KB
                                  #Required

RESATTR ResourceLookupId          #SSM '/PATH' storing cached response
                                  #Is '/CloudFormation/AwsCommunity/Resource/Lookup/resource-lookup-id-UUID'
LOOKUP.LookupSerialNumber         #STR. Change it to trigger a new query
LOOKUP.Tags                       #TAGS to apply to SSM parameter
                                  #Always use STACK TAGS too

                                  ┌─────────────────┐
                                  │   LOOKUP AUTH   │
                                  └─────────────────┘

PACTIONS ==>                      #Following are for current CREDS, not on ResourceLookupRoleArn
PACTION cloudformation:
 ListResources|GetResource        #Required (see CloudControl doc)
PACTION iam:PassRole              #Required
PACTION ssm:AddTagsToResource
 |ListTagsForResource
 |RemoveTagsFromResource
 |PutParameter|GetParameter[s]
 |DescribeParameters
 |DeleteParameter                 #Required for LOOKUP.Tags

LOOKUP.ResourceLookupRoleArn      #ROLE_ARN
                                  #Cloud Control's RESOURCE.RoleArn (see its doc)
                                  #Required

                                  ┌────────────────────┐
                                  │   FUNCTIONS MAIN   │
                                  └────────────────────┘

{ RFUNC: ARGS }                   #Can be used instead of VAL
                                  #Called "builtin|intrisic functions"
                                  #Only in value of (deeply):
                                  #  - TEMPLATE.Resources
                                  #  - RESOURCE.Properties.RESPROP
                                  #  - TEMPLATE.Outputs.OUTPUT
                                  #  - TEMPLATE.Conditions
                                  #  - RESOURCE.Metadata
                                  #  - RESOURCE.UpdatePolicy
                                  #  - RESOURCE.UpdateReplacePolicy|DeletionPolicy
                                  #     - requires AWS::LanguageExtensions
                                  #     - only !Ref, !If, !FindInMap, AWS::AccountId|Partition|Region
                                  #  - other RFUNCs
                                  #     - each RFUNC only allows specific others ("supported functions")
                                  #     - see online doc for list
                                  #     - AWS::LanguageExtensions must be used to use:
                                  #        - inside !Ref|!GetAtt|!FindInMap: !Ref !Base64 !FindInMap !If !Join !Sub !ToJsonString
                                  #        - inside !FindInMap: !Split (except in DefaultValue) !Select !Length
                                  #In ARGS, NUM can also be 'NUM'
                                  #{ Ref|GetAtt|Sub } create a dependency like RESOURCE.DependsOn

!RFUNC ARGS                       #Shortcut syntax in YAML
                                  #No Fn::, e.g. !FindInMap
                                  #No colon after !RFUNC
                                  #With !GetAtt: ARGS is dot-delimited list instead of ARR
                                  #Cannot do !RFUNC !RFUNC2 ARGS, but can do !RFUNC { RFUNC2: ARGS }
                                  #Can be used with Fn::ForEach|Length|ToJsonString
                                  #I.e. when parsing TEMPLATE as YAML, must use specific custom TYPEs
                                 ##  - can convert to JSON by using `rain fmt` (see its doc)
                                  #Seems to work around issues with VSCode `yaml-schema`, which marks RFUNCs as invalidate otherwise
                                  #Cannot be used with cfn-guard

                                  ┌─────────────────────────┐
                                  │   FUNCTIONS RESOURCES   │
                                  └─────────────────────────┘

{ Ref: 'RESOURCE' }               #RESOURCE_MID

{ Fn::GetAtt:                     #RESOURCE.RESATTR value
 ['RESOURCE', 'RESATTR'] }        #RESOURCE output. Often ARN|MID|name|URL
                                  #Sometimes considered a "read-only RESPROP"
                                  #RESATTR can be dot-delimited VARR

{ Fn::GetAZs: 'REGION' }          #ZONE_ARR
                                  #Only ones with a default SUBNET, except if none has
                                  #REGION "" (def) is like { Ref: "AWS::Region" }

{{resolve:SERVICE:ARGS}}          #SERVICE-specific value. "Dynamic references"
                                  #Only for SSM and Secrets Manager (see their doc)
PARAMVAL.ResolvedValue            #'VAL', only with AWS Systems Manager

                                  ┌─────────────────────┐
                                  │   FUNCTIONS LOGIC   │
                                  └─────────────────────┘

TEMPLATE.Conditions.COND          #BOOL, as a RFUNC
{ Condition: COND }               #Replaced by TEMPLATE.Conditions.COND BOOL
                                  #Can only be used as a Fn::Not|And|Or argument
RESOURCE|OUTPUT.Condition         #'COND'. Skip if TEMPLATE.Conditions.COND false

{ Fn::If: ['COND', VAL, VAL2] }   #VAL if true, VAL2 if false
AWS::NoValue                      #Built-in PARAM, resolved to undefined
                                  #Only used with Fn::If or Fn::FindInMap (OBJ.DefaultValue)

{ Fn::Equals: [VAL, VAL2] }       #BOOL
{ Fn::Not: [BOOL] }               #!BOOL
{ Fn::And|Or: [BOOL,...] }        #BOOL2
                                  #Min 2
                                  #Max 10, but can use subgroups of { Fn::And|Or } to overcome this

TEMPLATE.Mappings.FILTER.VAR.PROP #STR[_ARR]
                                  #PROP must be [[:alnum:]], max 255 chars
                                  #Max 200 FILTERs per TEMPLATE
                                  #Max 200 VARs per FILTER
{ Fn::FindInMap:                  #Replace with FILTER.VAR.PROP
 ['FILTER', 'VAR', 'PROP'[, OBJ]]}#If VAR|PROP not found, uses OBJ.DefaultValue VAL (def: error)
                                  #  - requires AWS::LanguageExtensions
                                  #Meant for conditional mapping with VAR using a RFUNC

{ Fn::ForEach::LOOP:              #For each VAL, substitute VAR in { PROP: VAL }, then merge all in a single OBJ
 ['VAR', VAL_ARR, { PROP: VAL2 }]}#Substitution must use either:
                                  #  - in keys: ${VAR}
                                  #  - in values: { Ref: 'VAR' } or { Fn::Sub: ['...${VAR}...'] }
                                  #Can also use &{VAR} instead of ${VAR}
                                  #LOOP must be unique name in TEMPLATE, meant only for description
                                  #Requires AWS::LanguageExtensions

                                  ┌─────────────────────┐
                                  │   FUNCTIONS UTILS   │
                                  └─────────────────────┘

{ Fn::Join: [STR, STR2_ARR] }     #STR2_ARR.join(STR)
{ Fn::Split: [STR, STR2] }        #STR2.split(STR)
{ Fn::Sub: STR }                  #Substitutes ${VAR} in STR where VAR can be:
{ Fn::Sub: [STR, OBJ] }           #  - PARAM: like { Ref }
                                  #  - 'RESOURCE': like { Ref }
                                  #  - 'RESOURCE.RESATTR': like { Fn::GetAtt }
                                  #  - OBJ.VAR
                                  #Can escape ${...} as ${!...}

{ Fn::Length: ARR }               #ARR.length
                                  #Requires AWS::LanguageExtensions
{ Fn::Select: [NUM, ARR] }        #ARR[NUM] (0-index)
                                  #Error if undefined

{ Fn::ToJsonString: OBJ|ARR }     #'OBJ|ARR_JSON'
                                  #Requires AWS::LanguageExtensions
{ Fn::Base64: STR }               #STR2

{ Fn::Cidr: ['CIDR', NUM, NUM2] } #'CIDR2'_ARR. Split CIDR into NUM CIDR2s
                                  #Are also a subset of CIDR3, which is computed with NUM2 subnet bits
                                  #Can use IPv4|6

                                  ┌──────────────┐
                                  │   METADATA   │
                                  └──────────────┘

TEMPLATE.Metadata                 #OBJ. Stack metadata (any custom info)
                                  #Should avoid secrets. Values cannot be null
STACK_TEMPLATE.Metadata           #'OBJ_JSON'

RESOURCE.Metadata                 #OBJ. Same but for resource
STACK_RESOURCE.Metadata           #'OBJ_JSON'

                                  ┌──────────────────┐
                                  │   METADATA CLI   │
                                  └──────────────────┘

cfn-get-metadata --key|-k VAR     #Prints RESOURCE.Metadata.VAR

                                  ┌────────────┐
                                  │   POLICY   │
                                  └────────────┘

STACK.StackPolicyBody             #'POLICY_DOC', as STR
                                  #Max 16KB
STACK.StackPolicyURL              #Same but using a S3_URL, in same REGION
                                  #URL max 1KB, contents max 16KB
STACK                             #Same but only during the ongoing update
 .StackPolicyDuringUpdateBody|URL #Meant to update RESOURCEs otherwise not allowed by STACK policy

STACK POLICY ==>                  #Resource-based POLICY with resource-level permissions
                                  #Mostly meant to prevent update|delete on specific RESOURCEs
                                  #Def: allow all if not specified, deny all if specified
                                  #PACTION can only be:
                                  #  - 'Update:Modify': updating a RESOURCE without Replacement
                                  #  - 'Update:Replace': updating a RESOURCE with Replacement
                                  #  - 'Update:Delete': deleting a RESOURCE
                                  #  - 'Update:*'
                                  #STATEMENT.Resource uses 'LogicalResourceId/RESOURCE'
                                  #STATEMENT.Principal must be '*'
                                  #Can use COND_KEY ResourceType 'RESTYPE'

                                  ┌─────────────────┐
                                  │   POLICY AUTH   │
                                  └─────────────────┘

COND_KEY
 cloudformation:StackPolicyUrl    #S3_URL. Only with SetStackPolicy(), Create|UpdateStack(), CreateChangeSet()

                                  ┌────────────────┐
                                  │   POLICY API   │
                                  └────────────────┘

SetStackPolicy()                  #Req: STACK
                                  #  - only StackName, StackPolicyBody, StackPolicyURL
                                  #Res: empty
GetStackPolicy()                  #Req: STACK
                                  #  - only StackName
                                  #Res: STACK
                                  #  - only StackPolicyBody

                                  ┌────────────────┐
                                  │   POLICY CLI   │
                                  └────────────────┘

sceptre set-policy
 GSPATH POLICY_PATH               #SetStackPolicy()
--built-in|-b                     #'allow-all|deny-all'. Instead of POLICY_PATH, use built-in one
                                  #With STATEMENT: Effect 'Allow|Deny', Action 'Update:*', Principal '*', Resource '*'

sceptre describe policy GSPATH    #GetStackPolicy()

                                  ┌──────────┐
                                  │   WAIT   │
                                  └──────────┘

SIGNAL                            #Mark a RESOURCE creation as complete
                                  #Used only by RESOURCE.CreationPolicy and WAITCONDITION
                                  #  - for WAITCONDITION, should use HANDLE_URL though
SIGNAL.UniqueId                   #'SIGNAL'
SIGNAL.StackName                  #'STACK'
SIGNAL.LogicalResourceId          #'RESOURCE'
SIGNAL.Status                     #'SUCCESS|FAILURE'

RESOURCE.CreationPolicy           #CREATION_POLICY. Wait for specific conditions to mark RESOURCE creation as complete
                                  #Only for specific RESTYPEs (AutoScalingGroup), documented in their respective docs

AWS::CloudFormation::WaitCondition#RESOURCE representing an async pause
                                  #Usually uses RESOURCE.DependsOn to specify both previous|next RESOURCE
RESPROP WAITCONDITION.Handle      #Must be { Ref: 'WAITCONDITION_HANDLE' }
AWS::CloudFormation::             #RESOURCE representing a HANDLE_URL. No RESPROPs
 WaitConditionHandle              #{ Ref: 'WAITCONDITION_HANDLE' } resolves to 'HANDLE_URL'
HANDLE_URL                        #Pre-signed S3 PutObject() URL
                                  #Must be called to call SignalResource() and stop the pause
                                  #With PUT, no Content-Type [C]
                                  #Request body is HANDLE_REQ, as JSON
RESPROP WAITCONDITION.Count       #NUM (def: 1) of times to call HANDLE_URL
CREATION_POLICY.Count             #Only with WAITCONDITION
RESPROP WAITCONDITION.Timeout     #TIME_DURATION (def: 5m, max: 12h)
CREATION_POLICY.Timeout           #Only with WAITCONDITION

HANDLE_REQ.Status                 #'SUCCESS|FAILURE'
HANDLE_REQ.Reason                 #'ERROR' when failure
HANDLE_REQ.UniqueId               #'SIGNAL'. Do not increment WAITCONDITION.Count when using same UniqueId twice
HANDLE_REQ.Data                   #STR. Sets WAITCONDITION RESATTR 'Data' { SIGNAL: STR, ... }
                                  #Max 4KB

                                  ┌──────────────┐
                                  │   WAIT API   │
                                  └──────────────┘

SignalResource()                  #Req: SIGNAL
                                  #Res: empty

                                  ┌──────────────┐
                                  │   WAIT CLI   │
                                  └──────────────┘

cfn-signal                        #Calls SignalResource()
cfn-signal HANDLE_URL             #Calls HANDLE_URL

--success|-s                      #BOOL (def: true). HANDLE_REQ.Status
--exit-code|-e                    #Same but as NUM, using exit code
--id|-i                           #'SIGNAL' or HANDLE_REQ.UniqueId
                                  #Def: EC2 instance MID, or machine's FQDN
--http[s]-proxy                   #'http[s]://USER:PASSWORD@HOST:PORT'

(only with SignalResource())
--resource                        #'RESOURCE'

(only with HANDLE_URL)
--reason|-r                       #HANDLE_REQ.Reason
                                  #Def: 'Configuration failed' if failure
--data|-d                         #HANDLE_REQ.Data (def: none)

                                  ┌──────────┐
                                  │   TIME   │
                                  └──────────┘

AwsCommunity::Time::Static        #RESTYPE. Date/time value
                                  #Kept as a SSM parameter '/CloudFormation/AwsCommunity/Time/Static/unique-identifier'
                                  #i.e. requires ssm:Get|Put|DeleteParameter
STATIC.Time                       #'DATE' (def: now)
                                  #Create-only. All other STATIC.* are readonly
STATIC.Id                         #'UUID'
STATIC.Utc                        #'DATE'
STATIC.Unix                       #DATE_NUM
STATIC.Year|Month|Day|Hour|Minute
 |Second                          #NUM

AwsCommunity::Time::Offset        #RESTYPE. Date/time value, computed as an offset
                                  #Kept as a SSM parameter '/CloudFormation/AwsCommunity/Time/Offset/unique-identifier'
                                  #i.e. requires ssm:Get|Put|DeleteParameter
STATIC.*                          #Like AwsCommunity::Time::Static
STATIC.OffsetYears|Months|Days
 |Hours|Minutes|Seconds           #NUM to add to STATIC.Time

AwsCommunity::Time::Sleep         #RESTYPE. Wait for a specific amount of time
                                  #Kept as a SSM parameter '/CloudFormation/AwsCommunity/Time/Sleep/unique-identifier'
                                  #i.e. requires ssm:Get|Put|DeleteParameter
SLEEP.Id                          #'UUID'
SLEEP.Seconds                     #NUM (min 0, max 10m) of secs to wait
SLEEP.Triggers                    #STR_ARR. Only wait when any of those change
SLEEP.SleepOnCreate|Update|Delete #BOOL (def: true). Whether to wait when creating|updating|deleting SLEEP

                                  ┌──────────────┐
                                  │   SET MAIN   │
                                  └──────────────┘

SET                               #STACK provisioned across multiple ACCOUNTs|REGIONs ("target"|INSTANCE)
                                  #Each INSTANCE has own copy of the STACK
                                  #ACCOUNT operating the SET is "administrator"
                                  #Max 1e3 per ACCOUNT (soft)
SET.StackSetARN                   #SET_ARN. arn:aws:cloudformation:ACCOUNT_ID:REGION:stackset/SET_MID
SET|OP|STACK_TEMPLATE.StackSetId  #SET_MID
SET|OP|STACK_TEMPLATE.StackSetName#'SET'. Max 128 chars
SET.Description                   #STR. Max 1KB

SET.StackId                       #STACK_ARN to import, converting into INSTANCE
                                  #Def: no import, i.e. create new STACK
                                  #Administrator ACCOUNT must be allowed to PACTION cloudformation:GetTemplate
SET.StackIds                      #Same with STACK_MID_ARR
                                  #Max 10 items
SET.StackIdsUrl                   #Same but as S3_URL with a list of STACK_MIDs
                                  #Max 5KB for URL, 200 items for list

SET.Status                        #'ACTIVE' or 'DELETED'

SET.Tags                          #TAG_PAIRS

                                  ┌──────────────────┐
                                  │   SET MAIN API   │
                                  └──────────────────┘

CreateStackSet()                  #Req: SET
                                  #  - also ClientRequestToken
                                  #  - only one with StackId
                                  #  - no OrganizationalUnitIds, StackSetARN, StackSetDriftDetectionDetails
                                  #  - no StackSetId, Status
                                  #  - no Accounts, Regions, DeploymentTargets
                                  #Res: SET
                                  #  - only StackSetId
ImportStacksToStackSet()          #Req: OP
                                  #  - only OperationId, OperationPreferences, CallAs, StackSetName
                                  #  - only one with StackIds[Url]
                                  #  - also SET: OrganizationalUnitIds
                                  #Res: OP
                                  #  - only OperationId
UpdateStackSet()                  #Req: SET
                                  #  - StackSetId|StackSetName -> StackSetName 'SET'|SET_MID
                                  #  - also OP: OperationId, OperationPreferences
                                  #  - only one with UsePreviousTemplate
                                  #  - no OrganizationalUnitIds, StackSetARN, StackSetDriftDetectionDetails
                                  #  - no Status
                                  #Res: OP
                                  #  - only OperationId
ListStackSets()                   #Req: SET
                                  #  - only Status
                                  #  - also OP: CallAs
                                  #Res: Summaries SET_ARR
                                  #  - no TemplateURL
                                  #  - no AdministrationRoleARN, Capabilities, ExecutionRoleName, Parameters, Tags, TemplateBody
                                  #  - no OrganizationalUnitIds, StackSetARN, StackSetDriftDetectionDetails
                                  #  - no Accounts, Regions, DeploymentTargets
DescribeStackSet()                #Req: SET
                                  #  - only StackSetId|StackSetName -> StackSetName 'SET'|SET_MID
                                  #  - also OP: CallAs
                                  #Res: StackSet SET
                                  #  - no TemplateURL
                                  #  - no DriftStatus, LastDriftCheckTimestamp
                                  #  - no Accounts, DeploymentTargets
DeleteStackSet()                  #Req: SET
                                  #  - only StackSetId|StackSetName -> StackSetName 'SET'|SET_MID
                                  #  - also OP: CallAs
                                  #Res: empty

                                  ┌─────────────┐
                                  │   SET IAC   │
                                  └─────────────┘

AWS::CloudFormation::StackSet     #RESPROPs are same as SET.*
                                  #  - except no ClientRequestToken, StackSetARN, StackId, Status,
                                  #    OrganizationalUnitIds, Regions, StackSetDriftDetectionDetails
                                  #  - also StackInstancesGroup INSTANCE_ARR: DeploymentTargets, ParameterOverrides, Regions
                                  #  - also INSTANCE.OperationPreferences
                                  #Includes RESATTRs: StackSetId

                                  ┌──────────────┐
                                  │   SET AUTH   │
                                  └──────────────┘

SET|OP.AdministrationRoleARN      #"Administration ROLE": ROLE_ARN used by SET, in administrator ACCOUNT
                                  #Def: 'AWSCloudFormationStackSetAdministrationRole' (must be created)
                                  #  - if not using default, current PRINCIPAL must be allowed to iam:PassRole|GetRole to ROLE_ARN
                                  #Must:
                                  #  - be assumable by Principal.Service 'cloudformation.amazonaws.com'
                                  #  - be allowed to sts:AssumeRole to execution ROLE
                                  #  - COND_KEY aws:SourceArn SET_ARN
                                  #  - COND_KEY aws:SourceAccount|SourceOrg*
SET|OP.ExecutionRoleName          #"Execution ROLE": 'ROLE' used by INSTANCEs|STACKs, i.e. STACK.RoleARN, in each target ACCOUNT
                                  #Def: 'AWSCloudFormationStackSetExecutionRole' (must be created)
                                  #Must be assumable by Principal.AWS:
                                  #  - ADMINISTRATOR_ACCOUNT: if using default SET.AdministrationRoleARN
                                  #  - ROLE_ARN: otherwise

SET.PermissionModel               #Whether to allow setting SET.AdministrationRoleARN|ExecutionRoleName:
                                  #  - 'SELF_MANAGED' (def): yes. Cannot use:
                                  #     - ORG_ACCESS
                                  #     - OP.CallAs
                                  #  - 'SERVICE_MANAGED': no. Cannot use:
                                  #     - nested STACKs
                                  #     - Capabilities CAPABILITY_AUTO_EXPAND
                                  #     - AWS::CloudFormation::Macro
ORG_ACCESS.Status                 #'ENABLED', 'DISABLED' or 'DISABLED_PERMANENTLY'
                                  #If 'ENABLED', creates the following SERVICE_LINKED_ROLEs:
                                  #  - AdministrationRoleARN: AWSServiceRoleForCloudFormationStackSetsOrgAdmin
                                  #     - assumed by Service.Principal 'stacksets.cloudformation.amazonaws.com'
                                  #     - uses CloudFormationStackSetsOrgAdminServiceRolePolicy AWS managed POLICY, allowing:
                                  #        - organizations:List*|Describe*
                                  #        - sts:AssumeRole on ROLE 'stacksets-exec-*'
                                  #  - ExecutionRoleName: AWSServiceRoleForCloudFormationStackSetsOrgMember
                                  #     - assumed by Service.Principal 'member.org.stacksets.cloudformation.amazonaws.com'
                                  #     - uses CloudFormationStackSetsOrgMemberServiceRolePolicy AWS managed POLICY, allowing:
                                  #        - iam:Create|Get|DeleteRole on ROLE 'stacksets-exec-*'
                                  #        - iam:Attach|DetachRolePolicy on ROLE 'stacksets-exec-*' and POLICY 'AdministratorAccess' (full privileges)
                                  #ORG must EnableAllFeatures()
OP.CallAs                         #Whether signed in as:
                                  #  - 'SELF': ORG's management ACCOUNT
                                  #  - 'DELEGATED_ADMIN': ORG's delegated admin ACCOUNT

                                  ┌──────────────────┐
                                  │   SET AUTH API   │
                                  └──────────────────┘

ActivateOrganizationsAccess()     #Req: empty
                                  #Res: empty
                                  #Sets ORG_ACCESS.Status
DescribeOrganizationsAccess()     #Req: OP
                                  #  - only CallAs
                                  #Res: ORG_ACCESS
                                  #  - only Status
DeactivateOrganizationsAccess()   #Req: empty
                                  #Res: empty
                                  #Sets ORG_ACCESS.Status

                                  ┌────────────────┐
                                  │   SET TARGET   │
                                  └────────────────┘

INSTANCE|OP_RES.Region            #'REGION' of the INSTANCE

INSTANCE|OP_RES.Account           #ACCOUNT_ID of the INSTANCE
                                  #Only with PermissionModel 'SELF_MANAGED'
INSTANCE|OP.DeploymentTargets     #DEPLOYMENT_TARGET_ARR. ACCOUNT_IDs of the INSTANCEs
                                  #Management ACCOUNT is always excluded
                                  #Only with PermissionModel 'SERVICE_MANAGED'
DEPLOYMENT_TARGET.Accounts        #ACCOUNT_ID_ARR
DEPLOYMENT_TARGET.AccountsUrl     #Like Accounts but as a S3_URL with the list
                                  #Max 5KB
DEPLOYMENT_TARGET                 #STR_ARR. ORG root|unit IDs.
 .OrganizationalUnitIds           #Necessary for create|delete OPs (as opposed to update)
DEPLOYMENT_TARGET                 #Which ACCOUNTs to select in the ORG specified by OrganizationalUnitIds,
 .AccountFilterType               #based on DEPLOYMENT_TARGET.Accounts ACCOUNT_ID_ARR
                                  #  - 'NONE': all ORG ACCOUNTs
                                  #  - 'UNION' (def): all ORG ACCOUNTs, plus ACCOUNT_ID_ARR
                                  #  - 'INTERSECTION': all ORG ACCOUNTs, providing among ACCOUNT_ID_ARR
                                  #  - 'DIFFERENCE': all ORG ACCOUNTs, except ACCOUNT_ID_ARR
                                  #Only with PermissionModel 'SERVICE_MANAGED'

SET.Regions                       #'REGION'_ARR. Filter INSTANCEs by Region
SET.Accounts                      #ACCOUNT_ID_ARR. Filter INSTANCEs by Account
                                  #Only with PermissionModel 'SELF_MANAGED'
SET.DeploymentTargets             #DEPLOYMENT_TARGET_ARR. Filter INSTANCEs by DEPLOYMENT_TARGET
                                  #Only with PermissionModel 'SERVICE_MANAGED'

INSTANCE|OP_RES.OrganizationUnitId#ORG_ROOT_ID|ORG_UNIT_ID based on DEPLOYMENT_TARGETs
                                  #Only with PermissionModel 'SERVICE_MANAGED'
SET.OrganizationalUnitIds         #ORG_ROOT_ID|ORG_UNIT_ID_ARR based on DEPLOYMENT_TARGETs
                                  #Only with PermissionModel 'SERVICE_MANAGED'

                                  ┌─────────────────────┐
                                  │   SET TARGET AUTH   │
                                  └─────────────────────┘

COND_KEY
 cloudformation:TargetRegion      #'REGION'_ARR. Only with UpdateStackSet(), Create|Update|DeleteStackInstances()

                                  ┌─────────────────────┐
                                  │   SET AUTO DEPLOY   │
                                  └─────────────────────┘

SET.AutoDeployment                #AUTODEPLOY
AUTODEPLOY.Enabled                #BOOL (def: false)
                                  #Automatically add|remove INSTANCEs when new ACCOUNTs are added|removed to the ORG
                                  #based on DEPLOYMENT_TARGET
AUTODEPLOY
 .RetainStacksOnAccountRemoval    #BOOL (def: false). Only add INSTANCEs, not remove

                                  ┌─────────────────────────┐
                                  │   SET AUTO DEPLOY API   │
                                  └─────────────────────────┘

ListStackSet                      #Req: SET
 AutoDeploymentTargets()          #  - only StackSetId|StackSetName -> StackSetName 'SET'|SET_MID
                                  #  - also OP: CallAs
                                  #Res: Summaries INSTANCE_ARR
                                  #  - only OrganizationalUnitId, Region -> Regions ARR

                                  ┌──────────────────┐
                                  │   SET INSTANCE   │
                                  └──────────────────┘

INSTANCE                          #Target STACK in a given ACCOUNT|REGION for a given SET
                                  #Cannot delete a SET if it still has some INSTANCEs
                                  #All INSTANCEs of a given SET must always have same TEMPLATE
                                  #  - however can have different PARAM values
                                  #Max 1e5 per SET (soft)
INSTANCE_ARN                      #arn:aws:cloudformation:ACCOUNT_ID:REGION:stackset-target/SET_MID/ACCOUNT_ID|ORG_ROOT_ID|ORG_UNIT_ID
INSTANCE.StackSetId               #SET_MID
INSTANCE.StackSetName             #'SET'
INSTANCE.StackId                  #STACK_MID
INSTANCE.LastOperationId          #'OP'

INSTANCE.Status                   #STR among:
                                  #  - CURRENT
                                  #  - OUTDATED:
                                  #     - last create|update on STACK|SET failed
                                  #     - other INSTANCEs were updated (due to REGION|ACCOUNT filtering during update) but not current one
                                  #  - INOPERABLE: INSTANCE deletion failed
INSTANCE.StatusReason             #STR
INSTANCE.StackInstanceStatus      #STR among:
 .DetailedStatus                  #  - PENDING: OP starting
                                  #  - RUNNING: ongoing OP
                                  #  - SUCCEEDED, CANCELLED, FAILED[_IMPORT]: OP finished
                                  #  - INOPERABLE: INSTANCE deletion failed
                                  #  - SKIPPED_SUSPENDED_ACCOUNT: ACCOUNT was suspended

INSTANCE.Filters                  #INSTANCE_FILTER_ARR
                                  #Max 3 items
INSTANCE_FILTER.Name              #'PROP', for INSTANCE.PROP
                                  #Can be 'LAST_OPERATION_ID', 'DETAILED_STATUS' or 'DRIFT_STATUS'
INSTANCE_FILTER.Values            #STR. Max 128 chars

                                  ┌──────────────────────┐
                                  │   SET INSTANCE API   │
                                  └──────────────────────┘

CreateStackInstances()            #Req: INSTANCE
                                  #  - Account|Region -> Accounts|Regions ARR
                                  #  - also OP: OperationId
                                  #  - no StackSetId, StackId, LastOperationId, *Status*, *Drift*, OrganizationalUnitId
                                  #Res: OP
                                  #  - only OperationId
UpdateStackInstances()            #Req: INSTANCE
                                  #  - Account|Region -> Accounts|Regions ARR
                                  #  - also OP: OperationId
                                  #  - no StackSetId, StackId, LastOperationId, *Status*, *Drift*, OrganizationalUnitId
                                  #Res: OP
                                  #  - only OperationId
ListStackInstances()              #Req: INSTANCE
                                  #  - only StackSetName, Account|Region -> StackInstanceAccount|Region
                                  #  - only one with Filters
                                  #  - also OP: CallAs
                                  #Res: Summaries INSTANCE_ARR
                                  #  - no StackSetName, DeploymentTargets, OperationPreferences
                                  #  - no ParameterOverrides
DescribeStackInstance()           #Req: INSTANCE
                                  #  - only StackSetName, Account|Region -> StackInstanceAccount|Region
                                  #  - also OP: CallAs
                                  #Res: StackInstance INSTANCE
                                  #  - no StackSetName, DeploymentTargets, OperationPreferences
DeleteStackInstances()            #Req: INSTANCE
                                  #  - Account|Region -> Accounts|Regions ARR
                                  #  - only StackSetName, DeploymentTargets, OperationPreferences
                                  #  - also OP: OperationId, CallAs, RetainStacks
                                  #Res: OP
                                  #  - only OperationId

                                  ┌───────────────────┐
                                  │   SET OPERATION   │
                                  └───────────────────┘

OP                                #Async operation on a SET|INSTANCE
                                  #Max 1e4 at a given time (soft)
                                  #Max 1e4 INSTANCEs in an OP at a given time (soft, ACCOUNT_LIMIT 'ConcurrentResourcesLimit')
OP.OperationId                    #'OP'. Must be [[:alnum:]-], max 128 chars
OP.Action                         #One of:
                                  #  - 'CREATE'
                                  #  - 'UPDATE'
                                  #  - 'DELETE'
                                  #  - 'DETECT_DRIFT'
OP.CreationTimestamp              #DATE
OP.EndTimestamp                   #DATE

OP.Status                         #STR among:
                                  #  - QUEUED: only with AUTODEPLOY
                                  #  - RUNNING
                                  #  - SUCCEEDED, FAILED
                                  #  - STOPPING, STOPPED
OP.StatusReason                   #STR
OP.StatusDetails
 .FailedStackInstancesCount       #NUM of INSTANCEs that failed

OP_RES.Status                     #One of:
                                  #  - PENDING: like OP.Status QUEUED
                                  #  - RUNNING, SUCCEEDED, FAILED: like OP.Status
                                  #  - CANCELLED: like OP.Status STOPPED, or when canceled due to SET_PREF.FailureToleranceCount
OP_RES.StatusReason               #STR

OP.Filters                        #SET_FILTER_ARR
                                  #Max 1 item
SET_FILTER.Name                   #Always 'OPERATION_RESULT_STATUS', i.e. filter by OP_RES.Status
SET_FILTER.Values                 #STR_ARR

OP|INSTANCE.OperationPreferences  #SET_PREF
SET_PREF.FailureToleranceCount    #NUM (def: 0). If >NUM INSTANCEs fail per REGION, cancel OP (for all REGIONs).
SET_PREF.MaxConcurrentCount       #Max NUM of INSTANCEs to operate on at once
                                  #Def: 1, i.e. serial
SET_PREF
 .FailureTolerancePercentage
 |MaxConcurrentPercentage         #NUM. Same but as percentage
SET_PREF.ConcurrencyMode          #NUM of INSTANCEs to operate on at once, among:
                                  #  - 'SOFT_FAILURE_TOLERANCE': MaxConcurrentCount
                                  #     - pro: higher concurrency
                                  #  - 'STRICT_FAILURE_TOLERANCE' (def): min(MaxConcurrentCount, FailureToleranceCount - NUM_FAILED_INSTANCES + 1)
                                  #     - pro: ensure FailureToleranceCount is always respected, even if multiple INSTANCEs fail in parallel
SET_PREF.RegionConcurrencyType    #'SEQUENTIAL' (def) or 'PARALLEL'
                                  #Whether to run one REGION at a time or not, for a given OP
SET_PREF.RegionOrder              #'REGION'_ARR. Order of REGIONs, when RegionConcurrencyType 'SEQUENTIAL'
                                  #Def: no order

SET.ManagedExecution.Active       #BOOL (def: false). Whether to run multiple OPs concurrently, except when depend on each other

OP.RetainStacks                   #BOOL (def: false). Do not delete the STACK when removing its INSTANCE
                                  #Only with Action 'DELETE'

                                  ┌───────────────────────┐
                                  │   SET OPERATION API   │
                                  └───────────────────────┘

ListStackSetOperations()          #Req: OP
                                  #  - only StackSetName, CallAs
                                  #Res: Summaries OP_ARR
                                  #  - no StackSetName, CallAs
                                  #  - no AdministrationRoleARN, DeploymentTargets, ExecutionRoleName,
                                  #    RetainStacks, StackSetDriftDetectionDetails, StackSetId
                                  #  - no Accounts, Regions
DescribeStackSetOperation()       #Req: OP
                                  #  - only OperationId, StackSetName, CallAs
                                  #Res: StackSetOperation OP
                                  #  - no StackSetName, CallAs
                                  #  - no Accounts, Regions
ListStackSetOperationResults()    #Req: OP
                                  #  - only OperationId, StackSetName, CallAs
                                  #  - only one with Filters
                                  #Res: OP_RES
StopStackSetOperation()           #Req: OP
                                  #  - only OperationId, StackSetName, CallAs
                                  #Res: empty

                                  ┌──────────────────────┐
                                  │   SET ACCOUNT GATE   │
                                  └──────────────────────┘

OP_RES.AccountGateResult          #GATE_RES
                                  #Use a Lambda FUNC to validate that an INSTANCE can run a given OP
                                  #Meant to ensure it is in a stable state (e.g. no ongoing CloudWatch ALARMs) before deploying to it
GATE_RES.Status                   #Can be:
                                  #  - 'SUCCEEDED'
                                  #  - 'FAILED'
                                  #  - 'SKIPPED' due to one of:
                                  #     - no Lambda FUNC
                                  #     - missing permissions
                                  #     - OP is noop
GATE_RES.StatusReason             #STR

AWSCloudFormationStackSet
 AccountGate                      #Must be Lambda 'FUNC' name

REQ                               #Could not find documentation for it
RES.Status                        #'SUCCEEDED|FAIL'

                                  ┌───────────────────────────┐
                                  │   SET ACCOUNT GATE AUTH   │
                                  └───────────────────────────┘

PACTION lambda:InvokeFunction     #Required for SET's execution ROLE and target ACCOUNT

                                  ┌───────────────┐
                                  │   DRIFT SET   │
                                  └───────────────┘

SET|OP                            #SET_DRIFT
 .StackSetDriftDetectionDetails   #Current|last drift, i.e. difference between TEMPLATE|PARAMVALs and actual provisioning, for a SET
                                  #Not all RESTYPEs can have their drift detected (see online doc for list)
                                  #Not performed on:
                                  #  - nested STACKs
                                  #  - some RESPROPs hard to compare, e.g. Lambda FUNCTION.Code
                                  #  - some secret RESPROPs, e.g. IAM LOGIN_PROFILE.Password
                                  #Sometimes drift but actually equivalent, e.g.:
                                  #  - RESPROP default values vs undefined
                                  #  - '1024MB' vs '1GB'
                                  #Requires PACTIONs cloudformation:DetectStackSet|Stack|StackResourceDrift|BatchDescribeTypeConfigurations

SET_DRIFT.DriftDetectionStatus    #One of:
                                  #  - IN_PROGRESS
                                  #  - STOPPED: with StopStackSetOperation()
                                  #  - COMPLETED: failed on no INSTANCE
                                  #  - PARTIAL_SUCCESS: failed on some INSTANCEs but < SET_PREF.FailureToleranceCount
                                  #  - FAILED: failed on some INSTANCEs and >= SET_PREF.FailureToleranceCount
SET[_DETECTION]
 .LastDriftCheckTimestamp         #DATE
SET[_DETECTION].DriftStatus       #One of:
                                  #  - 'IN_SYNC': no drift
                                  #  - 'DRIFTED': drift in >=1 INSTANCE
                                  #  - 'NOT_CHECKED': no drift detection yet, or RESTYPE does not support it

SET_DRIFT.TotalStackInstancesCount#NUM of INSTANCEs
SET_DRIFT
 .InSyncStackInstancesCount       #NUM of INSTANCEs with DriftStatus 'IN_SYNC'
SET_DRIFT
 .DriftedStackInstancesCount      #NUM of INSTANCEs with DriftStatus 'DRIFTED'
SET_DRIFT
 .InProgressStackInstancesCount   #NUM of INSTANCEs with ongoing drift detection
SET_DRIFT
 .FailedStackInstancesCount       #NUM of INSTANCEs with failed drift detection

                                  ┌───────────────────┐
                                  │   DRIFT SET API   │
                                  └───────────────────┘

DetectStackSetDrift()             #Req: SET
                                  #  - only StackSetName
                                  #  - also OP: OperationId, CallAs, OperationPreferences
                                  #Res: OP
                                  #  - only OperationId

                                  ┌─────────────────┐
                                  │   DRIFT STACK   │
                                  └─────────────────┘

STACK.DriftInformation            #STACK_DRIFT
                                  #  - only Timestamp -> LastCheckTimestamp, StackDriftStatus
                                  #Like SET_DRIFT but for a single STACK
                                  #Requires PACTIONs cloudformation:DetectStack|StackResourceDrift|BatchDescribeTypeConfigurations

STACK_DRIFT.Timestamp
INSTANCE.LastDriftCheckTimestamp  #DATE
STACK_DRIFT.StackDriftStatus      #One of:
INSTANCE.DriftStatus              #  - 'IN_SYNC': no drift
                                  #  - 'DRIFTED': drift in >=1 RESOURCEs
                                  #  - 'NOT_CHECKED': no drift detection yet, or RESTYPE does not support it

STACK_DRIFT                       #NUM of RESOURCEs with drift
 .DriftedStackResourceCount       #null if no drift detection yet

STACK_DRIFT.StackDriftDetectionId #STACK_DRIFT_MID
STACK_DRIFT.StackId               #STACK_MID
STACK_DRIFT.LogicalResourceIds    #'RESOURCE'_ARR (def: all)
                                  #Max 200 items

STACK_DRIFT.DetectionStatus       #One of 'DETECTION_IN_PROGRESS', 'DETECTION_COMPLETE', 'DETECTION_FAILED'
STACK_DRIFT.DetectionStatusReason #STR

                                  ┌─────────────────────┐
                                  │   DRIFT STACK API   │
                                  └─────────────────────┘

DetectStackDrift()                #Req: STACK_DRIFT
                                  #  - only StackId -> StackName
                                  #  - only one with LogicalResourceIds
                                  #Res: STACK_DRIFT
                                  #  - only StackDriftDetectionId
DescribeStackDrift                #Req: STACK_DRIFT
 DetectionStatus()                #  - only StackDriftDetectionId
                                  #Res: STACK_DRIFT

                                  ┌────────────────────┐
                                  │   DRIFT RESOURCE   │
                                  └────────────────────┘

STACK_RESOURCE.DriftInformation   #RESOURCE_DRIFT
                                  #  - only Timestamp -> LastCheckTimestamp, StackResourceDriftStatus
                                  #Like STACK_DRIFT, but for a single RESOURCE
                                  #Requires PACTIONs cloudformation:DetectStackResourceDrift|BatchDescribeTypeConfigurations

RESOURCE_DRIFT.Timestamp          #DATE
RESOURCE_DRIFT                    #One of:
 .StackResourceDriftStatus        #  - 'IN_SYNC': no drift
                                  #  - 'DELETED': drift (deleted RESOURCE)
                                  #  - 'MODIFIED': drift (others)

RESOURCE_DRIFT.LogicalResourceId
 |PhysicalResourceId|ResourceType
 |StackId|ModuleInfo              #Like STACK_RESOURCE.*
RESOURCE_DRIFT                    #RESID_CONTEXT_ARR. Equivalent to RESOURCE.PhysicalResourceId
 .PhysicalResourceIdContext       #Max 5 items
RESID_CONTEXT.Key                 #'RESPROP'
RESID_CONTEXT.Value               #'VAL'

RESOURCE_DRIFT.ActualProperties   #'OBJ_JSON' of RESPROPs actually used
                                  #Not with StackResourceDriftStatus 'DELETED'
RESOURCE_DRIFT.ExpectedProperties #'OBJ_JSON' of RESPROPs defined in TEMPLATE
                                  #Not with StackResourceDriftStatus 'DELETED'
                                  #Same as ActualProperties unless StackResourceDriftStatus 'MODIFIED'
RESOURCE_DRIFT.PropertyDifferences#RESPROP_DIFF_ARR
                                  #Only with StackResourceDriftStatus 'MODIFIED'
RESPROP_DIFF.PropertyPath         #'VARR' as JSON path
RESPROP_DIFF.ActualValue          #'VAL'
RESPROP_DIFF.ExpectedValue        #'VAL'
RESPROP_DIFF.DifferenceType       #One of:
                                  #  - 'ADD': to an ARR value
                                  #  - 'REMOVE': removed RESPROP
                                  #  - 'NOT_EQUAL': others

                                  ┌────────────────────────┐
                                  │   DRIFT RESOURCE API   │
                                  └────────────────────────┘

DetectStackResourceDrift()        #Req: RESOURCE_DRIFT
                                  #  - only LogicalResourceId, StackId -> StackName
                                  #Res: StackResourceDrift RESOURCE_DRIFT
DescribeStackResourceDrifts()     #Req: RESOURCE_DRIFT
                                  #  - only StackResourceDriftStatus STR -> StackResourceDriftStatusFilters STR_ARR
                                  #  - only StackId -> StackName
                                  #Res: StackResourceDrifts RESOURCE_DRIFT_ARR
ListStackInstanceResourceDrifts() #Req: RESOURCE_DRIFT
                                  #  - only StackResourceDriftStatus STR -> StackResourceDriftStatusFilters STR_ARR
                                  #  - only StackId -> StackName
                                  #  - also INSTANCE: StackInstanceAccount, StackInstanceRegion
                                  #  - also OP: OperationId, CallAs
                                  #Res: Summaries RESOURCE_DRIFT_ARR
                                  #  - no ActualProperties, ExpectedProperties, ModuleInfo

                                  ┌────────────────────────┐
                                  │   DRIFT RESOURCE CLI   │
                                  └────────────────────────┘

sceptre drift detect GSPATH       #DetectStackDrift()
                                  #5 minutes timeout

sceptre drift show GSPATH         #DetectStackDrift() + DescribeStackResourceDrifts()
                                  #5 minutes timeout
--drifted|-D                      #Only show RESOURCEs not IN_SYNC

                                  ┌───────────────────────┐
                                  │   DRIFT MONITOR IAC   │
                                  └───────────────────────┘

new DriftMonitor(...CARGS[, OPTS])#CDRIFT
                                  #Package cdk-drift-monitor, version 0.2.395

CDRIFT.alarm                      #CALARM triggered when DriftedStacks METRIC emits any positive
OPTS.alarmOptions                 #CALARM_OPTS, with default:
                                  #  - alarmName: 'DriftDetected'
                                  #  - threshold: 0
                                  #  - evaluationPeriods: 1
                                  #  - treatMissingData: 'ignore'
                                  #  - comparisonOperator: 'GreaterThanThreshold'

DriftedStacks                     #CloudWatch METRIC with NUM of STACKs with drift
                                  #Emitted by a LAMBDA_FUNC that:
                                  #  - calls DetectStackDrift() then polls DescribeStackDriftDetectionStatus()
                                  #  - is fired periodically, using an EventBridge RULE
OPTS.metricNamespace              #STR (def: 'DriftMonitor'). METRIC namespace
OPTS.runEvery                     #DURATION (def: 1h). How often to check for drift
OPTS.stacks                       #CSTACK_ARR (def: all) which drift is measured
OPTS.stackNames                   #Same as 'STACK'_ARR

                                  ┌──────────────────┐
                                  │   MACRO CREATE   │
                                  └──────────────────┘

AWS::CloudFormation::Macro        #Lambda FUNC transforming a TEMPLATE
                                  #Available for use by any STACK in current ACCOUNT
                                  #Declared|managed by the MACRO provider, not users
                                  #Applied during STACK create|update
                                  #Performed before RFUNCs
                                  #  - i.e. response can include RFUNCs (except Fn::ImportValue)
                                  #  - but cannot include other MACROs
                                  #Timeout 2m
                                  #Following are the RESPROPs
RESPROP Name                      #'MACRO'
RESPROP Description               #STR

RESPROP LogGroupName              #CloudWatch 'LOG_GROUP'
                                  #Sends error logs

RESPROP FunctionName              #Lambda FUNC_ARN performing the macro
                                  #Users must have permissions to execute it
                                  #  - i.e. if user is other ACCOUNT, must setup cross-account permission with Lambda
REQ.transformId                   #'MACRO'
REQ.region                        #'REGION'
REQ.accountId                     #ACCOUNT_ID
REQ|RES.requestId                 #REQ_ID
REQ.templateParameterValues       #TEMPLATE.Parameters
REQ.params                        #{ Fn::Transform }'s OBJ.Parameters
                                  #Cannot include other RFUNCs
                                  #Not defined with TEMPLATE.Transform

REQ|RES.fragment                  #OBJ. With:
                                  #  - TEMPLATE.Transform: whole TEMPLATE
                                  #  - { Fn::Transform }: sibling nodes, excluding Fn::Transform itself
RES.status                        #'success|failure'
RES.errorMessage                  #'ERROR'

                                  ┌───────────────────────┐
                                  │   MACRO CREATE AUTH   │
                                  └───────────────────────┘

RESPROP LogRoleARN                #ROLE_ARN for MACRO.LogGroupName

                                  ┌───────────────┐
                                  │   MACRO USE   │
                                  └───────────────┘

TEMPLATE.Transform                #'MACRO'|MACRO[_ARR] to apply to whole TEMPLATE
STACK_TEMPLATE.DeclaredTransforms #Evaluated in order, and after any Fn::Transform
                                  #  - AWS managed TRANSFORMs should be run after custom MACROs
TRANSFORM_ARN                     #'arn:aws:cloudformation:REGION:aws:transform/MACRO'

{ Fn::Transform: OBJ }            #Apply MACRO to part of TEMPLATE
OBJ.Name                          #'MACRO'
OBJ.Parameters                    #OBJ2

STACK_TEMPLATE.StagesAvailable    #STR_ARR among:
                                  #  - 'Original': before MACRO
                                  #  - 'Processed' (def): after MACRO

Capabilities                      #Required when using MACROs and either:
 CAPABILITY_AUTO_EXPAND           #  - updating with UpdateStack(), as opposed to ExecuteChangeSet()
                                  #  - using nested STACKs (in which case UpdateStack() must be used)
                                  #     - including through AWS::Serverless::Application

                                  ┌─────────────────────┐
                                  │   MACRO TRANSFORM   │
                                  └─────────────────────┘

TRANSFORM ==>                     #AWS managed MACROs

AWS::LanguageExtensions           #Allows additional features, documented in this doc
                                  #Its features must be inside TEMPLATE.Resources|Conditions|Outputs
                                  #Cannot use SET|STACK|CHANGESET.UsePreviousTemplate

AWS::Include                      #Includes a fragment, as is
                                  #Must be an OBJ
INCLUDE.Location                  #S3_URL to 'JSON|YAML'
                                  #Can be either JSON|YAML, regardless of current TEMPLATE
                                  #Cannot use !RFUNC shortcut notation
                                  #Can use `aws cloudformation package` or `sam package`
                                  #Cannot be inside TEMPLATE.Parameters

                                  ┌─────────────────────┐
                                  │   CUSTOM RESOURCE   │
                                  └─────────────────────┘

CUSTOM_RESOURCE                   #Custom RESOURCE
                                  #Meant for logic which cannot be expressed with existing resources
                                  #  - such as:
                                  #     - RESOURCEs not present in CloudFormation yet
                                  #     - third-party APIs
                                  #     - custom logic (e.g. "current time")
                                  #  - for bundling several resources together: prefer using a CDK Constructs library instead, simpler and better fit
                                  #  - if logic can be done at build-time (as opposed to deploy-time): prefer using CDK as well
Custom::CUSTOM                    #RESTYPE of a specific CUSTOM_RESOURCE
                                  #CUSTOM must be [[:alnum:]-_@], max 60 chars
AWS::CloudFormation
 ::CustomResource                 #RESTYPE of any CUSTOM_RESOURCE

RESPROP ServiceToken              #SNS_TOPIC_ARN|LAMBDA_FUNC_ARN
                                  #Called on RESOURCE create|update|delete, with REQ_PAYLOAD
REQ_PAYLOAD.ServiceToken          #Uses Lambda InvocationType 'Event'
                                  #Must be in same REGION
REQ_PAYLOAD.RequestType           #'Create|Update|Delete'
REQ_PAYLOAD.ResourceProperties    #OBJ of RESPROPs. Can be anything
REQ_PAYLOAD.OldResourceProperties #Previous RESPROPs
                                  #Only if update
REQ_PAYLOAD.ResourceType          #'Custom:CUSTOM' or 'AWS::CloudFormation::CustomResource'
REQ|RES_PAYLOAD.LogicalResourceId #'RESOURCE'
                                  #Must be same in REQ|RES
REQ|RES_PAYLOAD.PhysicalResourceId#RESOURCE_MID
                                  #Not if create, for REQ
                                  #If update and REQ sends a different one than RES, means an update has been done
REQ|RES_PAYLOAD.StackId           #STACK_ARN
                                  #Must be same in REQ|RES
REQ|RES_PAYLOAD.RequestId         #STR. Unique ID. Must be combined with StackId
                                  #Must be same in REQ|RES

REQ_PAYLOAD.ResponseURL           #URL. Should send RES_PAYLOAD to it
                                  #Pre-signed S3 PutObject() URL
RESPROP ServiceTimeout            #NUM (in secs, def: 1h). Timeout to send RES_PAYLOAD
RES_PAYLOAD                       #JSON. Max 4KB
RES_PAYLOAD.Status                #'SUCCESS|FAILED'
RES_PAYLOAD.Reason                #STR. Required if Status 'FAILED', optional if 'SUCCESS'
RES_PAYLOAD.Data                  #OBJ of RESATTRs. Can be anything
                                  #Not if delete. Not if Status 'FAILED'
RES_PAYLOAD.NoEcho                #BOOL (def: false). Like PARAM.* but for RES_PAYLOAD.Data
                                  #Not if delete. Not if Status 'FAILED'

LAMBDA ==>                        #REQ is REQ_PAYLOAD. No RES
cfn-response                      #Node module. Present only when FUNCTION was bundled as NEW_FUNC_CODE.ZipFile (not S3)
CFN_RESPONSE.send(REQ_PAYLOAD,
 CONTEXT, RES_PAYLOAD.Status,     #Call REQ_PAYLOAD.ResponseURL
 RES_PAYLOAD.Data                 #Def PhysicalResourceId: 'LOG_STREAM' (CONTEXT.logStreamName)
 [, RES_PAYLOAD.PhysicalResourceId#RES_PAYLOAD.Reason is always 'See the details in CloudWatch Log Stream: LOG_STREAM'
 [, RES_PAYLOAD.NoEcho]])         #Does not return PROMISE|callback for success|failure completion, but calls CONTEXT.done()

custom-resource-helper            #Project bootstrapping a CUSTOM_RESOURCE's Lambda FUNC (Python)
                                  #Not documented yet
