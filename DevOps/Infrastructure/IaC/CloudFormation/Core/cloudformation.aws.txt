
                  
   CLOUDFORMATION  
                  



ALTERNATIVES ==>                  #See Pulumi

VERSION ==>                       #2023-10-27

SUMMARY ==>                       #Template: local|API|UI|S3|SSM, validation, spec, price estimation, S3 package, metadata, policy
                                  #Stack: outputs declare|export|import, nested, role, events, SNS notifications, UI quick link, GitHub action
                                  #Resource: type, logical|physical ID, RESPROP|RESATTR, write|create-only RESPROP, DependsOn
                                  #Update: noop, replacement
                                  #Rollback: retry failed, manual|auto, timeout, monitoring time, alarm triggers
                                  #Delete: termination protection, DeletePolicy|UpdateReplacePolicy retain|snapshot
                                  #Changeset: create|update|import, review
                                  #Parameters: declare|use, constraints, rules, built-in, UI grouping
                                  #Functions: RESOURCE_MID|RESATTR, resolve, conditions, If|Equals|Not|And|Or, mappings, ForEach, Join|Split|Sub, Length|Select, ToJsonString|Base64
                                  #Wait: signal url|count|timeout, sleep, date|time
                                  #StackSet: admin|target account|role, self|service-managed, delegated admin, import, instances, region|account|orgUnit target, autoDeploy, account gate
                                  #StackSet operation: failure tolerance, operation|instance|region concurrency|order, retainStacks
                                  #Drift: set|stack|instance, diff
                                  #Macro: declare|use, logging, Lambda, transform, AWS::LanguageExtensions|Include
                                  #Custom resource: SNS|Lambda, create|update|delete, RESPROP|RESATTRs
                                  #Extensions: resource|module|hook, private|public, submit|publish, enable, AWS-managed vs third-party, role, logging, alias, main link
                                  #Extensions version: deprecate, default|latest version, manual|auto update, publisher
                                  #Extensions schema: init|generate, doc|source, handler permissions|invoke
                                  #Extensions config: JSON schema, default
                                  #Extensions test: API|CLI, contract, role, RESPROPs, logging
                                  #Extensions resource: provisioning type, hidden|deprecated|id|transformed RESPROPs, replacement, tags, metrics, S3|CloudWatch logging
                                  #Extensions resource handlers: plugin|framework, Lambda CRUD, production|test entrypoint, JSON schema, timeout, callback
                                  #Extensions module: template, parameters, output
                                  #Extensions hook: like resource, preCreate|Update|Delete, resource type filter, list

RESOURCES AS CODE ==>             #See CDK doc
IMPROVED CLI ==>                  #See rain and sceptre doc
MOVE RESOURCES ==>                #See cfn-teleport doc
GENERATE TEMPLATE ==>             #See former2 doc
TEMPLATE LINTING ==>              #See cfn-lint doc
DIAGRAMS ==>                      #See aws-cloudformation-stacks-graph and cfn-diagram doc
POLICY AS CODE ==>                #See cfn-guard doc

S3_URL                            #'s3|http[s]://' to a S3 OBJECT


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:              API              :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


SERVICE_DOMAIN                    #cloudformation.amazonaws.com
                                  #For sets: stacksets.amazonaws.com

FORMAT ==>                        #JSON
                                  #Uses REQ.Action|Version

REQ_ID                            #RES.ResponseMetadata.RequestId

PAGINATION ==>                    #REQ|RES.NextToken STR
                                  #REQ.MaxResults NUM:
                                  #  - usually defined, max|def 100
                                  #  - not defined:
                                  #     - always 100: ListImports|ListExports(), DescribeChangeSet[Hooks]()
                                  #     - use 1MB chunks instead: DescribeStacks|ListStacks(), ListStackResources(),
                                  #       DescribeStackEvents(), ListChangeSets(), DescribeAccountLimits()
                                  #Always limited to 100 items: DescribeStackResources()
                                  #No pagination: BatchDescribeTypeConfigurations()
                                  #No pagination in JavaScript: DescribeChangeSet[Hooks](), ListStackInstanceResourceDrifts()

REQ.Client[Request]Token          #Idempotence STR, for some ACTIONs
                                  #In UI, is 'Console-ACTION-UUID'
                                  #Must be [[:alnum:]-], max 128 chars

PRICING ==>                       #Free, except for following.
                                  #Non-AWS managed ETYPEs:
                                  #  - 1$/1e3 HANDLER calls
                                  #     - free: 1e3 per month
                                  #  - 1$/3.5h HANDLER call duration
                                  #     - free: first 30s of each call
                                  #  - EC2 data transfer

AWSCloudFormationFullAccess       #AWS managed POLICY allowing cloudformation:*
AWSCloudFormationReadOnlyAccess   #Same but readonly


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:            LIMITS             :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


DescribeAccountLimits()           #Req: empty
                                  #Res: AccountLimits ACCOUNT_LIMIT_ARR

ACCOUNT_LIMIT.Name                #Among:
                                  #  - 'StackLimit': max STACKs per ACCOUNT
                                  #  - 'StackOutputsLimit': max STACK OUTPUT per TEMPLATE
                                  #  - 'ConcurrentResourcesLimit': max STACK_RESOURCEs involved in a current OP at a given time
ACCOUNT_LIMIT.Value               #NUM


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:         TEMPLATE MAIN         :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


GetTemplate()                     #Req: STACK_TEMPLATE
                                  #  - only StackName, StagesAvailable STR_ARR -> TemplateStage STR
                                  #  - only one with ChangeSetName
                                  #Res: STACK_TEMPLATE
                                  #  - only TemplateBody
                                  #  - only one with StagesAvailable
GetTemplateSummary()              #Req: STACK_TEMPLATE
                                  #  - only StackName, TemplateBody, TemplateURL
                                  #  - only one with TemplateSummaryConfig, StackSetId|StackSetName -> StackSetName 'SET'|SET_MID
                                  #  - also OP: CallAs
                                  #Res: STACK_TEMPLATE
                                  #  - no StackName, TemplateBody, TemplateURL, Parameters[*].ParameterType|ParameterConstraints
                                  #  - only one with Version, ResourceTypes, ResourceIdentifierSummaries, Warnings
ValidateTemplate()                #Req: STACK_TEMPLATE
                                  #  - only TemplateBody, TemplateURL
                                  #Res: STACK_TEMPLATE
                                  #  - no StackName, TemplateBody, TemplateURL
EstimateTemplateCost()            #Req: STACK_TEMPLATE
                                  #  - only TemplateBody, TemplateUrl, STACK.Parameters
                                  #Res: STACK_TEMPLATE
                                  #  - only one with Url

TEMPLATE                          #Set of AWS RESOURCEs specified declaratively, either:
                                  #  - JSON
                                  #  - YAML: JSON-compatible, no << nor &REF
                                 ##To convert between JSON|YAML: see `rain fmt` doc
                                  #Should avoid secrets in it
STACK_TEMPLATE                    #TEMPLATE on a given STACK
STACK_TEMPLATE.StackName          #'STACK'|STACK_MID

SET|STACK[_TEMPLATE]|CHANGESET    #'TEMPLATE' contents as STR
 .TemplateBody                    #Max 51KB
SET|STACK[_TEMPLATE]|CHANGESET    #Same but as 'URL'
 .TemplateURL                     #Must be a S3 OBJECT or a SSM document
                                  #Can use `aws cloudformation package`
                                  #Can upload from UI, providing has PACTIONs cloudformation:CreateUploadBucket
                                  #Max 1MB
COND_KEY                          #'URL'. Only for Create|UpdateStack(), CreateChangeSet(), Create|UpdateStackSet(),
 cloudformation:TemplateUrl       #GetTemplateSummary|ValidateTemplate|EstimateTemplateCost()
SET|STACK|CHANGESET
 .UsePreviousTemplate             #BOOL (def: false). Re-use current TEMPLATE

TEMPLATE.AWSTemplateFormatVersion
STACK_TEMPLATE.Version            #Currently '2010-09-09'
[STACK_]TEMPLATE.Description      #STR. Max 1KB

SET|STACK[_TEMPLATE]|CHANGESET    #STR_ARR among:
 .Capabilities                    #  - CAPABILITY_IAM: required when using:
                                  #     - IAM::User|Group|Role|UserToGroupAddition
                                  #     - IAM::AccessKey|InstanceProfile
                                  #     - IAM::Policy
                                  #  - CAPABILITY_NAMED_IAM: same but when using names instead of MID
                                  #  - CAPABILITY_AUTO_EXPAND: see below
STACK_TEMPLATE.CapabilitiesReason #'RESOURCE,...' that need the Capabilities

STACK_TEMPLATE.ResourceTypes      #RESTYPE_ARR
STACK_TEMPLATE
 .TemplateSummaryConfig
 .TreatUnrecognizedResource
  TypesAsWarnings                 #BOOL (def: false). Unknown RESTYPEs set STACK_TEMPLATE.Warnings instead of failing
STACK_TEMPLATE.Warnings
 .UnrecognizedResourceTypes       #RESTYPE_ARR. Max 256

STACK_TEMPLATE.Errors             #TEMPLATE_ERROR_ARR
                                  #Only syntax errors, not semantic
TEMPLATE_ERROR.Code               #STR, e.g. 'ValidationError'
TEMPLATE_ERROR.Type               #STR, e.g. 'Sender'
TEMPLATE_ERROR.Message            #'ERROR'

STACK_TEMPLATE.Url                #URL to AWS Pricing Calculator


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:         TEMPLATE SPEC         :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


SPEC                              #JSON document of all available RESTYPEs in a given REGION
                                  #There is an online documentation that is simpler to read
                                 ##There is a JSON schema available as cloudformation-template-schema (version 2022-12-07)
                                  #As of 2023-10-13, replaced by a different page using ESCHEMAs instead (more expressive)
SPEC.ResourceSpecificationVersion #'X.Y.Z'

SPEC.ResourceTypes.RESTYPE        #RESTYPE_SPEC
RESTYPE_SPEC|RESPROP_SPEC
 .Documentation                   #'URL' to online documentation

RESTYPE_SPEC.Properties.RESPROP   #RESPROP_SPEC. RESOURCE.RESPROP definition
SPEC
 .PropertyTypes['RESTYPE.MODEL']  #Same but when RESPROP_SPEC.Type is 'MODEL'
RESPROP_SPEC.PrimitiveType        #STR. Simple type, among 'String', 'Long|Integer|Double', 'Boolean', 'Timestamp', 'Json'
RESPROP_SPEC.Type                 #Type either:
                                  #  - 'MODEL': OBJ with values of different types
                                  #  - 'Map': OBJ with values of same types
                                  #  - 'List': ARR with values of same types
RESPROP_SPEC.[Primitive]ItemType  #Like RESATTR_SPEC.* but for ARR item type, when RESATTR_SPEC.Type is 'RESATTR,...'
RESPROP_SPEC.Required             #BOOL
RESPROP_SPEC.DuplicatesAllowed    #BOOL. Whether duplicate values allowed, if Type 'List'

RESTYPE_SPEC.Attributes.RESATTR   #RESATTR_SPEC. RESOURCE.RESATTR definition
RESATTR_SPEC.Type                 #Type either:
                                  #  - 'RESATTR': OBJ. Each OBJ property must be defined as an RESATTR2 called 'RESATTR.PROP'
                                  #  - 'List': like RESPROP_SPEC.*
RESATTR_SPEC.PrimitiveType
RESATTR_SPEC.[Primitive]ItemType  #Like RESPROP_SPEC.*


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:          TEMPLATE UI          :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


DESIGNER                          #Visual UI editor for TEMPLATEs, showing both diagrams and JSON|YAML
                                  #Does not keep YAML comments

TEMPLATE.Metadata
 ['AWS::CloudFormation::Designer']
 .DESIGNER_RESOURCE_MID           #DESIGNER_RESOURCE. RESOURCE visual appearance in DESIGNER UI
RESOURCE.Metadata
 ['AWS::CloudFormation::Designer']
 .id                              #DESIGNER_RESOURCE_MID

DESIGNER_RESOURCE
 .size.width|height               #NUM
DESIGNER_RESOURCE.position.x|y    #NUM
DESIGNER_RESOURCE.z               #NUM

DESIGNER_RESOURCE.source|target.id#DESIGNER_RESOURCE_MID. When DESIGNER_RESOURCE is arrow itself

DESIGNER_RESOURCE.dependson       #DESIGNER_RESOURCE_MID. Arrow when using RESOURCE.DependsOn
DESIGNER_RESOURCE.isassociatedwith#DESIGNER_RESOURCE_MID. Arrow when linking to another RESOURCE
DESIGNER_RESOURCE.parent          #DESIGNER_RESOURCE_MID
DESIGNER_RESOURCE.ismemberof      #DESIGNER_RESOURCE_MID_ARR
DESIGNER_RESOURCE.embeds          #DESIGNER_RESOURCE_MID_ARR


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:       TEMPLATE PACKAGE        :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


aws cloudformation package        #Replaces local 'PATH' in TEMPLATE by S3 OBJECT (as URL|OBJ, depending on RESPROP)
                                  #Automatically calls S3 PutObject()
                                  #  - 'OBJECT' name is MD5 checksum
                                  #Only for specific RESPROPs on specific RESTYPEs, documented in their respective docs
                                  #'PATH' can be relative|absolute
                                  #  - if DIR, zip it first
                                  #  - if missing, defaults to current DIR

--template-file                   #'PATH' to TEMPLATE as input
--output-template-file            #'PATH' to TEMPLATE after processing (def: stdout)
--use-json                        #Instead of YAML

--s3-bucket                       #S3 'BUCKET'
--s3-prefix                       #STR. S3 OBJECTs prefix
--force-upload                    #Unless specified, do not PutObject() if already exists with same MD5 checksum
--kms-key-id                      #KMS_KEY_ID to use with S3 OBJECTs
--metadata                        #OBJ attached to S3 OBJECTs


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:          STACK MAIN           :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


CreateStack()                     #Req: STACK
                                  #  - no StackId, *Time, Description, Outputs, StackStatus*, ChangeSetId,
                                  #    DriftInformation, ParentId, RootId
                                  #  - no UsePreviousTemplate, StackPolicyDuringUpdate*
                                  #  - also ClientRequestToken
                                  #Res: STACK
                                  #  - only StackId
UpdateStack()                     #Req: STACK
                                  #  - no *Time, Description, Outputs, StackStatus*, ChangeSetId,
                                  #    DriftInformation, ParentId, RootId
                                  #  - StackId|StackName -> StackName 'STACK'|STACK_MID
                                  #  - no EnableTerminationProtection, OnFailure, Tags, TimeoutInMinutes
                                  #  - also ClientRequestToken
                                  #Res: STACK
                                  #  - only StackId
ListStacks()                      #Req: STACK
                                  #  - only StackStatus -> StackStatusFilter STR_ARR
                                  #Res: StackSummaries STACK_ARR
                                  #  - no Capabilities, ChangeSetId, DisableRollback, EnableTerminationProtection,
                                  #    NotificationARNs, Outputs, Parameters, RetainExceptOnCreate, RoleARN,
                                  #    RollbackConfiguration, Tags, TimeoutInMinutes, ResourceTypes
                                  #  - Description -> TemplateDescription
DescribeStacks()                  #Req: STACK
                                  #  - only StackId|StackName -> StackName 'STACK'|STACK_MID
                                  #Res: Stacks STACK_ARR
                                  #  - no Template*, UsePreviousTemplate, OnFailure, StackPolicy*, ResourceTypes
                                  #Requires PACTION ListStacks
CancelUpdateStack()               #Req: STACK
                                  #  - only StackId|StackName -> StackName 'STACK'|STACK_MID
                                  #  - also ClientRequestToken
                                  #Res: empty
                                  #If STACK.StackStatus UPDATE_IN_PROGRESS, set to UPDATE_ROLLBACK_*
DeleteStack()                     #Req: STACK
                                  #  - only RoleARN, StackId|StackName -> StackName 'STACK'|STACK_MID
                                  #  - only one with RetainResources
                                  #  - also ClientRequestToken
                                  #Res: empty

STACK                             #Provisioning of a TEMPLATE
                                  #After deletion:
                                  #  - keep information (including TEMPLATE) for 90 days
                                  #  - shown by *StackResource*(), ListStacks() but not DescribeStacks()
                                  #Max 2e3 per ACCOUNT (soft)
                                  #WAIT (DescribeStacks())
                                  #  - StackExists: when it exists
                                  #  - StackCreate|Import|Update|Rollback|DeleteComplete: when StackStatus has that value
STACK_ARN                         #arn:aws:cloudformation:REGION:ACCOUNT_ID:stack/STACK/STACK_MID

STACK.StackId                     #STACK_MID
STACK.StackName                   #'STACK'
                                  #Must be [[:alnum:]-], max 128 chars
STACK.CreationTime                #DATE
STACK.LastUpdatedTime             #DATE
STACK.DeletionTime                #DATE
STACK.Description                 #STR

STACK.StackStatus                 #'STATUS_STATE'
                                  #STATUS can be:
                                  #  - CREATE
                                  #  - IMPORT: import through a CHANGESET
                                  #  - UPDATE
                                  #  - UPDATE_COMPLETE_CLEANUP: after UPDATE, when deleting RESOURCEs that were replaced
                                  #  - ROLLBACK, UPDATE_ROLLBACK[_COMPLETE_CLEANUP], IMPORT_ROLLBACK: on failure of any of the above
                                  #  - REVIEW: CHANGESET not executed yet
                                  #  - DELETE
                                  #STATE can be:
                                  #  - IN_PROGRESS: only one for REVIEW and UPDATE[_ROLLBACK]_COMPLETE_CLEANUP
                                  #  - COMPLETE
                                  #  - FAILED: not for IMPORT_ROLLBACK
STACK.StackStatusReason           #STR

STACK|CHANGESET.ResourceTypes     #RESTYPE_ARR. Fail if lacks a RESTYPE used in STACK|CHANGESET
                                  #Can be 'AWS::*' (def), 'Custom::*|RESOURCE', 'AWS::SERVICE::*|RESOURCE'

STACK|CHANGESET.RoleARN           #ROLE_ARN used for ACTIONs performed on by the STACK
                                  #Def: STS TEMP_TOKEN (i.e. based on current PRINCIPAL)
                                  #If specified, must be assumable by Principal.Service 'cloudformation.amazonaws.com'
                                  #  - should set COND_KEY SourceAccount ACCOUNT_ID, SourceArn SET_ARN
                                  #  - must be allowed to iam:PassRole
COND_KEY cloudformation:RoleArn   #ROLE_ARN. Only with Create|Update|DeleteStack(), ContinueUpdateRollback|RollbackStack(),
                                  #CreateChangeSet(), Create|UpdateStackSet()

STACK|CHANGESET.Tags              #TAG_PAIRS
aws:cloudformation:*              #TAGs always on STACK
                                  #Also on the STACK's RESOURCEs, but only for specific RESTYPEs
aws:cloudformation:stack-id       #STACK_MID
aws:cloudformation:stack-name     #'STACK'
aws:cloudformation:logical-id     #'RESOURCE'

https://REGION.console.aws
 .amazon.com/cloudformation/home
 ?region=REGION
 #/stacks/create/review
 ?templateURL=URL
 &stackName=STACK                 #Link to UI page to create STACK
 &param_PARAM=VAL                 #PARAMs cannot use NoEcho


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:         STACK NESTED          :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


AWS::CloudFormation::Stack        #RESTYPE of a STACK
                                  #Child STACKs, created|updated|rolledback along the parent
                                  #Allows re-using TEMPLATE parts
                                  #Max 2500 RESOURCEs per child STACK
STACK.ParentId                    #STACK2_MID
STACK.RootId                      #STACK2_MID
CHILD_STACK.RESOURCE              #Must be used inside parent STACK instead of 'RESOURCE' to refer to it

CHANGESET.IncludeNestedStacks     #BOOL (def: false). Whether should include child STACKs
                                  #If true, each child STACK has its own CHANGESET
CHANGESET.ParentChangeSetId       #CHANGESET_MID
CHANGESET.RootChangeSetId         #CHANGESET_MID
RESCHANGE.ChangeSetId             #CHANGESET_MID, when RESOURCE is child STACK


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:        STACK RESOURCE         :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


ListStackResources()              #Req: STACK_RESOURCE
                                  #  - only StackId|StackName -> StackName 'STACK'|STACK_MID
                                  #Res: StackResourceSummaries STACK_RESOURCE_ARR
                                  #  - no StackId, StackName, Description, Metadata
DescribeStackResources()          #Req: STACK_RESOURCE
                                  #  - only *ResourceId, StackId|StackName -> StackName 'STACK'|STACK_MID
                                  #Res: StackResources STACK_RESOURCE_ARR
                                  #  - no Metadata
                                  #  - LastUpdatedTimestamp -> Timestamp
DescribeStackResource()           #Req: STACK_RESOURCE
                                  #  - only LogicalResourceId, StackId|StackName -> StackName 'STACK'|STACK_MID
                                  #Res: StackResourceDetail STACK_RESOURCE

TEMPLATE.Resources.RESOURCE       #RESOURCE
                                  #Max 500 per TEMPLATE
RESOURCE                          #AWS resource

STACK_RESOURCE                    #RESOURCE on a given STACK_TEMPLATE
STACK_RESOURCE.LogicalResourceId  #'RESOURCE'. RESOURCE identifier but only inside CloudFormation TEMPLATE
                                  #Does not change on create|delete, update nor replace
                                  #Must be [[:alnum:]], max 255 chars
                                  #Is based on TEMPLATE.Resources.RESOURCE key, i.e. cannot use dynamic RFUNC
STACK_RESOURCE.PhysicalResourceId #RESOURCE_MID. RESOURCE identifier in its own SERVICE
                                  #Always the value of a specific RESATTR on that RESOURCE
                                  #Usually, depending on RESTYPE, in order of preference:
                                  #  - ARN
                                  #  - MID
                                  #  - 'NAME', e.g. S3 BUCKET 'NAME' or API Gateway 'DNAME'
                                  #null if deleted or not created yet
                                  #Value is usually random:
                                  #  - MID: automatically generated by the AWS service
                                  #  - 'NAME': often based on a RESPROP
                                  #     - in that case, CloudFormation uses a default value with:
                                  #        - 'STACK' and STACK_MID prefix
                                  #        - LogicalResourceId
                                  #        - random suffix
                                  #     - but not random if RESPROP is explicitly set
                                  #  - ARN: often based on 'NAME', i.e. same comments
                                  #If random:
                                  #  - changes on create|delete and replace (but not update)
                                  #  - allows replacing the RESOURCE (since old one is deleted only after new one is created)
                                  #  - allows creating multiple STACKs from same TEMPLATE
                                  #Can use dynamic RFUNC
                                  #Max 1KB
RESOURCE.Type                     #'RESTYPE'. Max 256 chars
STACK_RESOURCE.ResourceType       #Can be:
                                  #  - 'AWS::SERVICE::RESOURCE': most AWS SERVICEs, including AWS::CloudFormation::* itself
                                  #  - 'ORG::SERVICE::RESOURCE': ETYPE
                                  #  - 'Custom::RESOURCE': CUSTOM_RESOURCE
                                  #If MODULE, ends with '::MODULE'
COND_KEY
 cloudformation:ResourceTypes     #'RESTYPE'_ARR. Only with CreateStack|UpdateStack|CreateChangeSet()
STACK_RESOURCE
 .LastUpdatedTimestamp            #DATE
[STACK_]RESOURCE.Description      #STR

STACK_RESOURCE.StackId            #STACK_MID
STACK_RESOURCE.StackName          #'STACK'

STACK_RESOURCE.ResourceStatus     #'STATUS_STATE'
                                  #STATUS can be:
                                  #  - CREATE
                                  #  - IMPORT: import through a CHANGESET
                                  #  - UPDATE
                                  #  - ROLLBACK, UPDATE_ROLLBACK, IMPORT_ROLLBACK: on failure of any of the above
                                  #  - DELETE
                                  #STATE can be IN_PROGRESS, COMPLETE, FAILED
                                  #  - also SKIPPED with DELETE
STACK_RESOURCE
 .ResourceStatusReason            #STR

RESOURCE.DependsOn                #'RESOURCE2'[_ARR]
                                  #Create RESOURCE2 before RESOURCE
                                  #When deleting RESOURCE2, delete RESOURCE first
                                  #By default, RESOURCEs are created|updated|deleted in parallel

RESOURCE.Properties.RESPROP       #STR[_ARR], NUM or BOOL
                                  #Usually same|similar as request payload of create|update ACTIONs of the RESTYPE
WRITE-ONLY ==>                    #Some RESPROPs are not returned but can be created|updated
CREATE-ONLY ==>                   #Some RESPROPs are returned and can be created but not updated


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:         STACK EVENTS          :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


DescribeStackEvents()             #Req: EVENT
                                  #  - only StackName
                                  #Res: StackEvents EVENT_ARR

EVENT                             #Update of STACK[_RESOURCE], anytime when their properties changes (including status)
                                  #I.e. meant as STACK history
EVENT.EventId                     #EVENT_MID
EVENT.Timestamp                   #DATE
                                  #Sorted by most recent to least

EVENT.LogicalResourceId
 |PhysicalResourceId|ResourceType
 |StackId|StackName
 |ResourceStatus[Reason]          #Like STACK_RESOURCE.*
EVENT.ResourceProperties          #RESOURCE.Properties but as 'OBJ_JSON'

EVENT.ClientRequestToken          #STR. 1 per OP

STACK|CHANGESET.NotificationARNs  #SNS_TOPIC_ARN_ARR. Send to TOPIC each EVENT
AWS::NotificationARNs             #STACK.NotificationARNs
                                  #Built-in PARAM

cfnplot.py STACK                 ##Display STACK's EVENTs as a trace graph
                                 ##Includes nested STACKs
                                 ##Version 2023-06-09
--region                         ##'REGION' (def: 'us-east-2')
--profile                        ##AWS 'PROFILE' (def: 'default')


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:         STACK UPDATE          :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


NOOP ==>                          #No update if no RESOURCE.RESPROP has changed

TEMPLATE UPDATE ==>               #Can only update TEMPLATE.Description|Metadata|Conditions|*Policy if TEMPLATE.Resources is also modified

REPLACEMENT ==>                   #Depending on RESOURCE.RESPROP, is done:
                                  #  - NoInterruption: with an Update*()
                                  #  - MinorInterruption: with an Update*() with side-effects, e.g. EC2 instance restarting
                                  #  - Replacement: with a Create*() then Delete*()
                                  #     - retry Delete*() 3 times
                                  #     - often due to create-only RESPROP
                                  #     - few RESPROPs require Delete*() before Create*() instead
                                  #        - required when RESOURCE is a singleton, e.g. when physicalResourceId is hard-coded
                                  #        - but less safe
                                  #  - ReadOnly: cannot be updated, i.e. must recreate the STACK

RESPROP_SPEC.UpdateType           #'Immutable|Mutable'. Whether update requires Replacement

RESOURCE.UpdateReplacePolicy      #STR. What to do with RESOURCE after it has been replaced on update
                                  #Same values as RESOURCE.DeletionPolicy, except no 'RetainExceptOnCreate'

RESOURCE.UpdatePolicy             #UPDATE_POLICY. Only for specific RESTYPEs, documented in their respective doc


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:        STACK ROLLBACK         :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


ContinueUpdateRollback()          #Req: STACK
                                  #  - only StackName, RoleARN
                                  #  - only one with ResourcesToSkip
                                  #  - also ClientRequestToken
                                  #Res: empty
                                  #When StackStatus 'UPDATE_ROLLBACK_FAILED', cannot update STACK nor use CHANGESET
                                  #This allows retrying update rollback
RollbackStack()                   #Req: STACK
                                  #  - only StackName, RoleARN, RetainExceptOnCreate
                                  #  - also ClientRequestToken
                                  #Res: STACK
                                  #  - only StackId
                                  #When StackStatus 'CREATE|UPDATE_FAILED', rollback to most recent state with '*_COMPLETE' StackStatus
                                  #  - if none, deletes it

STACK.ResourcesToSkip             #'RESOURCE'_ARR to set ResourceStatus to 'UPDATE_COMPLETE' without retrying rolling back
                                  #Only if RESOURCE.ResourceStatus is 'UPDATE_FAILED' due to rollback failure
                                  #Cannot be a nested STACK

STACK.OnFailure                   #STR. On Create|UpdateStack():
CHANGESET.OnStackFailure          #  - 'DO_NOTHING':
                                  #      - on create: do nothing
                                  #      - on update: only rollback errored RESOURCEs
                                  #  - 'ROLLBACK' (def): rollback all RESOURCEs
                                  #  - 'DELETE': delete the CHANGESET
                                  #Rollback wait for whole create|update to complete first (as opposed to start on first failure)
STACK|CHANGESET.DisableRollback   #BOOL (def: false). Same as OnFailure 'DO_NOTHING|ROLLBACK'

STACK.TimeoutInMinutes            #NUM (in mins, def: none). CreateStack() timeout

STACK|CHANGESET                   #STACK_ROLLBACK
 .RollbackConfiguration           #For all operations on the STACK, not just current one
STACK_ROLLBACK                    #NUM (def: 0, max: 3h). Wait for NUM minutes before:
 .MonitoringTimeInMinutes         #  - CreateStack(): setting as complete
                                  #  - UpdateStack(): starting cleanup phase
                                  #During that time, can rollback with either:
                                  #  - ROLLBACK_TRIGGER
                                  #  - manual call to CancelUpdateStack()

STACK_ROLLBACK.RollbackTriggers   #ROLLBACK_TRIGGER_ARR
                                  #Rollback Create|UpdateStack() when specific CloudWatch ALARM.StateValue is 'ALARM'
                                  #Max 5 items
ROLLBACK_TRIGGER.Type             #'AWS::CloudWatch::[Composite]Alarm'
ROLLBACK_TRIGGER.Arn              #ALARM_ARN


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:         STACK DELETE          :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


UpdateTerminationProtection()     #Req: STACK
                                  #  - only StackName, EnableTerminationProtection
                                  #Res: STACK
                                  #  - only StackId

STACK.EnableTerminationProtection #BOOL (def: false)
                                  #Do not allow deleting STACK
                                  #For nested STACKs, must be done on root STACK

RESOURCE.DeletionPolicy           #STR. What to do with RESOURCE when either:
                                  #  - STACK is deleted
                                  #  - RESOURCE is removed from TEMPLATE
                                  #Can be:
                                  #  - 'Delete' (def)
                                  #  - 'Retain': keep RESOURCE
                                  #  - 'RetainExceptOnCreate':
                                  #     - like 'Delete' if RESOURCE was rollbacked during creation
                                  #     - 'Retain' otherwise
                                  #  - 'Snapshot'
                                  #     - delete but create a snapshot
                                  #     - only for specific RESTYPEs
                                  #        - mostly database cluster and EC2 VOLUME
                                  #        - documented in their respective docs
STACK|CHANGESET
 .RetainExceptOnCreate            #BOOL (def: false). Force RESOURCE.DeletionPolicy 'RetainExceptOnCreate'

STACK.RetainResources             #'RESOURCE'_ARR ignored by DeleteStack()
                                  #Meant for STACKs in StackState 'DELETE_FAILED' due to issue deleting those RESOURCEs


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:        CHANGESET MAIN         :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


CreateChangeSet()                 #Req: CHANGESET
                                  #  - no Changes, ChangeSetId, CreationTime, *Status*, ParentChangeSetId,
                                  #    RootChangeSetId, StackId
                                  #  - only one with ChangeSetType, ResourcesToImport
                                  #  - only one with ResourceTypes, RoleARN
                                  #  - only one with TemplateBody, TemplateURL, UsePreviousTemplate
                                  #  - also ClientToken
                                  #Res: CHANGESET
                                  #  - only StackId, ChangeSetId -> Id
ListChangeSets()                  #Req: CHANGESET
                                  #  - only StackName
                                  #Res: Summaries CHANGESET_ARR
                                  #  - no Capabilities, Changes, NotificationARNs, OnStackFailure,
                                  #    Parameters, RollbackConfiguration, Tags
DescribeChangeSet()               #Req: CHANGESET
                                  #  - only ChangeSetName, StackName
                                  #Res: CHANGESET
                                  #Paginates CHANGESET.Changes
ExecuteChangeSet()                #Req: CHANGESET
                                  #  - only ChangeSetName, StackName
                                  #  - only one with RetainExceptOnCreate, DisableRollback
                                  #  - also ClientRequestToken
                                  #Res: empty
DeleteChangeSet()                 #Req: CHANGESET
                                  #  - only ChangeSetName, StackName
                                  #Res: empty

CHANGESET                         #Diff between STACK current|next version
                                  #After review, applied to STACK, resulting in a create|update
                                  #I.e. two-step create|update
                                  #WAIT (DescribeChangeSet()) ChangeSetCreateComplete: when CHANGESET.Status CREATE_COMPLETE
CHANGESET_ARN                     #arn:aws:cloudformation:REGION:ACCOUNT_ID:changeset/CHANGESET/ROOT_CHANGESET_MID
CHANGESET.ChangeSetId             #CHANGESET_MID
CHANGESET.ChangeSetName           #'CHANGESET'. Only [[:alnum:]-], max 128 chars
COND_KEY
 cloudformation:ChangeSetName     #'CHANGESET'. Only with *ChangeSet*()
CHANGESET.Description             #STR. Max 1KB
CHANGESET.CreationTime            #DATE

CHANGESET.StackId                 #STACK_MID
CHANGESET.StackName               #'STACK'
STACK.ChangeSetId                 #CHANGESET_MID
STACK_TEMPLATE.ChangeSetName      #'CHANGESET'|CHANGESET_ARN

CHANGESET.ChangeSetType           #Can be:
                                  #  - 'CREATE': create STACK
                                  #     - STACK is created right away but empty: its RESOURCEs are only added once CHANGESET is executed
                                  #  - 'UPDATE' (def): update STACK
                                  #  - 'IMPORT': import, i.e. add existing RESOURCEs

CHANGESET.Status                  #STR among:
                                  #  - CREATE_PENDING, CREATE_IN_PROGRESS, CREATE_COMPLETE
                                  #  - DELETE_PENDING, DELETE_IN_PROGRESS, DELETE_COMPLETE, DELETE_FAILED
                                  #  - FAILED
                                  #ListChangeSets() always filters for CREATE_PENDING|IN_PROGRESS
CHANGESET.StatusReason            #STR
CHANGESET.ExecutionStatus         #STR among:
                                  #  - UNAVAILABLE: creation in progress
                                  #  - AVAILABLE: not executed yet
                                  #  - EXECUTE_IN_PROGRESS
                                  #  - EXECUTE_COMPLETE, EXECUTE_FAILED
                                  #  - OBSOLETE: STACK was updated by another ACTION|CHANGESET2, making current one obsolete


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:       CHANGESET DEPLOY        :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


aws cloudformation deploy         #Do CreateChangeSet(), then ExecuteChangeSet() directly

--no-execute-changeset            #Only CreateChangeSet(), not ExecuteChangeSet()
--no-fail-on-empty-changeset      #Do not set non-0 exit code if CHANGESET is empty

--stack-name
--capabilities
--role-arn
--notification-arns
--tags                            #Like CreateChangeSet()
--parameter-overrides             #Like CreateChangeSet(), except as { PARAM: 'VAL', ... } and cannot add|remove PARAMs

--template-file                   #'PATH' to TEMPLATE
--s3-bucket
--s3-prefix
--force-upload
--kms-key-id                      #Like aws cloudformation package, but to use CHANGESET.TemplateURL instead


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:       CHANGESET REVIEW        :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


CHANGESET.Changes                 #CHANGE_ARR, for review
CHANGE.Type                       #Always 'Resource'

CHANGE.ResourceChange             #RESCHANGE
RESCHANGE
 .ResourceType|LogicalResourceId
 |PhysicalResourceId|ModuleInfo   #Like STACK_RESOURCE.*
RESCHANGE.Action                  #Can be:
                                  #  - 'Add': create RESOURCE
                                  #  - 'Import'
                                  #  - 'Modify': update RESOURCE
                                  #  - 'Remove': delete RESOURCE
                                  #  - 'Dynamic': unknown
RESCHANGE.Scope                   #'PROP'_ARR with all CHANGE_TARGET.Attribute
                                  #Which RESOURCE.PROPs are being updated
                                  #Only with Action 'Modify'
RESCHANGE.Replacement             #Whether update will replace the RESOURCE. Can be:
                                  #  - 'True': CHANGE_TARGET.RequiresCreation 'Always' + CHANGE_DETAIL.Evaluation 'Static'
                                  #  - 'Conditional':
                                  #     - CHANGE_TARGET.RequiresCreation 'Always' + CHANGE_DETAIL.Evaluation 'Dynamic'
                                  #     - or CHANGE_TARGET.RequiresCreation 'Conditionally'
                                  #  - 'Never': CHANGE_TARGET.RequiresCreation 'Never'
                                  #Only with Action 'Modify'

RESCHANGE.Details                 #CHANGE_DETAIL_ARR
                                  #Only with Action 'Modify'
CHANGE_DETAIL.ChangeSource        #STR. Where change came from, among:
                                  #  - 'DirectModification': TEMPLATE
                                  #  - 'ResourceReference': { Ref } target
                                  #  - 'ParameterReference': { Ref: 'PARAM' } target
                                  #  - 'ResourceAttribute': { Fn::GetAtt } target
                                  #  - 'Automatic': nested STACK
CHANGE_DETAIL.CausingEntity       #STR, depending on ChangeSource:
                                  #  - 'DirectModification': none
                                  #  - 'ResourceReference': { Ref } value
                                  #  - 'ParameterReference': 'PARAM'
                                  #  - 'ResourceAttribute': RESATTR value
                                  #  - 'Automatic': 'STACK'
CHANGE_DETAIL.Evaluation          #Whether new value can be known before execution. Either:
                                  #  - 'Dynamic': e.g. when value is a { Ref } or { Fn::GetAtt }
                                  #  - 'Static': otherwise

CHANGE_DETAIL.Target              #CHANGE_TARGET. Which property will change in TEMPLATE
CHANGE_TARGET.Attribute           #'PROP' among: 'Properties', 'Metadata', 'CreationPolicy', 'UpdatePolicy', 'DeletionPolicy', 'Tags'
CHANGE_TARGET.Name                #'RESPROP'
                                  #Only with Attribute 'Properties'
CHANGE_TARGET.RequiresRecreation  #'Always', 'Never' or 'Conditionally'
                                  #Whether RESPROP update requires a Replacement
                                  #Only with Attribute 'Properties'


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:       CHANGESET IMPORT        :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


CHANGESET.ResourcesToImport       #IMPORTED_RESOURCE_ARR. RESOURCEs that should not be created because they already exist
                                  #I.e. meant for RESOURCEs either:
                                  #  - created outside of CloudFormation
                                  #  - part of another STACK2, in which case they should be removed from it first
                                  #Only with ChangeSetType 'IMPORT'
                                  #Not all RESTYPEs can be imported (see online doc for list)
                                  #RESOURCE.DeletionPolicy must be specified
                                  #Target can be a child STACK, but not if it has children itself
                                  #Does not check whether the imported RESOURCE RESPROPs match the ones specified in TEMPLATE
                                  #  - i.e. should detect drift afterwards
                                  #Cannot import RESOURCE already imported by another STACK
                                  #Max 200 items
IMPORTED_RESOURCE.ResourceType    #RESTYPE
COND_KEY
cloudformation:ImportResourceTypes#RESTYPE_ARR
IMPORTED_RESOURCE
 .LogicalResourceId               #'RESOURCE', as declared in TEMPLATE.Resources.RESOURCE
IMPORTED_RESOURCE                 #IMPORTED_RESPROP_ARR. Equivalent to RESOURCE.PhysicalResourceId
 .ResourceIdentifier              #Max 256 items
IMPORTED_RESPROP.key              #'RESPROP'. Max 2KB
IMPORTED_RESPROP.value            #'VAL'. Max 2KB

STACK_TEMPLATE
 .ResourceIdentifierSummaries     #TO_IMPORT_RESTYPE_ARR
TO_IMPORT_RESTYPE.ResourceType    #RESTYPE
TO_IMPORT_RESTYPE
 .LogicialResourceIds             #'RESOURCE'_ARR
TO_IMPORT_RESTYPE
 .ResourceIdentifiers             #'RESPROP'_ARR that can be used as IMPORTED_RESPROP.key


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:        PARAMETERS MAIN        :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


TEMPLATE.Parameters.PARAM         #PARAM. Inputs to the STACK. Declaration
                                  #'PARAM' must be [[:alnum::]], max 255 chars
                                  #Max 200 per TEMPLATE
STACK_TEMPLATE.Parameters         #STACK_PARAM_ARR. Same
STACK_PARAM.ParameterKey          #'PARAM'

STACK_PARAM.ParameterType         #One of:
PARAM.Type                        #  - 'String': STR
                                  #  - 'Number': NUM
                                  #     - converted to 'NUM' when used in a RFUNC
                                  #  - 'List<Number>': 'NUM,...'
                                  #     - converted to NUM_ARR when used in a RFUNC
                                  #  - 'CommaDelimitedList': 'STR,...'
                                  #     - converted to STR_ARR when used in a RFUNC
                                  #     - PARAM.Allowed* are for each STR
                                  #     - each STR is trimmed
                                  #  - 'RESTYPE' or 'List<RESTYPE>'
                                  #     - like STR, but with PARAM.AllowedValues guessed from current ACCOUNT
                                  #     - only for:
                                  #        - EC2: AvailabilityZone::Name, Image::Id, Instance::Id, KeyPair::KeyName,
                                  #          SecurityGroup::GroupName|Id, Subnet::Id, Volume::Id, VPC::Id
                                  #        - Route53: HostedZone::Id
PARAM.Min|MaxLength               #'NUM'. Only with Type 'String'
PARAM.Min|MaxValue                #'NUM'. Only with Type 'Number'
PARAM.AllowedPattern              #'REGEXP'
STACK_PARAM
 .ParameterConstraints
 .AllowedValues
PARAM.AllowedValues               #STR_ARR
STACK_PARAM.DefaultValue          #VAL
PARAM.Default                     #If none, required
[STACK_]PARAM.Description         #STR. Description of PARAM
                                  #Max 1KB
PARAM.ConstraintDescription       #STR. Description of PARAM validation
[STACK_]PARAM.NoEcho              #BOOL (def: false). Show '*****' when read
                                  #Exceptions: as STACK OUTPUT or STACK|RESOURCE metadata

STACK|CHANGESET|SET.Parameters    #PARAMVAL_ARR. STACK_PARAM value
INSTANCE.ParameterOverrides       #PARAMVAL_ARR. Can only change values, not add|remove STACK_PARAMs
PARAMVAL.ParameterKey             #'PARAM'
PARAMVAL.ParameterValue           #'VAL'
                                  #Max 4KB
PARAMVAL.UsePreviousValue         #BOOL (def: false)

{ Ref: 'PARAM' }                  #Replaced with PARAM value
                                  #Must be inside RESOURCE|OUTPUT.**

BUILT-IN PARAMS ==>               #Called "pseudo PARAMs"
AWS::StackId                      #STACK_MID
AWS::StackName                    #'STACK'
AWS::AccountId                    #ACCOUNT_ID
AWS::Region                       #'REGION'
AWS::Partition                    #'PARTITION'
AWS::URLSuffix                    #'AWS_DOMAIN'


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:         PARAMETERS UI         :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


TEMPLATE.Metadata
['AWS::CloudFormation::Interface']#INTERFACE. UI console settings

INTERFACE
 .ParameterLabels.PARAM.default   #STR. PARAM's UI name

INTERFACE.ParameterGroups         #PARAM_GROUP_ARR. Group PARAMs in the UI
                                  #PARAMs not listed are put in a last "Others" GROUP_PARAM
PARAM_GROUP.Parameters            #'PARAM'_ARR
PARAM_GROUP.Label.default         #STR. PARAM_GROUP's UI name


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:       PARAMETERS RULES        :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


TEMPLATE.Rules.RULE               #RULE. Validate PARAMs
RULE.RuleCondition                #BOOL (def: true). Skip RULE if false

RULE.Assertions                   #ASSERT_ARR
ASSERT.Assert                     #BOOL. Fail STACK if false
ASSERT.AssertDescription          #STR

RFUNC ==>                         #Can only use !Ref|Equals|And|Not|Or
                                  #Can also use the following ones, only inside RULE.*

{ Fn::RefAll: RESTYPE }           #RESOURCE_MID_ARR of all RESOURCEs in current ACCOUNT with RESTYPE
{ Fn::ValueOfAll:                 #STR_ARR. RESATTR of all RESOURCEs in current ACCOUNT with RESTYPE
 [RESTYPE, 'RESATTR'] }           #Only available RESTYPE|RESATTR are for EC2:
                                  #  - VPC::Id: Tags.TAG, DefaultNetworkAcl, DefaultSecurityGroup
                                  #  - Subnet::Id: Tags.TAG, VpcId, AvailabilityZone
                                  #  - SecurityGroup::Id: Tags.TAG
{ Fn::ValueOf:                    #STR[_ARR]. Like { Fn::GetAtt } except:
 ['PARAM', 'RESATTR'] }           #  - use a PARAM which contains a RESOURCE_MID[_ARR]
                                  #  - only with above RESTYPE|RESATTRs

{ Fn::Contains: [STR_ARR, STR2] } #BOOL. If one STR == STR2
{ Fn::EachMemberEquals:
 [STR_ARR, STR2] }                #BOOL. All STR == STR2
{ Fn::EachMemberIn:
 [STR_ARR, STR2_ARR] }            #BOOL. All STR == one STR2


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:      STACK OUTPUTS MAIN       :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


TEMPLATE.Outputs.OUTPUT           #OUTPUT. Values computed by a STACK
                                  #'OUTPUT' must be [[:alnum:]], max 255 chars
                                  #Max 200 per TEMPLATE
STACK.Outputs                     #STACK_OUTPUT_ARR. Same
STACK_OUTPUT.OutputKey            #'OUTPUT'

OUTPUT.Value
STACK_OUTPUT.OutputValue          #'VAL'
[STACK_]OUTPUT.Description        #STR. Max 1KB


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:     STACK OUTPUTS EXPORT      :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


ListExports()                     #Req: empty
                                  #Res: Exports EXPORT_ARR
ListImports()                     #Req: EXPORT
                                  #  - only Name -> ExportName
                                  #Res: Imports 'STACK'_ARR

EXPORT                            #STACK OUTPUT that can be used in other STACKs, using { Fn::ImportValue }
                                  #Also called "cross-stack reference"
                                  #Must be in same REGION
                                  #If a STACK OUTPUT is used by another STACK2:
                                  #  - STACK cannot be deleted
                                  #  - OUTPUT is readonly
                                  #Should avoid secrets
OUTPUT.Export.Name
STACK_OUTPUT.ExportName
EXPORT.Name                       #'EXPORT'. Must be unique across all STACKs in current ACCOUNT
EXPORT.Value                      #'VAL'. OUTPUT.Value
EXPORT.ExportingStackId           #STACK_MID

{ Fn::ImportValue: 'EXPORT' }     #'VAL'
                                 ##With Pulumi, can use PFUNC:
                                 ##  - aws:cloudformation:getExport, with RPROPS.name 'EXPORT'
                                 ##  - aws-native:importValue, with RPROPS.name 'EXPORT'


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:     GITHUB ACTION DEPLOY      :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


aws-actions/                     ##Call CreateStack(), or CreateChangeSet() + ExecuteChangeSet()
 aws-cloudformation-github-deploy##Also requires PACTIONs for: DescribeStacks(), DescribeChangeSet(), DeleteChangeSet()
                                 ##BOOL is actually '0|1'
                                 ##Version v1

INPUTS.name                      ##'STACK'
                                 ##Also used as 'CHANGESET' name: 'STACK-CS'
INPUTS.template                  ##TEMPLATE as 'PATH' (STACK.TemplateBody) or 'URL' (STACK.TemplateURL)

INPUTS.capabilities              ##'STR,...' (def: 'CAPABILITY_IAM'). STACK.Capabilities
INPUTS.role-arn                  ##'ROLE_ARN'. STACK.RoleARN
INPUTS.tags                      ##'TAG_PAIRS_JSON'. STACK.Tags
INPUTS.notification-arns         ##'SNS_TOPIC_ARN,...'. STACK.NotificationARNs
INPUTS.parameter-overrides       ##STACK.Parameters, either as:
                                 ##  - 'file:URL' to 'PARAMVAL_ARR_JSON'
                                 ##  - 'PARAM=VAL,...'
                                 ##     - can specify PARAM multiple times, which becomes ,-concatenated
                                 ##     - VAL can be "VAL,..."
INPUTS.disable-rollback          ##BOOL (def: false). STACK.DisableRollback
                                 ##Only on CreateStack()
INPUTS.timeout-in-minutes        ##NUM. STACK.TimeoutInMinutes
                                 ##Only on CreateStack()
INPUTS.termination-protection    ##BOOL (def: false). STACK.EnableTerminationProtection
                                 ##Only on CreateStack()

INPUTS.no-execute-changeset      ##BOOL (def: false). Call CreateChangeSet() but not ExecuteChangeSet()
INPUTS.no-delete-failed-changeset##BOOL (def: false). Call DeleteChangeSet() on failure
INPUTS.no-fail-on-empty-changeset##BOOL (def: false). Do not fail when CHANGESET if empty

ENVVAR HTTP_PROXY
INPUTS.http-proxy                ##'HTTPS_URL' proxy for API calls

OUTPUTS.stack-id                 ##STACK_MID. 'UNKNOWN' if problem
OUTPUTS.STACK_OUTPUT             ##'VAL'


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:        FUNCTIONS MAIN         :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


{ RFUNC: ARGS }                   #Can be used instead of VAL
                                  #Called "builtin|intrisic functions"
                                  #Only in value of (deeply):
                                  #  - TEMPLATE.Resources
                                  #  - RESOURCE.Properties.RESPROP
                                  #  - TEMPLATE.Outputs.OUTPUT
                                  #  - TEMPLATE.Conditions
                                  #  - RESOURCE.Metadata
                                  #  - RESOURCE.UpdatePolicy
                                  #  - RESOURCE.UpdateReplacePolicy|DeletionPolicy
                                  #     - requires AWS::LanguageExtensions
                                  #     - only !Ref, !If, !FindInMap, AWS::AccountId|Partition|Region
                                  #  - other RFUNCs
                                  #     - each RFUNC only allows specific others ("supported functions")
                                  #     - see online doc for list
                                  #     - AWS::LanguageExtensions must be used to use:
                                  #        - inside !Ref|!GetAtt|!FindInMap: !Ref !Base64 !FindInMap !If !Join !Sub !ToJsonString
                                  #        - inside !FindInMap: !Split (except in DefaultValue) !Select !Length
                                  #In ARGS, NUM can also be 'NUM'
                                  #{ Ref|GetAtt|Sub } create a dependency like RESOURCE.DependsOn

!RFUNC ARGS                       #Shortcut syntax in YAML
                                  #No Fn::, e.g. !FindInMap
                                  #With !GetAtt: ARGS is dot-delimited list instead of ARR
                                  #Cannot do !RFUNC !RFUNC2 ARGS, but can do !RFUNC { RFUNC2: ARGS }
                                  #Can be used with Fn::ForEach|Length|ToJsonString
                                  #Cannot be used with cfn-guard


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:      FUNCTIONS RESOURCES      :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


{ Ref: 'RESOURCE' }               #RESOURCE_MID

{ Fn::GetAtt:                     #RESOURCE.RESATTR value
 ['RESOURCE', 'RESATTR'] }        #RESOURCE output. Often ARN|MID|name|URL
                                  #Sometimes considered a "read-only RESPROP"
                                  #RESATTR can be dot-delimited VARR
                                  #As opposed to STACK output

{ Fn::GetAZs: 'REGION' }          #ZONE_ARR
                                  #Only ones with a default SUBNET, except if none has
                                  #REGION "" (def) is like { Ref: "AWS::Region" }

{{resolve:SERVICE:ARGS}}          #SERVICE-specific value. "Dynamic references"
                                  #Only for SSM and Secrets Manager (see their doc)
PARAMVAL.ResolvedValue            #'VAL', only with AWS Systems Manager


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:        FUNCTIONS LOGIC        :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


TEMPLATE.Conditions.COND          #BOOL
                                  #Usually use a RFUNC
{ Condition: COND }               #Replaced by TEMPLATE.Conditions.COND BOOL
                                  #Can only be used as a Fn::Not|And|Or argument
RESOURCE|OUTPUT.Condition         #'COND'. Skip if TEMPLATE.Conditions.COND false

{ Fn::If: ['COND', VAL, VAL2] }   #VAL if true, VAL2 if false
AWS::NoValue                      #Built-in PARAM, resolved to undefined
                                  #Only used with Fn::If or Fn::FindInMap (OBJ.DefaultValue)

{ Fn::Equals: [VAL, VAL2] }       #BOOL
{ Fn::Not: [BOOL] }               #!BOOL
{ Fn::And|Or: [BOOL,...] }        #BOOL2
                                  #Min 2
                                  #Max 10, but can use subgroups of { Fn::And|Or } to overcome this

TEMPLATE.Mappings.FILTER.VAR.PROP #STR[_ARR]
                                  #PROP must be [[:alnum:]], max 255 chars
                                  #Max 200 FILTERs per TEMPLATE
                                  #Max 200 VARs per FILTER
{ Fn::FindInMap:                  #Replace with FILTER.VAR.PROP
 ['FILTER', 'VAR', 'PROP'[, OBJ]]}#If VAR|PROP not found, uses OBJ.DefaultValue VAL (def: error)
                                  #  - requires AWS::LanguageExtensions
                                  #Meant for conditional mapping with VAR using a RFUNC

{ Fn::ForEach::LOOP:              #For each VAL, substitute VAR in { PROP: VAL }, then merge all in a single OBJ
 ['VAR', VAL_ARR, { PROP: VAL2 }]}#Substitution must use either:
                                  #  - in keys: ${VAR}
                                  #  - in values: { Ref: 'VAR' } or { Fn::Sub: ['...${VAR}...'] }
                                  #LOOP must be unique name in TEMPLATE, meant only for description
                                  #Requires AWS::LanguageExtensions


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:        FUNCTIONS UTILS        :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


{ Fn::Join: [STR, STR2_ARR] }     #STR2_ARR.join(STR)
{ Fn::Split: [STR, STR2] }        #STR2.split(STR)
{ Fn::Sub: STR }                  #Substitutes ${VAR} in STR where VAR can be:
{ Fn::Sub: [STR, OBJ] }           #  - PARAM: like { Ref }
                                  #  - 'RESOURCE': like { Ref }
                                  #  - 'RESOURCE.RESATTR': like { Fn::GetAtt }
                                  #  - OBJ.VAR
                                  #Can escape ${...} as ${!...}

{ Fn::Length: ARR }               #ARR.length
                                  #Requires AWS::LanguageExtensions
{ Fn::Select: [NUM, ARR] }        #ARR[NUM] (0-index)
                                  #Error if undefined

{ Fn::ToJsonString: OBJ|ARR }     #'OBJ|ARR_JSON'
                                  #Requires AWS::LanguageExtensions
{ Fn::Base64: STR }               #STR2

{ Fn::Cidr: ['CIDR', NUM, NUM2] } #'CIDR2'_ARR. Split CIDR into NUM CIDR2s
                                  #Are also a subset of CIDR3, which is computed with NUM2 subnet bits
                                  #Can use IPv4|6


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:           METADATA            :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


TEMPLATE.Metadata                 #OBJ. Stack metadata (any custom info)
                                  #Should avoid secrets. Values cannot be null
STACK_TEMPLATE.Metadata           #'OBJ_JSON'

RESOURCE.Metadata                 #OBJ. Same but for resource
STACK_RESOURCE.Metadata           #'OBJ_JSON'

cfn-get-metadata --key VAR        #Prints RESOURCE.Metadata.VAR
                                  #Takes same options as cfn-init


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:            POLICY             :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


SetStackPolicy()                  #Req: STACK
                                  #  - only StackName, StackPolicyBody, StackPolicyURL
                                  #Res: empty
GetStackPolicy()                  #Req: STACK
                                  #  - only StackName
                                  #Res: STACK
                                  #  - only StackPolicyBody

STACK.StackPolicyBody             #'POLICY_DOC', as STR
                                  #Max 16KB
STACK.StackPolicyURL              #Same but using a S3_URL, in same REGION
                                  #URL max 1KB, contents max 16KB
COND_KEY
 cloudformation:StackPolicyUrl    #S3_URL. Only with SetStackPolicy(), Create|UpdateStack(), CreateChangeSet()
STACK                             #Same but only during the ongoing update
 .StackPolicyDuringUpdateBody|URL #Meant to update RESOURCEs otherwise not allowed by STACK policy

STACK POLICY ==>                  #Resource-based POLICY with resource-level permissions
                                  #Mostly meant to prevent update|delete on specific RESOURCEs
                                  #Def: allow all if not specified, deny all if specified
                                  #PACTION can only be:
                                  #  - 'Update:Modify': updating a RESOURCE without Replacement
                                  #  - 'Update:Replace': updating a RESOURCE with Replacement
                                  #  - 'Update:Delete': deleting a RESOURCE
                                  #  - 'Update:*'
                                  #STATEMENT.Resource uses 'LogicalResourceId/RESOURCE'
                                  #STATEMENT.Principal must be '*'
COND_KEY ResourceType             #'RESTYPE'


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:             WAIT              :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


SignalResource()                  #Req: SIGNAL
                                  #Res: empty

SIGNAL                            #Mark a RESOURCE creation as complete
                                  #Used only by RESOURCE.CreationPolicy and WAITCONDITION
                                  #  - for WAITCONDITION, should use HANDLE_URL though
SIGNAL.UniqueId                   #'SIGNAL'
SIGNAL.StackName                  #'STACK'
SIGNAL.LogicalResourceId          #'RESOURCE'
SIGNAL.Status                     #'SUCCESS|FAILURE'

RESOURCE.CreationPolicy           #CREATION_POLICY. Wait for specific conditions to mark RESOURCE creation as complete
                                  #Only for specific RESTYPEs (AutoScalingGroup), documented in their respective docs

AWS::CloudFormation::WaitCondition#RESOURCE representing an async pause
                                  #Usually uses RESOURCE.DependsOn to specify both previous|next RESOURCE
RESPROP WAITCONDITION.Handle      #Must be { Ref: 'WAITCONDITION_HANDLE' }
AWS::CloudFormation::             #RESOURCE representing a HANDLE_URL. No RESPROPs
 WaitConditionHandle              #{ Ref: 'WAITCONDITION_HANDLE' } resolves to 'HANDLE_URL'
HANDLE_URL                        #Pre-signed S3 PutObject() URL
                                  #Must be called to call SignalResource() and stop the pause
                                  #With PUT, no Content-Type [C]
                                  #Request body is HANDLE_REQ, as JSON
RESPROP WAITCONDITION.Count       #NUM (def: 1) of times to call HANDLE_URL
CREATION_POLICY.Count             #Only with WAITCONDITION
RESPROP WAITCONDITION.Timeout     #TIME_DURATION (def: 5m, max: 12h)
CREATION_POLICY.Timeout           #Only with WAITCONDITION

HANDLE_REQ.Status                 #'SUCCESS|FAILURE'
HANDLE_REQ.Reason                 #'ERROR' when failure
HANDLE_REQ.UniqueId               #'SIGNAL'. Do not increment WAITCONDITION.Count when using same UniqueId twice
HANDLE_REQ.Data                   #STR. Sets WAITCONDITION RESATTR 'Data' { SIGNAL: STR, ... }
                                  #Max 4KB

cfn-signal                        #Calls SignalResource()
cfn-signal HANDLE_URL             #Calls HANDLE_URL

--success|-s                      #BOOL (def: true). HANDLE_REQ.Status
--exit-code|-e                    #Same but as NUM, using exit code
--id|-i                           #'SIGNAL' or HANDLE_REQ.UniqueId
                                  #Def: EC2 instance MID, or machine's FQDN
--http[s]-proxy                   #'http[s]://USER:PASSWORD@HOST:PORT'

(only with SignalResource())
--stack                           #'STACK'
--resource                        #'RESOURCE'
--role                            #'ROLE'
--access-key                      #ACCESS_KEY_ID
--secret-key                      #SECRET_ACCESS_KEY
--credential-file|-f              #CREDS
--region                          #'REGION'
--url|-u                          #'URL'. CloudFormation endpoint

(only with HANDLE_URL)
--reason|-r                       #HANDLE_REQ.Reason
                                  #Def: 'Configuration failed' if failure
--data|-d                         #HANDLE_REQ.Data (def: none)


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:             TIME              :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


AwsCommunity::Time::Static        #RESTYPE. Date/time value
                                  #Kept as a SSM parameter '/CloudFormation/AwsCommunity/Time/Static/unique-identifier'
                                  #i.e. requires ssm:Get|Put|DeleteParameter
STATIC.Time                       #'DATE' (def: now)
                                  #Create-only. All other STATIC.* are readonly
STATIC.Id                         #'UUID'
STATIC.Utc                        #'DATE'
STATIC.Unix                       #DATE_NUM
STATIC.Year|Month|Day|Hour|Minute
 |Second                          #NUM

AwsCommunity::Time::Offset        #RESTYPE. Date/time value, computed as an offset
                                  #Kept as a SSM parameter '/CloudFormation/AwsCommunity/Time/Offset/unique-identifier'
                                  #i.e. requires ssm:Get|Put|DeleteParameter
STATIC.*                          #Like AwsCommunity::Time::Static
STATIC.OffsetYears|Months|Days
 |Hours|Minutes|Seconds           #NUM to add to STATIC.Time

AwsCommunity::Time::Sleep         #RESTYPE. Wait for a specific amount of time
                                  #Kept as a SSM parameter '/CloudFormation/AwsCommunity/Time/Sleep/unique-identifier'
                                  #i.e. requires ssm:Get|Put|DeleteParameter
SLEEP.Id                          #'UUID'
SLEEP.Seconds                     #NUM (min 0, max 10m) of secs to wait
SLEEP.Triggers                    #STR_ARR. Only wait when any of those change
SLEEP.SleepOnCreate|Update|Delete #BOOL (def: true). Whether to wait when creating|updating|deleting SLEEP


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:           SET MAIN            :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


CreateStackSet()                  #Req: SET
                                  #  - also ClientRequestToken
                                  #  - only one with StackId
                                  #  - no OrganizationalUnitIds, StackSetARN, StackSetDriftDetectionDetails
                                  #  - no StackSetId, Status
                                  #  - no Accounts, Regions, DeploymentTargets
                                  #Res: SET
                                  #  - only StackSetId
ImportStacksToStackSet()          #Req: OP
                                  #  - only OperationId, OperationPreferences, CallAs, StackSetName
                                  #  - only one with StackIds[Url]
                                  #  - also SET: OrganizationalUnitIds
                                  #Res: OP
                                  #  - only OperationId
UpdateStackSet()                  #Req: SET
                                  #  - StackSetId|StackSetName -> StackSetName 'SET'|SET_MID
                                  #  - also OP: OperationId, OperationPreferences
                                  #  - only one with UsePreviousTemplate
                                  #  - no OrganizationalUnitIds, StackSetARN, StackSetDriftDetectionDetails
                                  #  - no Status
                                  #Res: OP
                                  #  - only OperationId
ListStackSets()                   #Req: SET
                                  #  - only Status
                                  #  - also OP: CallAs
                                  #Res: Summaries SET_ARR
                                  #  - no TemplateURL
                                  #  - no AdministrationRoleARN, Capabilities, ExecutionRoleName, Parameters, Tags, TemplateBody
                                  #  - no OrganizationalUnitIds, StackSetARN, StackSetDriftDetectionDetails
                                  #  - no Accounts, Regions, DeploymentTargets
DescribeStackSet()                #Req: SET
                                  #  - only StackSetId|StackSetName -> StackSetName 'SET'|SET_MID
                                  #  - also OP: CallAs
                                  #Res: StackSet SET
                                  #  - no TemplateURL
                                  #  - no DriftStatus, LastDriftCheckTimestamp
                                  #  - no Accounts, DeploymentTargets
DeleteStackSet()                  #Req: SET
                                  #  - only StackSetId|StackSetName -> StackSetName 'SET'|SET_MID
                                  #  - also OP: CallAs
                                  #Res: empty

SET                               #STACK provisioned across multiple ACCOUNTs|REGIONs ("target"|INSTANCE)
                                  #Each INSTANCE has own copy of the STACK
                                  #ACCOUNT operating the SET is "administrator"
                                  #Max 1e3 per ACCOUNT (soft)
SET.StackSetARN                   #SET_ARN. arn:aws:cloudformation:ACCOUNT_ID:REGION:stackset/SET_MID
SET|OP|STACK_TEMPLATE.StackSetId  #SET_MID
SET|OP|STACK_TEMPLATE.StackSetName#'SET'. Max 128 chars
SET.Description                   #STR. Max 1KB

SET.StackId                       #STACK_ARN to import, converting into INSTANCE
                                  #Def: no import, i.e. create new STACK
                                  #Administrator ACCOUNT must be allowed to PACTION cloudformation:GetTemplate
SET.StackIds                      #Same with STACK_MID_ARR
                                  #Max 10 items
SET.StackIdsUrl                   #Same but as S3_URL with a list of STACK_MIDs
                                  #Max 5KB for URL, 200 items for list

SET.Status                        #'ACTIVE' or 'DELETED'

SET.Tags                          #TAG_PAIRS


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:        SET PERMISSIONS        :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


ActivateOrganizationsAccess()     #Req: empty
                                  #Res: empty
                                  #Sets ORG_ACCESS.Status
DescribeOrganizationsAccess()     #Req: OP
                                  #  - only CallAs
                                  #Res: ORG_ACCESS
                                  #  - only Status
DeactivateOrganizationsAccess()   #Req: empty
                                  #Res: empty
                                  #Sets ORG_ACCESS.Status

SET|OP.AdministrationRoleARN      #"Administration ROLE": ROLE_ARN used by SET, in administrator ACCOUNT
                                  #Def: 'AWSCloudFormationStackSetAdministrationRole'
                                  #  - if not using default, current PRINCIPAL must be allowed to iam:PassRole|GetRole to ROLE_ARN
                                  #Must be assumable by Principal.Service 'cloudformation.amazonaws.com'
                                  #  - should set COND_KEY SourceAccount ACCOUNT_ID, SourceArn SET_ARN
                                  #Must be allowed to sts:AssumeRole to execution ROLE
SET|OP.ExecutionRoleName          #"Execution ROLE": 'ROLE' used by INSTANCEs|STACKs, i.e. STACK.RoleARN, in each target ACCOUNT
                                  #Def: 'AWSCloudFormationStackSetExecutionRole'
                                  #Must be assumable by Principal.AWS
                                  #  - ADMINISTRATOR_ACCOUNT: if using default SET.AdministrationRoleARN
                                  #  - ROLE_ARN: otherwise

SET.PermissionModel               #Whether to:
                                  #  - allow ORG_ACCESS and OP.CallAs
                                  #  - forbid setting SET.AdministrationRoleARN|ExecutionRoleName
                                  #  - forbid using nested STACKs
                                  #Can be 'SELF_MANAGED' (false, def) or 'SERVICE_MANAGED' (true)
ORG_ACCESS.Status                 #'ENABLED', 'DISABLED' or 'DISABLED_PERMANENTLY'
                                  #If 'ENABLED', creates the following SERVICE_LINKED_ROLEs:
                                  #  - AdministrationRoleARN: AWSServiceRoleForCloudFormationStackSetsOrgAdmin
                                  #     - assumed by Service.Principal 'stacksets.cloudformation.amazonaws.com'
                                  #     - uses CloudFormationStackSetsOrgAdminServiceRolePolicy AWS managed POLICY, allowing:
                                  #        - organizations:List*|Describe*
                                  #        - sts:AssumeRole on ROLE 'stacksets-exec-*'
                                  #  - ExecutionRoleName: AWSServiceRoleForCloudFormationStackSetsOrgMember
                                  #     - assumed by Service.Principal 'member.org.stacksets.cloudformation.amazonaws.com'
                                  #     - uses CloudFormationStackSetsOrgMemberServiceRolePolicy AWS managed POLICY, allowing:
                                  #        - iam:Create|Get|DeleteRole on ROLE 'stacksets-exec-*'
                                  #        - iam:Attach|DetachRolePolicy on ROLE 'stacksets-exec-*' and POLICY 'AdministratorAccess' (full privileges)
                                  #ORG must EnableAllFeatures()
OP.CallAs                         #Whether signed in as:
                                  #  - 'SELF': ORG's management ACCOUNT
                                  #  - 'DELEGATED_ADMIN': ORG's delegated admin ACCOUNT


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:          SET TARGET           :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


INSTANCE|OP_RES.Region            #'REGION' of the INSTANCE
COND_KEY
 cloudformation:TargetRegion      #'REGION'_ARR. Only with UpdateStackSet(), Create|Update|DeleteStackInstances()

INSTANCE|OP_RES.Account           #ACCOUNT_ID of the INSTANCE
                                  #Only with PermissionModel 'SELF_MANAGED'
INSTANCE|OP.DeploymentTargets     #DEPLOYMENT_TARGET_ARR. ACCOUNT_IDs of the INSTANCEs
                                  #Management ACCOUNT is always excluded
                                  #Only with PermissionModel 'SERVICE_MANAGED'
DEPLOYMENT_TARGET.Accounts        #ACCOUNT_ID_ARR
DEPLOYMENT_TARGET.AccountsUrl     #Like Accounts but as a S3_URL with the list
                                  #Max 5KB
DEPLOYMENT_TARGET                 #STR_ARR. ORG root|unit IDs.
 .OrganizationalUnitIds           #Necessary for create|delete OPs (as opposed to update)
DEPLOYMENT_TARGET                 #Which ACCOUNTs to select in the ORG specified by OrganizationalUnitIds,
 .AccountFilterType               #based on DEPLOYMENT_TARGET.Accounts ACCOUNT_ID_ARR
                                  #  - 'NONE': all ORG ACCOUNTs
                                  #  - 'UNION' (def): all ORG ACCOUNTs, plus ACCOUNT_ID_ARR
                                  #  - 'INTERSECTION': all ORG ACCOUNTs, providing among ACCOUNT_ID_ARR
                                  #  - 'DIFFERENCE': all ORG ACCOUNTs, except ACCOUNT_ID_ARR

SET.Regions                       #'REGION'_ARR. Filter INSTANCEs by Region
SET.Accounts                      #ACCOUNT_ID_ARR. Filter INSTANCEs by Account
                                  #Only with PermissionModel 'SELF_MANAGED'
SET.DeploymentTargets             #DEPLOYMENT_TARGET_ARR. Filter INSTANCEs by DEPLOYMENT_TARGET
                                  #Only with PermissionModel 'SERVICE_MANAGED'

INSTANCE|OP_RES.OrganizationUnitId#ORG_ROOT_ID|ORG_UNIT_ID based on DEPLOYMENT_TARGETs
                                  #Only with PermissionModel 'SERVICE_MANAGED'
SET.OrganizationalUnitIds         #ORG_ROOT_ID|ORG_UNIT_ID_ARR based on DEPLOYMENT_TARGETs
                                  #Only with PermissionModel 'SERVICE_MANAGED'

SET.AutoDeployment                #AUTODEPLOY
AUTODEPLOY.Enabled                #BOOL (def: false)
                                  #Automatically add|remove INSTANCEs when new ACCOUNTs are added|removed to the ORG
                                  #based on DEPLOYMENT_TARGET
AUTODEPLOY
 .RetainStacksOnAccountRemoval    #BOOL (def: false). Only add INSTANCEs, not remove


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:         SET INSTANCE          :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


CreateStackInstances()            #Req: INSTANCE
                                  #  - Account|Region -> Accounts|Regions ARR
                                  #  - also OP: OperationId
                                  #  - no StackSetId, StackId, LastOperationId, *Status*, *Drift*, OrganizationalUnitId
                                  #Res: OP
                                  #  - only OperationId
UpdateStackInstances()            #Req: INSTANCE
                                  #  - Account|Region -> Accounts|Regions ARR
                                  #  - also OP: OperationId
                                  #  - no StackSetId, StackId, LastOperationId, *Status*, *Drift*, OrganizationalUnitId
                                  #Res: OP
                                  #  - only OperationId
ListStackInstances()              #Req: INSTANCE
                                  #  - only StackSetName, Account|Region -> StackInstanceAccount|Region
                                  #  - only one with Filters
                                  #  - also OP: CallAs
                                  #Res: Summaries INSTANCE_ARR
                                  #  - no StackSetName, DeploymentTargets, OperationPreferences
                                  #  - no ParameterOverrides
DescribeStackInstance()           #Req: INSTANCE
                                  #  - only StackSetName, Account|Region -> StackInstanceAccount|Region
                                  #  - also OP: CallAs
                                  #Res: StackInstance INSTANCE
                                  #  - no StackSetName, DeploymentTargets, OperationPreferences
DeleteStackInstances()            #Req: INSTANCE
                                  #  - Account|Region -> Accounts|Regions ARR
                                  #  - only StackSetName, DeploymentTargets, OperationPreferences
                                  #  - also OP: OperationId, CallAs, RetainStacks
                                  #Res: OP
                                  #  - only OperationId

INSTANCE                          #Target STACK in a given ACCOUNT|REGION for a given SET
                                  #Cannot delete a SET if it still has some INSTANCEs
                                  #All INSTANCEs of a given SET must always have same TEMPLATE
                                  #  - however can have different PARAM values
                                  #Max 1e5 per SET (soft)
INSTANCE_ARN                      #arn:aws:cloudformation:ACCOUNT_ID:REGION:stackset-target/SET_MID/ACCOUNT_ID|ORG_ROOT_ID|ORG_UNIT_ID
INSTANCE.StackSetId               #SET_MID
INSTANCE.StackSetName             #'SET'
INSTANCE.StackId                  #STACK_MID
INSTANCE.LastOperationId          #'OP'

INSTANCE.Status                   #STR among:
                                  #  - CURRENT
                                  #  - OUTDATED:
                                  #     - last create|update on STACK|SET failed
                                  #     - other INSTANCEs were updated (due to REGION|ACCOUNT filtering during update) but not current one
                                  #  - INOPERABLE: INSTANCE deletion failed
INSTANCE.StatusReason             #STR
INSTANCE.StackInstanceStatus      #STR among:
 .DetailedStatus                  #  - PENDING: OP starting
                                  #  - RUNNING: ongoing OP
                                  #  - SUCCEEDED, CANCELLED, FAILED: OP finished
                                  #  - INOPERABLE: INSTANCE deletion failed
                                  #  - SKIPPED_SUSPENDED_ACCOUNT: ACCOUNT was suspended

INSTANCE.Filters                  #INSTANCE_FILTER_ARR
                                  #Max 3 items
INSTANCE_FILTER.Name              #'PROP', for INSTANCE.PROP
                                  #Can be 'LAST_OPERATION_ID', 'DETAILED_STATUS' or 'DRIFT_STATUS'
INSTANCE_FILTER.Values            #STR. Max 128 chars


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:         SET OPERATION         :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


ListStackSetOperations()          #Req: OP
                                  #  - only StackSetName, CallAs
                                  #Res: Summaries OP_ARR
                                  #  - no StackSetName, CallAs
                                  #  - no AdministrationRoleARN, DeploymentTargets, ExecutionRoleName,
                                  #    RetainStacks, StackSetDriftDetectionDetails, StackSetId
                                  #  - no Accounts, Regions
DescribeStackSetOperation()       #Req: OP
                                  #  - only OperationId, StackSetName, CallAs
                                  #Res: StackSetOperation OP
                                  #  - no StackSetName, CallAs
                                  #  - no Accounts, Regions
ListStackSetOperationResults()    #Req: OP
                                  #  - only OperationId, StackSetName, CallAs
                                  #  - only one with Filters
                                  #Res: OP_RES
StopStackSetOperation()           #Req: OP
                                  #  - only OperationId, StackSetName, CallAs
                                  #Res: empty

OP                                #Async operation on a SET|INSTANCE
                                  #Max 1e4 at a given time (soft)
                                  #Max 1e4 INSTANCEs in an OP at a given time (soft)
OP.OperationId                    #'OP'. Must be [[:alnum:]-], max 128 chars
OP.Action                         #One of:
                                  #  - 'CREATE'
                                  #  - 'UPDATE'
                                  #  - 'DELETE'
                                  #  - 'DETECT_DRIFT'
OP.CreationTimestamp              #DATE
OP.EndTimestamp                   #DATE

OP.Status                         #STR among:
                                  #  - QUEUED: only with AUTODEPLOY
                                  #  - RUNNING
                                  #  - SUCCEEDED, FAILED
                                  #  - STOPPING, STOPPED
OP.StatusReason                   #STR
OP.StatusDetails
 .FailedStackInstancesCount       #NUM of INSTANCEs that failed

OP_RES.Status                     #One of:
                                  #  - PENDING: like OP.Status QUEUED
                                  #  - RUNNING, SUCCEEDED, FAILED: like OP.Status
                                  #  - CANCELLED: like OP.Status STOPPED, or when canceled due to SET_PREF.FailureToleranceCount
OP_RES.StatusReason               #STR

OP.Filters                        #SET_FILTER_ARR
                                  #Max 1 item
SET_FILTER.Name                   #Always 'OPERATION_RESULT_STATUS', i.e. filter by OP_RES.Status
SET_FILTER.Values                 #STR_ARR

OP|INSTANCE.OperationPreferences  #SET_PREF
SET_PREF.FailureToleranceCount    #NUM (def: 0). If >NUM INSTANCEs fail per REGION, cancel OP (for all REGIONs).
SET_PREF.MaxConcurrentCount       #Max NUM of INSTANCEs to operate on at once
                                  #Def: 1, i.e. serial
                                  #Max: FailureToleranceCount + 1
SET_PREF
 .FailureTolerancePercentage
 |MaxConcurrentPercentage         #NUM. Same but as percentage
SET_PREF.RegionConcurrencyType    #'SEQUENTIAL' (def) or 'PARALLEL'
                                  #Whether to run one REGION at a time or not, for a given OP
SET_PREF.RegionOrder              #'REGION'_ARR. Order of REGIONs, when RegionConcurrencyType 'SEQUENTIAL'
                                  #Def: no order

SET.ManagedExecution.Active       #BOOL (def: false). Whether to run multiple OPs concurrently, except when depend on each other

OP.RetainStacks                   #BOOL (def: false). Do not delete the STACK when removing its INSTANCE
                                  #Only with Action 'DELETE'


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:       SET ACCOUNT GATE        :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


OP_RES.AccountGateResult          #GATE_RES
                                  #Use a Lambda FUNC to validate that an INSTANCE can run a given OP
                                  #Meant to ensure it is in a stable state (e.g. no ongoing CloudWatch ALARMs) before deploying to it
GATE_RES.Status                   #Can be:
                                  #  - 'SUCCEEDED'
                                  #  - 'FAILED'
                                  #  - 'SKIPPED' due to one of:
                                  #     - no Lambda FUNC
                                  #     - missing permissions
                                  #     - OP is noop
GATE_RES.StatusReason             #STR

AWSCloudFormationStackSet         #Must be Lambda 'FUNC' name
 AccountGate                      #SET's execution ROLE and target ACCOUNT must be allowed to lambda:InvokeFunction

REQ                               #Could not find documentation for it
RES.Status                        #'SUCCEEDED|FAIL'


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:           DRIFT SET           :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


DetectStackSetDrift()             #Req: SET
                                  #  - only StackSetName
                                  #  - also OP: OperationId, CallAs, OperationPreferences
                                  #Res: OP
                                  #  - only OperationId

SET|OP                            #SET_DRIFT
 .StackSetDriftDetectionDetails   #Current|last drift, i.e. difference between TEMPLATE|PARAMVALs and actual provisioning, for a SET
                                  #Not all RESTYPEs can have their drift detected (see online doc for list)
                                  #Not performed on:
                                  #  - nested STACKs
                                  #  - some RESPROPs hard to compare, e.g. Lambda FUNCTION.Code
                                  #  - some secret RESPROPs, e.g. IAM LOGIN_PROFILE.Password
                                  #Sometimes drift but actually equivalent, e.g.:
                                  #  - RESPROP default values vs undefined
                                  #  - '1024MB' vs '1GB'
                                  #Requires PACTIONs cloudformation:DetectStackSet|Stack|StackResourceDrift|BatchDescribeTypeConfigurations

SET_DRIFT.DriftDetectionStatus    #One of:
                                  #  - IN_PROGRESS
                                  #  - STOPPED: with StopStackSetOperation()
                                  #  - COMPLETED: failed on no INSTANCE
                                  #  - PARTIAL_SUCCESS: failed on some INSTANCEs but < SET_PREF.FailureToleranceCount
                                  #  - FAILED: failed on some INSTANCEs and >= SET_PREF.FailureToleranceCount
SET[_DETECTION]
 .LastDriftCheckTimestamp         #DATE
SET[_DETECTION].DriftStatus       #One of:
                                  #  - 'IN_SYNC': no drift
                                  #  - 'DRIFTED': drift in >=1 INSTANCE
                                  #  - 'NOT_CHECKED': no drift detection yet, or RESTYPE does not support it

SET_DRIFT.TotalStackInstancesCount#NUM of INSTANCEs
SET_DRIFT
 .InSyncStackInstancesCount       #NUM of INSTANCEs with DriftStatus 'IN_SYNC'
SET_DRIFT
 .DriftedStackInstancesCount      #NUM of INSTANCEs with DriftStatus 'DRIFTED'
SET_DRIFT
 .InProgressStackInstancesCount   #NUM of INSTANCEs with ongoing drift detection
SET_DRIFT
 .FailedStackInstancesCount       #NUM of INSTANCEs with failed drift detection


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:          DRIFT STACK          :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


DetectStackDrift()                #Req: STACK_DRIFT
                                  #  - only StackId -> StackName
                                  #  - only one with LogicalResourceIds
                                  #Res: STACK_DRIFT
                                  #  - only StackDriftDetectionId
DescribeStackDrift                #Req: STACK_DRIFT
 DetectionStatus()                #  - only StackDriftDetectionId
                                  #Res: STACK_DRIFT

STACK.DriftInformation            #STACK_DRIFT
                                  #  - only Timestamp -> LastCheckTimestamp, StackDriftStatus
                                  #Like SET_DRIFT but for a single STACK
                                  #Requires PACTIONs cloudformation:DetectStack|StackResourceDrift|BatchDescribeTypeConfigurations

STACK_DRIFT.Timestamp
INSTANCE.LastDriftCheckTimestamp  #DATE
STACK_DRIFT.StackDriftStatus      #One of:
INSTANCE.DriftStatus              #  - 'IN_SYNC': no drift
                                  #  - 'DRIFTED': drift in >=1 RESOURCEs
                                  #  - 'NOT_CHECKED': no drift detection yet, or RESTYPE does not support it

STACK_DRIFT                       #NUM of RESOURCEs with drift
 .DriftedStackResourceCount       #null if no drift detection yet

STACK_DRIFT.StackDriftDetectionId #STACK_DRIFT_MID
STACK_DRIFT.StackId               #STACK_MID
STACK_DRIFT.LogicalResourceIds    #'RESOURCE'_ARR (def: all)
                                  #Max 200 items

STACK_DRIFT.DetectionStatus       #One of 'DETECTION_IN_PROGRESS', 'DETECTION_COMPLETE', 'DETECTION_FAILED'
STACK_DRIFT.DetectionStatusReason #STR


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:        DRIFT RESOURCE         :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


DetectStackResourceDrift()        #Req: RESOURCE_DRIFT
                                  #  - only LogicalResourceId, StackId -> StackName
                                  #Res: StackResourceDrift RESOURCE_DRIFT
DescribeStackResourceDrifts()     #Req: RESOURCE_DRIFT
                                  #  - only StackResourceDriftStatus STR -> StackResourceDriftStatusFilters STR_ARR
                                  #  - only StackId -> StackName
                                  #Res: StackResourceDrifts RESOURCE_DRIFT_ARR
ListStackInstanceResourceDrifts() #Req: RESOURCE_DRIFT
                                  #  - only StackResourceDriftStatus STR -> StackResourceDriftStatusFilters STR_ARR
                                  #  - only StackId -> StackName
                                  #  - also INSTANCE: StackInstanceAccount, StackInstanceRegion
                                  #  - also OP: OperationId, CallAs
                                  #Res: Summaries RESOURCE_DRIFT_ARR
                                  #  - no ActualProperties, ExpectedProperties, ModuleInfo

STACK_RESOURCE.DriftInformation   #RESOURCE_DRIFT
                                  #  - only Timestamp -> LastCheckTimestamp, StackResourceDriftStatus
                                  #Like STACK_DRIFT, but for a single RESOURCE
                                  #Requires PACTIONs cloudformation:DetectStackResourceDrift|BatchDescribeTypeConfigurations

RESOURCE_DRIFT.Timestamp          #DATE
RESOURCE_DRIFT                    #One of:
 .StackResourceDriftStatus        #  - 'IN_SYNC': no drift
                                  #  - 'DELETED': drift (deleted RESOURCE)
                                  #  - 'MODIFIED': drift (others)

RESOURCE_DRIFT.LogicalResourceId
 |PhysicalResourceId|ResourceType
 |StackId|ModuleInfo              #Like STACK_RESOURCE.*
RESOURCE_DRIFT                    #RESID_CONTEXT_ARR. Equivalent to RESOURCE.PhysicalResourceId
 .PhysicalResourceIdContext       #Max 5 items
RESID_CONTEXT.Key                 #'RESPROP'
RESID_CONTEXT.Value               #'VAL'

RESOURCE_DRIFT.ActualProperties   #'OBJ_JSON' of RESPROPs actually used
                                  #Not with StackResourceDriftStatus 'DELETED'
RESOURCE_DRIFT.ExpectedProperties #'OBJ_JSON' of RESPROPs defined in TEMPLATE
                                  #Not with StackResourceDriftStatus 'DELETED'
                                  #Same as ActualProperties unless StackResourceDriftStatus 'MODIFIED'
RESOURCE_DRIFT.PropertyDifferences#RESPROP_DIFF_ARR
                                  #Only with StackResourceDriftStatus 'MODIFIED'
RESPROP_DIFF.PropertyPath         #'VARR' as JSON path
RESPROP_DIFF.ActualValue          #'VAL'
RESPROP_DIFF.ExpectedValue        #'VAL'
RESPROP_DIFF.DifferenceType       #One of:
                                  #  - 'ADD': to an ARR value
                                  #  - 'REMOVE': removed RESPROP
                                  #  - 'NOT_EQUAL': others


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:         MACRO CREATE          :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


AWS::CloudFormation::Macro        #Lambda FUNC transforming a TEMPLATE
                                  #Available for use by any STACK in current ACCOUNT
                                  #Declared|managed by the MACRO provider, not users
                                  #Applied during STACK create|update
                                  #Performed before RFUNCs
                                  #  - i.e. response can include RFUNCs (except Fn::ImportValue)
                                  #  - but cannot include other MACROs
                                  #Cannot be used with PermissionModel 'SERVICE_MANAGED'
                                  #Following are the RESPROPs
MACRO.Name                        #'MACRO'
MACRO.Description                 #STR

MACRO.LogGroupName                #CloudWatch 'LOG_GROUP'
                                  #Sends error logs
MACRO.LogRoleARN                  #ROLE_ARN

MACRO.FunctionName                #Lambda FUNC_ARN performing the macro
                                  #Users must have permissions to execute it
                                  #  - i.e. if user is other ACCOUNT, must setup cross-account permission with Lambda
REQ.transformId                   #'MACRO'
REQ.region                        #'REGION'
REQ.accountId                     #ACCOUNT_ID
REQ|RES.requestId                 #REQ_ID
REQ.templateParameterValues       #TEMPLATE.Parameters
REQ.params                        #{ Fn::Transform }'s OBJ.Parameters
                                  #Cannot include other RFUNCs
                                  #Not defined with TEMPLATE.Transform

REQ|RES.fragment                  #OBJ. With:
                                  #  - TEMPLATE.Transform: whole TEMPLATE
                                  #  - { Fn::Transform }: sibling nodes, excluding Fn::Transform itself
RES.status                        #'success|failure'
RES.errorMessage                  #'ERROR'


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:           MACRO USE           :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


TEMPLATE.Transform                #'MACRO'|MACRO[_ARR] to apply to whole TEMPLATE
STACK_TEMPLATE.DeclaredTransforms #Evaluated in order, and after any Fn::Transform
                                  #  - AWS managed TRANSFORMs should be run after custom MACROs
                                  #  - AWS::LanguageExtensions should be before AWS::Serverless
TRANSFORM_ARN                     #'arn:aws:cloudformation:REGION:aws:transform/MACRO'

{ Fn::Transform: OBJ }            #Apply MACRO to part of TEMPLATE
OBJ.Name                          #'MACRO'
OBJ.Parameters                    #OBJ2

STACK_TEMPLATE.StagesAvailable    #STR_ARR among:
                                  #  - 'Original': before MACRO
                                  #  - 'Processed': after MACRO

Capabilities                      #Required when using MACROs and either:
 CAPABILITY_AUTO_EXPAND           #  - updating with UpdateStack(), as opposed to ExecuteChangeSet()
                                  #  - using nested STACKs (in which case UpdateStack() must be used)


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:        MACRO TRANSFORM        :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


TRANSFORM ==>                     #AWS managed MACROs

AWS::LanguageExtensions           #Allows additional features, documented in this doc
                                  #Its features must be inside TEMPLATE.Resources|Conditions|Outputs
                                  #Cannot use SET|STACK|CHANGESET.UsePreviousTemplate

AWS::Include                      #Includes a fragment, as is
                                  #Must be an OBJ
INCLUDE.Location                  #S3_URL to 'JSON|YAML'
                                  #Can be either JSON|YAML, regardless of current TEMPLATE
                                  #Cannot use !RFUNC shortcut notation
                                  #Can use `aws cloudformation package`
                                  #Cannot be inside TEMPLATE.Parameters


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:        CUSTOM RESOURCE        :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


CUSTOM_RESOURCE                   #Custom RESOURCE
Custom::CUSTOM                    #RESTYPE of a specific CUSTOM_RESOURCE
                                  #CUSTOM must be [[:alnum:]-_@], max 60 chars
AWS::CloudFormation
 ::CustomResource                 #RESTYPE of any CUSTOM_RESOURCE

RESPROP                           #SNS_TOPIC_ARN|LAMBDA_FUNC_ARN
 CUSTOM_RESOURCE.ServiceToken     #Called on RESOURCE create|update|delete, with REQ_PAYLOAD
REQ_PAYLOAD.ServiceToken          #Uses Lambda InvocationType 'Event'
                                  #Must be in same REGION
REQ_PAYLOAD.RequestType           #'Create|Update|Delete'
REQ_PAYLOAD.ResourceProperties    #OBJ of RESPROPs. Can be anything
REQ_PAYLOAD.OldResourceProperties #Previous RESPROPs
                                  #Only if update
REQ_PAYLOAD.ResourceType          #'Custom:CUSTOM' or 'AWS::CloudFormation::CustomResource'
REQ|RES_PAYLOAD.LogicalResourceId #'RESOURCE'
                                  #Must be same in REQ|RES
REQ|RES_PAYLOAD.PhysicalResourceId#RESOURCE_MID
                                  #Not if create
                                  #If update and REQ sends a different one than RES, means an update has been done
REQ|RES_PAYLOAD.StackId           #STACK_ARN
                                  #Must be same in REQ|RES
REQ|RES_PAYLOAD.RequestId         #STR. Unique ID. Must be combined with StackId
                                  #Must be same in REQ|RES

REQ_PAYLOAD.ResponseURL           #URL. Should send RES_PAYLOAD to it
                                  #Pre-signed S3 PutObject() URL
                                  #1h timeout
RES_PAYLOAD                       #JSON. Max 4KB
RES_PAYLOAD.Status                #'SUCCESS|FAILED'
RES_PAYLOAD.Reason                #STR. Required if Status 'FAILED', optional if 'SUCCESS'
RES_PAYLOAD.Data                  #OBJ of RESATTRs. Can be anything
                                  #Not if delete. Not if Status 'FAILED'
RES_PAYLOAD.NoEcho                #BOOL (def: false). Like PARAM.* but for RES_PAYLOAD.Data
                                  #Not if delete. Not if Status 'FAILED'

LAMBDA ==>                        #REQ is REQ_PAYLOAD. No RES
cfn-response                      #Node module. Present only when FUNCTION was bundled as NEW_FUNC_CODE.ZipFile (not S3)
CFN_RESPONSE.send(REQ_PAYLOAD,
 CONTEXT, RES_PAYLOAD.Status,     #Call REQ_PAYLOAD.ResponseURL
 RES_PAYLOAD.Data                 #Def PhysicalResourceId: 'LOG_STREAM' (CONTEXT.logStreamName)
 [, RES_PAYLOAD.PhysicalResourceId#RES_PAYLOAD.Reason is always 'See the details in CloudWatch Log Stream: LOG_STREAM'
 [, RES_PAYLOAD.NoEcho]])         #Does not return PROMISE|callback for success|failure completion, but calls CONTEXT.done()

custom-resource-helper            #Project bootstrapping a CUSTOM_RESOURCE's Lambda FUNC (Python)
                                  #Not documented yet


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:        EXTENSIONS MAIN        :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


ListTypes()                       #Req: ETYPE
                                  #  - only DeprecatedStatus, Type, Visibility, ProvisioningType
                                  #  - TypeName|Category|PublisherId -> Filters.TypeNamePrefix|Category|PublisherId
                                  #Res: TypeSummaries ETYPE_ARR
                                  #  - only Arn -> TypeArn, TypeName, LastUpdated, Description, DefaultVersionId,
                                  #    PublicVersionNumber, LatestPublicVersion, IsActivated, OriginalTypeName,
                                  #    Type, PublisherId, PublisherIdentity, PublisherNumber
DescribeType()                    #Req: ETYPE
                                  #  - only Arn, TypeName, VersionId, PublicVersionNumber, Type, PublisherId
                                  #Res: ETYPE
                                  #  - no TypeNameAlias, VersionId, Category, PublisherName, PublisherStatus

ETYPE                             #Extension
ETYPE.Arn                         #ETYPE_ARN. arn:aws:cloudformation:REGION:ACCOUNT_ID:type/ETYPE_KIND/ETYPE
                                  #  - ETYPE uses - instead of ::
ETYPE.TypeName                    #'ETYPE'. RESTYPE of ETYPE. Must be 'ORG::SERVICE::NAME'
                                  #If MODULE: must append '::MODULE' (as is)
                                  #ORG|SERVICE|NAME must be min 2 chars, max 64 chars, [[::alnum::]]
                                  #ORG cannot be Custom, Dev, AWS|AWZN|Amazon or Alexa|ASK
ETYPE.TimeCreated                 #DATE
ETYPE.LastUpdated                 #DATE
                                  #null for public ETYPEs, unless ETYPE.AutoUpdate true

ETYPE.Description                 #STR. Max 1KB
ETYPE.DocumentationUrl            #'URL' to documentation. Max 4KB
ETYPE.SourceUrl                   #'URL' to source code. Max 4KB

ETYPE.Type                        #'ETYPE_KIND'. Can be: 'RESOURCE', 'MODULE', 'HOOK'

ETYPE.IsActivated                 #BOOL|null. Whether enabled
                                  #AWS managed ETYPEs are always enabled

ETYPE.Visibility                  #Either:
                                  #  - 'PUBLIC': public, enabled or not
                                  #  - 'PRIVATE': public|private, enabled
ETYPE.Category                    #Can be:
                                  #  - 'ACTIVATED': public, enabled
                                  #  - 'REGISTERED': private, enabled
                                  #  - 'THIRD_PARTY': either:
                                  #      - private, enabled
                                  #      - public, enabled or not, not AWS managed
                                  #  - 'AWS_TYPES': public, enabled, AWS managed

ETYPE.ExecutionRoleArn            #ROLE_ARN used when running|testing ETYPE
                                  #Must be assumable by Principal.Service:
                                  #  - resource|hooks: 'resources.cloudformation.amazonaws.com'
                                  #  - hooks: also 'hooks.cloudformation.amazonaws.com'
                                  #Must use COND_KEY SourceAccount ACCOUNT_ID, SourceArn ETYPE_ARN
                                  #Not needed for MODULEs
resource-role.yaml                #STACK TEMPLATE with STACK OUTPUT ExecutionRoleArn ROLE_ARN, used by PublishType()

ETYPE.LoggingConfig               #ETYPE_LOG. ETYPE logging
ETYPE_LOG.LogGroupName            #CloudWatch 'LOG_GROUP'
                                  #Def: '/ETYPE-stack-ResourceHandler-RANDOM'
ETYPE_LOG.LogRoleArn              #ROLE_ARN

AwsCommunity|AwsLabs::SERVICE::...#Third-party ETYPEs available in registry
                                  #Version 0.2.9
AwsSamples::...::...              #Same purpose

cfn ...                           #CLI for CloudFormation extensions
                                  #Separate from both `aws cloudformation` and cfn-* helpers
                                  #Installed using pip
                                  #Version 0.2.34
--verbose|-v                      #


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:      EXTENSIONS PRIVATE       :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


RegisterType()                    #Req: ETYPE
                                  #  - only TypeName, Type, ExecutionRoleArn, LoggingConfig
                                  #  - only one with SchemaHandlerPackage
                                  #  - also ClientRequestToken
                                  #Res: ETYPE_PVERSION
                                  #  - only RegistrationToken
SetTypeDefaultVersion()           #Req: ETYPE
                                  #  - only Arn, TypeName, Type, VersionId
                                  #Res: empty
                                  #Sets ETYPE.DefaultVersionId
ListTypeRegistrations()           #Req: ETYPE
                                  #  - only Arn -> TypeArn, TypeName, Type
                                  #  - also ETYPE_PVERSION: ProgressStatus -> RegistrationStatusFilter STR (def: 'IN_PROGRESS')
                                  #Res: RegistrationTokenList STR_ARR (ETYPE_PVERSION.RegistrationToken)
DescribeTypeRegistration()        #Req: ETYPE_PVERSION
                                  #  - only RegistrationToken
                                  #Res: ETYPE_PVERSION
                                  #  - no RegistrationToken
DeregisterType()                  #Req: ETYPE
                                  #  - only Arn, TypeName, Type, VersionId
                                  #Res: empty

ETYPE_PVERSION                    #Specific version of a private ETYPE
                                  #A private ETYPE is only available in current ACCOUNT|REGION
                                  #Enabling it is "registering"
                                  #WAIT (DescribeTypeRegistration()) TypeRegistrationComplete: when ETYPE_PVERSION.ProgressStatus COMPLETE
                                  #Max 50 enabled private ETYPEs (soft)
                                  #Max 50 per ETYPE (100 if public) (soft)
ETYPE_PVERSION.TypeVersionArn     #ETYPE_PRVERSION_ARN. arn:aws:cloudformation:REGION:ACCOUNT_ID:type/ETYPE_KIND/ETYPE/ETYPE_VERSION
                                  #Only with ProgressStatus 'COMPLETE'
ETYPE_PVERSION.RegistrationToken  #ETYPE_PVERSION_MID
ETYPE_PVERSION.Description        #STR

ETYPE_PVERSION.ProgressStatus     #'IN_PROGRESS', 'COMPLETE' or 'FAILED'
ETYPE.DeprecatedStatus            #'LIVE|DEPRECATED'. Whether de-registered
                                  #De-registering all ETYPE_PVERSION also de-registers the ETYPE itself
                                  #Can only de-register default version if all others are too

ETYPE_PVERSION.TypeArn            #ETYPE_ARN
                                  #Only with ProgressStatus 'COMPLETE'

ETYPE.VersionId                   #'ETYPE_VERSION'
ETYPE.DefaultVersionId            #Default ETYPE.VersionId
ETYPE.IsDefaultVersion            #BOOL

cfn submit                        #Call RegisterType()
                                  #Also calls cfn validate|test, then package|upload files
--set-default                     #Call SetTypeDefaultVersion()
--region
--endpoint-url                    #Like cfn invoke
--no-role
--role-arn                        #Like cfn test

cfn submit --dry-run
cfn package                       #Same as `cfn submit` but no RegisterType()

ETYPE.SchemaHandlerPackage        #S3_BUCKET_URL with all the code packaged by `cfn submit`
                                  #Max 4KB


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:      EXTENSIONS PUBLISH       :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


RegisterPublisher()               #Req: PUBLISHER
                                  #  - only AcceptTermsAndConditions, ConnectionArn
                                  #Res: PUBLISHER
                                  #  - only PublisherId
PublishType()                     #Req: ETYPE
                                  #  - only Arn, TypeName, Type, PublicVersionNumber
                                  #Res: ETYPE
                                  #  - only Arn -> PublicTypeArn
DescribePublisher()               #Req: PUBLISHER
                                  #  - only PublisherId
                                  #Res: PUBLISHER
                                  #  - no AcceptTermsAndConditions, ConnectionArn

PUBLISHING ==>                    #Make a private ETYPE_VERSION "public", i.e. available in any ACCOUNT, through CloudFormation registry
                                  #Only for current REGION
                                  #  - in order to target all REGIONs, should publish using a STACKSET,
                                  #    as opposed to manually calling the API
                                  #  - e.g. using RESTYPEs AWS::CloudFormation::Resource|Module|Hook[Default]Version|HookTypeConfig|PublicTypeVersion|Publisher

PUBLISHER                         #Entity that published a public ETYPE on the CloudFormation registry
                                  #Only for "third-party", i.e. not AWS managed ETYPEs
PUBLISHER|[REQUIRED_]ETYPE        #PUBLISHER_MID
 .PublisherId                     #With DescribePublisher(), def: one associated with current ACCOUNT
ETYPE.PublisherName               #'PUBLISHER'. Taken from PublisherProfile
PUBLISHER.PublisherStatus         #Always 'VERIFIED'

PUBLISHER.PublisherProfile        #'URL' (http[s]) to PUBLISHER's main page
PUBLISHER.IdentityProvider
ETYPE.PublisherIdentity           #'GitHub', 'Bitbucket' or 'AWS_Marketplace'. PublisherProfile's website
PUBLISHER.ConnectionArn           #CONNECTION_ARN. Must be created with CodeStar, towards PublisherProfile
                                  #Not if IdentityProvider 'AWS_Marketplace'

PUBLISHER.AcceptTermsAndConditions#BOOL (def: false). Must be true


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:      EXTENSIONS ACTIVATE      :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


ActivateType()                    #Req: ETYPE
                                  #  - only Arn -> PublicTypeArn, TypeName, TypeNameAlias, AutoUpdate,
                                  #    Type, ExecutionRoleArn, LoggingConfig, PublisherId
                                  #  - only one with MajorVersion, VersionBump
                                  #Res: ETYPE
                                  #  - only Arn
ListTypeVersions()                #Req: ETYPE
                                  #  - only Arn, TypeName, DeprecatedStatus, Type, PublisherId
                                  #Res: TypeVersionSummaries ETYPE_ARR
                                  #  - only Arn, TypeName, TimeCreated, Description, VersionId, IsDefaultVersion, PublicVersionNumber, Type
DeactivateType()                  #Req: ETYPE
                                  #  - only Arn, TypeName, Type
                                  #Res: empty

ACTIVATION ==>                    #[De]ActivateType() sets ETYPE.IsActivated
                                  #When activated, public ETYPE creates a copy as a private ETYPE in current ACCOUNT|REGION,
                                  #which is the one being used.
                                  #I.e. installs a public ETYPE

[REQUIRED_]ETYPE.TypeNameAlias    #ETYPE.TypeName of the public's ETYPE's private copy in this ACCOUNT|REGION
                                  #Def: same as original public ETYPE
                                  #Must be used to enable same ETYPE several times with different ETYPE_CONF
[REQUIRED_]ETYPE.OriginalTypeName #'ETYPE' of the original public ETYPE
ETYPE.OriginalTypeArn             #ETYPE_ARN of the original public ETYPE

ETYPE.PublicVersionNumber         #'X.Y.Z'. Current version used
                                  #With PublishType():
                                  #  - version to publish instead
                                  #  - def: minor bump from LatestPublicVersion
                                  #  - initial def (required): 1.0.0
                                  #Only if ETYPE enabled
                                  #With AWS managed ETYPEs: always use latest public version
ETYPE.LatestPublicVersion         #'X.Y.Z'. Latest PublicVersionNumber

ETYPE.MajorVersion                #NUM (def: latest). Major version to enable
                                  #The latest minor version of that major version is used
ETYPE.VersionBump                 #Upgrade to latest 'MAJOR|MINOR' version
                                  #Only if ETYPE already enabled
ETYPE.AutoUpdate                  #BOOL (def: true). Automatically enable new minor|patch versions


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:       EXTENSIONS SCHEMA       :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


ETYPE.Schema                      #'ESCHEMA_JSON'
                                  #Declarative description of ETYPE
                                  #ETYPE_KIND-specific
                                  #Located in root directory, named `schema.json`
                                  #Max 16MB

ESCHEMA.type
ESCHEMA.typeName
ESCHEMA.description
ESCHEMA.documentationUrl
ESCHEMA.sourceUrl                 #ETYPE.*

ESCHEMA.$schema|$id|$comment|title
 |definitions|required|allOf|anyOf
 |oneOf                           #Like JSON schema v7
JSON_SCHEMA                       #Like JSON schema v7 except:
                                  #  - nested OBJs must use $ref + definitions
                                  #     - can refer to RESTYPEs using https://schema.cloudformation.REGION.amazonaws.com/aws-SERVICE-RESOURCE.json
                                  #  - no dynamic props: additionalProperties always false, no additionalItems|propertyNames
                                  #  - no if|then|else|not
                                  #  - no readOnly|writeOnly|contentMediaType|contentEncoding
                                  #  - enum|const requires type
                                  #  - cannot use both ESCHEMA.properties and ESCHEMA.patternProperties
JSON_SCHEMA.insertionOrder        #BOOL (def: true). Whether ARR is ordered or not
JSON_SCHEMA.arrayType             #Whether ARR items are primitive types ('Standard', def) or OBJs ('AttributeList')

ESCHEMA_HANDLER|ESCHEMA_TAGGING   #Required 'PERMISSION'_ARR
 .permissions                     #PERMISSION can be either PACTION, or custom ones
                                  #Used to scaffold IAM POLICYs

cfn init                          #Scaffold new ETYPE's files: SCHEMA, dummy handlers|tests, build logic
--force                           #Allow overwriting

cfn validate                      #Validate ETYPE's SCHEMA against syntax errors
                                  #With MODULEs, also generates SCHEMA

cfn generate                      #Generate ETYPE's HANDLERs runtime code, based on SCHEMA
                                  #Also creates contract tests

cfn invoke HANDLER PATH           #Call an ETYPE's HANDLER
                                  #PATH is request as JSON
--function-name                   #Lambda 'FUNC' (def: 'TypeFunction')
--region                          #'REGION' (def: 'us-east-1')
--endpoint                        #Server URL (def: 'http://127.0.0.1:3001')
--max-reinvoke                    #NUM of retries (def: unlim)


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:       EXTENSIONS CONFIG       :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


SetTypeConfiguration()            #Req: ETYPE_CONF
                                  #  - Alias -> ConfigurationAlias
                                  #  - no Arn, LastUpdated, IsDefaultConfiguration
                                  #Res: ETYPE
                                  #  - only Arn -> ConfigurationArn
BatchDescribeTypeConfigurations() #Req: ETYPE_CONF
                                  #  - Arn|Alias -> TypeConfigurationArn|Alias
                                  #  - no Configuration, LastUpdated, IsDefaultConfiguration
                                  #Res: ETYPE_CONFS

ETYPE_CONFS.TypeConfigurations    #ETYPE_CONF_ARR (no Type)

ETYPE_CONFS                       #ETYPE_CONF_ARR. Same shape as BatchDescribeTypeConfigurations() request
 .UnprocessedTypeConfigurations   #ETYPE_CONF with invalid ETYPE_CONF.Configuration
ETYPE_CONFS.Errors                #ETYPE_CONF_ERROR_ARR. Errors in ETYPE_CONF.Configuration
ETYPE_CONF_ERROR.ErrorCode        #STR
ETYPE_CONF_ERROR.ErrorMessage     #'ERROR'. Max 255 chars
ETYPE_CONF_ERROR
 .TypeConfigurationIdentifier     #ETYPE_CONF. Same shape as BatchDescribeTypeConfigurations() request

ETYPE_CONF                        #Configuration passed to an ETYPE, for this ACCOUNT|REGION
                                  #Not with MODULEs
ETYPE_CONF.Arn                    #ETYPE_CONF_ARN. arn:aws:cloudformation:REGION:ACCOUNT_ID:type-configuration/ETYPE_CONF
ETYPE_CONF.Alias                  #'ETYPE_CONF'. Must be [[:alnum:]], max 256 chars
ETYPE_CONF.LastUpdated            #DATE|null

ETYPE_CONF.TypeArn|TypeName|Type  #Like ETYPE.*

ESCHEMA.typeConfiguration         #ETYPE_CONF_SCHEMA
ETYPE.ConfigurationSchema         #'ETYPE_CONF_SCHEMA_JSON'
                                  #Max 60KB
ETYPE_CONF_SCHEMA                 #Describe shape of ETYPE_CONF_DATA. Must describe each property
                                  #JSON_SCHEMA but:
                                  #  - top-level must have only properties|additionalProperties|required, description, allOf|anyOf|oneOf
                                  #  - can have deprecatedProperties (like ESCHEMA)
                                  #VARs must be [[:alnum:]], max 64 chars

ETYPE_CONF.Configuration          #'ETYPE_CONF_DATA_JSON' (def: '{}'). Data used for configuration
                                  #Should avoid secrets
                                  #Max 200KB
ETYPE_CONF.IsDefaultConfiguration #BOOL

HREQP_DATA.typeConfiguration      #ETYPE_CONF_DATA

cfn test --typeconfig PATH        #PATH to ETYPE_CONF_DATA_JSON
                                  #Def: ~/.cfn-cli/typeConfiguration.json


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:      EXTENSIONS TEST API      :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


TestType()                        #Req: ETYPE
                                  #  - Arn, TypeName, Type, VersionId
                                  #  - only one with LogDeliveryBucket
                                  #Res: ETYPE
                                  #  - Arn -> TypeVersionArn

CONTRACT TESTS ==>                #Automated tests performed by AWS
                                  #ETYPE_KIND-specific
                                  #Done on private ETYPEs before PublishType():
                                  #  - cannot PublishType() until ETYPE.TypeTestsStatus PASSED

ETYPE.TypeTestsStatus             #STR among:
                                  #  - NOT_TESTED
                                  #  - IN_PROGRESS
                                  #  - PASSED, FAILED
ETYPE.TypeTestsStatusDescription  #STR. Max 1KB


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:      EXTENSIONS TEST CLI      :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


cfn test                          #Run ETYPE's contract tests
                                  #Must first run `sam local start-lambda`
                                  #Uses AWS SAM under the hood
--function-name                   #Lambda 'FUNC' (def: 'TestEntrypoint')
--region
--endpoint                        #Like cfn invoke
--role-arn                        #ROLE_ARN (def: current)
                                  #To log to S3, must:
                                  #  - be allowed s3:PutObject and kms:Encrypt|Decrypt|ReEncrypt*|GenerateDataKey*|DescribeKey
                                  #  - be assumable by both 'cloudformation.amazonaws.com' and 'resources.cloudformation.amazonaws.com'
                                  #Def: automatically created as 'CloudFormationManagedUplo-LogAndMetricsDeliveryRol-RANDOM'
--enforce-timeout                 #NUM (in secs, def: 1m)
                                  #Always twice for CREATE|UPDATE|DELETE (as opposed to READ|LIST)
-- -k STR                         #Run only specific test. Same syntax as pytest -k
-- --tb=STR                       #Reporting. Same syntax as pytest

overrides.json                    #RESPROPs passed to contract tests
                                  #Is OBJ:
                                  #  - resource ETYPE: { CREATE: { RESPROP: 'VAL', ... } }
                                  #  - HOOK: { CREATE|UPDATE|DELETE_PRE_PROVISION: { RESTYPE: { [previous]resourceProperties: { RESVARR: 'VAL', ... }, } ... } }
                                  #Def: automatically generate VAL from its type defined in ESCHEMA
                                  #For both create|update, i.e. does not work for create-only properties
                                  #VAL can contain "{{OUTPUT}}" to inject STACK OUTPUTs
                                  #Can use #COMMENTs
inputs/inputs_NUM_HANDLER.json    #Same but can use multiple NUM. Also:
                                  #  - resource ETYPE: create|update
                                  #  - HOOK: pre_create|update|delete
                                  #Different OBJ shape: no upper level, since already in filename
inputs/inputs_NUM_invalid.json    #Same but for RESPROP values meant to fail


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:      EXTENSIONS TEST LOG      :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


ETYPE-ContractTests
 -ETYPE_PVERSION_MID              #LOG_GROUP logging HANDLER's output during contract tests

cloudformationmanageduploadinfrast
 -artifactbucket-RANDOM           #S3 BUCKET logging contract tests' output
CloudFormation/ContractTestResults
 /ETYPE/RANDOM.zip                #S3 OBJECT for the above

ETYPE.LogDeliveryBucket           #'S3_BUCKET' with both HANDLER's and contract tests' output


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:   EXTENSIONS RESOURCE MAIN    :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


EXTENSIONS RESOURCE ==>           #Like CUSTOM_RESOURCE, but more features
                                  #Core AWS CloudFormation resources are actually resource ETYPEs
                                  #  - can see their code (Java) in https://github.com/aws-cloudformation/aws-cloudformation-resource-provider-SERVICE
                                  #Meant for logic which cannot be expressed with existing resources
                                  #  - for bundling several resources together: prefer using a CDK Constructs library instead, simpler and better fit
                                 ##With Pulumi, can use RTYPE 'aws-native:ExtensionResource' with RPROPs: type 'ETYPE', properties RESPROPs

ETYPE.ProvisioningType            #Which write handlers are available, among:
                                  #  - 'NON_PROVISIONABLE': none
                                  #     - cannot create RESOURCE, import nor detect drift
                                  #  - 'IMMUTABLE': create|delete
                                  #     - updates must replace RESOURCE
                                  #  - 'FULLY_MUTABLE' (def): create|update|delete

RESOURCE.Version                  #'ETYPE_VERSION'


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:  EXTENSIONS RESOURCE SCHEMA   :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


ESCHEMA                           #Changes tracked in repository cloudformation-resource-schema (version 2.0.9)

cfn-rps-lint                     ##VSCode extension linting ESCHEMA (version 0.1.10)

resource-schema-guard-rail       ##CLI linting ESCHEMA using cfn-guard (version 0.0.8)
                                 ##Not documented yet because beta

ESCHEMA.properties.RESPROP|RESATTR#JSON_SCHEMA describing RESPROP|RESATTR

RESVARR                           #'VARR' to RESPROP|RESATTR property, as JSON pointer
ESCHEMA.readOnlyProperties        #'RESVARR'_ARR that are RESATTRs
ESCHEMA.writeOnlyProperties       #'RESVARR'_ARR that are write-only
ESCHEMA.createOnlyProperties      #'RESVARR'_ARR that are create-only
ESCHEMA                           #'RESVARR'_ARR that are create-only but only under specific conditions
 .conditionalCreateOnlyProperties #If update fails, should retry with a replacement instead
ESCHEMA.nonPublicProperties       #'RESVARR'_ARR that are hidden
ESCHEMA.nonPublicDefinitions      #Same but for JSON schema definitions
ESCHEMA.deprecatedProperties      #'RESVARR'_ARR that are deprecated
ESCHEMA.primaryIdentifier         #'RESVARR'_ARR that identify the resource, e.g. with READ|DELETE
                                  #If several items, composite key
                                  #Must be returned by READ|LIST
ESCHEMA.additionalIdentifiers     #'RESVARR'_ARR_ARR of alternative identifiers

ESCHEMA.propertyTransform.RESVARR #STR. JSONata expression describing how RESPROP is transformed|normalized
                                  #Can specify several using '... $OR ...'
                                  #That value is used in drift detection
                                  #Def: use the input value

ESCHEMA.replacementStrategy       #When replacing, whether should wait for creation to delete
                                  #Either: 'create_then_delete' (def) or 'delete_then_create'

ESCHEMA.resourceLink              #ESCHEMA_RLINK. Resource's main URI
ESCHEMA_RLINK.templateUri         #HTTPS 'URI', either absolute, or relative to AWS console URI
ESCHEMA_RLINK.mappings.VAR        #'RESVARR'. URI variables to insert as ${VAR} in templateUri
                                  #VAR must be [[:alnum:]], max 64 chars
                                  #Builtin: awsRegion
ESCHEMA_RLINK.$comment            #STR. Description


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:   EXTENSIONS RESOURCE TAGS    :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


ESCHEMA.tagging                   #ESCHEMA_TAGGING
ESCHEMA_TAGGING.taggable          #BOOL (def: true). Whether can use TAGs
ESCHEMA_TAGGING.tagOnCreate       #BOOL (def: true). Whether can use TAGs on Create*()
ESCHEMA_TAGGING.tagUpdatable      #BOOL (def: true). Whether TAGs are readonly
ESCHEMA_TAGGING
 .cloudFormationSystemTags        #BOOL (def: true). Whether support aws:cloudformation:* TAGs
ESCHEMA_TAGGING.tagProperty       #'RESVARR' with TAGs (def: '/properties/Tags')

HREQP_DATA|HREQH.systemTags       #OBJ of aws:cloudformation:* TAGs
HREQP_DATA.[previous]stackTags
HREQH.desired|previousResourceTags#OBJ of other TAGs


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:  EXTENSIONS RESOURCE HANDLER  :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


ESCHEMA.handlers.HANDLER          #ESCHEMA_HANDLER. CRUD logic function
                                  #HANDLER can be create|update|list|read|delete
                                  #update cannot be upsert

ESCHEMA_HANDLER.handlerSchema     #JSON_SCHEMA describing the items being returned
                                  #Top-level can only use properties|required and allOf|anyOf|oneOf
                                  #Only with 'list' HANDLER

ESCHEMA_HANDLER.timeoutInMinutes  #NUM (def: 2h, min: 2m, max: 1.5d). HANDLER's timeout
                                  #For create|update|delete only. Always 30s for read|list


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:   EXTENSIONS RESOURCE LOGS    :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


AWS/CloudFormation/ETYPE/*        #CloudWatch METRICs published by ETYPE handlers
                                  #ETYPE is /-separated instead of ::
                                  #DVARs:
                                  #  - DimensionKeyResourceType 'ETYPE'
                                  #  - DimensionKeyActionType 'HANDLER' or 'ProviderLogDelivery' (S3|CloudWatch logs error)
AWS/CloudFormation/ETYPE/
 HandlerInvocationCount           #NUM of ETYPE handler calls
AWS/CloudFormation/ETYPE/         #NUM of failed ETYPE handler calls
 HandlerException                 #Has DVAR DimensionKeyExceptionType: HRES.HandlerErrorCode (def: ERROR.name)
AWS/CloudFormation/ETYPE/
 HandlerInvocationDuration        #NUM. ETYPE handler duration

LOGGING ==>                       #Debug logs are sent to: console, S3, CloudWatch logs
                                  #Debug logs of logging itself (S3, CloudWatch logs, METRICs) are only sent to console
HREQP_DATA.providerLogGroupName   #'LOG_GROUP'
S3 LOGGING ==>                    #BUCKET: 'LOG_GROUP-ACCOUNT_ID'
                                  #OBJECT: 'STACK_MID/RESOURCE/YYYYMMDDTHHMMSSSSSZ-RANDOM.log'
                                  #Requires PACTIONs:
                                  #  - s3:CreateBucket (unless already exists)
                                  #  - s3:PutObject|GetObject|ListBucket
CLOUDWATCH LOGS ==>               #LOG_GROUP: 'LOG_GROUP'
                                  #LOG_STREAM: 'STACK_MID/RESOURCE'
                                  #Requires PACTIONs:
                                  #  - logs:CreateLogGroup|CreateLogStream (unless already exists)
                                  #  - logs:PutLogEvents|DescribeLogGroups|DescribeLogStreams


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:   EXTENSIONS RESOURCE CODE    :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


PLUGIN ==>                        #TypeScript|Python|Go|Java binary used by `cfn init` for language-specific code generation

FRAMEWORK ==>                     #TypeScript|Python|Go|Java client library to use in HANDLERs

LAMBDA FUNCTIONS ==>              #A resource ETYPE is mostly a Lambda FUNC
                                  #Its required files are packaged by `cfn submit`
                                  #Each framework has its own convention on how the files should be setup

PRODUCTION VS TEST ==>            #2 Lambda FUNCs are exported:
                                  #  - production: HREQP input
                                  #  - debugging: HREQD input
                                  #     - use empty ETYPE_CONF_DATA
                                  #     - no remote logging|METRICs
                                  #Both return HRES (also called "progress event")

TestEntrypoint                    #Debugging Lambda 'FUNC'
                                  #Can be executed with `sam local invoke -d PORT --event PATH_TO_HREQD.json`
                                  #Must run `sam local start-lambda` first


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:  EXTENSIONS RESOURCE REQUEST  :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


HREQP|HREQD.action                #'HANDLER'
HREQP.resourceType                #'ETYPE'
HREQP.resourceTypeVersion         #'ETYPE_VERSION'

HREQP.stackId                     #STACK_MID
HREQP|HREQH.awsAccountId          #ACCOUNT_ID
HREQP|HREQD|HREQH.region          #'REGION'
HREQH.awsPartition                #'PARTITION'

HREQP.requestData                 #HREQP_DATA
HREQP_DATA.logicalResourceId
HREQH.logicalResourceIdentifier   #'RESOURCE'
HREQP_DATA                        #RESPROP|RESATTRs OBJ
 .[previous]resourceProperties    #With create|update: full
HREQH                             #With read|delete: only primaryIdentifier|additionalIdentifiers
 .previous|desiredResourceState   #With list: empty

HREQP_DATA.callerCredentials      #CREDENTIALS used by ETYPE's main logic, i.e. HFUNC
HREQD.credentials
HREQP_DATA.providerCredentials    #CREDENTIALS used by ETYPE's framework logic, i.e. METRICs and logging (S3, CloudWatch logs)
CREDENTIALS                       #OBJ: accessKeyId STR, secretAccessKey STR, sessionToken STR

HREQP.requestContext              #HREQP_CONTEXT
HREQP_CONTEXT.invocation          #NUM
HREQP_CONTEXT
 .cloudWatchEventsRuleName        #STR
HREQP_CONTEXT
 .cloudWatchEventsTargetId        #STR


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==: EXTENSIONS RESOURCE RESPONSE  :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


HRES                              #Return value of HANDLERs. Also called `ProgressEvent`
HRES.ResourceModel                #'OBJ_JSON' of RESOURCE
HRES.ResourceModels               #Same but as ARR, for list HANDLER

HRES.OperationStatus              #'PENDING', 'IN_PROGRESS' or 'SUCCESS|FAILED'
HRES.HandlerErrorCode             #STR. Required if CurrentOperationStatus 'FAILED', optional if 'IN_PROGRESS'
                                  #One of: AccessDenied AlreadyExists GeneralServiceException InternalFailure
                                  # InvalidCredentials InvalidRequest NetworkFailure NotFound NotStabilized
                                  # NotUpdatable ResourceConflict ServiceInternalError ServiceLimitExceeded Throttling
                                  #See online doc for description
HRES.Message                      #STR explaining OperationStatus

HREQP|HREQH.nextToken             #STR. Pagination token, for list HANDLER. null if no more
HRES.NextToken                    #Pagination is handled by cfn-cli

HREQP[_CONTEXT]|HREQD
 .callbackContext                 #STR. Information meant to be passed to HREQP|HREQD of subsequent run
HRES.CallbackContext              #Only if OperationStatus 'IN_PROGRESS'
HRES.CallbackDelaySeconds         #'NUM'. Meant when HANDLER is a long operation
                                  #Make cfn-cli call `read` HANDLER when OperationStatus is now expected to be 'SUCCESS'
                                  #This final state is called "desired-state stabilization"
                                  #For create|update, must also only be SUCCESS when satisfy "runtime-state stabilization"
                                  #  - i.e. finished create|update and user can interact with RESOURCE
                                  #  - also create-only RESPROPs cannot be updated anymore, etc.
                                  #Can be 0 (def) to indicate none.

RecordHandlerProgress()           #Req: HANDLER_PROGRESS
                                  #Res: empty
HREQP.responseEndpoint            #'URL' of RecordHandlerProgress()

HANDLER_PROGRESS                  #Communicates HRES to API
                                  #Done by cfn-cli, i.e. should not be used directly
HANDLER_PROGRESS.ResourceModel
 |[Current]OperationStatus
 |ErrorCode|StatusMessage         #Like HRES.*
HREQP.bearerToken
HREQH.clientRequestToken
HANDLER_PROGRESS.BearerToken      #STR. Token to connect request|response
HANDLER_PROGRESS
 .ClientRequestToken              #STR. Idempotence


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:EXTENSIONS RESOURCE TYPESCRIPT :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


cloudformation-cli-typescript
 -plugin                          #Version 1.0.3 (plugin), 1.0.5 (framework|lib)

EXPORT                            #Main file must export:
                                  #  - resource BASE_RESOURCE
                                  #  - entrypoint|testEntrypoint BASE_RESOURCE.*
BASE_RESOURCE.entrypoint          #Lambda FUNC's production entrypoint
 (HREQP, NCONTEXT)->>HRESPD       #NCONTEXT is Lambda context (see its doc)
BASE_RESOURCE.testEntrypoint
 (HREQD, NCONTEXT)->>HRESPD       #Lambda FUNC's debugging entrypoint

BaseResource                      #Base class for RESOURCEs
new BaseResource(...RARGS)        #
RARGS[0]                          #'ETYPE'
RARGS[1]                          #RESOURCE's BaseModel
RARGS[2]                          #Used to create pools of AWS CLIENTs
                                  #Not documented yet, i.e. must set to null
RARGS[3]                          #OBJ with key 'HANDLER', value HFUNC
                                  #Alternatively, can decorate BASE_RESOURCE's methods that are HFUNC with @handlerEvent('HANDLER')
RARGS[4]                          #ETYPE_CONF_DATA's BaseModel

HFUNC                             #HANDLER's method
                                  #Is FUNC(...HARGS)->>HRESPD
HARGS[0]                          #HCLIENTS
HARGS[1]                          #HREQH. Simplification of HREQP
                                  #If debugging entrypoint, should pass it as HREQD.request HREQH
HARGS[2]                          #HREQP|HREQD.callbackContext
HARGS[3]                          #HLOGGER
HARGS[4]                          #ETYPE_CONF_DATA

HCLIENTS.client                   #AWS JavaScript CLIENT (see its doc)
 ('SERVICE'[, COPTS])->CLIENT     #Currently outdated (v2)
CLIENT.makeRequestPromise
 ('ACTION'[,PARAMS[,HEADERS_OBJ]])
 ->>RESP                          #Calls ACTION, but taking into account RARGS[2] pooling

HLOGGER.log(STR[, VAL...])        #Debug logging
                                  #VAL...: like Node util.format()

new ProgressEvent([OBJ])          #HRESPD. Child of BaseModel
HRESPD.*                          #HRES.* except:
                                  #  - camelCase
                                  #  - resourceModel[s] use BASE_MODEL
                                  #  - callbackContext is OBJ
ProgressEvent.success
 ([[BASE_MODEL[, OBJ]]])->HRESPD  #With: ResourceModel BASE_MODEL, OperationStatus SUCCESS, callbackContext OBJ
ProgressEvent.progress
 ([BASE_MODEL[, OBJ]])->HRESPD    #With: ResourceModel BASE_MODEL, OperationStatus IN_PROGRESS, callbackContext OBJ
ProgressEvent.failed
 (STR, STR2)->HRESPD              #With: OperationStatus FAILED, HandlerErrorCode STR, Message STR2
ProgressEvent.builder()->BUILDER
BUILDER.PROP(VAL)->BUILDER
BUILDER.build()->HRESPD           #With: PROP VAL, ...

new BaseModel([OBJ])              #Base class for many OBJs
                                  #OBJ.* is assigned
                                  #Mostly meant to convert from|to JavaScript|JSON
BASE_MODEL.toJSON()->OBJ          #
BASE_MODEL.serialize([BOOL])->OBJ #If BOOL true (def), removes null values
BaseModel.deserialize
 (OBJ)->BASE_MODEL                #
BaseModel.TYPE_NAME
BASE_MODEL.getTypeName()->STR     #'ETYPE'


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:  EXTENSIONS MODULE TEMPLATE   :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


EXTENSIONS MODULE ==>             #Similar to AWS::Include, but more features
                                  #I.e. meant for group of RESOURCEs
                                  #Can contain other MODULEs (max 3 depth levels)
                                  #Max 100 per ACCOUNT (soft)

fragments/FILE.json               #TEMPLATE_FRAGMENT, i.e. TEMPLATE declaring the MODULE
                                  #Must define TEMPLATE.Resources
                                  #Should not have sibling file. FILE is usually named `sample`

MACRO ==>                         #Works like a MACRO, i.e. expands to its child RESOURCEs during TEMPLATE processing
                                  #Since MACRO cannot include other MACROs:
                                  #  - MACROs cannot include MODULEs
                                  #  - MODULEs cannot include MACROs
                                  #When using SET|STACK|CHANGESET.UsePreviousTemplate, reverting to post-processed TEMPLATE, i.e. without MODULE

SELF-CONTAINED ==>                #Must be self-contained, i.e. isolate TEMPLATE_FRAGMENT from PARENT_TEMPLATE, except for MODULE parameters|outputs
                                  #MODULE cannot use:
                                  #  - nested STACK|SET
                                  #  (if public MODULE)
                                  #  - CUSTOM_RESOURCE
                                  #  (but its RESOURCEs can)
                                  #  - TAGs
                                  #  - RESOURCE.CreationPolicy STR, RESOURCE.UpdatePolicy STR, RESOURCE.UpdateReplacePolicy 'Snapshot'

MODULE PARAMETERS ==>             #Defined as TEMPLATE_FRAGMENT.Parameters
                                  #Passed as RESOURCE.Properties in PARENT_TEMPLATE (like RESPROPs)

MODULE OUTPUTS ==>                #TEMPLATE_FRAGMENT.Outputs become STACK OUTPUTs in PARENT_TEMPLATE
                                  #  - namespaced as 'MODULE_RESOURCE.OUTPUT'
                                  #But cannot use EXPORT and { Fn::ImportValue: 'EXPORT' }

RESOURCE.Metadata                 #The following must be specified if RESTYPE is not AWS managed, i.e. must be enabled
ETYPE.RequiredActivatedTypes      #REQUIRED_ETYPE_ARR. ETYPEs of all RESOURCEs not AWS managed
RESOURCE.Metadata.OriginalTypeName#'RESTYPE'
RESOURCE.Metadata.PublisherId
RESOURCE.Metadata
 .RegionalPublisherId.REGION      #PUBLISHER_MID
RESOURCE.Metadata
 .SupportMajorVersions
REQUIRED_ETYPE
 .SupportedMajorVersions          #NUM_ARR. Allowed major versions


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:   EXTENSIONS MODULE SCHEMA    :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


ESCHEMA.properties
 .Resources.RESOURCE              #JSON_SCHEMA. TEMPLATE.Resources

ESCHEMA.properties
 .Parameters.RESPROP              #JSON_SCHEMA. MODULE parameters

ESCHEMA.handlers.resolve          #ESCHEMA_HANDLER
                                  #Main HANDLER. Does not need any code logic

ESCHEMA_HANDLER.timeoutInMinutes
ESCHEMA.replacementStrategy       #Like resource ETYPE
ESCHEMA.moduleLink                #Like ESCHEMA.resourceLink


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:    EXTENSIONS MODULE USAGE    :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


USING MODULE ==>                  #Used like a normal RESOURCE

MODULE_RESOURCE[.]RESOURCE        #Must be used instead of 'RESOURCE' when it is inside a MODULE
MODULE_RESOURCE                   #MODULE's LogicalResourceId

STACK_RESOURCE.ModuleInfo         #Parent MODULE that contained this STACK_RESOURCE
MODULE.LogicalIdHierarchy         #'MODULE_RESOURCE/...'
MODULE.TypeHierarchy              #'MODULE_RESTYPE/...'


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:     EXTENSIONS HOOKS MAIN     :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


EXTENSIONS HOOK ==>               #Validation logic before RESOURCE create|update|delete
                                  #Java|Python, not TypeScript|Java
                                  #Max 100 per ACCOUNT

ESCHEMA.handlers.preHANDLER       #ESCHEMA_HANDLER
                                  #HANDLER can be Create|Update|Delete
                                  #30s timeout
ESCHEMA_HANDLER.targetNames       #'RESTYPE'_ARR. Can include * or ?

ESCHEMA.typeConfiguration         #Defines ETYPE_CONF_DATA.Properties.*, not ETYPE_CONF_DATA.*
ETYPE_CONF_DATA.Properties        #OBJ
ETYPE_CONF_DATA.TargetStacks      #'ALL|NONE'. Whether enabled
ETYPE_CONF_DATA.FailureMode       #'FAIL|WARN'. Whether failure stops provisioning

ETYPE_CONF_DATA.TargetFilters     #ETYPE_CONF_FILTERS. Filters when to use the HOOK
ETYPE_CONF_FILTERS.Filters        #ETYPE_CONF_FILTER_ARR. Union of filters
ETYPE_CONF_FILTER.Action          #'HANDLER' (def: any)
ETYPE_CONF_FILTER.TargetName      #'RESTYPE' (def: any). Can include * or ?
ETYPE_CONF_FILTER.InvocationPoint #Always 'PRE_PROVISION', i.e. always run before
ETYPE_CONF_FILTERS.Actions
 |TargetNames|InvocationPoints    #Same as ETYPE_CONF_FILTER.* but as ARR


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:     EXTENSIONS HOOKS LIST     :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


DescribeChangeSetHooks()          #Req: CHANGESET
                                  #  - only ChangeSetName, StackName
                                  #  - also RESCHANGE: LogicalResourceId
                                  #Res: CHANGESET
                                  #  - only ChangeSetId, ChangeSetName, StackId, StackName, Status
                                  #  - only one with Hooks
                                  #Paginates CHANGESET.Hooks

CHANGESET.Hooks                   #CHANGE_HOOK_ARR
CHANGE_HOOK.TypeName              #HOOK's 'ETYPE'
CHANGE_HOOK.TypeVersionId         #HOOK's 'ETYPE_VERSION'
CHANGE_HOOK
 .TypeConfigurationVersionId      #HOOK's 'ETYPE_CONF'
CHANGE_HOOK.FailureMode
CHANGE_HOOK.InvocationPoint       #ETYPE_CONF_DATA.**

CHANGE_HOOK.TargetDetails         #HOOK_DETAIL. RESOURCE targeted by the HOOK
HOOK_DETAIL.TargetType            #Always 'RESOURCE' (as is)
HOOK_DETAIL.ResourceTargetDetails #HOOK_RESDETAIL
HOOK_RESDETAIL
 .ResourceType|LogicalResourceId  #Like STACK_RESOURCE.*
HOOK_RESDETAIL.ResourceAction     #Like RESCHANGE.Action

CHANGE.HookInvocationCount        #NUM of HOOKs on that RESOURCE
                                  #null if none

EVENT.HookType                    #HOOK's 'ETYPE'
EVENT.HookFailureMode
EVENT.HookInvocationPoint         #ETYPE_CONF_DATA.**
EVENT.HookStatus                  #STR among:
                                  #  - HOOK_IN_PROGRESS
                                  #  - HOOK_COMPLETE_SUCCEEDED: HOOK returned success
                                  #  - HOOK_COMPLETE_FAILED: HOOK returned failure
                                  #  - HOOK_FAILED: exception in HOOK
EVENT.HookStatusReason            #STR. Max 1KB


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:     EXTENSIONS HOOKS CODE     :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


CODE ==>                          #Very similar to resource ETYPEs, except returns only status
                                  #Has same: plugin, framework, production|debugging lambda FUNC, metrics, logs

EXPORT                            #Like resource ETYPEs, except `resource` is named `hook` instead
                                  #Also resource-role.yaml is called hook-role.yaml

HREQD.credentials|request
 |callbackContext|region
HREQP.awsAccountId|stackId
 |requestData|requestContext
HREQP_CONTEXT
 .invocation|callbackContext
HREQHH.awsAccountId|stackId
HREQP_DATA.callerCredentials
 |providerCredentials
 |providerLogGroupName            #Like resource ETYPEs
HREQP|HREQH.clientRequestToken    #Like resource ETYPE bearerToken
HREQH.hookContext                 #HREQHH

HREQP|HREQHH.hookTypeName         #'ETYPE'
HREQP|HREQHH.hookTypeVersion      #'ETYPE_VERSION'
HREQP|HREQD|HREQHH
 .actionInvocationPoint           #'CREATE|UPDATE|DELETE_PRE_PROVISION'
HREQP_DATA|HREQHH.targetType      #Always 'RESOURCE' (as is)
HREQP_DATA|HREQHH.targetName      #'RESTYPE'
HREQP_DATA|HREQHH.targetLogicalId #'RESOURCE'
HREQP_DATA|HREQHH.targetModel     #RESPROP|RESATTRs OBJ
HREQD.typeConfiguration           #ETYPE_CONF
HREQP.hookModel                   #ETYPE_CONF's model
HREQP|HREQHH.changeSetId          #CHANGESET_MID

HRES                              #Like resource ETYPEs, except no resourceModel[s], nextToken
                                  #`status` is called `hookStatus`
                                  #Also has clientRequestToken STR

AwsCommunity::Lambda::Invoker    ##Single HOOK that calls other HOOKs
                                 ##HOOKs are registered as a DynamoDB TABLE
                                 ##  - set using ETYPE_CONF.RegistrationTableArn TABLE_ARN
                                 ##  - TABLE has one attribute lambda_arn FUNC_ARN
                                 ##Lambda FUNC is called with REQ:
                                 ##  - type_name 'RESTYPE'
                                 ##  - resource_properties RESPROPs
                                 ##  - operation 'create|update|delete'
                                 ##Must throw ERROR to fail
