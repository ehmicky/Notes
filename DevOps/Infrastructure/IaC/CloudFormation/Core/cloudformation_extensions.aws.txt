
                             
   CLOUDFORMATION_EXTENSIONS  
                             



VERSION ==>                       #Part of CloudFormation

SUMMARY ==>                       #Main: resource|module|hook, private|public, submit|publish, enable, AWS-managed vs third-party, role, logging, alias, main link
                                  #Version: deprecate, default|latest version, manual|auto update, publisher
                                  #Schema: init|generate, doc|source, handler permissions|invoke
                                  #Config: JSON schema, default
                                  #Test: API|CLI, contract, role, RESPROPs, logging
                                  #Resource: provisioning type, hidden|deprecated|id|transformed RESPROPs, replacement, tags, metrics, S3|CloudWatch logging
                                  #Resource handlers: plugin|framework, Lambda CRUD, production|test entrypoint, JSON schema, timeout, callback
                                  #Module: template, parameters, output
                                  #Hook: like resource, preCreate|Update|Delete, resource type filter, list


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:              API              :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


API ==>                           #Like CloudFormation (see its doc)

PAGINATION ==>                    #Like CloudFormation (see its doc)
                                  #No pagination: BatchDescribeTypeConfigurations()

PRICING ==>                       #Non-AWS managed ETYPEs:
                                  #  - 1$/1e3 HANDLER calls
                                  #     - free: 1e3 per month
                                  #  - 1$/3.5h HANDLER call duration
                                  #     - free: first 30s of each call
                                  #  - EC2 data transfer


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:             MAIN              :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


ListTypes()                       #Req: ETYPE
                                  #  - only DeprecatedStatus, Type, Visibility, ProvisioningType
                                  #  - TypeName|Category|PublisherId -> Filters.TypeNamePrefix|Category|PublisherId
                                  #Res: TypeSummaries ETYPE_ARR
                                  #  - only Arn -> TypeArn, TypeName, LastUpdated, Description, DefaultVersionId,
                                  #    PublicVersionNumber, LatestPublicVersion, IsActivated, OriginalTypeName,
                                  #    Type, PublisherId, PublisherIdentity, PublisherNumber
DescribeType()                    #Req: ETYPE
                                  #  - only Arn, TypeName, VersionId, PublicVersionNumber, Type, PublisherId
                                  #Res: ETYPE
                                  #  - no TypeNameAlias, VersionId, Category, PublisherName, PublisherStatus

ETYPE                             #Extension
ETYPE.Arn                         #ETYPE_ARN. arn:aws:cloudformation:REGION:ACCOUNT_ID:type/ETYPE_KIND/ETYPE
                                  #  - ETYPE uses - instead of ::
ETYPE.TypeName                    #'ETYPE'. RESTYPE of ETYPE. Must be 'ORG::SERVICE::NAME'
                                  #If MODULE: must append '::MODULE' (as is)
                                  #ORG|SERVICE|NAME must be min 2 chars, max 64 chars, [[::alnum::]]
                                  #ORG cannot be Custom, Dev, AWS|AWZN|Amazon or Alexa|ASK
ETYPE.TimeCreated                 #DATE
ETYPE.LastUpdated                 #DATE
                                  #null for public ETYPEs, unless ETYPE.AutoUpdate true

ETYPE.Description                 #STR. Max 1KB
ETYPE.DocumentationUrl            #'URL' to documentation. Max 4KB
ETYPE.SourceUrl                   #'URL' to source code. Max 4KB

ETYPE.Type                        #'ETYPE_KIND'. Can be: 'RESOURCE', 'MODULE', 'HOOK'

ETYPE.IsActivated                 #BOOL|null. Whether enabled
                                  #AWS managed ETYPEs are always enabled

ETYPE.Visibility                  #Either:
                                  #  - 'PUBLIC': public, enabled or not
                                  #  - 'PRIVATE': public|private, enabled
ETYPE.Category                    #Can be:
                                  #  - 'ACTIVATED': public, enabled
                                  #  - 'REGISTERED': private, enabled
                                  #  - 'THIRD_PARTY': either:
                                  #      - private, enabled
                                  #      - public, enabled or not, not AWS managed
                                  #  - 'AWS_TYPES': public, enabled, AWS managed

ETYPE.ExecutionRoleArn            #ROLE_ARN used when running|testing ETYPE
                                  #Must be assumable by Principal.Service:
                                  #  - resource|hooks: 'resources.cloudformation.amazonaws.com'
                                  #  - hooks: also 'hooks.cloudformation.amazonaws.com'
                                  #Must use COND_KEY:
                                  #  - aws:SourceArn ETYPE_ARN
                                  #  - aws:SourceAccount|SourceOrg*
                                  #Not needed for MODULEs
resource-role.yaml                #STACK TEMPLATE with STACK OUTPUT ExecutionRoleArn ROLE_ARN, used by PublishType()

ETYPE.LoggingConfig               #ETYPE_LOG. ETYPE logging
ETYPE_LOG.LogGroupName            #CloudWatch 'LOG_GROUP'
                                  #Def: '/ETYPE-stack-ResourceHandler-RANDOM'
ETYPE_LOG.LogRoleArn              #ROLE_ARN

AwsCommunity|AwsLabs::SERVICE::...#Third-party ETYPEs available in registry
                                  #Version 0.3.0, named community-registry-extensions
AwsSamples::...::...              #Same purpose

cfn ...                           #CLI for CloudFormation extensions
                                  #Separate from both `aws cloudformation` and cfn-* helpers
                                  #Installed using pip
                                  #Version 0.2.34
--verbose|-v                      #


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:            PRIVATE            :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


RegisterType()                    #Req: ETYPE
                                  #  - only TypeName, Type, ExecutionRoleArn, LoggingConfig
                                  #  - only one with SchemaHandlerPackage
                                  #  - also ClientRequestToken
                                  #Res: ETYPE_PVERSION
                                  #  - only RegistrationToken
SetTypeDefaultVersion()           #Req: ETYPE
                                  #  - only Arn, TypeName, Type, VersionId
                                  #Res: empty
                                  #Sets ETYPE.DefaultVersionId
ListTypeRegistrations()           #Req: ETYPE
                                  #  - only Arn -> TypeArn, TypeName, Type
                                  #  - also ETYPE_PVERSION: ProgressStatus -> RegistrationStatusFilter STR (def: 'IN_PROGRESS')
                                  #Res: RegistrationTokenList STR_ARR (ETYPE_PVERSION.RegistrationToken)
DescribeTypeRegistration()        #Req: ETYPE_PVERSION
                                  #  - only RegistrationToken
                                  #Res: ETYPE_PVERSION
                                  #  - no RegistrationToken
DeregisterType()                  #Req: ETYPE
                                  #  - only Arn, TypeName, Type, VersionId
                                  #Res: empty

ETYPE_PVERSION                    #Specific version of a private ETYPE
                                  #A private ETYPE is only available in current ACCOUNT|REGION
                                  #Enabling it is "registering"
                                  #WAIT (DescribeTypeRegistration()) TypeRegistrationComplete: when ETYPE_PVERSION.ProgressStatus COMPLETE
                                  #Max 50 enabled private ETYPEs (soft)
                                  #Max 50 per ETYPE (100 if public) (soft)
ETYPE_PVERSION.TypeVersionArn     #ETYPE_PRVERSION_ARN. arn:aws:cloudformation:REGION:ACCOUNT_ID:type/ETYPE_KIND/ETYPE/ETYPE_VERSION
                                  #Only with ProgressStatus 'COMPLETE'
ETYPE_PVERSION.RegistrationToken  #ETYPE_PVERSION_MID
ETYPE_PVERSION.Description        #STR

ETYPE_PVERSION.ProgressStatus     #'IN_PROGRESS', 'COMPLETE' or 'FAILED'
ETYPE.DeprecatedStatus            #'LIVE|DEPRECATED'. Whether de-registered
                                  #De-registering all ETYPE_PVERSION also de-registers the ETYPE itself
                                  #Can only de-register default version if all others are too

ETYPE_PVERSION.TypeArn            #ETYPE_ARN
                                  #Only with ProgressStatus 'COMPLETE'

ETYPE.VersionId                   #'ETYPE_VERSION'
ETYPE.DefaultVersionId            #Default ETYPE.VersionId
ETYPE.IsDefaultVersion            #BOOL

cfn submit                        #Call RegisterType()
                                  #Also calls cfn validate|test, then package|upload files
--set-default                     #Call SetTypeDefaultVersion()
--region
--endpoint-url                    #Like cfn invoke
--no-role
--role-arn                        #Like cfn test

cfn submit --dry-run
cfn package                       #Same as `cfn submit` but no RegisterType()

ETYPE.SchemaHandlerPackage        #S3_BUCKET_URL with all the code packaged by `cfn submit`
                                  #Max 4KB


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:            PUBLISH            :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


RegisterPublisher()               #Req: PUBLISHER
                                  #  - only AcceptTermsAndConditions, ConnectionArn
                                  #Res: PUBLISHER
                                  #  - only PublisherId
PublishType()                     #Req: ETYPE
                                  #  - only Arn, TypeName, Type, PublicVersionNumber
                                  #Res: ETYPE
                                  #  - only Arn -> PublicTypeArn
DescribePublisher()               #Req: PUBLISHER
                                  #  - only PublisherId
                                  #Res: PUBLISHER
                                  #  - no AcceptTermsAndConditions, ConnectionArn

PUBLISHING ==>                    #Make a private ETYPE_VERSION "public", i.e. available in any ACCOUNT, through CloudFormation registry
                                  #Only for current REGION
                                  #  - in order to target all REGIONs, should publish using a STACKSET,
                                  #    as opposed to manually calling the API
                                  #  - e.g. using RESTYPEs AWS::CloudFormation::Resource|Module|Hook[Default]Version|HookTypeConfig|PublicTypeVersion|Publisher

PUBLISHER                         #Entity that published a public ETYPE on the CloudFormation registry
                                  #Only for "third-party", i.e. not AWS managed ETYPEs
PUBLISHER|[REQUIRED_]ETYPE        #PUBLISHER_MID
 .PublisherId                     #With DescribePublisher(), def: one associated with current ACCOUNT
ETYPE.PublisherName               #'PUBLISHER'. Taken from PublisherProfile
PUBLISHER.PublisherStatus         #Always 'VERIFIED'

PUBLISHER.PublisherProfile        #'URL' (http[s]) to PUBLISHER's main page
PUBLISHER.IdentityProvider
ETYPE.PublisherIdentity           #'GitHub', 'Bitbucket' or 'AWS_Marketplace'. PublisherProfile's website
PUBLISHER.ConnectionArn           #CONNECTION_ARN. Must be created with CodeStar, towards PublisherProfile
                                  #Not if IdentityProvider 'AWS_Marketplace'

PUBLISHER.AcceptTermsAndConditions#BOOL (def: false). Must be true


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:           ACTIVATE            :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


ActivateType()                    #Req: ETYPE
                                  #  - only Arn -> PublicTypeArn, TypeName, TypeNameAlias, AutoUpdate,
                                  #    Type, ExecutionRoleArn, LoggingConfig, PublisherId
                                  #  - only one with MajorVersion, VersionBump
                                  #Res: ETYPE
                                  #  - only Arn
ListTypeVersions()                #Req: ETYPE
                                  #  - only Arn, TypeName, DeprecatedStatus, Type, PublisherId
                                  #Res: TypeVersionSummaries ETYPE_ARR
                                  #  - only Arn, TypeName, TimeCreated, Description, VersionId, IsDefaultVersion, PublicVersionNumber, Type
DeactivateType()                  #Req: ETYPE
                                  #  - only Arn, TypeName, Type
                                  #Res: empty

ACTIVATION ==>                    #[De]ActivateType() sets ETYPE.IsActivated
                                  #When activated, public ETYPE creates a copy as a private ETYPE in current ACCOUNT|REGION,
                                  #which is the one being used.
                                  #I.e. installs a public ETYPE

[REQUIRED_]ETYPE.TypeNameAlias    #ETYPE.TypeName of the public's ETYPE's private copy in this ACCOUNT|REGION
                                  #Def: same as original public ETYPE
                                  #Must be used to enable same ETYPE several times with different ETYPE_CONF
[REQUIRED_]ETYPE.OriginalTypeName #'ETYPE' of the original public ETYPE
ETYPE.OriginalTypeArn             #ETYPE_ARN of the original public ETYPE

ETYPE.PublicVersionNumber         #'X.Y.Z'. Current version used
                                  #With PublishType():
                                  #  - version to publish instead
                                  #  - def: minor bump from LatestPublicVersion
                                  #  - initial def (required): 1.0.0
                                  #Only if ETYPE enabled
                                  #With AWS managed ETYPEs: always use latest public version
ETYPE.LatestPublicVersion         #'X.Y.Z'. Latest PublicVersionNumber

ETYPE.MajorVersion                #NUM (def: latest). Major version to enable
                                  #The latest minor version of that major version is used
ETYPE.VersionBump                 #Upgrade to latest 'MAJOR|MINOR' version
                                  #Only if ETYPE already enabled
ETYPE.AutoUpdate                  #BOOL (def: true). Automatically enable new minor|patch versions


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:            SCHEMA             :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


ETYPE.Schema                      #'ESCHEMA_JSON'
                                  #Declarative description of ETYPE
                                  #ETYPE_KIND-specific
                                  #Located in root directory, named `schema.json`
                                  #Max 16MB

ESCHEMA.type
ESCHEMA.typeName
ESCHEMA.description
ESCHEMA.documentationUrl
ESCHEMA.sourceUrl                 #ETYPE.*

ESCHEMA.$schema|$id|$comment|title
 |definitions|required|allOf|anyOf
 |oneOf                           #Like JSON schema v7
JSON_SCHEMA                       #Like JSON schema v7 except:
                                  #  - nested OBJs must use $ref + definitions
                                  #     - can refer to RESTYPEs using https://schema.cloudformation.REGION.amazonaws.com/aws-SERVICE-RESOURCE.json
                                  #  - no dynamic props: additionalProperties always false, no additionalItems|propertyNames
                                  #  - no if|then|else|not
                                  #  - no readOnly|writeOnly|contentMediaType|contentEncoding
                                  #  - enum|const requires type
                                  #  - cannot use both ESCHEMA.properties and ESCHEMA.patternProperties
JSON_SCHEMA.insertionOrder        #BOOL (def: true). Whether ARR is ordered or not
JSON_SCHEMA.arrayType             #Whether ARR items are primitive types ('Standard', def) or OBJs ('AttributeList')

ESCHEMA_HANDLER|ESCHEMA_TAGGING   #Required 'PERMISSION'_ARR
 .permissions                     #PERMISSION can be either PACTION, or custom ones
                                  #Used to scaffold IAM POLICYs

cfn init                          #Scaffold new ETYPE's files: SCHEMA, dummy handlers|tests, build logic
--force                           #Allow overwriting

cfn validate                      #Validate ETYPE's SCHEMA against syntax errors
                                  #With MODULEs, also generates SCHEMA

cfn generate                      #Generate ETYPE's HANDLERs runtime code, based on SCHEMA
                                  #Also creates contract tests

cfn invoke HANDLER PATH           #Call an ETYPE's HANDLER
                                  #PATH is request as JSON
--function-name                   #Lambda 'FUNC' (def: 'TypeFunction')
--region                          #'REGION' (def: 'us-east-1')
--endpoint                        #Server URL (def: 'http://127.0.0.1:3001')
--max-reinvoke                    #NUM of retries (def: unlim)


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:            CONFIG             :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


SetTypeConfiguration()            #Req: ETYPE_CONF
                                  #  - Alias -> ConfigurationAlias
                                  #  - no Arn, LastUpdated, IsDefaultConfiguration
                                  #Res: ETYPE
                                  #  - only Arn -> ConfigurationArn
BatchDescribeTypeConfigurations() #Req: ETYPE_CONF
                                  #  - Arn|Alias -> TypeConfigurationArn|Alias
                                  #  - no Configuration, LastUpdated, IsDefaultConfiguration
                                  #Res: ETYPE_CONFS

ETYPE_CONFS.TypeConfigurations    #ETYPE_CONF_ARR (no Type)

ETYPE_CONFS                       #ETYPE_CONF_ARR. Same shape as BatchDescribeTypeConfigurations() request
 .UnprocessedTypeConfigurations   #ETYPE_CONF with invalid ETYPE_CONF.Configuration
ETYPE_CONFS.Errors                #ETYPE_CONF_ERROR_ARR. Errors in ETYPE_CONF.Configuration
ETYPE_CONF_ERROR.ErrorCode        #STR
ETYPE_CONF_ERROR.ErrorMessage     #'ERROR'. Max 255 chars
ETYPE_CONF_ERROR
 .TypeConfigurationIdentifier     #ETYPE_CONF. Same shape as BatchDescribeTypeConfigurations() request

ETYPE_CONF                        #Configuration passed to an ETYPE, for this ACCOUNT|REGION
                                  #Not with MODULEs
ETYPE_CONF.Arn                    #ETYPE_CONF_ARN. arn:aws:cloudformation:REGION:ACCOUNT_ID:type-configuration/ETYPE_CONF
ETYPE_CONF.Alias                  #'ETYPE_CONF'. Must be [[:alnum:]], max 256 chars
ETYPE_CONF.LastUpdated            #DATE|null

ETYPE_CONF.TypeArn|TypeName|Type  #Like ETYPE.*

ESCHEMA.typeConfiguration         #ETYPE_CONF_SCHEMA
ETYPE.ConfigurationSchema         #'ETYPE_CONF_SCHEMA_JSON'
                                  #Max 60KB
ETYPE_CONF_SCHEMA                 #Describe shape of ETYPE_CONF_DATA. Must describe each property
                                  #JSON_SCHEMA but:
                                  #  - top-level must have only properties|additionalProperties|required, description, allOf|anyOf|oneOf
                                  #  - can have deprecatedProperties (like ESCHEMA)
                                  #VARs must be [[:alnum:]], max 64 chars

ETYPE_CONF.Configuration          #'ETYPE_CONF_DATA_JSON' (def: '{}'). Data used for configuration
                                  #Should avoid secrets
                                  #Max 200KB
ETYPE_CONF.IsDefaultConfiguration #BOOL

HREQP_DATA.typeConfiguration      #ETYPE_CONF_DATA

cfn test --typeconfig PATH        #PATH to ETYPE_CONF_DATA_JSON
                                  #Def: ~/.cfn-cli/typeConfiguration.json


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:           TEST API            :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


TestType()                        #Req: ETYPE
                                  #  - Arn, TypeName, Type, VersionId
                                  #  - only one with LogDeliveryBucket
                                  #Res: ETYPE
                                  #  - Arn -> TypeVersionArn

CONTRACT TESTS ==>                #Automated tests performed by AWS
                                  #ETYPE_KIND-specific
                                  #Done on private ETYPEs before PublishType():
                                  #  - cannot PublishType() until ETYPE.TypeTestsStatus PASSED

ETYPE.TypeTestsStatus             #STR among:
                                  #  - NOT_TESTED
                                  #  - IN_PROGRESS
                                  #  - PASSED, FAILED
ETYPE.TypeTestsStatusDescription  #STR. Max 1KB


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:           TEST CLI            :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


cfn test                          #Run ETYPE's contract tests
                                  #Must first run `sam local start-lambda`
                                  #Uses AWS SAM under the hood
--function-name                   #Lambda 'FUNC' (def: 'TestEntrypoint')
--region
--endpoint                        #Like cfn invoke
--role-arn                        #ROLE_ARN (def: current)
                                  #To log to S3, must:
                                  #  - be allowed s3:PutObject and kms:Encrypt|Decrypt|ReEncrypt*|GenerateDataKey*|DescribeKey
                                  #  - be assumable by both 'cloudformation.amazonaws.com' and 'resources.cloudformation.amazonaws.com'
                                  #Def: automatically created as 'CloudFormationManagedUplo-LogAndMetricsDeliveryRol-RANDOM'
--enforce-timeout                 #NUM (in secs, def: 1m)
                                  #Always twice for CREATE|UPDATE|DELETE (as opposed to READ|LIST)
-- -k STR                         #Run only specific test. Same syntax as pytest -k
-- --tb=STR                       #Reporting. Same syntax as pytest

overrides.json                    #RESPROPs passed to contract tests
                                  #Is OBJ:
                                  #  - resource ETYPE: { CREATE: { RESPROP: 'VAL', ... } }
                                  #  - HOOK: { CREATE|UPDATE|DELETE_PRE_PROVISION: { RESTYPE: { [previous]resourceProperties: { RESVARR: 'VAL', ... }, } ... } }
                                  #Def: automatically generate VAL from its type defined in ESCHEMA
                                  #For both create|update, i.e. does not work for create-only properties
                                  #VAL can contain "{{OUTPUT}}" to inject STACK OUTPUTs
                                  #Can use #COMMENTs
inputs/inputs_NUM_HANDLER.json    #Same but can use multiple NUM. Also:
                                  #  - resource ETYPE: create|update
                                  #  - HOOK: pre_create|update|delete
                                  #Different OBJ shape: no upper level, since already in filename
inputs/inputs_NUM_invalid.json    #Same but for RESPROP values meant to fail


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:           TEST LOG            :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


ETYPE-ContractTests
 -ETYPE_PVERSION_MID              #LOG_GROUP logging HANDLER's output during contract tests

cloudformationmanageduploadinfrast
 -artifactbucket-RANDOM           #S3 BUCKET logging contract tests' output
CloudFormation/ContractTestResults
 /ETYPE/RANDOM.zip                #S3 OBJECT for the above

ETYPE.LogDeliveryBucket           #'S3_BUCKET' with both HANDLER's and contract tests' output


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:         RESOURCE MAIN         :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


EXTENSIONS RESOURCE ==>           #Like CUSTOM_RESOURCE, but more features, and not free
                                  #Especially meant for public extensions, e.g. from private companies
                                  #Core AWS CloudFormation resources are actually resource ETYPEs
                                  #  - can see their code (Java) in https://github.com/aws-cloudformation/aws-cloudformation-resource-providers-SERVICE
                                  #  - i.e. CloudFormation is just abstraction over each SERVICE API
                                 ##With Pulumi, can use RTYPE 'aws-native:ExtensionResource' with RPROPs: type 'ETYPE', properties RESPROPs

ETYPE.ProvisioningType            #Which write handlers are available, among:
                                  #  - 'NON_PROVISIONABLE': none
                                  #     - cannot create RESOURCE, import nor detect drift
                                  #  - 'IMMUTABLE': create|delete
                                  #     - updates must replace RESOURCE
                                  #  - 'FULLY_MUTABLE' (def): create|update|delete

RESOURCE.Version                  #'ETYPE_VERSION'


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:        RESOURCE SCHEMA        :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


ESCHEMA                           #Changes tracked in repository cloudformation-resource-schema (version 2.0.9)

cfn-rps-lint                     ##VSCode extension linting ESCHEMA (version 0.1.10)

resource-schema-guard-rail       ##CLI linting ESCHEMA using cfn-guard (version 0.0.8)
                                 ##Not documented yet because beta

ESCHEMA.properties.RESPROP|RESATTR#JSON_SCHEMA describing RESPROP|RESATTR

RESVARR                           #'VARR' to RESPROP|RESATTR property, as JSON pointer
ESCHEMA.readOnlyProperties        #'RESVARR'_ARR that are RESATTRs
ESCHEMA.writeOnlyProperties       #'RESVARR'_ARR that are write-only
ESCHEMA.createOnlyProperties      #'RESVARR'_ARR that are create-only
ESCHEMA                           #'RESVARR'_ARR that are create-only but only under specific conditions
 .conditionalCreateOnlyProperties #If update fails, should retry with a replacement instead
ESCHEMA.nonPublicProperties       #'RESVARR'_ARR that are hidden
ESCHEMA.nonPublicDefinitions      #Same but for JSON schema definitions
ESCHEMA.deprecatedProperties      #'RESVARR'_ARR that are deprecated
ESCHEMA.primaryIdentifier         #'RESVARR'_ARR that identify the resource, e.g. with READ|DELETE
                                  #If several items, composite key
                                  #Must be returned by READ|LIST
ESCHEMA.additionalIdentifiers     #'RESVARR'_ARR_ARR of alternative identifiers

ESCHEMA.propertyTransform.RESVARR #STR. JSONata expression describing how RESPROP is transformed|normalized
                                  #Can specify several using '... $OR ...'
                                  #That value is used in drift detection
                                  #Def: use the input value

ESCHEMA.replacementStrategy       #When replacing, whether should wait for creation to delete
                                  #Either: 'create_then_delete' (def) or 'delete_then_create'

ESCHEMA.resourceLink              #ESCHEMA_RLINK. Resource's main URI
ESCHEMA_RLINK.templateUri         #HTTPS 'URI', either absolute, or relative to AWS console URI
ESCHEMA_RLINK.mappings.VAR        #'RESVARR'. URI variables to insert as ${VAR} in templateUri
                                  #VAR must be [[:alnum:]], max 64 chars
                                  #Builtin: awsRegion
ESCHEMA_RLINK.$comment            #STR. Description


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:         RESOURCE TAGS         :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


ESCHEMA.tagging                   #ESCHEMA_TAGGING
ESCHEMA_TAGGING.taggable          #BOOL (def: true). Whether can use TAGs
ESCHEMA_TAGGING.tagOnCreate       #BOOL (def: true). Whether can use TAGs on Create*()
ESCHEMA_TAGGING.tagUpdatable      #BOOL (def: true). Whether TAGs are readonly
ESCHEMA_TAGGING
 .cloudFormationSystemTags        #BOOL (def: true). Whether support aws:cloudformation:* TAGs
ESCHEMA_TAGGING.tagProperty       #'RESVARR' with TAGs (def: '/properties/Tags')

HREQP_DATA|HREQH.systemTags       #OBJ of aws:cloudformation:* TAGs
HREQP_DATA.[previous]stackTags
HREQH.desired|previousResourceTags#OBJ of other TAGs


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:       RESOURCE HANDLER        :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


ESCHEMA.handlers.HANDLER          #ESCHEMA_HANDLER. CRUD logic function
                                  #HANDLER can be create|update|list|read|delete
                                  #update cannot be upsert

ESCHEMA_HANDLER.handlerSchema     #JSON_SCHEMA describing the items being returned
                                  #Top-level can only use properties|required and allOf|anyOf|oneOf
                                  #Only with 'list' HANDLER

ESCHEMA_HANDLER.timeoutInMinutes  #NUM (def: 2h, min: 2m, max: 1.5d). HANDLER's timeout
                                  #For create|update|delete only. Always 30s for read|list


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:         RESOURCE LOGS         :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


AWS/CloudFormation/ETYPE/*        #CloudWatch METRICs published by ETYPE handlers
                                  #ETYPE is /-separated instead of ::
                                  #DVARs:
                                  #  - DimensionKeyResourceType 'ETYPE'
                                  #  - DimensionKeyActionType 'HANDLER' or 'ProviderLogDelivery' (S3|CloudWatch logs error)
AWS/CloudFormation/ETYPE/
 HandlerInvocationCount           #NUM of ETYPE handler calls
AWS/CloudFormation/ETYPE/         #NUM of failed ETYPE handler calls
 HandlerException                 #Has DVAR DimensionKeyExceptionType: HRES.HandlerErrorCode (def: ERROR.name)
AWS/CloudFormation/ETYPE/
 HandlerInvocationDuration        #NUM. ETYPE handler duration

LOGGING ==>                       #Debug logs are sent to: console, S3, CloudWatch logs
                                  #Debug logs of logging itself (S3, CloudWatch logs, METRICs) are only sent to console
HREQP_DATA.providerLogGroupName   #'LOG_GROUP'
S3 LOGGING ==>                    #BUCKET: 'LOG_GROUP-ACCOUNT_ID'
                                  #OBJECT: 'STACK_MID/RESOURCE/YYYYMMDDTHHMMSSSSSZ-RANDOM.log'
                                  #Requires PACTIONs:
                                  #  - s3:CreateBucket (unless already exists)
                                  #  - s3:PutObject|GetObject|ListBucket
CLOUDWATCH LOGS ==>               #LOG_GROUP: 'LOG_GROUP'
                                  #LOG_STREAM: 'STACK_MID/RESOURCE'
                                  #Requires PACTIONs:
                                  #  - logs:CreateLogGroup|CreateLogStream (unless already exists)
                                  #  - logs:PutLogEvents|DescribeLogGroups|DescribeLogStreams


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:         RESOURCE CODE         :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


PLUGIN ==>                        #TypeScript|Python|Go|Java binary used by `cfn init` for language-specific code generation

FRAMEWORK ==>                     #TypeScript|Python|Go|Java client library to use in HANDLERs

LAMBDA FUNCTIONS ==>              #A resource ETYPE is mostly a Lambda FUNC
                                  #Its required files are packaged by `cfn submit`
                                  #Each framework has its own convention on how the files should be setup

PRODUCTION VS TEST ==>            #2 Lambda FUNCs are exported:
                                  #  - production: HREQP input
                                  #  - debugging: HREQD input
                                  #     - use empty ETYPE_CONF_DATA
                                  #     - no remote logging|METRICs
                                  #Both return HRES (also called "progress event")

TestEntrypoint                    #Debugging Lambda 'FUNC'
                                  #Can be executed with `sam local invoke -d PORT --event PATH_TO_HREQD.json`
                                  #Must run `sam local start-lambda` first


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:       RESOURCE REQUEST        :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


HREQP|HREQD.action                #'HANDLER'
HREQP.resourceType                #'ETYPE'
HREQP.resourceTypeVersion         #'ETYPE_VERSION'

HREQP.stackId                     #STACK_MID
HREQP|HREQH.awsAccountId          #ACCOUNT_ID
HREQP|HREQD|HREQH.region          #'REGION'
HREQH.awsPartition                #'PARTITION'

HREQP.requestData                 #HREQP_DATA
HREQP_DATA.logicalResourceId
HREQH.logicalResourceIdentifier   #'RESOURCE'
HREQP_DATA                        #RESPROP|RESATTRs OBJ
 .[previous]resourceProperties    #With create|update: full
HREQH                             #With read|delete: only primaryIdentifier|additionalIdentifiers
 .previous|desiredResourceState   #With list: empty

HREQP_DATA.callerCredentials      #CREDENTIALS used by ETYPE's main logic, i.e. HFUNC
HREQD.credentials
HREQP_DATA.providerCredentials    #CREDENTIALS used by ETYPE's framework logic, i.e. METRICs and logging (S3, CloudWatch logs)
CREDENTIALS                       #OBJ: accessKeyId STR, secretAccessKey STR, sessionToken STR

HREQP.requestContext              #HREQP_CONTEXT
HREQP_CONTEXT.invocation          #NUM
HREQP_CONTEXT
 .cloudWatchEventsRuleName        #STR
HREQP_CONTEXT
 .cloudWatchEventsTargetId        #STR


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:       RESOURCE RESPONSE       :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


HRES                              #Return value of HANDLERs. Also called `ProgressEvent`
HRES.ResourceModel                #'OBJ_JSON' of RESOURCE
HRES.ResourceModels               #Same but as ARR, for list HANDLER

HRES.OperationStatus              #'PENDING', 'IN_PROGRESS' or 'SUCCESS|FAILED'
HRES.HandlerErrorCode             #STR. Required if CurrentOperationStatus 'FAILED', optional if 'IN_PROGRESS'
                                  #One of: AccessDenied AlreadyExists GeneralServiceException InternalFailure
                                  # InvalidCredentials InvalidRequest NetworkFailure NotFound NotStabilized
                                  # NotUpdatable ResourceConflict ServiceInternalError ServiceLimitExceeded Throttling
                                  #See online doc for description
HRES.Message                      #STR explaining OperationStatus

HREQP|HREQH.nextToken             #STR. Pagination token, for list HANDLER. null if no more
HRES.NextToken                    #Pagination is handled by cfn-cli

HREQP[_CONTEXT]|HREQD
 .callbackContext                 #STR. Information meant to be passed to HREQP|HREQD of subsequent run
HRES.CallbackContext              #Only if OperationStatus 'IN_PROGRESS'
HRES.CallbackDelaySeconds         #'NUM'. Meant when HANDLER is a long operation
                                  #Make cfn-cli call `read` HANDLER when OperationStatus is now expected to be 'SUCCESS'
                                  #This final state is called "desired-state stabilization"
                                  #For create|update, must also only be SUCCESS when satisfy "runtime-state stabilization"
                                  #  - i.e. finished create|update and user can interact with RESOURCE
                                  #  - also create-only RESPROPs cannot be updated anymore, etc.
                                  #Can be 0 (def) to indicate none.

RecordHandlerProgress()           #Req: HANDLER_PROGRESS
                                  #Res: empty
HREQP.responseEndpoint            #'URL' of RecordHandlerProgress()

HANDLER_PROGRESS                  #Communicates HRES to API
                                  #Done by cfn-cli, i.e. should not be used directly
HANDLER_PROGRESS.ResourceModel
 |[Current]OperationStatus
 |ErrorCode|StatusMessage         #Like HRES.*
HREQP.bearerToken
HREQH.clientRequestToken
HANDLER_PROGRESS.BearerToken      #STR. Token to connect request|response
HANDLER_PROGRESS
 .ClientRequestToken              #STR. Idempotence


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:      RESOURCE TYPESCRIPT      :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


cloudformation-cli-typescript
 -plugin                          #Version 1.0.3 (plugin), 1.0.5 (framework|lib)

EXPORT                            #Main file must export:
                                  #  - resource BASE_RESOURCE
                                  #  - entrypoint|testEntrypoint BASE_RESOURCE.*
BASE_RESOURCE.entrypoint          #Lambda FUNC's production entrypoint
 (HREQP, NCONTEXT)->>HRESPD       #NCONTEXT is Lambda context (see its doc)
BASE_RESOURCE.testEntrypoint
 (HREQD, NCONTEXT)->>HRESPD       #Lambda FUNC's debugging entrypoint

BaseResource                      #Base class for RESOURCEs
new BaseResource(...RARGS)        #
RARGS[0]                          #'ETYPE'
RARGS[1]                          #RESOURCE's BaseModel
RARGS[2]                          #Used to create pools of AWS CLIENTs
                                  #Not documented yet, i.e. must set to null
RARGS[3]                          #OBJ with key 'HANDLER', value HFUNC
                                  #Alternatively, can decorate BASE_RESOURCE's methods that are HFUNC with @handlerEvent('HANDLER')
RARGS[4]                          #ETYPE_CONF_DATA's BaseModel

HFUNC                             #HANDLER's method
                                  #Is FUNC(...HARGS)->>HRESPD
HARGS[0]                          #HCLIENTS
HARGS[1]                          #HREQH. Simplification of HREQP
                                  #If debugging entrypoint, should pass it as HREQD.request HREQH
HARGS[2]                          #HREQP|HREQD.callbackContext
HARGS[3]                          #HLOGGER
HARGS[4]                          #ETYPE_CONF_DATA

HCLIENTS.client                   #AWS JavaScript CLIENT (see its doc)
 ('SERVICE'[, COPTS])->CLIENT     #Currently outdated (v2)
CLIENT.makeRequestPromise
 ('ACTION'[,PARAMS[,HEADERS_OBJ]])
 ->>RESP                          #Calls ACTION, but taking into account RARGS[2] pooling

HLOGGER.log(STR[, VAL...])        #Debug logging
                                  #VAL...: like Node util.format()

new ProgressEvent([OBJ])          #HRESPD. Child of BaseModel
HRESPD.*                          #HRES.* except:
                                  #  - camelCase
                                  #  - resourceModel[s] use BASE_MODEL
                                  #  - callbackContext is OBJ
ProgressEvent.success
 ([[BASE_MODEL[, OBJ]]])->HRESPD  #With: ResourceModel BASE_MODEL, OperationStatus SUCCESS, callbackContext OBJ
ProgressEvent.progress
 ([BASE_MODEL[, OBJ]])->HRESPD    #With: ResourceModel BASE_MODEL, OperationStatus IN_PROGRESS, callbackContext OBJ
ProgressEvent.failed
 (STR, STR2)->HRESPD              #With: OperationStatus FAILED, HandlerErrorCode STR, Message STR2
ProgressEvent.builder()->BUILDER
BUILDER.PROP(VAL)->BUILDER
BUILDER.build()->HRESPD           #With: PROP VAL, ...

new BaseModel([OBJ])              #Base class for many OBJs
                                  #OBJ.* is assigned
                                  #Mostly meant to convert from|to JavaScript|JSON
BASE_MODEL.toJSON()->OBJ          #
BASE_MODEL.serialize([BOOL])->OBJ #If BOOL true (def), removes null values
BaseModel.deserialize
 (OBJ)->BASE_MODEL                #
BaseModel.TYPE_NAME
BASE_MODEL.getTypeName()->STR     #'ETYPE'


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:        MODULE TEMPLATE        :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


EXTENSIONS MODULE ==>             #Similar to AWS::Include, but more features
                                  #I.e. meant for group of RESOURCEs
                                  #Can contain other MODULEs (max 3 depth levels)
                                  #Max 100 per ACCOUNT (soft)

fragments/FILE.json               #TEMPLATE_FRAGMENT, i.e. TEMPLATE declaring the MODULE
                                  #Must define TEMPLATE.Resources
                                  #Should not have sibling file. FILE is usually named `sample`

MACRO ==>                         #Works like a MACRO, i.e. expands to its child RESOURCEs during TEMPLATE processing
                                  #Since MACRO cannot include other MACROs:
                                  #  - MACROs cannot include MODULEs
                                  #  - MODULEs cannot include MACROs
                                  #When using SET|STACK|CHANGESET.UsePreviousTemplate, reverting to post-processed TEMPLATE, i.e. without MODULE

SELF-CONTAINED ==>                #Must be self-contained, i.e. isolate TEMPLATE_FRAGMENT from PARENT_TEMPLATE, except for MODULE parameters|outputs
                                  #MODULE cannot use:
                                  #  - nested STACK|SET
                                  #  (if public MODULE)
                                  #  - CUSTOM_RESOURCE
                                  #  (but its RESOURCEs can)
                                  #  - TAGs
                                  #  - RESOURCE.CreationPolicy STR, RESOURCE.UpdatePolicy STR, RESOURCE.UpdateReplacePolicy 'Snapshot'

MODULE PARAMETERS ==>             #Defined as TEMPLATE_FRAGMENT.Parameters
                                  #Passed as RESOURCE.Properties in PARENT_TEMPLATE (like RESPROPs)

MODULE OUTPUTS ==>                #TEMPLATE_FRAGMENT.Outputs become STACK OUTPUTs in PARENT_TEMPLATE
                                  #  - namespaced as 'MODULE_RESOURCE.OUTPUT'
                                  #But cannot use EXPORT and { Fn::ImportValue: 'EXPORT' }

RESOURCE.Metadata                 #The following must be specified if RESTYPE is not AWS managed, i.e. must be enabled
ETYPE.RequiredActivatedTypes      #REQUIRED_ETYPE_ARR. ETYPEs of all RESOURCEs not AWS managed
RESOURCE.Metadata.OriginalTypeName#'RESTYPE'
RESOURCE.Metadata.PublisherId
RESOURCE.Metadata
 .RegionalPublisherId.REGION      #PUBLISHER_MID
RESOURCE.Metadata
 .SupportMajorVersions
REQUIRED_ETYPE
 .SupportedMajorVersions          #NUM_ARR. Allowed major versions


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:         MODULE SCHEMA         :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


ESCHEMA.properties
 .Resources.RESOURCE              #JSON_SCHEMA. TEMPLATE.Resources

ESCHEMA.properties
 .Parameters.RESPROP              #JSON_SCHEMA. MODULE parameters

ESCHEMA.handlers.resolve          #ESCHEMA_HANDLER
                                  #Main HANDLER. Does not need any code logic

ESCHEMA_HANDLER.timeoutInMinutes
ESCHEMA.replacementStrategy       #Like resource ETYPE
ESCHEMA.moduleLink                #Like ESCHEMA.resourceLink



                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:         MODULE USAGE          :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


USING MODULE ==>                  #Used like a normal RESOURCE

MODULE_RESOURCE[.]RESOURCE        #Must be used instead of 'RESOURCE' when it is inside a MODULE
MODULE_RESOURCE                   #MODULE's LogicalResourceId

STACK_RESOURCE.ModuleInfo         #Parent MODULE that contained this STACK_RESOURCE
MODULE.LogicalIdHierarchy         #'MODULE_RESOURCE/...'
MODULE.TypeHierarchy              #'MODULE_RESTYPE/...'


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:          HOOKS MAIN           :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


EXTENSIONS HOOK ==>               #Validation logic before RESOURCE create|update|delete
                                  #Java|Python, not TypeScript|Java
                                  #Max 100 per ACCOUNT

ESCHEMA.handlers.preHANDLER       #ESCHEMA_HANDLER
                                  #HANDLER can be Create|Update|Delete
                                  #30s timeout
ESCHEMA_HANDLER.targetNames       #'RESTYPE'_ARR. Can include * or ?

ESCHEMA.typeConfiguration         #Defines ETYPE_CONF_DATA.Properties.*, not ETYPE_CONF_DATA.*
ETYPE_CONF_DATA.Properties        #OBJ
ETYPE_CONF_DATA.TargetStacks      #'ALL|NONE'. Whether enabled
ETYPE_CONF_DATA.FailureMode       #'FAIL|WARN'. Whether failure stops provisioning

ETYPE_CONF_DATA.TargetFilters     #ETYPE_CONF_FILTERS. Filters when to use the HOOK
ETYPE_CONF_FILTERS.Filters        #ETYPE_CONF_FILTER_ARR. Union of filters
ETYPE_CONF_FILTER.Action          #'HANDLER' (def: any)
ETYPE_CONF_FILTER.TargetName      #'RESTYPE' (def: any). Can include * or ?
ETYPE_CONF_FILTER.InvocationPoint #Always 'PRE_PROVISION', i.e. always run before
ETYPE_CONF_FILTERS.Actions
 |TargetNames|InvocationPoints    #Same as ETYPE_CONF_FILTER.* but as ARR


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:          HOOKS LIST           :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


DescribeChangeSetHooks()          #Req: CHANGESET
                                  #  - only ChangeSetName, StackName
                                  #  - also RESCHANGE: LogicalResourceId
                                  #Res: CHANGESET
                                  #  - only ChangeSetId, ChangeSetName, StackId, StackName, Status
                                  #  - only one with Hooks
                                  #Paginates CHANGESET.Hooks

CHANGESET.Hooks                   #CHANGE_HOOK_ARR
CHANGE_HOOK.TypeName              #HOOK's 'ETYPE'
CHANGE_HOOK.TypeVersionId         #HOOK's 'ETYPE_VERSION'
CHANGE_HOOK
 .TypeConfigurationVersionId      #HOOK's 'ETYPE_CONF'
CHANGE_HOOK.FailureMode
CHANGE_HOOK.InvocationPoint       #ETYPE_CONF_DATA.**

CHANGE_HOOK.TargetDetails         #HOOK_DETAIL. RESOURCE targeted by the HOOK
HOOK_DETAIL.TargetType            #Always 'RESOURCE' (as is)
HOOK_DETAIL.ResourceTargetDetails #HOOK_RESDETAIL
HOOK_RESDETAIL
 .ResourceType|LogicalResourceId  #Like STACK_RESOURCE.*
HOOK_RESDETAIL.ResourceAction     #Like RESCHANGE.Action

CHANGE.HookInvocationCount        #NUM of HOOKs on that RESOURCE
                                  #null if none

EVENT.HookType                    #HOOK's 'ETYPE'
EVENT.HookFailureMode
EVENT.HookInvocationPoint         #ETYPE_CONF_DATA.**
EVENT.HookStatus                  #STR among:
                                  #  - HOOK_IN_PROGRESS
                                  #  - HOOK_COMPLETE_SUCCEEDED: HOOK returned success
                                  #  - HOOK_COMPLETE_FAILED: HOOK returned failure
                                  #  - HOOK_FAILED: exception in HOOK
EVENT.HookStatusReason            #STR. Max 1KB


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:          HOOKS CODE           :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


CODE ==>                          #Very similar to resource ETYPEs, except returns only status
                                  #Has same: plugin, framework, production|debugging lambda FUNC, metrics, logs

EXPORT                            #Like resource ETYPEs, except `resource` is named `hook` instead
                                  #Also resource-role.yaml is called hook-role.yaml

HREQD.credentials|request
 |callbackContext|region
HREQP.awsAccountId|stackId
 |requestData|requestContext
HREQP_CONTEXT
 .invocation|callbackContext
HREQHH.awsAccountId|stackId
HREQP_DATA.callerCredentials
 |providerCredentials
 |providerLogGroupName            #Like resource ETYPEs
HREQP|HREQH.clientRequestToken    #Like resource ETYPE bearerToken
HREQH.hookContext                 #HREQHH

HREQP|HREQHH.hookTypeName         #'ETYPE'
HREQP|HREQHH.hookTypeVersion      #'ETYPE_VERSION'
HREQP|HREQD|HREQHH
 .actionInvocationPoint           #'CREATE|UPDATE|DELETE_PRE_PROVISION'
HREQP_DATA|HREQHH.targetType      #Always 'RESOURCE' (as is)
HREQP_DATA|HREQHH.targetName      #'RESTYPE'
HREQP_DATA|HREQHH.targetLogicalId #'RESOURCE'
HREQP_DATA|HREQHH.targetModel     #RESPROP|RESATTRs OBJ
HREQD.typeConfiguration           #ETYPE_CONF
HREQP.hookModel                   #ETYPE_CONF's model
HREQP|HREQHH.changeSetId          #CHANGESET_MID

HRES                              #Like resource ETYPEs, except no resourceModel[s], nextToken
                                  #`status` is called `hookStatus`
                                  #Also has clientRequestToken STR

AwsCommunity::Lambda::Invoker    ##Single HOOK that calls other HOOKs
                                 ##HOOKs are registered as a DynamoDB TABLE
                                 ##  - set using ETYPE_CONF.RegistrationTableArn TABLE_ARN
                                 ##  - TABLE has one attribute lambda_arn FUNC_ARN
                                 ##Lambda FUNC is called with REQ:
                                 ##  - type_name 'RESTYPE'
                                 ##  - resource_properties RESPROPs
                                 ##  - operation 'create|update|delete'
                                 ##Must throw ERROR to fail
