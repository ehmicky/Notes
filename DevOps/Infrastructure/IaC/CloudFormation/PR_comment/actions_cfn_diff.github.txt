
                                  ┏━━━━━━━━━━━━━━━━━━━━━━┓
                                  ┃   ACTIONS_CFN_DIFF   ┃
                                  ┗━━━━━━━━━━━━━━━━━━━━━━┛

ALTERNATIVES ==>                  #See cdk-notifier

VERSION ==>                       #1.0.8

taichi/actions-cfn-diff           #GitHub action
                                  #List each RESOURCE:
                                  #  - RESTYPE, LogicalResourceId, PhysicalResourceId, whether replaced
                                  #  - diff between local TEMPLATE and currently deployed one
                                  #     - using fullDiff() + formatDifferences()
                                  #  - drift status
                                  #Upserted as PR comment
                                  #Also shown as GitHub action Markdown summary

INPUTS.stack-with-templates       #'STACK=TEMPLATE_PATH'. Can be several, newline-delimited
                                  #Def: all STACKs
                                  #  - uses CSTACK.artifactId|templateFile, based on ASSEMBLY_DIR/manifest.json
                                  #     - i.e. does not work if there is a nested STAGE, since CSTACK.artifactId !== CSTACK.stackName then
                                  #TEMPLATE_PATH is JSON|YAML, and cannot currently use YAML !RFUNC notation
INPUTS.cdk-outputs-directory      #'ASSEMBLY_DIR' (def: 'cdk.out') when using INPUTS.stack-with-templates default value

INPUTS.aws-region                 #'REGION'
INPUTS.role-to-assume             #ROLE_ARN to assume (def: none)
INPUTS.working-directory          #'DIR' (def: '.')

INPUTS.github-token               #'TOKEN' (def: ${{github.token}}) used to upsert PR comment

INPUTS.enable-drift-detection     #BOOL (def: true). Whether to print drift status of RESOURCEs.
                                  #Uses the latest DetectStackDrift(), i.e. requires INPUTS.force-drift-detection true to get latest

INPUTS.force-drift-detection      #BOOL (def: false). Call DetectStackDrift() and wait for it to be done
                                  #Then print drift status of all STACKs
INPUTS.drift-maxAttempts          #NUM (def: 7). How many times to poll with DescribeStackDriftDetectionStatus()
INPUTS.drift-delay-milliseconds   #NUM (in ms, def: 3s). Initial delay, double each time
INPUTS.drift-timeout-milliseconds #NUM (in ms, def: 6m). Max timeout
