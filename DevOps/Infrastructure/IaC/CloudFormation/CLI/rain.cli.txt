
        
   RAIN  
        



ALTERNATIVES ==>                  #See sceptre doc

ALTERNATIVES FOR DIFF ==>         #See cdk diff doc

VERSION ==>                       #1.7.2
                                  #Install by downloading binaries, or through go

SUMMARY ==>                       #Account: current auth, open UI
                                  #Template: scaffold, prettify, merge, diff, dependencies tree, forecast
                                  #Package: insert ENVVAR|file, S3 upload of local path, modules
                                  #Stack: deploy, list, watch, logs, delete
                                  #StackSet: deploy, list, delete


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:            GENERAL            :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


rain                              #CLI on top of `aws cloudformation`
--debug                           #Debug logging
--no-colour                       #No colors in output
--experimental|-x                 #Must be used with some features
                                 !#Noted like this

STACK                             #'STACK'|STACK_MID
                                  #Def:
                                  #  - if TEMPLATE_PATH arg, its basename, with all non-alnum replaced by -
                                  #  - if `ls` command: all
SET                               #'SET'|SET_MID
                                  #Def: like STACK

rain bootstrap|[stackset] deploy
 |rm
--yes|-y                          #No CLI confirmation input

rain bootstrap|cat|console|deploy
 |forecast|info|logs|ls|pkg|rm
 |stackset|watch                  #
--region|-r                       #'REGION' (def: see AWS config doc)
--profile|-p                      #AWS 'PROFILE' (def: see AWS config doc)


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:            ACCOUNT            :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


rain info                         #Print current ACCOUNT_ID, PRINCIPAL_ARN and REGION, using IAM GetCallerIdentity()
--creds|-c                        #Also print CREDS

rain console [STACK]              #Open AWS UI. If STACK, to its page
                                  #Done using temporary CREDS. Must be logged in as a ROLE, not USER
--url|-u                          #Print URL but do not open it
--service|-s                      #'SERVICE' (def: 'cloudformation') to show
--name|-n                         #Temporary 'USER' (def: current) to use within the console


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:           TEMPLATE            :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


rain build RESTYPE...             #Scaffold TEMPLATE with those RESTYPEs, and print it
                                  #Contains all possible RESPROPs, and sometimes IAM POLICYs
                                  #RESTYPE is case-insensitive, and can be only the end of it
                                  #Def 'RESOURCE' is 'MyRESTYPENUM'
--json|-j                         #Instead of YAML
--bare|-b                         #Do not include optional RESPROPs, nor comments
--list|-l                         #List all RESTYPEs

rain fmt [TEMPLATE_PATH...]       #Prettify TEMPLATEs (def: stdin)
                                  #Tries to use !RFUNC shortcut syntax
                                  #Preserve comments
--write|-w                        #Write TEMPLATE instead of printing to stdout
--verify|-v                       #Only set exit code 1 if not prettified
--json|-j                         #Output as JSON. If YAML, convert it. Def: vice-versa
--unsorted|-u                     #Unless specified, sort TEMPLATE properties using a logical order

rain merge TEMPLATE_PATH...       #Merge TEMPLATEs. Last TEMPLATE has priority
                                  #OBJs are merged, ARRs concatenated
                                  #Some STR properties are merged as a single newline-joined STR, e.g. TEMPLATE.Description
--output|-o                       #'PATH'. Def: stdout
--force|-f                        #Rename unmergeable attributes (!Ref, !GetAtt, etc.). Def: fail

rain diff
 TEMPLATE_PATH TEMPLATE_PATH2     #Print diff of 2 TEMPLATEs
--long|-l                         #Print unchanged elements

rain tree                         #See `rain tree` doc


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:            PACKAGE            :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


rain bootstrap                    #Upserts S3 BUCKET used by `rain pkg`
                                  #Also used by `rain [stackset] deploy` to upload TEMPLATE if >51KB but <460KB
                                  #Named 'rain-artifacts-ACCOUNT_ID-REGION'
                                  #BUCKET has:
                                  #  - LocationConstraint 'REGION'
                                  #  - LIFECYCLE_RULE: delete OBJECTs|VERSIONs|MUPLOADs after 7 days
                                  #Requires S3 PACTIONs: CreateBucket|HeadBucket, PutBucketEncryption, PutPublicAccessBlock,
                                  #PutBucketLifecycleConfiguration, ListBucketVersions

rain pkg TEMPLATE_PATH            #Apply all !Rain::* RFUNCs
                                  #First run `rain bootstrap`
                                  #Automatically run by `rain [stackset] deploy`
--output|-o                       #'PATH'

rain pkg|deploy
--s3-bucket                       #'BUCKET'
--s3-prefix                       #STR. OBJECT prefix

!Rain::Env: ENVVAR                #Insert ENVVAR value as STR
!Rain::Embed: PATH                #Insert file content as STR
!Rain::Include: PATH              #Insert JSON|YAML file content as VAL

!Rain::S3[Http]: OBJ|PATH         #Uploads local file|DIR to S3, then insert 's3://BUCKET/OBJECT'
                                  #I.e. like `aws cloudformation package` but:
                                  #  - must add explicit RFUNCs
                                  #  - can use anywhere
                                  #  - cannot attach metadata to OBJECTs nor choose KMS_KEY_ID
                                  #Requires PACTION s3::PutObject
OBJ.Path                          #'PATH' to local file|DIR
OBJ.Zip                           #BOOL. Whether to zip
                                  #Always true with DIR. Def false otherwise.
OBJ.BucketProperty
OBJ.KeyProperty                   #'PROP'. Insert as OBJ { 'BUCKET_PROP': 'BUCKET', 'OBJECT_PROP': 'OBJECT' } instead of STR
OBJ.Format                        #Whether to insert as 's3://...' (def is S3) or 'https://...' (def if S3Http)

!Rain::Module: PATH|URL          !#Insert RAIN_MODULE, which is similar to CloudFormation MODULE, but:
                                  #  - meant to extend RESTYPEs
                                  #  - use a local PATH
                                  #It is a JSON|YAML TEMPLATE, as described below
                                  #Can use !Rain::* itself
TEMPLATE.Resources.ModuleExtension#Must exist, and use Metadata.Extends 'RESTYPE' instead of Type 'RESTYPE'
                                  #It is the entrypoint being inserted
                                  #Additional RESOURCEs can still be specified
                                  #RESOURCE.* are merged with higher priority
TEMPLATE.Description|Parameters   #Can be used like MODULEs
TEMPLATE.Outputs                  #Cannot be used


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:           FORECAST            :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


rain forecast                    !#Like linting, but more about functional problems:
 TEMPLAT_PATH [STACK]             #  - RESOURCE already existing
                                  #  - wrong IAM permissions
                                  #Does not do many checks at the moment, just a few
--skip-iam                        #Do not check for wrong IAM permissions (which are slower)
--type                            #'RESTYPE' (def: all)
--role-arn
--config|-c
--params
--tags                            #Like `rain deploy`


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:             STACK             :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


rain deploy TEMPLATE_PATH [STACK] #Similar to `aws cloudformation deploy`, i.e. do CreateChangeSet() then ExecuteChangeSet(), but improved
                                  #Prints CHANGESET, with confirmation
                                  #Shows real-time updates, including final STACK.*
--keep|-k                         #STACK.DisableRollback true
--termination-protection|-t       #STACK.EnableTerminationProtection true
--role-arn                        #ROLE_ARN. STACK.RoleARN
--detach|-d                       #Wait for operation to start, instead of waiting for its completion
--config|-c                       #'PATH' to YAML|JSON DEPLOY_CONF file
DEPLOY_CONF.Parameters            #OBJ. STACK|SET.Parameters
                                  #Missing required PARAMs are prompted
--params                          #Same as 'PARAM=VAL,...'.
--ignore-unknown-params           #Unless set, fails on unknown PARAMs
DEPLOY_CONF.Tags                  #OBJ. STACK|SET.Tags
--tags                            #Same as 'TAG=VAL,...'

rain ls [STACK]                   #Shows STACK: name, StackStatus, RESOURCEs, PARAMs, OUTPUTs
                                  #Using DescribeStacks|ListStacks|DescribeStackResource[s]()
--all|-a                          #For all REGIONs

rain cat STACK                    #Print STACK's TEMPLATE
--transformed|-t                  #After MACROs applied
--unformatted|-u                  #No prettify

rain watch STACK                  #Print STACK: StackStatus, RESOURCEs, errors
                                  #Updates every 2s
--wait|-w                         #Wait for changes to begin rather than refusing to watch an unchanging stack

rain logs STACK ['RESOURCE']      #Calls DescribeStackEvents(), with improved output
                                  #Only for 'RESOURCE' (def: all)
--all|-a                          #Unless set, exclude some logs which are not very useful: 'Resource creation Initiated', 'User Initiated', 'Transformation succeeded'
--chart|-c                        #Output as an HTML Gantt chart
--days|-d                         #Since NUM (def: unlim) days ago
--length|-l                       #Max NUM (def: unlim) of EVENTs

rain rm STACK                     #Calls DeleteStack(), with improved output
                                  #If STACK.EnableTerminationProtection true, confirms before unsetting it
--role-arn
--detach|-d                       #Like `rain deploy`


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:              SET              :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


rain stackset deploy
 TEMPLATE_PATH [SET]              #Call CreateStackSet|UpdateStackSet()
--ignore-stack-instances|-i       #Unless set, add|remove INSTANCEs with Create|DeleteStackInstances() on already existing SET
                                  #if their ACCOUNT|REGION not targeted anymore
--detach|-d
--config|-c
--params
--tags                            #Like `rain deploy`
DEPLOY_CONF.StackSet              #OBJ. Like CreateStackSet() request, except no StackId|ClientRequestToken
DEPLOY_CONF.StackSetInstanses     #OBJ. Like CreateStackInstances() request, except no OperationId|ParameterOverrides
                                  #Mispelled "instanses"
--regions                         #'REGION,...'. Overrides OBJ.Regions
--accounts                        #'ACCOUNT_ID,...'. Overrides OBJ.Accounts

rain stackset ls [SET]            #Shows SET: name, Status, INSTANCEs, last 10 OPs
                                  #Using ListStackSets|ListStackSetInstances()
--all|-a                          #For all REGIONs

rain stackset rm SET              #Calls DeleteStackSet() and DeleteStackInstances()
                                  #Can select which INSTANCEs to delete (including all|none)
