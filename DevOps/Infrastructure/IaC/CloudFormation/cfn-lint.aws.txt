
            
   CFN-LINT  
            



TODO:
  - linting:
     - cfn-lint
     - https://github.com/aws-cloudformation/cfn-lint-visual-studio-code
     - https://github.com/marketplace/actions/cfn-lint-action
     - https://github.com/threadheap/serverless-ide-vscode
     - https://github.com/iann0036/cfn-rps-lint
     - https://github.com/aws-cloudformation/cloudformation-template-schema
     - https://github.com/awslabs/serverless-rules
  - https://github.com/aws-cloudformation/aws-cloudformation-samples
  - CLIs:
     - https://github.com/aws-cloudformation/rain
     - https://github.com/Sceptre/sceptre
     - https://github.com/udondan/cfn-teleport
     - https://github.com/awslabs/aws-cfn-control
  - diagrams:
     - https://github.com/awslabs/aws-cloudformation-stacks-graph
     - https://github.com/ljacobsson/cfn-diagram
  - Guard:
     - https://docs.aws.amazon.com/cfn-guard/latest/ug/what-is-guard.html
     - https://github.com/aws-cloudformation/cloudformation-guard
     - https://github.com/aws-cloudformation/aws-guard-rules-registry
     - https://github.com/aws-cloudformation/resource-schema-guard-rail
  - AWS CDK
  - Cloud Control API
  - AWS SAM
     - AWS::Serverless TRANSFORM:
        - https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/transform-aws-serverless.html
        - AWS::Serverless::* in https://awscli.amazonaws.com/v2/documentation/api/latest/reference/cloudformation/package.html

VERSION ==>                       #0.80.3
                                  #Python, installed with pip|docker or as an IDE plugin

cfn-lint                          #Lint AWS CloudFormation TEMPLATE file

CONF                              #One of (in priority order):
                                  #  - CLI flags
                                  #  - TEMPLATE|RESOURCE.Metadata.cfn-lint.config
                                  #  - ./.cfnlintrc[.y[a]ml]
                                  #  - ~/.cfnlintrc
                                  #Same syntax as CLI flags, but snake_case, and some properties pluralized (templates|configure_rules|...)

--template|-t TEMPLATE...         #Can be - (stdin)
--ignore-templates TEMPLATE...    #Exclude those

--include-checks|-c STR...        #Include rules which RULE_ID that start with STR
--ignore-checks|-i STR...         #Def: W* and E* but not I*
--mandatory-checks|-m             #Ignore TEMPLATE|RESOURCE.Metadata.cfn-lint.config.ignore_checks
--include-experimental|-e         #Include experimental rules

--configure-rule|-x
 RULE_ID:RVAR=VAL...              #Pass configuration to rules

--list-rules|-l                   #List all rules
--append-rules|-a DIR...          #Add advanced custom rules
                                  #Must be written in Python, i.e. not documented yet
--custom-rules|-z PATH.txt...     #Add simple custom rules
                                  #Each line has space-separated fields:
                                  #  - RESTYPE
                                  #  - RESPROP_VARR (dot-delimited)
                                  #  - one of:
                                  #     - [NOT_]EQUALS (or ==|!=)
                                  #     - [NOT_]IN
                                  #     - IS: VAL is "[NOT_]DEFINED", i.e. [not] undefined
                                  #     - >= > < <=
                                  #     - REGEX_MATCH
                                  #  - VAL
                                  #  - INFO|WARN|ERROR (def: ERROR)
                                  #  - "ERROR_MESSAGE" (def: none)
                                  #Can "-quote spaces
                                  #Can use #COMMENT
                                  #RULE_ID is I9xxx|W9xxx|E9xxx where xxx is line number

--ignore-bad-template|-b          #Ignore syntax errors in TEMPLATE
--update-specs|-u                 #Autofix TEMPLATE

EXIT CODE ==>                     #Or'd flag: 2 (error, E* rules), 4 (warning, W* rules), 8 (info, I* rules)
--non-zero-exit-code STR          #One of:
                                  #  - informational (def): 0 for success
                                  #  - warning: 0 for success|info
                                  #  - error: 0 for success|info|warning
                                  #  - none: always 0, except syntax error
--format|-f                       #Output format among: quiet, parseable, json, junit, pretty (def), sarif
--info|-i                         #Debug logging
--debug|-D                        #Verbose debug logging

--build-graph|-g PATH             #Output RESOURCE dependencies in DOT format

--regions|-r REGION...            #Use TEMPLATE CloudFormation SPEC for those specific REGIONs
--override-spec|-o FILE           #Merged to TEMPLATE CloudFormation SPEC. Can also specify:
                                  #  - SPEC.Include|ExcludeResourceTypes 'RESTYPE'_ARR (can use *)
--registry-schemas|-s DIR...      #DIR with SCHEMA.json of resource ETYPEs

E0000                             #JSON|YAML syntax error
E0001                             #Macro syntax error
E0002                             #Linting rule bug

E1001                             #Only known TEMPLATE.PROP (can add custom RPROP sections 'PROP')
                                  #Required TEMPLATE.Resources
                                  #Valid TEMPLATE.AWSTemplateFormatVersion|Transform
E1002                             #Max 1MB TEMPLATE
I1002                             #Max 900KB TEMPLATE
E1003                             #Max 1KB TEMPLATE.Description
I1003                             #Max 900b TEMPLATE.Description
E1004                             #TEMPLATE.Description is STR

E1012                             #!Ref target exist
E1020                             #!Ref argument is STR
E1026                             #No !Ref inside TEMPLATE.Conditions
E1010                             #!GetAtt arguments are valid
W1001                             #!Ref and !GetAtt target exist, when using CONDITIONs

E1011                             #!FindInMap arguments are valid
W1011                             #!FindInMap keys exist
E1015                             #!GetAz arguments are valid
E1016                             #!ImportValue arguments are valid
E1017                             #!Select arguments are valid
E1018                             #!Split arguments are valid
E1019                             #!Sub arguments are valid
W1019                             #!Sub arguments are required
W1020                             #!Sub arguments are not only static STRs
E1029                             #!Sub is used if STR contains ${VAR}
                                  #Can ignore RPROP custom_excludes 'REGEXP'
E1022                             #!Join arguments are valid
I1022                             #Prefer !Sub over !Join with '' delimiter
E1021                             #!Base64 arguments are valid
E1023                             #!Not argument is ARR
E1024                             #!Cidr arguments are valid
E1028                             #!If arguments are valid
E1030                             #!Length arguments are valid
E1031                             #!ToJsonString arguments are valid
E1032                             #!ForEach arguments are valid
E1027                             #{{resolve:...}} only used in supported places

E2001                             #PARAM syntax error
W2001                             #PARAMs that are defined are used
E2002                             #Used PARAMs have correct type
E2003                             #PARAM names are valid
E2010                             #Max 200 PARAMs
I2010                             #Max 180 PARAMs
E2011                             #PARAM name max 255 chars
I2011                             #PARAM name max 230 chars
E2012                             #PARAM value max 1KB
I2012                             #PARAM value max 900b
E2014                             #PARAM default value does not use !Ref
E2015                             #PARAM default value satisfies constraints
W2030                             #PARAM value satisfies AllowedValues
W2031                             #PARAM value satisfies AllowedPattern

E2520                             #Mutually exclusive RESPROPs not used together
E2521                             #Mutually required RESPROPs used together
E2522                             #RESPROPs that require at least one of multiple other RESPROPs
E2523                             #RESPROPs that require exactly one of multiple other RESPROPs
W2501                             #PARAM 'Password' should use NoEcho and {{resolve:...}}

E2507                             #IAM POLICY configured correctly
W2511                             #IAM resource-based POLICY configured correctly
E2529                             #Max 2 CloudWatch logs SubscriptionFilter per LogGroup
W2510                             #PARAM used for Lambda FUNC_VERSION.MemorySize should be one of allowed values
E2531                             #No deprecated Lambda FUNC_VERSION.Runtime
W2531                             #No deprecated Lambda FUNC_VERSION.Runtime
W2533                             #Lambda FUNC_VERSION.Runtime|Handler required if PackageType 'Zip'
W2506                             #EC2 Image.Id RESTYPE is AWS::EC2::Image::Id or AWS::SSM::Parameter::ValueAWS::EC2::Image::Id
E2506                             #EC2 SecurityGroup.Ingress configured correctly
E2504                             #EBS configured correctly
E2503                             #ELB configured correctly
E2532                             #Step Functions StateMachine configured correctly
E2540                             #CodePipeline Stages configured correctly
E2541                             #CodePipeline Stage Actions configured correctly

E3000                             #Resource ETYPE's ESCHEMA is valid
E3001                             #RESOURCE usage is valid
E3002                             #RESOURCEs' RESPROPs are valid
W3002                             #If RESPROPs is S3 URL, should use `aws cloudformation package`
E3003                             #Required RESPROPs
E3004                             #No !RFUNC cycles in RESPROPs
E3005                             #Valid RESOURCE.DependsOn
W3005                             #Check obsolete DependsOn configuration for Resources
                                  #Check if DependsOn is specified if not needed. A Ref or a Fn::GetAtt already is an implicit dependency.
                                  #resources,dependson,ref,getatt
E3006                             #Resources have appropriate names
                                  #Check if Resources are properly named (A-Za-z0-9)
                                  #resources
E3007                             #Unique resource and parameter names
                                  #All resources and parameters must have unique names
                                  #parameters,resources
E3008                             #Check values of properties for valid Refs and GetAtts
                                  #Checks resource properties for Ref and GetAtt values
                                  #resources,ref,getatt
E3010                             #Resource limit not exceeded
                                  #Check the number of Resources in the template is less than the upper limit
                                  #resources,limits
W3010                             #Availability Zone Parameters should not be hardcoded
                                  #Check if an Availability Zone property is hardcoded.
                                  #parameters,availabilityzone
I3010                             #Resource limit
                                  #Check the number of Resources in the template is approaching the upper limit
                                  #resources,limits
E3011                             #Resource name limit not exceeded
                                  #Check the size of Resource names in the template is less than the upper limit
                                  #resources,limits
W3011                             #Check resources with UpdateReplacePolicy/DeletionPolicy have both
                                  #Both UpdateReplacePolicy and DeletionPolicy are needed to protect resources from deletion
                                  #resources,updatereplacepolicy,deletionpolicy
I3011                             #Check stateful resources have a set UpdateReplacePolicy/DeletionPolicy
                                  #The default action when replacing/removing a resource is to delete it. This check requires you to explicitly set policies
                                  #resources,updatereplacepolicy,deletionpolicy
E3012                             #Check resource properties values
                                  #Checks resource property values with Primitive Types for values that match those types.
                                  #strict:boolean:False
                                  #resources
                                  #See https://github.com/aws-cloudformation/cfn-lint/blob/main/docs/cfn-resource-specification.md#valueprimitivetype
I3012                             #Resource name limit
                                  #Check the size of Resource names in the template is approaching the upper limit
                                  #resources,limits
E3013                             #CloudFront Aliases
                                  #CloudFront aliases should contain valid domain names
                                  #properties,cloudfront
I3013                             #Check resources with auto expiring content have explicit retention period
                                  #The behaviour for data retention is different across AWS Services.
                                  #If no retention period is specified the default for some services is to delete the data after a period of time.
                                  #This check requires you to explicitly set the retention period for those resources to avoid unexpected data losses
                                  #resources,retentionperiod
E3016                             #Check the configuration of a resources UpdatePolicy
                                  #Make sure a resources UpdatePolicy is properly configured
                                  #resources,updatepolicy
E3017                             #Property is required based on another properties value
                                  #When certain properties have a certain value it results in other properties being required.
                                  #This rule will validate those required properties are specified when those values are supplied
                                  #resources
I3037                             #Check if a list that allows duplicates has any duplicates
                                  #Certain lists support duplicate items.Provide an alert when list of strings or numbers have repeats.
                                  #resources,property,list
E3018                             #Property is unwanted based on another properties value
                                  #When certain properties have a certain value it results in other properties not being needed.
                                  #This rule will validate those unwanted properties are not specified when those values are supplied
                                  #resources
E3020                             #Validate Route53 RecordSets
                                  #Check if all RecordSets are correctly configured
                                  #resources,route53,record_set
E3021                             #Check Events Rule Targets are less than or equal to 5
                                  #CloudWatch Events Rule can only support up to 5 targets
                                  #resources,events
E3022                             #Resource SubnetRouteTableAssociation Properties
                                  #Validate there is only one SubnetRouteTableAssociation per subnet
                                  #resources,ec2,subnet,route table
E3025                             #RDS instance type is compatible with the RDS type
                                  #Check the RDS instance types are supported by the type of RDS engine. Only if the values are strings will this be checked.
                                  #resources,rds
E3026                             #Check Elastic Cache Redis Cluster settings
                                  #Evaluate Redis Cluster groups to make sure automatic failover is enabled when cluster mode is enabled
                                  #resources,elasticcache
E3027                             #Validate AWS Event ScheduleExpression format
                                  #Validate the formation of the AWS::Event ScheduleExpression
                                  #resources,events
E3030                             #Check if properties have a valid value
                                  #Check if properties have a valid value in case of an enumator
                                  #resources,property,allowed value
                                  #See https://github.com/aws-cloudformation/cfn-lint/blob/main/docs/cfn-resource-specification.md#allowedvalue
E3031                             #Check if property values adhere to a specific pattern
                                  #Check if properties have a valid value in case of a pattern (Regular Expression)
                                  #exceptions:list:[]
                                  #resources,property,allowed pattern,regex
E3032                             #Check if a list has between min and max number of values specified
                                  #Check lists for the number of items in the list to validate they are between the minimum and maximum
                                  #resources,property,list,size
                                  #See https://github.com/aws-cloudformation/cfn-lint/blob/main/docs/cfn-resource-specification.md#allowedpattern
E3033                             #Check if a string has between min and max number of values specified
                                  #Check strings for its length between the minimum and maximum
                                  #resources,property,string,size
E3034                             #Check if a number is between min and max
                                  #Check numbers (integers and floats) for its value being between the minimum and maximum
                                  #resources,property,number,size
E3035                             #Check DeletionPolicy values for Resources
                                  #Check that the DeletionPolicy values are valid
                                  #resources,deletionpolicy
E3036                             #Check UpdateReplacePolicy values for Resources
                                  #Check that the UpdateReplacePolicy values are valid
                                  #resources,updatereplacepolicy
E3037                             #Check if a list has duplicate values
                                  #Certain lists don't support duplicate items. Check when duplicates are provided but not supported.
                                  #resources,property,list
W3037                             #Check IAM Permission configuration
                                  #Check for valid IAM Permissions
                                  #properties,iam,permissions
                                  #Experimental
E3038                             #Check if Serverless Resources have Serverless Transform
                                  #Check that a template with Serverless Resources also includes the Serverless Transform
                                  #resources,transform
E3039                             #AttributeDefinitions / KeySchemas mismatch
                                  #Verify the set of Attributes in AttributeDefinitions and KeySchemas match
                                  #resources,dynamodb
E3041                             #RecordSet HostedZoneName is a superdomain of Name
                                  #In a RecordSet, the HostedZoneName must be a superdomain of the Name being validated
                                  #resource,properties,route53
E3042                             #Check at least one essential container is specified
                                  #Check that every TaskDefinition specifies at least one essential container
                                  #properties,ecs,task,container,fargate
I3042                             #ARNs should use correctly placed Pseudo Parameters
                                  #Checks Resources if ARNs use correctly placed Pseudo Parameters instead of hardcoded Partition, Region, and Account Number
                                  #partition:boolean:True region:boolean:False accountId:boolean:False resources
E3043                             #Validate parameters for in a nested stack
                                  #Evalute if parameters for a nested stack are specified and if parameters are specified for a nested stack that aren't required.
                                  #resources,cloudformation
E3044                             #Check Fargate service scheduling strategy
                                  #Check that Fargate service scheduling strategy is REPLICA
                                  #properties,ecs,service,container,fargate
E3050                             #Check if REFing to a IAM resource with path set
                                  #Some resources don't support looking up the IAM resource by name. This check validates when a REF is being used and the Path is not '/'
                                  #properties,iam
I3100                             #Checks for legacy instance type generations
                                  #New instance type generations increase performance and decrease cost
                                  #resources,ec2,rds,elasticcache,elasticsearch
E3502                             #Check if a JSON Object is within size limits
                                  #Validate properties that are JSON values so that their length is within the limits
                                  #resources,limits,json
E3503                             #ValidationDomain is superdomain of DomainName
                                  #In ValidationDomainOptions, the ValidationDomain must be a superdomain of the DomainName being validated
                                  #certificate,certificatemanager,domainvalidationoptions,validationdomain
E3504                             #Check minimum 90 period is met between BackupPlan cold and delete
                                  #Check that Backup plans with lifecycle rules have >= 90 days between cold and delete
                                  #properties,backup,plan,lifecycle

E4001                             #Metadata Interface have appropriate properties
                                  #Metadata Interface properties are properly configured
                                  #metadata
W4001                             #Metadata Interface parameters exist
                                  #Metadata Interface parameters actually exist
                                  #metadata
E4002                             #Validate the configuration of the Metadata section
                                  #Validates that Metadata section is an object and has no null values
                                  #metadata
W4002                             #Check for NoEcho References
                                  #Check if there is a NoEcho enabled parameter referenced within a resources Metadata section
                                  #resources,NoEcho

E5001                             #Check that Modules resources are valid
                                  #Check that Modules resources are valid
                                  #resources,modules

E6001                             #Outputs have appropriate properties
                                  #Making sure the outputs are properly configured
                                  #outputs
W6001                             #Check Outputs using ImportValue
                                  #Check if the Output value is set using ImportValue, so creating an Output of an Output
                                  #outputs,importvalue
E6002                             #Outputs have required properties
                                  #Making sure the outputs have required properties
                                  #outputs
E6003                             #Outputs have values of strings
                                  #Making sure the outputs have strings as values
                                  #outputs
E6004                             #Outputs have appropriate names
                                  #Check if Outputs are properly named (A-Za-z0-9)
                                  #outputs
E6005                             #Outputs descriptions can only be strings
                                  #Outputs descriptions can only be strings
                                  #outputs
E6010                             #Output limit not exceeded
                                  #Check the number of Outputs in the template is less than the upper limit
                                  #outputs,limits
I6010                             #Output limit
                                  #Check the number of Outputs in the template is approaching the upper limit
                                  #outputs,limits
E6011                             #Output name limit not exceeded
                                  #Check the size of Output names in the template is less than the upper limit
                                  #outputs,limits
I6011                             #Output name limit
                                  #Check the size of Output names in the template is approaching the upper limit
                                  #outputs,limits
E6012                             #Output description limit not exceeded
                                  #Check the size of Output description in the template is less than the upper limit
                                  #outputs,limits
I6012                             #Output description limit
                                  #Check the size of Output description in the template is approaching the upper limit
                                  #outputs,limits
E7001                             #Mappings are appropriately configured
                                  #Check if Mappings are properly configured
                                  #mappings
W7001                             #Check if Mappings are Used
                                  #Making sure the mappings defined are used
                                  #mappings
E7002                             #Mappings have appropriate names
                                  #Check if Mappings are properly named (A-Za-z0-9)
                                  #mappings
E7003                             #Mapping keys are strings and alphanumeric
                                  #Check if Mappings keys are properly typed as strings and alphanumeric
                                  #mappings
E7010                             #Mapping limit not exceeded
                                  #Check the number of Mappings in the template is less than the upper limit
                                  #mappings,limits
I7010                             #Mapping limit
                                  #Check the number of Mappings in the template is approaching the upper limit
                                  #mappings,limits
E7011                             #Mapping name limit not exceeded
                                  #Check the size of Mapping names in the template is less than the upper limit
                                  #mappings,limits
I7011                             #Mapping name limit
                                  #Check the size of Mapping names in the template is approaching the upper limit
                                  #mappings,limits
E7012                             #Mapping attribute limit not exceeded
                                  #Check if the amount of Mapping attributes in the template is less than the upper limit
                                  #mappings,limits
I7012                             #Mapping attribute limit
                                  #Check if the amount of Mapping attributes in the template is approaching the upper limit
                                  #mappings,limits

E8001                             #Conditions have appropriate properties
                                  #Check if Conditions are properly configured
                                  #conditions
W8001                             #Check if Conditions are Used
                                  #Making sure the conditions defined are used
                                  #conditions
E8002                             #Check if the referenced Conditions are defined
                                  #Making sure the used conditions are actually defined in the Conditions section
                                  #conditions
E8003                             #Check Fn::Equals structure for validity
                                  #Check Fn::Equals is a list of two elements
                                  #functions,equals
W8003                             #Fn::Equals will always return true or false
                                  #Validate Fn::Equals to see if its comparing two strings or two equal items. While this works it may not be intended.
                                  #functions,equals
E8004                             #Check Fn::And structure for validity
                                  #Check Fn::And is a list of two elements
                                  #functions,and
E8005                             #Check Fn::Not structure for validity
                                  #Check Fn::Not is a list of one element
                                  #functions,not
E8006                             #Check Fn::Or structure for validity
                                  #Check Fn::Or is a list of two elements
                                  #functions,or
