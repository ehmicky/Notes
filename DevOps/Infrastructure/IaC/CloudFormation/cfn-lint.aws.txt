
            
   CFN-LINT  
            



TODO:
  - https://github.com/aws-cloudformation/cfn-lint-visual-studio-code
  - https://github.com/marketplace/actions/cfn-lint-action
  - https://github.com/threadheap/serverless-ide-vscode
  - https://github.com/iann0036/cfn-rps-lint
  - https://github.com/aws-cloudformation/cloudformation-template-schema
  - https://github.com/awslabs/serverless-rules
  - https://github.com/awslabs/aws-cfn-control
  - https://github.com/awslabs/aws-cloudformation-stacks-graph

VERSION ==>                       #0.80.3
                                  #Python, installed with pip|docker or as an IDE plugin

cfn-lint                          #Lint AWS CloudFormation TEMPLATE file

CONF                              #One of (in priority order):
                                  #  - CLI flags
                                  #  - TEMPLATE|RESOURCE.Metadata.cfn-lint.config
                                  #  - ./.cfnlintrc[.y[a]ml]
                                  #  - ~/.cfnlintrc
                                  #Same syntax as CLI flags, but snake_case, and some properties pluralized (templates|configure_rules|...)

--template|-t TEMPLATE...         #Can be - (stdin)
--ignore-templates TEMPLATE...    #Exclude those

--include-checks|-c STR...        #Include rules which RULE_ID that start with STR
--ignore-checks|-i STR...         #Def: W* and E* but not I*
--mandatory-checks|-m             #Ignore TEMPLATE|RESOURCE.Metadata.cfn-lint.config.ignore_checks
--include-experimental|-e         #Include experimental rules

--configure-rule|-x
 RULE_ID:RVAR=VAL...              #Pass configuration to rules

--list-rules|-l                   #List all rules
--append-rules|-a DIR...          #Add advanced custom rules
                                  #Must be written in Python, i.e. not documented yet
--custom-rules|-z PATH.txt...     #Add simple custom rules
                                  #Each line has space-separated fields:
                                  #  - RESTYPE
                                  #  - RESPROP_VARR (dot-delimited)
                                  #  - one of:
                                  #     - [NOT_]EQUALS (or ==|!=)
                                  #     - [NOT_]IN
                                  #     - IS: VAL is "[NOT_]DEFINED", i.e. [not] undefined
                                  #     - >= > < <=
                                  #     - REGEX_MATCH
                                  #  - VAL
                                  #  - INFO|WARN|ERROR (def: ERROR)
                                  #  - "ERROR_MESSAGE" (def: none)
                                  #Can "-quote spaces
                                  #Can use #COMMENT
                                  #RULE_ID is I9xxx|W9xxx|E9xxx where xxx is line number

--ignore-bad-template|-b          #Ignore syntax errors in TEMPLATE
--update-specs|-u                 #Autofix TEMPLATE

EXIT CODE ==>                     #Or'd flag: 2 (error, E* rules), 4 (warning, W* rules), 8 (info, I* rules)
--non-zero-exit-code STR          #One of:
                                  #  - informational (def): 0 for success
                                  #  - warning: 0 for success|info
                                  #  - error: 0 for success|info|warning
                                  #  - none: always 0, except syntax error
--format|-f                       #Output format among: quiet, parseable, json, junit, pretty (def), sarif
--info|-i                         #Debug logging
--debug|-D                        #Verbose debug logging

--build-graph|-g PATH             #Output RESOURCE dependencies in DOT format

--regions|-r REGION...            #Use TEMPLATE CloudFormation SPEC for those specific REGIONs
--override-spec|-o FILE           #Merged to TEMPLATE CloudFormation SPEC. Can also specify:
                                  #  - SPEC.Include|ExcludeResourceTypes 'RESTYPE'_ARR (can use *)
--registry-schemas|-s DIR...      #DIR with SCHEMA.json of resource ETYPEs

E0000                             #Parsing error found when parsing the template
                                  #Checks for JSON/YAML formatting errors in your template
                                  #base
E0001                             #Error found when transforming the template
                                  #Errors found when performing transformation on the template
                                  #base,transform
E0002                             #Error processing rule on the template
                                  #Errors found when processing a rule on the template
                                  #base,rule

E1001                             #Basic CloudFormation Template Configuration
                                  #Making sure the basic CloudFormation template components are properly configured
                                  #sections:string:
                                  #base
W1001                             #Ref/GetAtt to resource that is available when conditions are applied
                                  #Check the Conditions that affect a Ref/GetAtt to make sure the resource being related to is available when there is a resource condition.
                                  #conditions,resources,relationships,ref,getatt,sub
E1002                             #Template size limit
                                  #Check the size of the template is less than the upper limit
                                  #limits
I1002                             #Template size limit
                                  #Check the size of the template is approaching the upper limit
                                  #limits
E1003                             #Template description limit
                                  #Check if the size of the template description is less than the upper limit
                                  #description,limits
I1003                             #Template description limit
                                  #Check if the size of the template description is approaching the upper limit
                                  #description,limits
E1004                             #Template description can only be a string
                                  #Template description can only be a string
                                  #description
E1010                             #GetAtt validation of parameters
                                  #Validates that GetAtt parameters are to valid resources and properties of those resources
                                  #functions,getatt
E1011                             #FindInMap validation of configuration
                                  #Making sure the function is a list of appropriate config
                                  #functions,findinmap
W1011                             #FindInMap keys exist in the map
                                  #Checks the keys in a FindInMap to make sure they exist. Check only if the Map Name is a string and if the key is a string.
                                  #functions,findinmap
E1012                             #Check if Refs exist
                                  #Making sure the refs exist
                                  #functions,ref
E1015                             #GetAz validation of parameters
                                  #Making sure the GetAz function is properly configured
                                  #functions,getaz
E1016                             #ImportValue validation of parameters
                                  #Making sure the ImportValue function is properly configured
                                  #functions,importvalue
E1017                             #Select validation of parameters
                                  #Making sure the Select function is properly configured
                                  #functions,select
E1018                             #Split validation of parameters
                                  #Making sure the split function is properly configured
                                  #functions,split
E1019                             #Sub validation of parameters
                                  #Making sure the sub function is properly configured
                                  #functions,sub
W1019                             #Sub validation of parameters
                                  #Validate that Fn::Sub Parameters are used
                                  #functions,sub
E1020                             #Ref validation of value
                                  #Making sure the Ref has a String value (no other functions are supported)
                                  #functions,ref
W1020                             #Sub isn't needed if it doesn't have a variable defined
                                  #Checks sub strings to see if a variable is defined.
                                  #functions,sub
E1021                             #Base64 validation of parameters
                                  #Making sure the Base64 function is properly configured
                                  #functions,base64
E1022                             #Join validation of parameters
                                  #Making sure the join function is properly configured
                                  #functions,join
I1022                             #Use Sub instead of Join
                                  #Prefer a sub instead of Join when using a join delimiter that is empty
                                  #functions,sub,join
E1023                             #Validation NOT function configuration
                                  #Making sure that NOT functions are list
                                  #functions,not
E1024                             #Cidr validation of parameters
                                  #Making sure the function CIDR is a list with valid values
                                  #functions,cidr
E1026                             #Cannot reference resources in the Conditions block of the template
                                  #Check that any Refs in the Conditions block uses no resources
                                  #conditions,functions,ref
E1027                             #Check dynamic references secure strings are in supported locations
                                  #Dynamic References Secure Strings are only supported for a small set of resource properties.
                                  #Validate that they are being used in the correct location when checking values and Fn::Sub in resource properties.
                                  #Currently doesn't check outputs, maps, conditions, parameters, and descriptions.
                                  #functions,dynamic reference
E1028                             #Check Fn::If structure for validity
                                  #Check Fn::If to make sure its valid. Condition has to be a string.
                                  #functions,if
E1029                             #Sub is required if a variable is used in a string
                                  #If a substitution variable exists in a string but isn't wrapped with the Fn::Sub function the deployment will fail.
                                  #custom_excludes:string:
                                  #functions,sub
E1030                             #Length validation of parameters
                                  #Making sure Fn::Length is configured correctly
                                  #functions,length
E1031                             #ToJsonString validation of parameters
                                  #Making sure Fn::ToJsonString is configured correctly
                                  #functions,toJsonString
E1032                             #Validates ForEach functions
                                  #Validates that ForEach parameters have a valid configuration
                                  #functions,foreach

E2001                             #Parameters have appropriate properties
                                  #Making sure the parameters are properly configured
                                  #parameters
W2001                             #Check if Parameters are Used
                                  #Making sure the parameters defined are used
                                  #parameters
E2002                             #Parameters have appropriate type
                                  #Making sure the parameters have a correct type
                                  #parameters
E2003                             #Parameters have appropriate names
                                  #Check if Parameters are properly named (A-Za-z0-9)
                                  #parameters
E2010                             #Parameter limit not exceeded
                                  #Check the number of Parameters in the template is less than the upper limit
                                  #parameters,limits
I2010                             #Parameter limit
                                  #Check the number of Parameters in the template is approaching the upper limit
                                  #parameters,limits
E2011                             #Parameter name limit not exceeded
                                  #Check the size of Parameter names in the template is less than the upper limit
                                  #parameters,limits
I2011                             #Parameter name limit
                                  #Check the size of Parameter names in the template is approaching the upper limit
                                  #parameters,limits
E2012                             #Parameter value limit not exceeded
                                  #Check if the size of Parameter values in the template is less than the upper limit
                                  #parameters,limits
I2012                             #Parameter value limit
                                  #Check if the size of Parameter values in the template is approaching the upper limit
                                  #parameters,limits
E2014                             #Default value cannot use Refs
                                  #Check if Refs are not used in Parameter Defaults
                                  #parameters,ref
E2015                             #Default value is within parameter constraints
                                  #Making sure the parameters have a default value inside AllowedValues, MinValue, MaxValue, AllowedPattern
                                  #parameters
W2030                             #Check if parameters have a valid value
                                  #Check if parameters have a valid value in case of an enumator. The Parameter's allowed values is based on the usages in property (Ref)
                                  #parameters,resources,property,allowed value
W2031                             #Check if parameters have a valid value based on an allowed pattern
                                  #Check if parameters have a valid value in a pattern. The Parameter's allowed pattern is based on the usages in property (Ref)
                                  #parameters,resources,property,allowed pattern
W2501                             #Check if Password Properties are correctly configured
                                  #Password properties should not be strings and if parameter using NoEcho
                                  #parameters,passwords,security,dynamic reference
E2503                             #Resource ELB Properties
                                  #See if Elb Resource Properties are set correctly HTTPS has certificate HTTP has no certificate
                                  #properties,elb
E2504                             #Check Ec2 Ebs Properties
                                  #See if Ec2 Ebs Properties are valid
                                  #properties,ec2,ebs
E2506                             #Resource EC2 Security Group Ingress Properties
                                  #See if EC2 Security Group Ingress Properties are set correctly.
                                  #Check that "SourceSecurityGroupId" or "SourceSecurityGroupName" are are exclusive and using the type of Ref or GetAtt
                                  #resources,ec2,securitygroup
W2506                             #Check if ImageId Parameters have the correct type
                                  #See if there are any refs for ImageId to a parameter of inappropriate type.
                                  #Appropriate Types are [AWS::EC2::Image::Id, AWS::SSM::Parameter::ValueAWS::EC2::Image::Id]
                                  #parameters,ec2,imageid
E2507                             #Check if IAM Policies are properly configured
                                  #See if there elements inside an IAM policy are correct
                                  #properties,iam
W2510                             #Parameter Memory Size attributes should have max and min
                                  #Check if a parameter that is used for Lambda memory size should have a min and max size that matches Lambda constraints
                                  #parameters,lambda
W2511                             #Check IAM Resource Policies syntax
                                  #See if the elements inside an IAM Resource policy are configured correctly.
                                  #properties,iam
E2520                             #Check Properties that are mutually exclusive
                                  #Making sure CloudFormation properties that are exclusive are not defined
                                  #resources
E2521                             #Check Properties that are required together
                                  #Make sure CloudFormation resource properties are included together when required
                                  #resources
E2522                             #Check Properties that need at least one of a list of properties
                                  #Making sure CloudFormation properties that require at least one property from a list. More than one can be included.
                                  #resources
E2523                             #Check Properties that need only one of a list of properties
                                  #Making sure CloudFormation properties that require only one property from a list. One has to be specified.
                                  #resources
E2529                             #Check for SubscriptionFilters have beyond 2 attachments to a CloudWatch Log Group
                                  #The current limit for a CloudWatch Log Group is they can have 2 subscription filters.
                                  #We will look for duplicate LogGroupNames inside Subscription Filters and make sure they are within 2.
                                  #This doesn't account for any other subscription filters getting set.
                                  #resources,lambda
E2531                             #Check if EOL Lambda Function Runtimes are used
                                  #Check if an EOL Lambda Runtime is specified and give an error if used.
                                  #resources,lambda,runtime
W2531                             #Check if EOL Lambda Function Runtimes are used
                                  #Check if an EOL Lambda Runtime is specified and give a warning if used.
                                  #resources,lambda,runtime
E2532                             #Check State Machine Definition for proper syntax
                                  #Check the State Machine String Definition to make sure its JSON. Validate basic syntax of the file to determine validity.
                                  #resources,stepfunctions
W2533                             #Check required properties for Lambda if the deployment package is a .zip file
                                  #When the package type is Zip, you must also specify the handler and runtime properties.
                                  #resources,lambda
E2540                             #CodePipeline Stages
                                  #See if CodePipeline stages are set correctly
                                  #properties,codepipeline
E2541                             #CodePipeline Stage Actions
                                  #See if CodePipeline stage actions are set correctly
                                  #resources,codepipeline

E3000                             #Resource schema
                                  #CloudFormation Registry resource schema validation
                                  #resources
E3001                             #Basic CloudFormation Resource Check
                                  #Making sure the basic CloudFormation resources are properly configured
                                  #resources
E3002                             #Resource properties are invalid
                                  #Making sure that resources properties are properly configured
                                  #resources
                                  #See https://github.com/aws-cloudformation/cfn-lint/blob/main/docs/cfn-resource-specification.md#properties
W3002                             #Warn when properties are configured to only work with the package command
                                  #Some properties can be configured to only work with the CloudFormationpackage command.
                                  #Warn when this is the case so user is aware.
                                  #resources
E3003                             #Required Resource properties are missing
                                  #Making sure that Resources properties that are required exist
                                  #resources
                                  #See https://github.com/aws-cloudformation/cfn-lint/blob/main/docs/cfn-resource-specification.md#required
E3004                             #Resource dependencies are not circular
                                  #Check that Resources are not circularly dependent by DependsOn, Ref, Sub, or GetAtt
                                  #resources,circularly,dependson,ref,sub,getatt
E3005                             #Check DependsOn values for Resources
                                  #Check that the DependsOn values are valid
                                  #resources,dependson
W3005                             #Check obsolete DependsOn configuration for Resources
                                  #Check if DependsOn is specified if not needed. A Ref or a Fn::GetAtt already is an implicit dependency.
                                  #resources,dependson,ref,getatt
E3006                             #Resources have appropriate names
                                  #Check if Resources are properly named (A-Za-z0-9)
                                  #resources
E3007                             #Unique resource and parameter names
                                  #All resources and parameters must have unique names
                                  #parameters,resources
E3008                             #Check values of properties for valid Refs and GetAtts
                                  #Checks resource properties for Ref and GetAtt values
                                  #resources,ref,getatt
E3010                             #Resource limit not exceeded
                                  #Check the number of Resources in the template is less than the upper limit
                                  #resources,limits
W3010                             #Availability Zone Parameters should not be hardcoded
                                  #Check if an Availability Zone property is hardcoded.
                                  #parameters,availabilityzone
I3010                             #Resource limit
                                  #Check the number of Resources in the template is approaching the upper limit
                                  #resources,limits
E3011                             #Resource name limit not exceeded
                                  #Check the size of Resource names in the template is less than the upper limit
                                  #resources,limits
W3011                             #Check resources with UpdateReplacePolicy/DeletionPolicy have both
                                  #Both UpdateReplacePolicy and DeletionPolicy are needed to protect resources from deletion
                                  #resources,updatereplacepolicy,deletionpolicy
I3011                             #Check stateful resources have a set UpdateReplacePolicy/DeletionPolicy
                                  #The default action when replacing/removing a resource is to delete it. This check requires you to explicitly set policies
                                  #resources,updatereplacepolicy,deletionpolicy
E3012                             #Check resource properties values
                                  #Checks resource property values with Primitive Types for values that match those types.
                                  #strict:boolean:False
                                  #resources
                                  #See https://github.com/aws-cloudformation/cfn-lint/blob/main/docs/cfn-resource-specification.md#valueprimitivetype
I3012                             #Resource name limit
                                  #Check the size of Resource names in the template is approaching the upper limit
                                  #resources,limits
E3013                             #CloudFront Aliases
                                  #CloudFront aliases should contain valid domain names
                                  #properties,cloudfront
I3013                             #Check resources with auto expiring content have explicit retention period
                                  #The behaviour for data retention is different across AWS Services.
                                  #If no retention period is specified the default for some services is to delete the data after a period of time.
                                  #This check requires you to explicitly set the retention period for those resources to avoid unexpected data losses
                                  #resources,retentionperiod
E3016                             #Check the configuration of a resources UpdatePolicy
                                  #Make sure a resources UpdatePolicy is properly configured
                                  #resources,updatepolicy
E3017                             #Property is required based on another properties value
                                  #When certain properties have a certain value it results in other properties being required.
                                  #This rule will validate those required properties are specified when those values are supplied
                                  #resources
I3037                             #Check if a list that allows duplicates has any duplicates
                                  #Certain lists support duplicate items.Provide an alert when list of strings or numbers have repeats.
                                  #resources,property,list
E3018                             #Property is unwanted based on another properties value
                                  #When certain properties have a certain value it results in other properties not being needed.
                                  #This rule will validate those unwanted properties are not specified when those values are supplied
                                  #resources
E3020                             #Validate Route53 RecordSets
                                  #Check if all RecordSets are correctly configured
                                  #resources,route53,record_set
E3021                             #Check Events Rule Targets are less than or equal to 5
                                  #CloudWatch Events Rule can only support up to 5 targets
                                  #resources,events
E3022                             #Resource SubnetRouteTableAssociation Properties
                                  #Validate there is only one SubnetRouteTableAssociation per subnet
                                  #resources,ec2,subnet,route table
E3025                             #RDS instance type is compatible with the RDS type
                                  #Check the RDS instance types are supported by the type of RDS engine. Only if the values are strings will this be checked.
                                  #resources,rds
E3026                             #Check Elastic Cache Redis Cluster settings
                                  #Evaluate Redis Cluster groups to make sure automatic failover is enabled when cluster mode is enabled
                                  #resources,elasticcache
E3027                             #Validate AWS Event ScheduleExpression format
                                  #Validate the formation of the AWS::Event ScheduleExpression
                                  #resources,events
E3030                             #Check if properties have a valid value
                                  #Check if properties have a valid value in case of an enumator
                                  #resources,property,allowed value
                                  #See https://github.com/aws-cloudformation/cfn-lint/blob/main/docs/cfn-resource-specification.md#allowedvalue
E3031                             #Check if property values adhere to a specific pattern
                                  #Check if properties have a valid value in case of a pattern (Regular Expression)
                                  #exceptions:list:[]
                                  #resources,property,allowed pattern,regex
E3032                             #Check if a list has between min and max number of values specified
                                  #Check lists for the number of items in the list to validate they are between the minimum and maximum
                                  #resources,property,list,size
                                  #See https://github.com/aws-cloudformation/cfn-lint/blob/main/docs/cfn-resource-specification.md#allowedpattern
E3033                             #Check if a string has between min and max number of values specified
                                  #Check strings for its length between the minimum and maximum
                                  #resources,property,string,size
E3034                             #Check if a number is between min and max
                                  #Check numbers (integers and floats) for its value being between the minimum and maximum
                                  #resources,property,number,size
E3035                             #Check DeletionPolicy values for Resources
                                  #Check that the DeletionPolicy values are valid
                                  #resources,deletionpolicy
E3036                             #Check UpdateReplacePolicy values for Resources
                                  #Check that the UpdateReplacePolicy values are valid
                                  #resources,updatereplacepolicy
E3037                             #Check if a list has duplicate values
                                  #Certain lists don't support duplicate items. Check when duplicates are provided but not supported.
                                  #resources,property,list
W3037                             #Check IAM Permission configuration
                                  #Check for valid IAM Permissions
                                  #properties,iam,permissions
                                  #Experimental
E3038                             #Check if Serverless Resources have Serverless Transform
                                  #Check that a template with Serverless Resources also includes the Serverless Transform
                                  #resources,transform
E3039                             #AttributeDefinitions / KeySchemas mismatch
                                  #Verify the set of Attributes in AttributeDefinitions and KeySchemas match
                                  #resources,dynamodb
E3041                             #RecordSet HostedZoneName is a superdomain of Name
                                  #In a RecordSet, the HostedZoneName must be a superdomain of the Name being validated
                                  #resource,properties,route53
E3042                             #Check at least one essential container is specified
                                  #Check that every TaskDefinition specifies at least one essential container
                                  #properties,ecs,task,container,fargate
I3042                             #ARNs should use correctly placed Pseudo Parameters
                                  #Checks Resources if ARNs use correctly placed Pseudo Parameters instead of hardcoded Partition, Region, and Account Number
                                  #partition:boolean:True region:boolean:False accountId:boolean:False resources
E3043                             #Validate parameters for in a nested stack
                                  #Evalute if parameters for a nested stack are specified and if parameters are specified for a nested stack that aren't required.
                                  #resources,cloudformation
E3044                             #Check Fargate service scheduling strategy
                                  #Check that Fargate service scheduling strategy is REPLICA
                                  #properties,ecs,service,container,fargate
E3050                             #Check if REFing to a IAM resource with path set
                                  #Some resources don't support looking up the IAM resource by name. This check validates when a REF is being used and the Path is not '/'
                                  #properties,iam
I3100                             #Checks for legacy instance type generations
                                  #New instance type generations increase performance and decrease cost
                                  #resources,ec2,rds,elasticcache,elasticsearch
E3502                             #Check if a JSON Object is within size limits
                                  #Validate properties that are JSON values so that their length is within the limits
                                  #resources,limits,json
E3503                             #ValidationDomain is superdomain of DomainName
                                  #In ValidationDomainOptions, the ValidationDomain must be a superdomain of the DomainName being validated
                                  #certificate,certificatemanager,domainvalidationoptions,validationdomain
E3504                             #Check minimum 90 period is met between BackupPlan cold and delete
                                  #Check that Backup plans with lifecycle rules have >= 90 days between cold and delete
                                  #properties,backup,plan,lifecycle

E4001                             #Metadata Interface have appropriate properties
                                  #Metadata Interface properties are properly configured
                                  #metadata
W4001                             #Metadata Interface parameters exist
                                  #Metadata Interface parameters actually exist
                                  #metadata
E4002                             #Validate the configuration of the Metadata section
                                  #Validates that Metadata section is an object and has no null values
                                  #metadata
W4002                             #Check for NoEcho References
                                  #Check if there is a NoEcho enabled parameter referenced within a resources Metadata section
                                  #resources,NoEcho

E5001                             #Check that Modules resources are valid
                                  #Check that Modules resources are valid
                                  #resources,modules

E6001                             #Outputs have appropriate properties
                                  #Making sure the outputs are properly configured
                                  #outputs
W6001                             #Check Outputs using ImportValue
                                  #Check if the Output value is set using ImportValue, so creating an Output of an Output
                                  #outputs,importvalue
E6002                             #Outputs have required properties
                                  #Making sure the outputs have required properties
                                  #outputs
E6003                             #Outputs have values of strings
                                  #Making sure the outputs have strings as values
                                  #outputs
E6004                             #Outputs have appropriate names
                                  #Check if Outputs are properly named (A-Za-z0-9)
                                  #outputs
E6005                             #Outputs descriptions can only be strings
                                  #Outputs descriptions can only be strings
                                  #outputs
E6010                             #Output limit not exceeded
                                  #Check the number of Outputs in the template is less than the upper limit
                                  #outputs,limits
I6010                             #Output limit
                                  #Check the number of Outputs in the template is approaching the upper limit
                                  #outputs,limits
E6011                             #Output name limit not exceeded
                                  #Check the size of Output names in the template is less than the upper limit
                                  #outputs,limits
I6011                             #Output name limit
                                  #Check the size of Output names in the template is approaching the upper limit
                                  #outputs,limits
E6012                             #Output description limit not exceeded
                                  #Check the size of Output description in the template is less than the upper limit
                                  #outputs,limits
I6012                             #Output description limit
                                  #Check the size of Output description in the template is approaching the upper limit
                                  #outputs,limits
E7001                             #Mappings are appropriately configured
                                  #Check if Mappings are properly configured
                                  #mappings
W7001                             #Check if Mappings are Used
                                  #Making sure the mappings defined are used
                                  #mappings
E7002                             #Mappings have appropriate names
                                  #Check if Mappings are properly named (A-Za-z0-9)
                                  #mappings
E7003                             #Mapping keys are strings and alphanumeric
                                  #Check if Mappings keys are properly typed as strings and alphanumeric
                                  #mappings
E7010                             #Mapping limit not exceeded
                                  #Check the number of Mappings in the template is less than the upper limit
                                  #mappings,limits
I7010                             #Mapping limit
                                  #Check the number of Mappings in the template is approaching the upper limit
                                  #mappings,limits
E7011                             #Mapping name limit not exceeded
                                  #Check the size of Mapping names in the template is less than the upper limit
                                  #mappings,limits
I7011                             #Mapping name limit
                                  #Check the size of Mapping names in the template is approaching the upper limit
                                  #mappings,limits
E7012                             #Mapping attribute limit not exceeded
                                  #Check if the amount of Mapping attributes in the template is less than the upper limit
                                  #mappings,limits
I7012                             #Mapping attribute limit
                                  #Check if the amount of Mapping attributes in the template is approaching the upper limit
                                  #mappings,limits

E8001                             #Conditions have appropriate properties
                                  #Check if Conditions are properly configured
                                  #conditions
W8001                             #Check if Conditions are Used
                                  #Making sure the conditions defined are used
                                  #conditions
E8002                             #Check if the referenced Conditions are defined
                                  #Making sure the used conditions are actually defined in the Conditions section
                                  #conditions
E8003                             #Check Fn::Equals structure for validity
                                  #Check Fn::Equals is a list of two elements
                                  #functions,equals
W8003                             #Fn::Equals will always return true or false
                                  #Validate Fn::Equals to see if its comparing two strings or two equal items. While this works it may not be intended.
                                  #functions,equals
E8004                             #Check Fn::And structure for validity
                                  #Check Fn::And is a list of two elements
                                  #functions,and
E8005                             #Check Fn::Not structure for validity
                                  #Check Fn::Not is a list of one element
                                  #functions,not
E8006                             #Check Fn::Or structure for validity
                                  #Check Fn::Or is a list of two elements
                                  #functions,or
