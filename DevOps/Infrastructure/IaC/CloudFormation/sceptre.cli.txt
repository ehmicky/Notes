
           
   SCEPTRE  
           



TODO: compare with rain

VERSION ==>                       #4.2.2
                                  #Installed with pip|Docker

sceptre                           #CLI on top of `aws cloudformation`
-U                                #Update version
--debug                           #Turn on debug logging.
--dir TEXT                        #Specify sceptre directory.
--output [text|yaml|json]         #The formatting style for command output.
--no-colour                       #Turn off output colouring.
--var TEXT                        #A variable to replace the value of an item in config file.
--var-file FILENAME               #A YAML file of variables to replace the values of items in config files.
--ignore-dependencies             #Ignore dependencies when executing command.
--merge-vars                      #Merge variables from successive --vars and var files

sceptre new project PROJECT       #Creates /PROJECT/templates and /PROJECT/config/config.yaml

sceptre new group GROUP           #Creates GROUP folder in the project and a config.yaml with any required properties.

sceptre generate SPATH            #Prints the template used for stack in PATH.

sceptre fetch-remote-template URI #Prints the remote template used for stack in PATH.

sceptre validate SPATH            #Validates the template used for stack in PATH.

sceptre validate|diff
 |dump template
--no-placeholders|-n              #No placeholder values will be supplied for resolvers that cannot be resolved.

sceptre estimate-cost SPATH       #Prints a URI to STOUT that provides an estimated cost based on the resources in the stack
                                  #This command will also attempt to open a web browser with the returned URI

sceptre launch PATH               #Launch a Stack or StackGroup for a given config PATH
                                  #This command is intended as a catch-all command that will apply any changes from Stack Configs indicated via the path.
                                  #  - Any Stacks that do not exist will be created
                                  #  - Any stacks that already exist will be updated (if there are any changes)
                                  #  - If any stacks are marked with "ignore: True", those stacks will neither be created nor updated
                                  #  - If any stacks are marked with "obsolete: True", those stacks will neither be created nor updated.
                                  #  - Furthermore, if the "-p"/"--prune" flag is used, these stacks will be deleted prior to any other launch commands
--prune|-p                        #If set, will delete all stacks in the command path marked as obsolete.

sceptre launch|create|update
 |execute|delete|prune
--yes|-y                          #Assume yes to all questions.
--disable|enable-rollback         #Disable or enable the cloudformation automatic rollback

sceptre create SPATH [CHANGESET]  #CreateStack()
                                  #If CHANGESET, CreateChangeSet() instead

sceptre update SPATH              #UpdateStack()
--change-set|-c                   #CreateChangeSet() then ExecuteChangeSet() instead
--verbose|-v                      #Display verbose output.

sceptre execute PATH CHANGESET    #Executes a Change Set.

sceptre set-policy
 PATH [POLICY_PATH]               #Sets a specific Stack policy for either a file or using a built-in policy.
--built-in|-b                     #deny-all|allow-all. Specify a built in stack policy.

sceptre status PATH               #Prints the stack status or the status of the stacks within a stack_group for a given config PATH.

sceptre describe change-set
 PATH CHANGESET                   #Describes the change set.
--verbose|-v                      #Display verbose output.

sceptre describe policy PATH      #Displays the stack policy used.

sceptre list change-sets PATH     #List change sets for stack.
--url|-U                          #Instead write a URL.

sceptre list outputs SPATH        #List outputs for stack.
--export|-e                       #ENVVAR. Specify the export formatting.

sceptre list resources GSPATH     #List resources for stack or stack_group.

sceptre list stacks PATH          #List sceptre stack config attributes

sceptre dump                      #
--to-file                         #Also dump the template to a local file.

sceptre dump all PATH             #Combines both sceptre dump config|template

sceptre dump config PATH          #Dump the rendered (post-Jinja) Stack Configs.

sceptre dump template PATH        #Prints the template used for stack in PATH.

sceptre delete SPATH [CHANGESET]  #DeleteStack()
                                  #If CHANGESET, DeleteChangeSet() instead

sceptre prune [PATH]              #This command deletes all obsolete stacks in the project
                                  #Only obsolete stacks can be deleted via prune;
                                  #If any non-obsolete stacks depend on obsolete stacks, an error will be raised and this command will fail.

sceptre diff PATH                 #Compares deployed infrastructure with current configurations
                                  #Indicates the difference between the currently DEPLOYED stacks in the command path and the stacks configured in Sceptre right now.
                                  #This command will compare both the templates as well as the subset of stack configurations that can be compared.
                                  #By default, only stacks that would be launched via the launch command will be diffed,
                                  #but you can diff ALL stacks relevant to the passed command path if you pass the --all flag.
                                  #Some settings (such as sceptre_user_data) are not available in a CloudFormation stack description, so the diff will not be indicated.
                                  #Currently compared stack configurations are:
                                  #  - parameters
                                  #  - notifications
                                  #  - cloudformation_service_role
                                  #  - stack_tags
                                  #Important: There are resolvers (notably !stack_output) that rely on other stacks to be already deployed when they are resolved.
                                  #When producing a diff on Stack Configs that have such resolvers that point to non-deployed stacks, this presents a challenge,
                                  #since this means those resolvers cannot be resolved.
                                  #This particularly applies to stack parameters and when a stack's template uses sceptre_user_data with resolvers in it.
                                  #In order to continue to be useful when producing a diff in these conditions, this command will do the following:
                                  #  1. If the resolver CAN be resolved, it will be resolved and the resolved value will be in the diff results.
                                  #  2. If the resolver CANNOT be resolved, it will be replaced with a string that represents the resolver and its arguments.
                                  #     For example: !stack_output my_stack.yaml::MyOutput will resolve in the parameters to "{ !StackOutput(my_stack.yaml::MyOutput) }".
                                  #Particularly in cases where the replaced value doesn't work in the template as the template logic requires and causes an error,
                                  #there is nothing further Sceptre can do and diffing will fail.
--type|-t                         #deepdiff|difflib.
                                  #The type of differ to use among:
                                  #  - deepdiff (def): recursive key/value comparison
                                  #  - difflib: produces a more traditional "diff" result.
--show-no-echo|-s                 #If set, will display the unmasked values of NoEcho parameters generated LOCALLY
                                  #NoEcho parameters for deployed stacks will always be masked when retrieved from CloudFormation
                                  #If not set (the default), parameters identified as NoEcho on the local template will be masked when presented in the diff.
--all|-a                          #If set, will perform diffing on ALL stacks, including ignored and obsolete ones;
                                  #Otherwise, it will diff only stacks that would be created or updated when running the launch command.

sceptre drift detect PATH         #Run detect stack drift on running stacks.
                                  #In the event that the stack does not exist, we return a DetectionStatus and StackDriftStatus of STACK_DOES_NOT_EXIST.
                                  #In the event that drift detection times out, we return a DetectionStatus and StackDriftStatus of TIMED_OUT.
                                  #The timeout is set at 5 minutes, a value that cannot be configured.

sceptre drift show PATH           #Shows stack drift on running stacks.
                                  #In the event that the stack does not exist, we return a StackResourceDriftStatus of STACK_DOES_NOT_EXIST.
                                  #In the event that drift detection times out, we return a StackResourceDriftStatus of TIMED_OUT.
                                  #The timeout is set at 5 minutes, a value that cannot be configured.
--drifted|-D                      #Filter out in sync resources.

/PROJECT/config/config.yaml       #Default value for all GROUP_CONFIGs
/PROJECT/config/GROUP/config.yaml #GROUP_CONFIG
GPATH                             #PATH to GROUP_CONFIG
GROUP_CONFIG.project_code         #'PROJECT_CODE' (Def: 'PROJECT'). Prefixes 'STACK' names
GROUP_CONFIG.region               #'REGION'
GROUP_CONFIG.profile              #
GROUP_CONFIG.required_version     #
GROUP_CONFIG.template_bucket_name #
GROUP_CONFIG.template_key_prefix  #
GROUP_CONFIG.j2_environment       #
GROUP_CONFIG.http_template_handler#

/PROJECT/config/GROUP/STACK.yaml  #STACK_CONFIG
SPATH                             #PATH to STACK_CONFIG
GSPATH                            #GPATH|SPATH
STACK_CONFIG.template             #TEMPLATE_LOCATION
TEMPLATE_LOCATION.type            #'path'
TEMPLATE_LOCATION.path            #PATH to TEMPLATE, usually /PROJECT/templates/STACK.yaml
STACK_CONFIG.template_path        #Same as STACK_CONFIG.template.path
STACK_CONFIG.dependencies         #
STACK_CONFIG.hooks                #
STACK_CONFIG.ignore               #
STACK_CONFIG.notifications        #
STACK_CONFIG.obsolete             #
STACK_CONFIG.on_failure           #
STACK_CONFIG.disable_rollback     #
STACK_CONFIG.parameters           #OBJ of PARAMVALs
STACK_CONFIG.protected            #
STACK_CONFIG.role_arn             #
STACK_CONFIG
 .cloudformation_service_role     #
STACK_CONFIG.iam_role             #
STACK_CONFIG.sceptre_role         #
STACK_CONFIG
 .iam_role_session_duration       #
STACK_CONFIG
 .sceptre_role_session_duration   #
STACK_CONFIG.sceptre_user_data    #
STACK_CONFIG.stack_name           #
STACK_CONFIG.stack_tags           #
STACK_CONFIG.stack_timeout        #
