
                                  ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
                                  ┃   INFRASTRUCTURE COMPOSER   ┃
                                  ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛

ALTERNATIVES ==>                  #  - Infrastructure Composer (preferred)
                                  #  - CloudFormation Designer: deprecated alternative
                                  #  - cdk-builder (see CDK doc):
                                  #     - uses CDK
                                  #     - not well maintained nor useful

PRICING ==>                       #Free

TODO:
  - go through new_service doc
  - sort this doc
  - add summary
  - cleanup files in Desktop

Edit TEMPLATE YAML|JSON via widget canvas

Add|remove RESOURCEs via drag&drop

Can link RESOURCEs via drag&drop
  - If not available, connections (e.g. !Ref|!GetAtt|!Sub) must be done in TEMPLATE directly
     - They are then shown in UI

Edit RESPROPs via double-click on RESOURCE

Import|export TEMPLATE

Save as PNG

Enhanced component:
  - like CDK L2 component, but for Infrastructure Composer
  - better experience for editing RESPROPs, but fewer of them
  - only for some RESOURCEs with some SERVICEs
  - documented in each SERVICE

?srcConsole=cloudformation        #In URI, for the "console mode"
                                  #Available from the CloudFormation UI
                                  #Similar, but few differences documented here

AWS TOOLKIT ==>                   #VSCode extension
                                  #Includes same UI as Infrastructure Composer

CHANGE INSPECTOR ==>              #Recent changes made in the UI are shown in bottom
                                  #Clicking on it shows TEMPLATE diff from that change
                                  #Only with enhanced components

LOCAL SYNC ==>                    #Sync local TEMPLATE with:
                                  #  - browser
                                  #     - must have File System Access API (e.g. not Firefox as of now)
                                  #  - IDE (with AWS toolkit)
                                  #Keeps undo history|backup of TEMPLATEs as sibling file .aws-composer/YYYYMMDDTHHMMSSsss/template.yaml
                                  #Also scaffolds dummy samconfig.toml
                                  #Not in "console mode"

EXTERNAL FILE ==>                 #Using local sync for not only the TEMPLATE, but files included by it
                                  #I.e. local 'PATH' in the TEMPLATE, using either:
                                  #  - AWS::Include
                                  #  - SAM local path, e.g. AWS::Serverless::Function CodeUri or AWS::Serverless::ContentUri ContentUri
                                  #Can be done on specific properties with some enhanced resources
                                  #  - automatically scaffolded for some of them

API SYNC ==>                      #Sync STACK's TEMPLATE with browser
                                  #Must manually click on "Create|update template"
                                  #Only in "console mode"

RESPROPS SCAFFOLDING ==>          #Scaffold RESPROPs for a given RESOURCE, AI-generated
                                  #Only with AWS Toolkit

TEMPLATE VALIDATION ==>           #Does not seem to work well
                                  #Only in "console mode"

TEMPLATE.Metadata                 #COMPOSER_GROUPS. Groups organizing RESOURCEs
 ['AWS::Composer::Groups']        #Only visual
COMPOSER_GROUPS.Group.Label       #'COMPOSER_GROUP'
COMPOSER_GROUPS.Group.Members     #'RESOURCE|COMPOSER_GROUP'_ARR

TEMPLATE.Metadata['AWS::Composer  #EXTERNAL_RESOURCE
 ::ExternalResources'].RESOURCE   #RESOURCE provisioned outside of CloudFormation
                                  #I.e. only meant to be used as !Ref|!GetAtt|!Sub
                                  #Currently only with enhanced component "RDS Database (external)"
                                  #Also creates some TEMPLATE.Parameters for the RESOURCE's identifiers

SAM ==>                           #The enhanced component for API Gateway and Lambda use:
                                  #  - RESTYPE 'AWS::Serverless:*'
                                  #  - TEMPLATE.Transform 'AWS::Serverless-*'
