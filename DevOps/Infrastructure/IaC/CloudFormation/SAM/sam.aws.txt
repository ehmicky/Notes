
                                  ┏━━━━━━━━━┓
                                  ┃   SAM   ┃
                                  ┗━━━━━━━━━┛

VERSION ==>                       #Transform: 1.91.0
                                  #Binary: 1.127.0

INSTALL ==>                       #Download zip from GitHub releases
./install                         #Install script
                                  #Just copies files and create symlinks
                                  #Can delete zip extracted contents afterwards
--update|-u                       #Update instead of new install
                                  #Previous versions kept at INSTALL_DIR/X.Y.Z
                                  #Current version is symlink from INSTALL_DIR/current to INSTALL_DIR/X.Y.Z
--install-dir|-i                  #'INSTALL_DIR' (def: /usr/local/aws-sam-cli) containing binary + source code
--bin-dir|-b                      #'DIR' (def: /usr/local/bin) with symlink to `sam` executable

TEMPLATE.Transform                #Must include 'AWS::Serverless-2016-10-31'
                                  #If has 'AWS::LanguageExtensions', 'AWS::Serverless-...' must be after it
                                  #Must be used to transform AWS::Serverless::* RESOURCEs into regular ones

ENVVAR SAM_CLI_BETA_FEATURES      #Enable all beta features
sam --[no-]beta-features         !#Noted like this

ENVVAR SAM_CLI_BETA_*             #Enable a specific beta feature

ENVVAR SAM_CLI_TELEMETRY=0        #Disable telemetry

sam ... --debug                   #Debug logs

sam docs CLI_COMMAND              #Open docs in browser

sam init                          #Scaffolds
                                  #Interactive if no options
--output-dir|-o                   #Output 'DIR'
--no-interactive                  #Unless set or main flags passed, interactive input to set required flags
--no-input                        #Same for optional flags
--extra-context                   #'{PARAM: "VAL",...}_JSON'. Override specific template parameters
--config-file                     #'PATH' to CONFIG (def: 'samconfig.toml')
--config-env                      #'ENVVAR' containing CONFIG (def: 'default'???)
--save-params                     #Save PARAMs to CONFIG file
--name|-n                         #'APP_NAME'
--architecture                    #FUNC_VERSION.Architectures
--runtime                         #FUNC_VERSION.Runtime
--base-image                      #'amazon/RUNTIME-base'. Docker image used to deploy
--dependency-manager              #Package manager to install SDK
                                  #Can be 'cli-package', 'npm' (JavaScript), 'pip' (Python), 'mod' (Go), 'bundler' (Ruby),
                                  #'gradle' (Java), 'maven' (Java)
--package-type                    #FUNC_VERSION.PackageType
--app-template                    #TEMPLATE location
--location|-l                     #TEMPLATE location type, among:
                                  #  - 'path': local 'DIR'
                                  #  - 'zip': local 'FILE.zip'
                                  #  - 'http[s]': 'URI'
                                  #  - 'git'
                                  #  - 'mercurial'
--[no-]tracing                    #Enable X-Ray
--[no-]application-insights       #Enable CloudWatch Application Insights monitoring
--[no-]structured-logging         #Enable Structured Logging

sam validate                      #Validate TEMPLATE

sam build                         #Build Lambda FUNCTION

sam local                         #Run Lambda FUNCTION locally

sam remote                        #Run Lambda FUNCTION in AWS
                                  #Or send event to other STACK RESOURCEs

sam sync                          #Sync to AWS

sam list                          #Print state

sam package                       #

sam deploy                        #

sam delete                        #Delete STACK

sam pipeline                      #Continuous delivery

sam logs                          #Prints Cloudwatch logs, including ones from Lambda

sam traces                        #Print X-Ray traces

sam publish                       #Publish package to SAR

SAR                               #AWS Serverless Application Repository
