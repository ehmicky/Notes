
                                  ┏━━━━━━━━━┓
                                  ┃   SAM   ┃
                                  ┗━━━━━━━━━┛

VERSION ==>                       #Transform: 1.91.0
                                  #Binary: 1.127.0

INSTALL ==>                       #Download zip from GitHub releases
./install                         #Install script
                                  #Just copies files and create symlinks
                                  #Can delete zip extracted contents afterwards
--update|-u                       #Update instead of new install
                                  #Previous versions kept at INSTALL_DIR/X.Y.Z
                                  #Current version is symlink from INSTALL_DIR/current to INSTALL_DIR/X.Y.Z
--install-dir|-i                  #'INSTALL_DIR' (def: /usr/local/aws-sam-cli) containing binary + source code
--bin-dir|-b                      #'DIR' (def: /usr/local/bin) with symlink to `sam` executable

TEMPLATE.Transform                #Must include 'AWS::Serverless-2016-10-31'
                                  #If has 'AWS::LanguageExtensions', 'AWS::Serverless-...' must be after it
                                  #Must be used to transform AWS::Serverless::* RESOURCEs into regular ones

ENVVAR SAM_CLI_BETA_FEATURES      #Enable all beta features
sam ... --[no-]beta-features     !#Noted like this

ENVVAR SAM_CLI_BETA_*             #Enable a specific beta feature

ENVVAR SAM_CLI_TELEMETRY=0        #Disable telemetry

sam ... --debug                   #Debug logs

sam ...
--config-file                     #'PATH' to CONFIG (def: 'samconfig.toml')
--config-env                      #'ENVVAR' containing CONFIG (def: 'default'???)
--save-params                     #Save FLAGs to CONFIG file

sam validate|build|sync|package
 |deploy|delete|logs|traces
 |publish
sam local generate-event|invoke
--region                          #'REGION' (def: guessed)

sam local generate-event
--partition                       #'PARTITION' (def: 'aws')

sam validate|build|sync|package
 |deploy|delete|logs|traces
 |publish
sam local invoke
--profile                         #CONFIG 'PROFILE' (def: guessed)

sam validate|build|sync|package
 |deploy|publish
sam local invoke
--template[-file]|-t              #'PATH' to TEMPLATE (def: 'template.y[a]ml|json')

sam build
sam local invoke
--hook-name                       #'SAM_BUILD_PLUGIN'
                                  #Only available one: 'terraform', to support Terraform templates
--[skip-]prepare-infra            #Unless set, run preparation logic even if no TEMPLATE changes
                                  #Only with --hook-name

sam build
--terraform-project-root-path     #Terraform root 'DIR' (def: .)

sam local invoke
--terraform-plan-file PATH        #Terraform plan 'PATH'

sam docs CLI_COMMAND              #Open docs in browser

sam init                          #Scaffolds
                                  #Interactive if no options
--output-dir|-o                   #Output 'DIR'
--no-interactive                  #Unless set or main flags passed, interactive input to set required flags
--no-input                        #Same for optional flags
--extra-context                   #'{PARAM: "VAL",...}_JSON'. Override specific template parameters
--name|-n                         #'APP_NAME'
--architecture                    #FUNC_VERSION.Architectures
--runtime                         #FUNC_VERSION.Runtime
--base-image                      #'amazon/RUNTIME-base'. Docker image used to deploy
--dependency-manager              #Package manager to install SDK
                                  #Can be 'cli-package', 'npm' (JavaScript), 'pip' (Python), 'mod' (Go), 'bundler' (Ruby),
                                  #'gradle' (Java), 'maven' (Java)
--package-type                    #FUNC_VERSION.PackageType
--app-template                    #TEMPLATE location
--location|-l                     #TEMPLATE location type, among:
                                  #  - 'path': local 'DIR'
                                  #  - 'zip': local 'FILE.zip'
                                  #  - 'http[s]': 'URI'
                                  #  - 'git'
                                  #  - 'mercurial'
--[no-]tracing                    #Enable X-Ray
--[no-]application-insights       #Enable CloudWatch Application Insights monitoring
--[no-]structured-logging         #Enable Structured Logging

sam validate                      #Validate TEMPLATE syntax
--lint                            #Run cfn-lint

sam build
sam local invoke
--parameter-overrides             #'PARAM=VAL,...'. STACK.Parameters

sam build                         #Build Lambda FUNCTION|LAYER, as AWS::Serverless|Lambda::Function|LayerVersion
--parallel|-p                     #Build all FUNCTIONs|LAYERs in parallel
--exclude|-x                      #'RESOURCE' to exclude
--manifest|-m                     #'PATH.json' to custom dependency manifest
--build-dir|-c                    #Output 'DIR'
                                  #Deleted before build starts
--[no-]cached|-c                  #Cache build artifacts, based on their file contents
                                  #Does not cache dependencies
--cache-dir|-cd                   #Cache 'DIR' (def: ./.aws-sam/cache/)
--[no-]build-in-source            #Run build step. Can be:
                                  #  - 'nodejsX.x'
                                  #  - 'esbuild'
                                  #  - 'Makefile'
--use-container|-u                #Build with a container
--container-env-var|-e            #'[FUNCTION|LAYER.]ENVVAR=VAL' passed to container
--container-env-var-file|-ef      #Same but as 'PATH.json' containing OBJ
--build-image|-bi                 #'[FUNCTION|LAYER.]URI'. Container image
                                  #Def: 'public.ecr.aws/sam/build-RUNTIME:latest'
--mount-with|-mw                  #'READ' (def) or 'WRITE'. Allow containing to write to source DIR
--skip-pull-image                 #Unless set, use latest container image for Lambda SDK
--docker-network                  #Docker 'NETWORK_NAME' (def: bridge)
--base-dir|-s                     #'DIR' used to resolve relative PATHs in TEMPLATE
                                  #Def: TEMPLATE's DIR

sam local invoke                  #Invoke Lambda FUNCTION locally (emulation)
                                  #Logs are printed on stdout
--event|-e                        #'PATH.json' or '-' (stdin) to REQ
                                  #Def: no REQ
--log-file|-l                     #'PATH' (def: stdout) for FUNCTION logs
--invoke-image|-ii                #Like sam build --build-image
--env-vars|-n                     #'PATH.json' with ENVVARs to pass to FUNCTION
--container-env-vars
--skip-pull-image
--docker-network                  #Like sam build
--debug-port|-d                   #PORT_NUM. Start debugger in localhost:PORT_NUM
--debugger-path                   #'PATH' to debugger command
--debug-args                      #Debugger 'ARG ...'
--docker-volume-basedir|-v        #'DIR' of the TEMPLATE
-v, --docker-volume-basedir TEXT Specify the location basedir where the SAM template exists.
                                  If Docker is running on a remote machine, Path of the SAM template must be mounted on the Docker machine and modified to match the remote machine.
--force-image-build             Force rebuilding the image used for invoking functions with layers.
--shutdown                      Emulate a shutdown event after invoke completes, to test extension handling of shutdown behavior.
--container-host TEXT           Host of locally emulated Lambda container.
                                    This option is useful when the container runs on a different host than AWS SAM CLI.
                                    For example, if one wants to run AWS SAM CLI in a Docker container on macOS, this option could specify `host.docker.internal`
                                    [default: localhost]
--container-host-interface TEXT IP address of the host network interface that container ports should bind to.
                                    Use 0.0.0.0 to bind to all interfaces.
                                    [default: 127.0.0.1]
--add-host LIST                 Passes a hostname to IP address mapping to the Docker container's host file.
                                    This parameter can be passed multiple times.
                                    Example:--add-host example.com:127.0.0.1
--layer-cache-basedir DIRECTORY Specify the location basedir where the lambda layers used by the template will be downloaded to.

sam local start-lambda            #Start local server with Lambda FUNCTION

sam local start-api               #Same as start-lambda???

sam local generate-event          #Scaffolds a test REQ for a given SERVICE + ACTION
 SERVICE ACTION                   #Only for specific SERVICEs|ACTIONs
--PARAM                           #ACTION-specific parameters
                                  #Def: dummy ones

sam remote                        #Invoke Lambda FUNCTION in AWS
                                  #Or send event to other STACK RESOURCEs

sam sync                          #Sync to AWS

sam list                          #Print state

sam package                       #

sam deploy                        #

sam delete                        #Delete STACK

sam pipeline                      #Continuous delivery

sam logs                          #Prints Cloudwatch logs, including ones from Lambda

sam traces                        #Print X-Ray traces

sam publish                       #Publish package to SAR

SAR                               #AWS Serverless Application Repository
