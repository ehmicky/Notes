
                                  ┏━━━━━━━━━━━━━━━━━━━┓
                                  ┃   SAM_TRANSFORM   ┃
                                  ┗━━━━━━━━━━━━━━━━━━━┛

VERSION ==>                       #1.92.0

SAM CLI ==>                       #See its doc
                                  #Does not require SAM transform: supports regular RESTYPEs
                                  #However, does support SAM transform: AWS::Serverless::* RESTYPEs
                                  #Is not required by SAM transform: since transformation happens inside CloudFormation, not locally

                                  ┌───────────────┐
                                  │   TRANSFORM   │
                                  └───────────────┘

TEMPLATE.Transform                #Must include 'AWS::Serverless-2016-10-31'
                                  #If has 'AWS::LanguageExtensions', must be after it
                                  #  - recommended to use !RFUNCs inside SAM-specific RESPROPs
                                  #Transforms AWS::Serverless::* RESTYPEs into regular ones

TRANSFORMATION ==>                #Happens inside CloudFormation itself, not locally
                                  #I.e. any CloudFormation-related tool:
                                  #  - in order to support TEMPLATEs with SAM transform
                                  #  - must be enhanced to handle AWS::Serverless::* RESTYPEs and TEMPLATE.Globals

                                  ┌────────────┐
                                  │   BINARY   │
                                  └────────────┘

sam-translate                     #CLI that does the transformation
                                  #Mostly meant for debugging: the official flow is to let CloudFormation API do the transform
                                  #Does not seem to be published, i.e. must:
                                  #  - git clone
                                  #  - python -r requirements/dev.txt
                                  #  - python bin/sam-translate.py
--template-file                   #'PATH' (def: 'template.yaml')
--output-template                 #'PATH' (def: 'transformed-template.json')
--stdout                          #Output to stdout

sam translate package             #Same but first do `aws cloudformation package` first, using temporary ._sam_packaged_.yaml
--verbose
--s3-bucket                       #Passed to `aws cloudformation package`

sam translate deploy              #Same but first do `aws cloudformation deploy` afterwards (not very useful)
--capabilities
--stack-name                      #Passed to `aws cloudformation deploy`

                                  ┌──────────┐
                                  │   LINT   │
                                  └──────────┘

cfn-lint E3038                    #AWS::Serverless TRANSFORM must be declared if using AWS::Serverless::* RESTYPEs

                                  ┌─────────────┐
                                  │   GLOBALS   │
                                  └─────────────┘

TEMPLATE.Globals.TYPE.RESPROPS    #OBJ. Default RESPROPs
                                  #Only for AWS::Serverless::*
                                  #OBJs are deeply merged, ARRs are prepended
                                  #Also applies to AWS::ApiGateway[V2]::* implicited created by AWS::Serverless::Function EventSource of Type 'Api'

NOT SUPPORTED ==>                 #AWS::Serverless::[Http]Api: DefinitionBody, Description, DisableExecuteApiEndpoint, FailOnWarnings, StageName
                                  #AWS::Serverless::Api: AlwaysDeploy, ApiKeySourceType, MergeDefinitions, Mode, Models, Tags
                                  #AWS::Serverless::HttpApi: CorsConfiguration, DefaultRouteSettings, DefinitionUri, Domain, Name, RouteSettings
                                  #AWS::Serverless::Function: AutoPublishAliasAllProperties, AutoPublishCodeSha256, CodeSigningConfigArn, Events,
                                  # FileSystemConfigs, FunctionName, FunctionUrlConfig, ImageConfig, ImageUri, InlineCode, LoggingConfig, PackageType,
                                  # Policies, RecursiveLoop, Role, RolePath, RuntimeManagementConfig, SnapStart, SourceKMSKeyArn, VersionDescription
                                  #AWS::Serverless::StateMachine: all but PropagateTags
                                  #AWS::Serverless::SimpleTable: all but SSESpecification
                                  #AWS::Serverless::LayerVersion|GraphQLApi|Connector

                                  ┌─────────────────────┐
                                  │   TRANSFORMATIONS   │
                                  └─────────────────────┘

{ Ref: 'SAM_RESOURCE' }           #Replaced by { Ref: 'RESOURCE' }
                                  #'SAM_RESOURCE' is an alternative to 'RESOURCE', that is human-friendlier
'RESOURCE'                        #Most AWS::Serverless::* do not have much RESATTRs
                                  #Instead must either:
                                  #  - use 'SAM_RESOURCE'
                                  #  - guess 'RESOURCE' based on known pattern
                                  #     - not possible when 'RESOURCE' has a 'RANDOM' part

RESOURCE.Metadata|DependsOn       #On AWS::Serverless::*, only applies to the generated main RESOURCE
RESOURCE.Condition|*Policy        #On AWS::Serverless::*, applies to all generated RESOURCEs

TAG 'SERVICE:createdBy'           #With value 'SAM'. Added to most generated RESOURCEs

                                  ┌──────────────────┐
                                  │   REST API SAM   │
                                  └──────────────────┘

AWS::Serverless::[Http]Api      =-#Expands to API Gateway v1|v2 HTTP (not WebSocket):
                                  #  - API
                                  #  (through OSPEC)
                                  #  - RESOURCE
                                  #  - ROUTE
                                 =#  - RRESP
                                  #  - INTEGRATION
                                  #  - IRESP
                                  #  (optional)
                                  #  - STAGE
                                  #  - DEPLOYMENT
                                  #  - DNAME
                                  #  - multiple MAPPINGs
                                 =#  - multiple MODELs
                                  #  - multiple AUTHORIZERs
                                  #     - Lambda PERMISSIONs
                                  #  - CORS
                                 =#  - GRESP
                                 =#  - USAGEPLAN
                                 =#  - USAGEKEY
                                 =#  - APIKEY
                                  #Also to Route53 RECORD_SET
                                  #Includes RESPROPs:
                                  #  - Name
                                 -#     - sets OINFO.title
                                  #  - Description
                                 -#     - sets OINFO.description
                                  #  - Tags OBJ
                                  #  - PropagateTags BOOL: whether Tags targets:
                                  #     - false (def): STAGE
                                  #     - true: all generated RESOURCEs, including API

MISSING FEATURES ==>            =-#Requires OpenAPI specification to set most RESOURCEs
                                  #Multiple STAGEs per API, i.e. must use PARAM and instantiate STACK once per STAGE instead
                                  #Most name|description automatically generated
                                  #RESOURCE-specific TAGS
                                 =#ROUTE.requestParameters
                                 =#ROUTE.requestModels (but can set INTEGRATION.requestTemplates)
                                  #INTEGRATION.requestParameters
                                 =#RRESP.responseParameters|responseModels (but can set INTEGRATION.responseParameters|responseTemplates)
                                  #AUTHORIZER.identityValidationExpression with AUTH_TYPE 'REQUEST'
                                 =#MODEL.contentType|flatten
                                 =#DOCPART, DOCVERS
                                 =#REQVALID (but can use TRIGGER_TYPE 'Api' from AWS::Serverless::Function)
                                 -#DEPLOYMENT.autoDeploy
                                 =#API.cloneFrom
                                 -#API.target
                                  #API_IMPORT.basepath
                                 =#API_IMPORT.ignore
                                 =#CCERTIFICATE
                                  #Must be manually added: VPCLINK
                                 =#USAGEPLAN.apiStages, APIKEY.enabled|value|stageKeys|customerId
                                  #Route53 RECORD_SET.CidrRoutingConfig|Comment|Failover|Geo*
                                  #  |HealthCheckId|MultiValueAnswer|Name|ResourceRecods|TTL|Weight

AWS::Serverless::Function       =-#Includes RESPROPs: Events.EVENT:
                                  #  - Type '[Http]Api': can create an API for Lambda INTEGRATION (see below)

                                  ┌──────────────────┐
                                  │   PAYLOADS SAM   │
                                  └──────────────────┘

AWS::Serverless::Api             =#Includes RESPROPs:
                                  #  - MinimumCompressionSize
                                  #  - BinaryMediaTypes (JSON pointer encoded)
                                  #     - also sets OSPEC.x-amazon-apigateway-binary-media-types
                                  #Sets INTEGRATION|IRESP.contentHandling through RESPROP Definition*

                                  ┌──────────────────┐
                                  │   RESOURCE SAM   │
                                  └──────────────────┘

AWS::Serverless::[Http]Api      =-#Creates RESOURCE through RESPROP Definition*
                                 =#Includes RESATTRs: RootResourceId

                                  ┌───────────────────────┐
                                  │   ROUTE REQUEST SAM   │
                                  └───────────────────────┘

AWS::Serverless::[Http]Api      =-#Creates ROUTE through RESPROP Definition*

AWS::Serverless::Function       =-#Includes RESPROPs: Events.EVENT:
                                  #  - Type '[Http]Api': can create a ROUTE for Lambda INTEGRATION (see below)
                                  #  - Properties:
                                 =#     - RequestParameters ARR of either 'EXPR' or OBJ: Required BOOL (def: false)
                                 =#     - RequestModel:
                                  #        - Model 'MODEL'
                                  #        - Required BOOL: sets OPARAM.required

                                  ┌────────────────────────┐
                                  │   ROUTE RESPONSE SAM   │
                                  └────────────────────────┘

AWS::Serverless::Api             =#Creates RRESP through RESPROP Definition*

                                  ┌─────────────────────────────┐
                                  │   INTEGRATION REQUEST SAM   │
                                  └─────────────────────────────┘

AWS::Serverless::[Http]Api      =-#Creates INTEGRATION through RESPROP Definition*
                                  #  - except no INTEGRATION.requestParameters
                                  #Includes RESPROPs:
                                 =#  - InvokeRole: INTEGRATION.credentials except:
                                  #     - 'arn:aws:iam::*:user/*' -> 'CALLER_CREDENTIALS' (def)
                                  #     - null -> 'NONE'

AWS::Serverless::Function       =-#Includes RESPROPs: Events.EVENT: Type '[Http]Api', Properties:
                                  #  - TimeoutInMillis
                                  #     - if RESPROP RestApiId set, it must use a DefinitionBody
                                 =#  - InvokeRole STR: same as above

                                  ┌──────────────────────────────┐
                                  │   INTEGRATION RESPONSE SAM   │
                                  └──────────────────────────────┘

AWS::Serverless::[Http]Api      =-#Creates IRESP through RESPROP Definition*

                                  ┌────────────────────────────┐
                                  │   INTEGRATION LAMBDA SAM   │
                                  └────────────────────────────┘

AWS::Serverless::[Http]Api      =-#Sets INTEGRATION.PayloadFormatVersion through RESPROP Definition*

AWS::Serverless::Function       =-#Includes RESPROPs: Events.EVENT:
                                  #  - Type '[Http]Api': create a Lambda INTEGRATION (including potentially API, RESOURCE, ROUTE, REQVALID)
                                  #  - Properties:
                                 =#     - RestApiId API Gateway API_MID
                                  #        - API must be defined in same TEMPLATE
                                  #        - def: create a AWS::Serverless::Api 'ServerlessRestApi'
                                 -#     - ApiId API Gateway API_MID
                                  #        - API must be defined in same TEMPLATE
                                  #        - def: create a AWS::Serverless::HttpApi 'ServerlessHttpApi'
                                 =#     - Method 'HTTP_METHOD': AWS::ApiGateway::Method RESPROP HttpMethod
                                 =#     - Path '/PATH': AWS::ApiGateway::Resource
                                 -#     - Method 'HTTP_METHOD' + Path '/PATH': AWS::ApiGatewayV2::Route RESPROP RouteKey
                                  #        - def: '$default'
                                 -#     - PayloadFormatVersion STR
                                  #        - if RESPROP RestApiId set, it must use a DefinitionBody

                                  ┌─────────────┐
                                  │   VPC SAM   │
                                  └─────────────┘

AWS::Serverless::[Http]Api      =-#Sets INTEGRATION.connectionType|connectionId, TLSCONFIG through RESPROP Definition*

                                  ┌──────────────────────────┐
                                  │   GATEWAY RESPONSE SAM   │
                                  └──────────────────────────┘

AWS::Serverless::Api             =#Includes RESPROPs: GatewayResponse OBJ
                                  #  - like OSPEC.x-amazon-apigateway-gateway-responses (also sets it)

                                  ┌───────────────┐
                                  │   MODEL SAM   │
                                  └───────────────┘

AWS::Serverless::Api             =#Include RESPROPs: Models.MODEL MODEL.schema

                                  ┌────────────────────┐
                                  │   VALIDATION SAM   │
                                  └────────────────────┘

AWS::Serverless::Function        =#Includes RESPROPs: Events.EVENT: Type 'Api', Properties: RequestModel: ValidateParameters|ValidateBody

                                  ┌───────────────────────┐
                                  │   AUTHORIZATION SAM   │
                                  └───────────────────────┘

AWS::Serverless::[Http]Api      =-#Includes RESPROPs: Auth:
                                 =#  - Authorizers ARR or 'AWS_IAM'
                                 -#  - Authorizers ARR
                                 -#  - EnableIamAuthorizer BOOL (def: false)
                                  #  - DefaultAuthorizer 'AUTHORIZER'
                                 =#  - ResourcePolicy SPOLICY

AWS::Serverless::Function        =#Includes RESPROPs: Events.EVENT: Type 'Api', Properties: Auth:
                                  #  - Authorizer 'AWS_IAM', 'NONE' or a specific 'AUTHORIZER'
                                  #  - OverrideApiAuth BOOL (def: false): must be true if all of:
                                  #     - other Events.EVENT.Properties.Auth.* set
                                  #     - Events.EVENT.Properties.RestApiId set
                                  #     - API is using RESPROP DefinitionBody
                                  #  - ResourcePolicy SPOLICY

SPOLICY.CustomStatements         =#IAM STATEMENT_ARR
SPOLICY.AwsAccountWhitelist      =#'ACCOUNT_ID'_ARR. Add STATEMENT with:
                                  #  - PACTION 'execute-api:Invoke'
                                  #  - PRINCIPAL '*'
                                  #  - COND_KEY 'aws:SourceAccount'
SPOLICY.IpRangeWhitelist         =#'IP'_ARR. Same with COND_KEY 'aws:SourceIp'
SPOLICY.IntrinsicVpc[e]Whitelist =#'VPC_MID'_ARR. Same with COND_KEY 'aws:SourceVpc[e]'
SPOLICY.SourceVpcWhitelist       =#Same but with 'VPC'_ARR
SPOLICY.*Blacklist               =#Same as *Whitelist but excludes instead

                                  ┌────────────────────┐
                                  │   AUTHORIZER SAM   │
                                  └────────────────────┘

AWS::Serverless::[Http]Api      =-#Includes RESPROPs: Auth: Authorizers[*]:
                                  #  (AUTH_TYPE 'TOKEN|REQUEST')
                                 =#  - FunctionPayloadType: AUTHORIZER.type
                                  #  - Identity:
                                  #     (AUTH_TYPE 'TOKEN|COGNITO_USER_POOLS')
                                 =#     - ValidationExpression
                                 =#     - Header 'HEADER'_ARR: AUTHORIZER.identitySource 'method.request.header.HEADER,...'
                                  #     (AUTH_TYPE 'REQUEST')
                                  #     - Headers 'HEADER'_ARR: AUTHORIZER.identitySource:
                                 =#        - 'method.request.header.HEADER,...'
                                 -#        - '$request.header.HEADER,...'
                                  #     - Context 'VAR'_ARR: AUTHORIZER.identitySource:
                                 =#        - 'context.VAR,...'
                                 -#        - '$context.VAR,...'
                                  #     - QueryStrings 'VAR'_ARR: AUTHORIZER.identitySource:
                                 =#        - 'method.request.querystring.VAR,...'
                                 -#        - '$request.querystring.VAR,...'
                                  #     - StageVariables 'STAGEVAR'_ARR: AUTHORIZER.identitySource:
                                 =#        - 'stageVariables.STAGEVAR,...'
                                 -#        - '$stageVariables.STAGEVAR,...'
                                  #     (AUTH_TYPE 'JWT')
                                 -#     - IdentitySource STR

                                  ┌────────────────────────┐
                                  │   AUTHORIZER JWT SAM   │
                                  └────────────────────────┘

AWS::Serverless::HttpApi         -#Includes RESPROPs: Auth: Authorizers[*]: JwtConfiguration, AuthorizationScopes
                                  #Also sets OSECURITY_DEF.x-amazon-apigateway-authorizer.*

AWS::Serverless::Function        -#Includes RESPROPs: Events.EVENT: Type 'HttpApi', Properties: Auth: AuthorizationScopes

                                  ┌────────────────────────────┐
                                  │   AUTHORIZER COGNITO SAM   │
                                  └────────────────────────────┘

AWS::Serverless::Api             =#Includes RESPROPs: Auth: Authorizers[*]: UserPoolArn ARN, AuthorizationScopes

AWS::Serverless::Function        =#Includes RESPROPs: Events.EVENT: Type 'Api', Properties: Auth: AuthorizationScopes

                                  ┌───────────────────────────┐
                                  │   AUTHORIZER LAMBDA SAM   │
                                  └───────────────────────────┘

AWS::Serverless::[Http]Api      =-#Includes RESPROPs: Auth: Authorizers[*]:
                                  #  - FunctionArn: AUTHORIZER.authorizerUri
                                  #  - FunctionInvokeRole: AUTHORIZER.authorizerCredentials
                                 =#  - DisableFunctionDefaultPermissions BOOL: if false (def), create Lambda PERMISSION
                                 -#  - EnableFunctionDefaultPermissions BOOL (def false): create Lambda PERMISSION
                                 -#  - AuthorizerPayloadFormatVersion
                                 -#  - EnableSimpleResponses
                                  #Also sets OSECURITY_DEF.x-amazon-apigateway-authorizer.*

                                  ┌──────────────────────────┐
                                  │   AUTHORIZER CACHE SAM   │
                                  └──────────────────────────┘

AWS::Serverless::[Http]Api      =-#Includes RESPROPs: Auth: Authorizers[*]:
                                  #  - Identity: ReauthorizeEvery: AUTHORIZER.authorizerResultTtlInSeconds

                                  ┌──────────────┐
                                  │   CORS SAM   │
                                  └──────────────┘

AWS::Serverless::[Http]Api      =-#Includes RESPROPs:
                                  #  - Cors:
                                  #     - CORS.* except:
                                 =#        - no ExposeHeaders
                                  #        - can be 'ORIGIN' -> AllowOrigins[0]
                                  #     - uses OSPEC.* HTTP headers, not AWS::ApiGatewayV2::Api RESPROP CorsConfiguration
                                  #     - if INTEGRATION.type *_PROXY, CORS response headers must be implemented by backend
                                  #  - Auth:
                                 =#     - AddApiKeyRequiredToCorsPreflight BOOL (def: true): adds APIKEY to OSPEC???
                                 =#     - AddDefaultAuthorizerToCorsPreflight BOOL (def: true): adds default AUTHORIZER to OSPEC???

                                  ┌───────────────┐
                                  │   STAGE SAM   │
                                  └───────────────┘

AWS::Serverless::[Http]Api      =-#Includes RESPROPs:
                                  #  - StageName
                                 -#     - def: '$default'
                                 =#  - Variables, MethodsSettings OBJ_ARR: ResourcePath, HttpMethod
                                 -#  - StageVariables
                                  #'RESOURCE' is 'API_MID{STAGE}Stage', 'SAM_RESOURCE' is 'API_MID.Stage'
                                 -#  - 'RESOURCE' is 'API_MIDApiGatewayDefaultStage' if StageName '$default'

AWS::Serverless::Function        -#Includes RESPROPs: Events.EVENT: Type 'HttpApi', Properties: RouteSettings

                                  ┌────────────────────┐
                                  │   DEPLOYMENT SAM   │
                                  └────────────────────┘

AWS::Serverless::[Http]Api      =-#Create a DEPLOYMENT
                                  #Includes RESPROPs:
                                 =#  - AlwaysDeploy BOOL: if false (def), only if there was a change
                                 =#  - CanarySetting
                                  #'RESOURCE' is 'API_MIDDeploymentRANDOM', 'SAM_RESOURCE' is 'API_MID.Deployment'

                                  ┌─────────────────┐
                                  │   METRICS SAM   │
                                  └─────────────────┘

AWS::Serverless::[Http]Api       =#Includes RESPROPs: MethodsSettings OBJ_ARR: MetricsEnabled
                                -~#Includes RESPROPs: DefaultRouteSettings|RouteSettings.ROUTE: DetailedMetricsEnabled

                                  ┌─────────────────┐
                                  │   LOGGING SAM   │
                                  └─────────────────┘

AWS::Serverless::[Http]Api      =-#Includes RESPROPs:
                                 =#  - MethodsSettings OBJ_ARR: LoggingLevel, DataTraceEnabled
                                 -#  - DefaultRouteSettings|RouteSettings.ROUTE: LoggingLevel, DataTraceEnabled
                                  #  - AccessLogSettings
                                 =#  - TracingEnabled

                                  ┌─────────────────┐
                                  │   CACHING SAM   │
                                  └─────────────────┘

AWS::Serverless::Api             =#Includes RESPROPs:
                                  #  - CacheClusterEnabled, CacheClusterSize
                                  #  - MethodsSettings OBJ_ARR: CachingEnabled, CacheTtlInSeconds, CacheDataEncrypted
                                  #Sets INTEGRATION.cacheKeyParameters|cacheNamespace through RESPROP Definition*

AWS::Serverless::Function        =#Includes RESPROPs: Events.EVENT: Type 'Api', Properties:
                                  #  - RequestParameters ARR of either 'EXPR' or OBJ: CacheKeyParameters BOOL (def: false)

                                  ┌───────────────────────┐
                                  │   IMPORT/EXPORT SAM   │
                                  └───────────────────────┘

AWS::Serverless::[Http]Api      =-#Includes RESPROPs:
                                  #  - DefinitionBody RAW_API_EXPORT_OBJ
                                  #     - def: automatically created
                                  #  - DefinitionUri OBJ: Bucket 'BUCKET', Key 'OBJECT', Version VERSION_MID
                                  #     - can use `sam package` (not `aws cloudformation package`)
                                  #     - unlike DefinitionBody, prevent setting RESPROPs: Name, Description, Tags, Cors
                                 =#  - OpenApiVersion API_EXPORT_TYPE
                                  #     - either '2.0' or '3.0.1'
                                  #     - if set, no STAGE is created
                                 =#  - MergeDefinitions BOOL (def: false)
                                  #     - if non-default DefinitionBody set, merge it with the OSPEC.* set by other properties
                                 =#  - Mode
                                  #  - FailOnWarnings

                                  ┌─────────────────────┐
                                  │   DOMAIN NAME SAM   │
                                  └─────────────────────┘

AWS::Serverless::[Http]Api      =-#Includes RESPROPs:
                                  #  - Domain: DomainName, EndpointConfiguration STR
                                 =#  - DisableExecuteApiEndpoint
                                  #     - also sets OSPEC2|OSERVER3.x-amazon-apigateway-endpoint-configuration.disableExecuteApiEndpoint
                                 =#  - EndpointConfiguration.type STR
                                  #Cannot set OSPEC2|OSERVER3.x-amazon-apigateway-endpoint-configuration.disableExecuteApiEndpoint
                                  #'RESOURCE' is 'ApiGatewayDomainName[V2]RANDOM', 'SAM_RESOURCE' is 'API_MID.DomainName'

                                  ┌─────────────────────┐
                                  │   PRIVATE API SAM   │
                                  └─────────────────────┘

AWS::Serverless::Api             =#Includes RESPROPs: EndpointConfiguration: VpcEndpointIds
                                  #Cannot set OSPEC2|OSERVER3.x-amazon-apigateway-endpoint-configuration.vpcEndpointIds

                                  ┌─────────────┐
                                  │   TLS SAM   │
                                  └─────────────┘

AWS::Serverless::[Http]Api      =-#Includes RESPROPs: Domain:
                                  #  - CertificateArn: DNAME.[Regional]CertificateArn
                                  #  - SecurityPolicy
                                  #  - OwnershipVerificationCertificateArn
                                  #  - MutualTlsAuthentication
                                  #     - no TruststoreWarnings

                                  ┌─────────────────┐
                                  │   MAPPING SAM   │
                                  └─────────────────┘

AWS::Serverless::[Http]Api      =-#Includes RESPROPs: Domain:
                                  #  - BasePath 'BASEPATH'_ARR (def: ['/'])
                                 =#  - NormalizeBasePath BOOL (def: true): strip invalid chars

                                  ┌────────────────────┐
                                  │   USAGE PLAN SAM   │
                                  └────────────────────┘

AWS::Serverless::Api             =#Includes RESPROPs: Auth: UsagePlan:
                                  #  - UsagePlanName, Description, Tags
                                  #  - CreateUsagePlan: configure creation of USAGEPLAN, USAGEKEY, APIKEY among:
                                  #     - 'NONE': no creation
                                  #     - 'PER_API': 'RESOURCE' name in TEMPLATE is namespaced by API_MID
                                  #     - 'SHARED': always namespaced by 'Serverless'
                                  #        - shared by all APIs in TEMPLATE
                                  #        - must be specified by only one AWS::Serverless::Api
                                  #'RESOURCE' is 'API_MIDUsagePlan', 'SAM_RESOURCE' is 'API_MID.UsagePlan'

                                  ┌──────────────────┐
                                  │   THROTTLE SAM   │
                                  └──────────────────┘

AWS::Serverless::[Http]Api      =-#Includes RESPROPs:
                                 =#  - MethodsSettings OBJ_ARR: ThrottlingRate, ThrottlingBurstLimit
                                 -#  - DefaultRouteSettings|RouteSettings.ROUTE: ThrottlingRate, ThrottlingBurstLimit
                                 =#  - Auth: UsagePlan: Throttle, Quota, ApiStages OBJ_ARR: Throttle

                                  ┌────────────────────────┐
                                  │   USAGE PLAN KEY SAM   │
                                  └────────────────────────┘

AWS::Serverless::Api             =#Includes RESPROPs: Auth: UsagePlan: creates USAGEKEY
                                  #'RESOURCE' is 'API_MIDUsagePlanKey', 'SAM_RESOURCE' is 'API_MID.UsagePlanKey'

                                  ┌─────────────────┐
                                  │   API KEY SAM   │
                                  └─────────────────┘

AWS::Serverless::Api             =#Includes RESPROPs: Auth:
                                  #  - UsagePlan: creates APIKEY
                                  #  - ApiKeySourceType
                                  #  - ApiKeyRequired
                                  #Cannot use OSPEC.x-amazon-apigateway-api-key-source
                                  #'RESOURCE' is 'API_MIDApiKey', 'SAM_RESOURCE' is 'API_MID.ApiKey'

AWS::Serverless::Function        =#Includes RESPROPs: Events.EVENT: Type 'Api', Properties: Auth:
                                  #  - ApiKeyRequired BOOL: AWS::ApiGateway::Method RESPROP ApiKeyRequired

                                  ┌─────────────────┐
                                  │   ROUTE53 SAM   │
                                  └─────────────────┘

AWS::Serverless::[Http]Api      =-#Includes RESPROPs: Domain: Route53 RECORD_SET:
                                  #  - HostedZoneId
                                  #  - HostedZoneName
                                  #  - Region
                                  #  - SetIdentifier
                                  #  - IpV6 BOOL (def: false): RECORD_SET.Type 'A|AAAA'
                                  #  - DistributionDomainName: RECORD_SET.AliasTarget.DNSName (def: 'DNAME')
                                  #  - EvaluateTargetHealth

                                  ┌──────────────────┐
                                  │   FUNCTION SAM   │
                                  └──────────────────┘

AWS::Serverless::Function         #Expands to Lambda FUNCTION and its ROLE
                                  #Optionally, expands to Lambda:
                                  #  - FUNC_VERSION
                                  #  - ALIAS
                                  #  - FUNC_URL
                                  #  - EVENT_INVOKE
                                  #Optionally, also to:
                                  #  - SQS QUEUE
                                  #  - SNS TOPIC
                                  #  - CodeDeploy APPLICATION, DEPLOYMENT_GROUP, ROLE
                                  #Optionally, also to TRIGGERs:
                                  #  - Lambda EVENT_SOURCE
                                  #  - API Gateway INTEGRATION (and API, RESOURCE, METHOD, REQVALID)
                                  #  - S3 NOTIFICATIONS
                                  #  - CloudWatch Logs SUBSCRIPTION
                                  #  - SNS SUBSCRIPTION
                                  #  - EventBridge RULE
                                  #  - EventBridge Scheduler SCHEDULE
                                  #  - IoT TOPIC_RULE
                                  #Missing features:
                                  #  - ALIAS.RoutingConfig
                                  #  - RESOURCE-specific tags
                                  #Includes RESPROPs:
                                  #  - Description
                                  #  - VersionDescription
                                  #     - only if RESPROP AutoPublishAlias set

                                  ┌─────────────────────┐
                                  │   IDENTIFIERS SAM   │
                                  └─────────────────────┘

AWS::Serverless::Function         #Includes RESPROPs:
                                  #  - FunctionName
                                  #  - AutoPublishCodeSha256: FUNC_VERSION.CodeSha256
                                  #     - only if RESPROP AutoPublishAlias set
                                  #Includes RESATTRs: Arn

                                  ┌─────────────────┐
                                  │   VERSION SAM   │
                                  └─────────────────┘

AWS::Serverless::Function         #Includes RESPROPs:
                                  #  - AutoPublishAlias 'ALIAS' (def: none)
                                  #     - creates FUNC_VERSION: 'RESOURCE' is 'FUNCTIONVersionRANDOM', 'SAM_RESOURCE' is 'FUNCTION.Version'
                                  #  - AutoPublishAliasAllProperties BOOL:
                                  #     - skip creating a FUNC_VERSION if none of the following AWS::Serverless::Function RESPROPs changed:
                                  #        - false (def): *Code*, ImageUri, Environment, MemorySize, SnapStart, AutoPublishCodeSha256
                                  #        - true: any
                                  #     - only if AutoPublishAlias set

                                  ┌───────────────┐
                                  │   ALIAS SAM   │
                                  └───────────────┘

AWS::Serverless::Function         #Includes RESPROPs: AutoPublishAlias 'ALIAS' (def: none)
                                  #  - creates ALIAS: 'RESOURCE' is 'FUNCTIONAliasALIAS', 'SAM_RESOURCE' is 'FUNCTION.Alias'

                                  ┌──────────────┐
                                  │   CODE SAM   │
                                  └──────────────┘

AWS::Serverless::Function         #Includes RESPROPs: PackageType

                                  ┌──────────────────┐
                                  │   CODE ZIP SAM   │
                                  └──────────────────┘

AWS::Serverless::Function         #Includes RESPROPs:
                                  #  - InlineCode STR: NEW_FUNC_CODE.ZipFile
                                  #  - CodeUri S3 'URI' or OBJ: Bucket|Key|Version
                                  #     - can use `sam package` (not `aws cloudformation package`)
                                  #  - SourceKMSKeyArn

                                  ┌────────────────────┐
                                  │   CODE IMAGE SAM   │
                                  └────────────────────┘

AWS::Serverless::Function         #Includes RESPROPs: ImageUri, ImageConfig

                                  ┌───────────────────────┐
                                  │   LAYER VERSION SAM   │
                                  └───────────────────────┘

AWS::Serverless::Function         #Includes RESPROPs: Layers

                                  ┌─────────────────┐
                                  │   RUNTIME SAM   │
                                  └─────────────────┘

AWS::Serverless::Function         #Includes RESPROPs: Runtime, Handler

                                  ┌─────────────────────────┐
                                  │   RUNTIME VERSION SAM   │
                                  └─────────────────────────┘

AWS::Serverless::Function         #Includes RESPROPs: RuntimeManagementConfig

                                  ┌────────────────┐
                                  │   MEMORY SAM   │
                                  └────────────────┘

AWS::Serverless::Function         #Includes RESPROPs: MemorySize

                                  ┌─────────────┐
                                  │   CPU SAM   │
                                  └─────────────┘

AWS::Serverless::Function         #Includes RESPROPs: Architectures

                                  ┌───────────────────────────────┐
                                  │   ENVIRONMENT VARIABLES SAM   │
                                  └───────────────────────────────┘

AWS::Serverless::Function         #Includes RESPROPs: Environment, KmsKeyArn

                                  ┌────────────────────┐
                                  │   FILESYSTEM SAM   │
                                  └────────────────────┘

AWS::Serverless::Function         #Includes RESPROPs: EphemeralStorage, FileSystemConfigs

                                  ┌────────────────────┐
                                  │   NETWORKING SAM   │
                                  └────────────────────┘

AWS::Serverless::Function         #Includes RESPROPs: VpcConfig

                                  ┌─────────────────┐
                                  │   LOGGING SAM   │
                                  └─────────────────┘

AWS::Serverless::Function         #Includes RESPROPs: LoggingConfig

                                  ┌─────────────────────────────┐
                                  │   PERMISSION IDENTITY SAM   │
                                  └─────────────────────────────┘

AWS::Serverless::Function         #Includes RESPROPs:
                                  #  - Role
                                  #     - def: automatically creates ROLE 'FUNCTIONRole'
                                  #        - AWSXrayWriteOnlyAccess AWS managed POLICY: unless RESPROP Tracing 'Disabled'
                                  #  - RolePath, Policies, PermissionsBoundary, AssumeRolePolicyDocument:
                                  #    same as AWS::Iam::Role, for default RESPROP Role

                                  ┌───────────────────────────────┐
                                  │   CODE SIGNING FUNCTION ARN   │
                                  └───────────────────────────────┘

AWS::Serverless::Function         #Includes RESPROPs: CodeSigningConfigArn

                                  ┌───────────────────┐
                                  │   STREAMING ARN   │
                                  └───────────────────┘

AWS::Serverless::Function         #Includes RESPROPs: FunctionUrlConfig: InvokeMode

                                  ┌─────────────┐
                                  │   URL ARN   │
                                  └─────────────┘

AWS::Serverless::Function         #Includes RESPROPs: FunctionUrlConfig: AuthType, Cors

                                  ┌────────────────┐
                                  │   ERRORS ARN   │
                                  └────────────────┘

AWS::Serverless::Function         #Includes RESPROPs: Tracing 'Active', 'PassThrough' or 'Disabled' (def)

                                  ┌─────────────────┐
                                  │   TIMEOUT ARN   │
                                  └─────────────────┘

AWS::Serverless::Function         #Includes RESPROPs: Timeout

                                  ┌───────────────────┐
                                  │   RECURSION ARN   │
                                  └───────────────────┘

AWS::Serverless::Function         #Includes RESPROPs: RecursiveLoop

                                  ┌───────────────────────────┐
                                  │   ASYNC DESTINATION ARN   │
                                  └───────────────────────────┘

AWS::Serverless::Function         #Includes RESPROPs: EventInvokeConfig: DestinationConfig
                                  #Create an EVENT_INVOKE 'FUNCTIONEventInvokeConfig'
                                  #Can also create:
                                  #  - SNS TOPIC 'FUNCTIONOnSuccess|FailureTopic', with 'SAM_RESOURCE' 'FUNCTION.DestinationTopic'
                                  #  - SQS QUEUE 'FUNCTIONOnSuccess|FailureQueue', with 'SAM_RESOURCE' 'FUNCTION.DestinationQueue'

                                  ┌───────────────────────────┐
                                  │   ASYNC DEAD LETTER SAM   │
                                  └───────────────────────────┘

AWS::Serverless::Function         #Includes RESPROPs: DeadLetterQueue: Type 'SQS|SNS', TargetArn 'ARN'

                                  ┌─────────────────────┐
                                  │   ASYNC RETRY SAM   │
                                  └─────────────────────┘

AWS::Serverless::Function         #Includes RESPROPs: EventInvokeConfig: MaximumEventAgeInSeconds, MaximumRetryAttempts

                                  ┌────────────────────┐
                                  │   BATCH MAIN SAM   │
                                  └────────────────────┘

AWS::Serverless::Function         #Includes RESPROPs: Events.EVENT:
                                  #  - Type 'DocumentDB|DynamoDB|Kinesis|MSK|MQ|SelfManagedKafka|SQS'
                                  #  - Properties: BatchSize, MaximumBatchingWindowInSeconds, SourceAccessConfigurations,
                                  #    StartingPosition[Timestamp], Enabled BOOL
                                  #Create an EVENT_SOURCE named 'FUNCTION' + 'EVENT'

                                  ┌──────────────────────┐
                                  │   BATCH FILTER SAM   │
                                  └──────────────────────┘

AWS::Serverless::Function         #Includes RESPROPs: Events.EVENT: Properties: FilterCriteria, KmsKeyArn

                                  ┌─────────────────────┐
                                  │   BATCH KAFKA SAM   │
                                  └─────────────────────┘

AWS::Serverless::Function         #Includes RESPROPs: Events.EVENT: Properties: Stream 'ARN', Topics, ConsumerGroupId, KafkaBootstrapServers

                                  ┌──────────────────┐
                                  │   BATCH MQ SAM   │
                                  └──────────────────┘

AWS::Serverless::Function         #Includes RESPROPs: Events.EVENT: Properties:
                                  #  - Broker 'ARN'
                                  #  - Queues
                                  #  - DynamicPolicyName BOOL:
                                  #     - whether to name generated ROLE 'SamAutoGeneratedAMQPolicy' (false, def) or random (true, recommended)
                                  #     - regardless: always generate a ROLE
                                  #  - SecretsManagerKmsKeyId KMS KEY_MID

                                  ┌───────────────────┐
                                  │   BATCH SQS SAM   │
                                  └───────────────────┘

AWS::Serverless::Function         #Includes RESPROPs: Events.EVENT: Properties: Queue 'QUEUE_ARN', ScalingConfig, FunctionResponseTypes

                                  ┌───────────────────────┐
                                  │   BATCH KINESIS SAM   │
                                  └───────────────────────┘

AWS::Serverless::Function         #Includes RESPROPs: Events.EVENT: Properties:
                                  #  - Stream 'ARN'
                                  #  - FunctionResponseTypes, TumblingWindowInSeconds, ParallelizationFactor, BisectBatchOnFunctionError,
                                  #    MaximumRetryAttempts, MaximumRecordAgeInSeconds

                                  ┌────────────────────────┐
                                  │   BATCH DYNAMODB SAM   │
                                  └────────────────────────┘

AWS::Serverless::Function         #Includes RESPROPs: Events.EVENT: Properties:
                                  #  - Stream 'ARN'
                                  #  - FunctionResponseTypes, TumblingWindowInSeconds, ParallelizationFactor, BisectBatchOnFunctionError,
                                  #    MaximumRetryAttempts, MaximumRecordAgeInSeconds

                                  ┌──────────────────────────┐
                                  │   BATCH DOCUMENTDB SAM   │
                                  └──────────────────────────┘

AWS::Serverless::Function         #Includes RESPROPs: Events.EVENT: Properties:
                                  #  - Cluster 'ARN'
                                  #  - SecretsManagerKmsKeyId KMS KEY_MID
                                  #  - DatabaseName, CollectionName, FullDocument

                                  ┌───────────────────────────┐
                                  │   BATCH DESTINATION SAM   │
                                  └───────────────────────────┘

AWS::Serverless::Function         #Includes RESPROPs: Events.EVENT: Properties: DestinationConfig

                                  ┌──────────────────────────────┐
                                  │   CONCURRENCY RESERVED SAM   │
                                  └──────────────────────────────┘

AWS::Serverless::Function         #Includes RESPROPs: ReservedConcurrentExecutions

                                  ┌─────────────────────────────────┐
                                  │   CONCURRENCY PROVISIONED SAM   │
                                  └─────────────────────────────────┘

AWS::Serverless::Function         #Includes RESPROPs: ProvisionedConcurrencyConfig
                                  #  - only if RESPROP AutoPublishAlias set

                                  ┌────────────────────┐
                                  │   SNAP START SAM   │
                                  └────────────────────┘

AWS::Serverless::Function         #Includes RESPROPs: SnapStart

                                  ┌──────────────┐
                                  │   TAGS SAM   │
                                  └──────────────┘

AWS::Serverless::Function         #Includes RESPROPs:
                                  #  - Tags OBJ
                                  #  - PropagateTags BOOL: whether Tags targets:
                                  #     - false (def): FUNCTION
                                  #     - true: all generated RESOURCEs

                                  ┌────────────────────┐
                                  │   CODEDEPLOY SAM   │
                                  └────────────────────┘

AWS::Serverless::Function         #Includes RESPROPs: DeploymentPreference OBJ:
                                  #  - Enabled BOOL (def: false): create a CodeDeploy:
                                  #     - APPLICATION 'ServerlessDeploymentApplication' (singleton per STACK)
                                  #     - DEPLOYMENT_GROUP 'FUNCTIONDeploymentGroup'
                                  #  - Role ROLE_ARN
                                  #     - AWS::CodeDeploy::DeploymentGroup RESPROP ServiceRoleArn
                                  #     - def: automatically create ROLE 'CodeDeployServiceRole' (singleton per STACK)
                                  #  - TriggerConfigurations: same as AWS::CodeDeploy::DeploymentGroup RESPROP TriggerConfigurations
                                  #  - Alarms ARR: same as AWS::CodeDeploy::DeploymentGroup RESPROP AlarmConfiguration.Alarms
                                  #  - Hooks OBJ: PreTraffic|PostTraffic: same as AWS::CodeDeploy::DeploymentGroup
                                  #    RESOURCE.UpdatePolicy.CodeDeployLambdaAliasUpdate.Before|AfterAllowTrafficHook
                                  #  - PassthroughCondition BOOL (def: false, recommended: true): copy RESOURCE.Condition
                                  #    from AWS::Serverless::Function to AWS::CodeDeploy::DeploymentGroup
                                  #  - Type 'Linear10Percent5|10|15|30Minutes', 'Canary10Percent5|10|15|30Minutes', 'AllAtOnce': not documented yet
                                  #Only if RESPROP AutoPublishAlias set

                                  ┌────────────────────────────┐
                                  │   NOTIFICATIONS MAIN SAM   │
                                  └────────────────────────────┘

AWS::Serverless::Function         #Includes RESPROPs: Events.EVENT:
                                  #  - Type 'S3': create a NOTIFICATIONS
                                  #  - Properties:
                                  #     - Bucket 'BUCKET'
                                  #        - must be in same TEMPLATE
                                  #     - Events STR[_ARR]
                                  #     - Filter OBJ
                                  #        - FilterRules -> Rules

                                  ┌───────────────────────────┐
                                  │   SUBSCRIPTION MAIN SAM   │
                                  └───────────────────────────┘

AWS::Serverless::Function         #Includes RESPROPs: Events.EVENT:
                                  #  - Type 'CloudWatchLogs': create a SUBSCRIPTION
                                  #  - Properties: FilterPattern, LogGroupName

                                  ┌───────────────────┐
                                  │   LAYER VERSION   │
                                  └───────────────────┘

AWS::Lambda::LayerVersion         #RESOURCE.RetentionPolicy: like RESOURCE.DeletionPolicy
AWS::Lambda::Layer[Version]       #Def RESOURCE.DeletionPolicy: 'Retain'
