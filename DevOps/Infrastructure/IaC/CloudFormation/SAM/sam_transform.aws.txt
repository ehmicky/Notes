
                                  ┏━━━━━━━━━━━━━━━━━━━┓
                                  ┃   SAM_TRANSFORM   ┃
                                  ┗━━━━━━━━━━━━━━━━━━━┛

VERSION ==>                       #1.91.0

SAM CLI ==>                       #See its doc
                                  #Does not require SAM transform: supports regular RESTYPEs
                                  #However, does support SAM transform: AWS::Serverless::* RESTYPEs
                                  #Is not required by SAM transform: since transformation happens inside CloudFormation, not locally

TEMPLATE.Transform                #Must include 'AWS::Serverless-2016-10-31'
                                  #If has 'AWS::LanguageExtensions', must be after it
                                  #Transforms AWS::Serverless::* RESTYPEs into regular ones

TRANSFORMATION ==>                #Happens inside CloudFormation itself, not locally
                                  #I.e. any CloudFormation-related tool:
                                  #  - in order to support TEMPLATEs with SAM transform
                                  #  - must be enhanced to handle AWS::Serverless::* RESTYPEs and TEMPLATE.Globals

TEMPLATE.Globals.TYPE.RESPROPS    #OBJ. Default RESPROPs
                                  #Only for AWS::Serverless::TYPE???
                                  #OBJs are deeply merged, ARRs are prepended
                                  #Api also applies to AWS::Serverless::Function EventSource of Type 'Api'
                                  #Does not support following RESPROPs:
                                  #  - Function: FunctionName, Role, Policies, Events
                                  #  - [Http]Api: StageName, DefinitionBody
                                  #  - HttpApi: DefinitionUri

https://github.com/aws/serverless-application-model???

                                  ┌──────────┐
                                  │   LINT   │
                                  └──────────┘

cfn-lint E3038                    #AWS::Serverless TRANSFORM must be declared if using AWS::Serverless::* RESTYPEs

                                  ┌─────────┐
                                  │   API   │
                                  └─────────┘

AWS::Serverless::Api              #Expands to API Gateway v1:
                                  #  - API
                                  #  - STAGE
                                  #  - DEPLOYMENT
                                  #  - DNAME
                                  #  - multiple MAPPINGs
                                  #  - multiple MODELs
                                  #  - multiple AUTHORIZERs
                                  #     - Lambda PERMISSIONs
                                  #  - CORS
                                  #  - GRESP
                                  #  - USAGEPLAN
                                  #  - USAGEKEY
                                  #  - APIKEY
                                  #Also to:
                                  #  - Route53 RECORD_SET

SAPI.*                            #API.* except:
                                  #  - no CloneFrom, Parameters, Tags
                                  #  - EndpointConfiguration.types STR_ARR -> EndpointConfiguration.type STR
                                  #  - BinaryMediaTypes: also sets OSPEC.x-amazon-apigateway-binary-media-types
                                  #  - DisableExecuteApiEndpoint: only sets
                                  #    OSPEC2|OSERVER3.x-amazon-apigateway-endpoint-configuration.disableExecuteApiEndpoint

SAPI.*                            #STAGE.* except:
                                  #  - no ClientCertificateId, Description, DocumentationVersion
                                  #  - automatically sets RestApiId, DeploymentId
                                  #  - Tags ARR -> OBJ

SAPI.AlwaysDeploy                 #BOOL. If false (def), create a DEPLOYMENT if there was a change
                                  #If true, always create it
                                  #Cannot set DEPLOYMENT.[Stage]Description|DeploymentCanarySettings

SAPI.Domain                       #DNAME.* except:
                                  #  - [Regional]CertificateArn -> CertificateArn
                                  #  - EndpointConfiguration.Types[0] -> EndpointConfiguration
                                  #  - no Tags

SAPI.Domain.BasePath              #MAPPING.BasePath except as 'BASEPATH'_ARR, with def ['/']
SAPI.Domain.NormalizeBasePath     #BOOL (def: true). Strip invalid chars

SAPI.Models.MODEL                 #MODEL.schema
                                  #Key is MODEL.name

SAPI.Authorizers                  #SAUTHORIZER_ARR. AUTHORIZER and ROUTE.authorizerId
SAPI.DefaultAuthorizer            #SAUTHORIZER. AUTHORIZER and ROUTE.authorizerId
SAUTHORIZER.FunctionPayloadType   #AUTHORIZER.type
                                  #  - 'COGNITO_USER_POOLS': specified by setting SAUTHORIZER.UserPoolArn instead
SAUTHORIZER.FunctionArn           #AUTHORIZER.authorizerUri
SAUTHORIZER.FunctionInvokeRole    #AUTHORIZER.authorizerCredentials
SAUTHORIZER
.DisableFunctionDefaultPermissions#BOOL. If false (def), create Lambda PERMISSION
SIDENTITY_SOURCE.ReauthorizeEvery #AUTHORIZER.authorizerResultTtlInSeconds

SAUTHORIZER.Identity              #SIDENTITY_SOURCE. AUTHORIZER.identitySource
SIDENTITY_SOURCE.Context          #'VAR'_ARR. 'context.VAR,...'
SIDENTITY_SOURCE.Headers          #'HEADER'_ARR. 'method.request.header.HEADER,...'
SIDENTITY_SOURCE.QueryStrings     #'VAR'_ARR. 'method.request.querystring.VAR,...'
SIDENTITY_SOURCE.StageVariables   #'STAGEVAR'_ARR. 'stageVariables.STAGEVAR,...'

SAPI.Auth.ResourcePolicy          #SAPI_POLICY. API.Policy
SAPI_POLICY.CustomStatements      #IAM STATEMENT_ARR
SAPI_POLICY.AwsAccountWhitelist   #'ACCOUNT_ID'_ARR. Add STATEMENT with:
                                  #  - PACTION 'execute-api:Invoke'
                                  #  - PRINCIPAL '*'
                                  #  - COND_KEY 'aws:SourceAccount'
SAPI_POLICY.IpRangeWhitelist      #'IP'_ARR. Same with COND_KEY 'aws:SourceIp'
SAPI_POLICY
 .IntrinsicVpc[e]Whitelist        #'VPC_MID'_ARR. Same with COND_KEY 'aws:SourceVpc[e]'
SAPI_POLICY.SourceVpcWhitelist    #Same but with 'VPC'_ARR
SAPI_POLICY.*Blacklist            #Same as *Whitelist but excludes instead

SAPI.Cors                         #CORS.* except:
                                  #  - no ExposeHeaders
                                  #  - can be 'ORIGIN' -> AllowOrigins[0]
                                  #Uses OSPEC.* HTTP headers, since API Gateway v1 does not support CORS
                                  #If INTEGRATION.type *_PROXY, CORS response headers must be implemented by backend

SAPI.GatewayResponses             #OSPEC.x-amazon-apigateway-gateway-responses

SAPI.Domain.Route53.*             #Route53 RECORD_SET.RecordSets[0].* except:
                                  #  - Type STR -> IpV6 BOOL (def: false)
                                  #  - AliasTarget.* -> *
                                  #  - AliasTarget.DNSName -> DistributionDomainName (def: SAPI.Domain.DomainName)
                                  #  - no CidrRoutingConfig, Comment, Failover, Geo*, HealthCheckId, MultiValueAnswer,
                                  #    Name, ResourceRecods, TTL, Weight

SAPI.Auth.InvokeRole              #INTEGRATION.credentials except:
                                  #  - 'arn:aws:iam::*:user/*' -> 'CALLER_CREDENTIALS' (def)
                                  #  - null -> 'NONE'

SAPI.Auth.ApiKeyRequired          #ROUTE.ApiKeyRequired

SAPI.Auth.UsagePlan.*             #USAGEPLAN.* except no ApiStages
SAPI.Auth.UsagePlan               #Configure creation of:
 .CreateUsagePlan                 #  - USAGEPLAN
                                  #  - USAGEKEY
                                  #  - APIKEY (cannot set Name|Description|Enabled|Value|StageKeys|Tags|CustomerId)
                                  #Can be:
                                  #  - 'NONE': no creation
                                  #  - 'PER_API': 'RESOURCE' name in TEMPLATE is namespaced by API_MID
                                  #  - 'SHARED': always namespaced by 'Serverless'
                                  #      - shared by all APIs in TEMPLATE
                                  #      - must be specified by only one AWS::Serverless::Api

SAPI.DefinitionBody               #JSON
SAPI.DefinitionUri                #String | ApiDefinition
SAPI.MergeDefinitions             #Boolean
SAPI.OpenApiVersion               #String
SAPI.PropagateTags                #Boolean
