
           
   AWS CLI  
           



VERSION ==>                   #2.11.9
                              #Written in Python

SEE ALSO ==>                  #Main AWS doc

INSTALL ==>                   #Download and run install script
                              #Does not automatically update

SERVICES ==>                  #Most are available, except some within last 6 months
                              #Some SERVICEs have CLI-only commands

aws_completer                 #Adds autocompletion
                              #Binary installed alongside `aws`

AWSCONFIG                     #Can be:
                              #  - CLI flags, e.g. --access-key-id VAL
                              #  - ~/.aws/config INI_FILE
                              #     - top-level key is 'profile PROFILE'
                              #     - value is AWSCONFIG
                              #  - ENVVAR AWS_CONFIG_FILE 'INI'
                              #  - ~/.aws/credentials INI_FILE
                              #     - same format as ~/.aws/config
                              #     - but keys are underscored an prefixed with aws, e.g. aws_access_key_id
                              #  - ENVVAR, e.g. AWS_[DEFAULT_]ACCESS_KEY_ID

PROFILE                       #Specific AWSCONFIG
aws ...
--profile PROFILE             #Use a specific PROFILE

aws configure                 #Interactive?
aws configure list            #
aws configure get
 [PROFILE.]VAR                #
aws configure set
 [PROFILE.]VAR VAL            #

--output STR                  #'json' (def), 'text' or 'table'

AWSCONFIG.accessKeyId         #
AWSCONFIG.secretAccessKey     #
AWSCONFIG.sessionToken        #
AWSCONFIG.credentials         #CREDENTIAL_OBJ:
                              #  - instantiated by:
                              #     - new AWS.Credential(ACCESS_KEY_ID, SECRET_ACCESS_KEY[, SESSION_TOKEN])
                              #     - new AWS.Credential(AWSCONFIG)
                              #  - accessKeyId|secretAccessKey|sessionToken
                              #  - expired BOOL
                              #  - expireTime DATE
                              #  - expiryWindow UINT (e.g. 15, in mins)
                              #  - needsRefresh()->BOOL
                              #  - refresh(FUNC(ERROR))
                              #  - get(FUNC(ERROR)): same but only refresh() if needsRefresh()
                              #  - Should not need it:
                              #     - automatically created from other AWSCONFIG members
                              #     - automatically refreshed
                              #Non usual credentials (e.g. different types of roles) have extra members, must do
                              #credentials = new AWS.*Credentials(...):
                              #   - new AWS.TemporaryCredentials(OBJ) -> sts:getSessionToken(OBJ) (if not OBJ.Arn)
                              #      - CREDENTIAL_OBJ.masterCredentials CREDENTIAL_OBJ2 (original one)
                              #   - new AWS.TemporaryCredentials(OBJ) -> sts:assumeRole(OBJ) (if OBJ.Arn)
                              #      - CREDENTIAL_OBJ.masterCredentials CREDENTIAL_OBJ2 (original one)
                              #   - new AWS.SAMLCredentials(OBJ) -> sts:assumeRoleWithSAML(OBJ)
                              #      - CREDENTIAL_OBJ.params OBJ
                              #   - new AWS.WebIdentityCredentials(OBJ) -> sts:assumeRoleWithWebIdentity(OBJ)
                              #      - CREDENTIAL_OBJ.params OBJ
                              #      - CREDENTIAL_OBJ.data OBJ2 (response)
                              #   - new AWS.CognitoIdentityCredentials(OBJ) -> cognito:getOpenIdToken(OBJ) then
                              #     sts:assumeRoleWithWebIdentity(OBJ)
                              #      - CREDENTIAL_OBJ.params OBJ
                              #      - CREDENTIAL_OBJ.data OBJ2 (response)
                              #      - CREDENTIAL_OBJ.identityId STR, CREDENTIAL_OBJ.getId(FUNC(STR))
                              #   - new AWS.EnvironmentCredentials(STR) -> uses ENVVAR STR_* (e.g. "AWS")
                              #      - CREDENTIAL_OBJ.envPrefix STR
                              #   - new AWS.FilesystemCredentials(FILE) -> uses JSON config file
                              #      - CREDENTIAL_OBJ.filename STR
                              #   - new AWS.SharedIniFileCredentials(OBJ) -> uses INI config file, with OBJ.profile and
                              #     OBJ.filename (def: "~/.aws/credentials")
                              #   - new AWS.CredentialProviderChain(ARR): uses several AWS.*Credentials as a chain
                              #   - new AWS.EC2MetadataCredentials(OBJ)
AWSCONFIG.region              #STR
AWSCONFIG.sslEnabled          #BOOL (def: true)
AWSCONFIG.maxRetries          #UINT (def: undefined)
AWSCONFIG.maxRedirects        #UINT (def: 10)
AWSCONFIG.logger              #OBJ, any OBJ with either .write() or log() (e.g. process.stdout or console)
AWSCONFIG.apiVersions         #OBJ:
                              #  - SERVICE: VERSION_STR (or "latest" (def))
AWSCONFIG.httpOptions         #OBJ:
                              #  - proxy URL
                              #  - agent AGENT (def: HTTP.globalAgent)
                              #  - timeout UINT
                              #  - xhrWithCredentials BOOL (def: false, browser only)
AWSCONFIG.endpoint            #URL (automatically configured)
AWSCONFIG.computeChecksums    #If true (def), client computes Content-MD5 [C]
AWSCONFIG.profile             #PROFILE (def: "default", or ENVVAR AWS_DEFAULT_PROFILE)

aws SERVICE ACTION            #  - ACTION|REQ_VAR: lowercase dashes instead of camelcase
[--REQ_VAR VAL... ...]        #  - REQ_VAR:
                              #     - if VAL is OBJ:
                              #        - must use JSON_FILE|URL|STR
                              #        - if not OBJ|ARR_OBJ, can use shortcut syntax:
                              #           - if VAL is OBJ -> "VAR2=VAL2[_ARR],...", where VAL2_ARR is VAL2,...
                              #              - e.g. "Numbers=One,Two,Letter=B"
                              #           - if VAL is ARR -> --REQ_VAR VAL VAL2 ...
                              #     - if VAL is BOOL: --[no-]REQ_VAR
                              #     - --body uses FILE
--query VAR                   #Only gets a submember of the response. VAR can be:
                              #  - VAR.VAR2
                              #  - VAR[NUM]
                              #  - VAR[*]: all members (for array)
                              #  - VAR.{NEWVAR2:OLDVAR2,...}:
                              #     - only gets VAR.OLDVAR2..., but modifies output key names
                              #     - OLDVAR2 can be VAR2.VAR3, VAR2[NUM], etc.
                              #  - VAR.[VAR2...]: same but as ARR (no key names)
--debug                       #
--endpoint-url STR            #
--no-paginate                 #
--no-verify-ssl               #
