
                  
   AWS JAVASCRIPT  
                  



VERSION ==>                   #3.306.0
                              #For browsers/Node.js

SEE ALSO ==>                  #Main AWS doc

AWS                           #Main import

AWSCONFIG                     #See CLI doc
                              #Can be:
                              #  - ~/.aws/credentials: like CLI
                              #     - can also get AWSCONFIG.credentials with AWS.SharedIniFileCredentials({ profile: PROFIL })
                              #  - ENVVARs: like CLI
                              #  - AWS.config
                              #  - AWS.config.loadFromPath(AWSCONFIG_JSON_FILE)
                              #  - AWS.config.update(AWSCONFIG)

new AWS.SERVICE([AWSCONFIG])  #Returns SERVICE
                              #AWSCONFIG can take:
                              #  - params OBJ: used as default REQ_OBJ (if acceptable arguments)
                              #  - apiVersion VERSION_STR
SERVICE.config                #AWSCONFIG

SERVICE.ACTION([REQ_OBJ]      #  - if no FUNC, returns AWSREQ:
[, FUNC(ERROR, RES_OBJ)])     #     - must use AWSREQ.send()
                              #     - event handlers:
                              #        - success FUNC(ALL_OBJ), where ALL_OBJ:
                              #           - data RES_OBJ
                              #           - error ERROR
                              #           - request.params REQ_OBJ
                              #           - requestId STR
                              #           - redirectCount NUM
                              #           - retryCount NUM: automatically done by SDK
                              #           - hasNextPage() BOOL and nextPage(FUNC(ERROR, RES_OBJ)): pagination
                              #           - httpResponse:
                              #              - body STR
                              #              - headers OBJ
                              #              - statusCode NUM
                              #              - stream ISTREAM
                              #        - error FUNC(ERROR, ALL_OBJ)
                              #        - complete FUNC(ALL_OBJ): either success or error
                              #        - httpData FUNC(CHUNK, ALL_OBJ): for streaming big answers
                              #     - createReadStream() -> ISTREAM, in order to ISTREAM.pipe(OSTREAM)
                              #     - abort()
                              #     - httpRequest OBJ:
                              #        - body STR
                              #        - headers OBJ
                              #        - method STR
                              #        - path STR
                              #        - endpoint OBJ: host, hostname, href, port, protocol
                              #  - ACTION is same case except first letter is lowercase
                              #  - REQ_OBJ:
                              #     - any query variable, request body OBJ.VAR or request header (without potential x-amz-)
                              #     - Body BUFFER|TYPEDARRAY|BLOB|STR|ISTREAM for request body that is not OBJ
                              #       (body for Glacier)
                              #     - DryRun BOOL (def: false): always available
                              #  - REQ_OBJ|RES_OBJ:
                              #     - VAL_ARR -> ARR:
                              #        - VAR.NUM. -> VAR_ARR (with extra s)
                              #        - <KEYSet|List><VAR></VAR>...</KEYSet|List> -> KEY_ARR (without VAR level)
                              #  - RES_OBJ:
                              #     - as opposed to request body, strip:
                              #        - first level of response (englobbing XML tag), often { KEYResponse: OBJ } -> OBJ
                              #        - second level sometimes, often { KEYResponse: { KEYResult: OBJ } } -> OBJ
                              #     - otherwise as is (but JSON not XML)
SERVICE.apiVersions           #STR_ARR
SERVICE.endpoint              #URL
SERVICE.waitFor('STATE',      #  - Only fires FUNC() once a condition happened
REQ_OBJ, FUNC(ERROR, RES_OBJ))#  - STATE depends on SERVICE
                              #  - polls by calling an underlying SERVICE.ACTION(REQ_OBJ) every NUM secs (depends on SERVICE),
                              #    and checks results according to STATE

JAVASCRIPT BROWSER SDK ==>    #Like Node.js but:
                              #  - Script aws-sdk-VERSION.min.js -> window.AWS
                              #  - only has SERVICE: S3, SNS, STS, SQS, Kinesis, CloudWatch, DynamoDB
                              #  - to create own SDK, must git clone, then node dist-tools/browser-builder SERVICE,...,
                              #    optionally with ENVVAR MINIMY=1
