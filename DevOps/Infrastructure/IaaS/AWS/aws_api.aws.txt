
                                  ┏━━━━━━━━━━━━━┓
                                  ┃   AWS API   ┃
                                  ┗━━━━━━━━━━━━━┛

VERSION ==>                       #2024-07-16

SEE ALSO ==>                      #Main AWS doc

SUMMARY ==>                       #Request: action, version, query|JSON|XML
                                  #Response: errors, requestId
                                  #Authorization: signature version 4a|4b|2

                                  ┌─────────────────────┐
                                  │   SERVICE VERSION   │
                                  └─────────────────────┘

MAJOR RELEASE ==>                 #Most SERVICEs are at v1
                                  #Some are at v2, which is specified in SERVICE_FULL_DOMAIN (see AWS endpoint doc)

SVERSION                          #'YYYY-MM-DD'. Minor|patch release number of SERVICE
                                  #Specified in API requests

                                  ┌─────────────────────────┐
                                  │   SERVICE VERSION API   │
                                  └─────────────────────────┘

API ==>                           #One of the following, depending on SERVICE
REQ.Version 'SVERSION'            #
X-Amz-Target:
 SERVICE[_VERSION].ACTION [C]     #
X-Amz-SERVICE-Version: VERSION [C]#

                                  ┌────────────────────────────┐
                                  │   SERVICE VERSION CONFIG   │
                                  └────────────────────────────┘

CONFIG.api_versions.SERVICE       #'SVERSION' (def: latest)

                                  ┌─────────────────────────┐
                                  │   SERVICE VERSION SDK   │
                                  └─────────────────────────┘

COPTS.apiVersion.SERVICE          #Like CONFIG.api_versions.SERVICE

                                  ┌────────────┐
                                  │   ACTION   │
                                  └────────────┘

SERVICE_ACTION                    #REST method name for a given SERVICE. Capitalized.
                                  #Also called "operation"
ACTION                            #'SERVICE:SERVICE_ACTION'
                                  #Can sometimes use wildcard *

PACTION                           #See IAM doc

                                  ┌────────────────┐
                                  │   ACTION API   │
                                  └────────────────┘

API ==>                           #One of the following, depending on SERVICE
REQ.Action                        #'ACTION'
REQ.Operation                     #'ACTION'
X-Amz-Target:
 SERVICE[_VERSION].ACTION [C]     #ACTION is CamelCase

                                  ┌─────────────┐
                                  │   REQUEST   │
                                  └─────────────┘

PROTOCOL ==>                      #HTTPS
                                  #HTTP allowed for some SERVICEs

ENDPOINT ==>                      #See its doc
AUTHORIZATION ==>                 #See AWS signature doc

RPC ==>                           #Depending on SERVICE:
                                  #  - RPC: POST|GET /
                                  #  - REST: POST|PUT|GET|DELETE [/VERSION]/RESOURCE

REQ                               #Request parameters
                                  #Depending on SERVICE:
                                  #  - query variables VARR
                                  #     - ARR: VAR.NUM or VAR.members.NUM (1-based)
                                  #  - JSON
                                  #  - XML
                                  #     - ARR: <KEYSet|KEYList><VAR></VAR>...</KEYSet|KEYList>

HEADERS ==>                       #Sometimes used for REQ|RES
                                  #Either no prefix, or X-Amz[n]-*
Content-Type [C|S]                #
Content-Length [C|S]              #

PAGINATION ==>                    #SERVICE-specific

                                  ┌────────────────────┐
                                  │   REQUEST CONFIG   │
                                  └────────────────────┘

CONFIG.parameter_validation       #BOOL (def: true). Validate request parameters
                                  #Can disable for performance.

                                  ┌──────────────┐
                                  │   RESPONSE   │
                                  └──────────────┘

Connection [S]                    #
Date [S]                          #

RES                               #Response body
                                  #Either JSON or XML, depending on SERVICE

RES.Errors                        #OBJ_ARR:
                                  #  - Code 'CODE'
                                  #     - can see in online doc for each ACTION
                                  #  - Message STR
                                  #  (sometimes)
                                  #  - Resource STR
                                  #  - RequestId STR

ERROR_RES                         #Alternative to RES.Errors for some SERVICEs
                                  #OBJ:
                                  #  - code 'CODE'
                                  #  - message STR
                                  #  - type 'Client|Server|Unknown'
                                  #Uses HTTP status code too

REQ_ID                            #'UUID'. Depending on SERVICE:
                                  #  - RES.requestId
                                  #  - RES.ResponseMetadata.RequestId
                                  #  - x-amz[n]-request[-]id [S]
                                  #     - sometimes secondary ID: x-amz-id-2 [S] (machine host)

                                  ┌──────────────────────────┐
                                  │   EVENTUAL CONSISTENCY   │
                                  └──────────────────────────┘

REQ.ClientToken                   #STR. Do not perform if already performed with same STR.
                                  #Meant for idempotence.
                                  #Only for some SERVICEs (EC2, VPC, some of S3)
                                  #Sometimes called ClientRequestToken

EVENTUAL CONSISTENCY ==>          #Many endpoints use eventual consistency:
                                  #  - action happens async, after response
                                  #  - effects takes time to propagate, i.e. different clients might return different results
                                  #After change:
                                  #  - should test existence
                                  #  - with exponential retry delays up to a limit (e.g. 5 mins)
                                  #  - can be slow, i.e. avoid in critical paths

WAIT ==>                          #Most clients (but not REST API) implement wait methods.
                                  #It calls an ACTION repeatedly until a specific condition fulfills.
                                  #Using an exponential backoff, multiplying by 2 each time.
                                  #Documented with the ACTION it repeats
                                  #Client parameters:
                                  #  - same as ACTION
                                  #  - client-specific backoff|cancellation

                                  ┌───────────┐
                                  │   RETRY   │
                                  └───────────┘

SERVER ERROR RETRIES ==>          #Should retry on 5**, with exponential backoff
                                  #Different from retries which wait for eventual consistency

                                  ┌──────────────────┐
                                  │   RETRY CONFIG   │
                                  └──────────────────┘

CONFIG.retry_mode                 #One of:
ENVVAR AWS_RETRY_MODE             #  - 'legacy'
                                  #      - retry on socket errors and throttling
                                  #      - exponential backoff multiplying by 2
                                  #  - 'standard' (def): same but also:
                                  #      - retry on quotas and timeouts
                                  #      - exponential backoff max 20s
                                  #  - 'adaptive': same but also:
                                  #      - backoff is error-specific

CONFIG.max_attempts
ENVVAR AWS_MAX_ATTEMPTS           #NUM of retries (def: 5 with retry_mode 'legacy', 3 otherwise)

                                  ┌───────────────┐
                                  │   RETRY SDK   │
                                  └───────────────┘

COPTS.retryMode|maxAttempts       #Like CONFIG.*

amz-sdk-request [C]               #'attempt=NUM; max=NUM' of retries
                                  #Optional. Set by multiple SDKs

amz-sdk-invocation-id [C]         #'UUID' not changed when doing retries
                                  #Optional. Set by multiple SDKs

                                  ┌────────────────────┐
                                  │   TIMEOUT CONFIG   │
                                  └────────────────────┘

CONFIG.defaults_mode              #Meant to set multiple default values for CONFIG.*
ENVVAR AWS_DEFAULTS_MODE          #Can be:
                                  #  - 'legacy' (def)
                                  #  - 'standard': recommended if sometimes single REGION, sometimes multiple
                                  #  - 'in-region': recommended if single REGION
                                  #  - 'cross-region': recommended if multiple REGIONs
                                  #  - 'mobile': recommended if mobile app
                                  #  - 'auto':
                                  #     - guesses best value among above
                                  #     - that guess can be slow

                                  ┌────────────────┐
                                  │   SSL CONFIG   │
                                  └────────────────┘

CONFIG.ca_bundle
ENVVAR AWS_CA_BUNDLE              #'PATH.pem'. Override CA certificate bundle

                                  ┌─────────────┐
                                  │   SSL CLI   │
                                  └─────────────┘

--ca-bundle                       #Like CONFIG.ca_bundle
