
               
   AWS GENERAL  
               


TODO ==>
  - Storage:
     - S3
     - CloudFront
  - Compute:
     - API gateway
        - Pulumi:
           - invokeArn in https://www.pulumi.com/registry/packages/aws/api-docs/lambda/alias/
     - EC2
     - EBS
     - VPC
     - ELB
     - AutoScaling
     - Route53
  - Events:
     - CloudTrail
     - CloudWatch Logs
     - CloudWatch Contributor Insights
     - EventBridge
        - CloudWatch Events
        - https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/cloudwatch-and-eventbridge.html
  - Database
     - RDS
     - RDS proxy
        - https://docs.aws.amazon.com/lambda/latest/dg/configuration-database.html
     - Aurora
     - Elasticache
  - resources:
     - Resource Groups
        - https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch_Automatic_Dashboards_Resource_Group.html
     - Resource Groups tagging
     - Resource manager
     - Resource explorer
     - Tag editor
     - Service quotas
  - IaaC:
     - CloudFormation
     - AWS CDK
     - Cloud Control
  - Pricing:
     - AWS support
        - including section in this doc
     - https://aws.amazon.com/pricing
     - Billing
        - including section in this doc
        - https://www.pulumi.com/registry/packages/aws/api-docs/getbillingserviceaccount/
     - Cost explorer
     - Budgets
     - Cost and Usage Reports
  - IAM:
     - IAM access analyzer
        - including in S3: https://docs.aws.amazon.com/AmazonS3/latest/userguide/access-analyzer.html
     - IAM roles anywhere
     - AWS organizations
        - fix IAM doc mentioning ORG|organization
        - document aws:Resource|PrincipalOrgID|Paths, iam:OrganizationsPolicyId
     - AWS Certificate Manager
     - AWS signer
        - https://docs.aws.amazon.com/lambda/latest/dg/configuration-codesigning.html
     - Cognito Identity
        - CognitoSync
     - IAM identity center
        - https://docs.aws.amazon.com/signin/latest/userguide/iam-id-center-sign-in-tutorial.html
        - https://docs.aws.amazon.com/cli/latest/userguide/cli-configure-sso.html
        - https://docs.aws.amazon.com/sdkref/latest/guide/access-sso.html
        - https://docs.aws.amazon.com/sdkref/latest/guide/feature-sso-credentials.html
        - JavaScript SDK:
           - @aws-sdk/client-sso
           - fromSSO()
  - Regions:
     - https://aws.amazon.com/about-aws/global-infrastructure/
  - PubSub:
     - SQS
     - SNS
     - SES
        - SES SMTP credentials with Pulumi: ACCESS_KEY OUTPUTS [encrypted]SesSmtpPasswordV4
     - SWF
     - Step Functions
  - Monitoring:
     - CloudWatch Observability Access Manager
        - https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch-Unified-Cross-Account.html
        - "cross-account" section in my CloudWatch docs
     - CloudWatch Internet Monitor
     - CloudWatch Synthetics
        - https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/servicelens_canaries_security.html
     - X-Ray
        - https://docs.aws.amazon.com/lambda/latest/dg/nodejs-tracing.html
     - ServiceLens
  - analytics:
     - Athena
  - Orchestration:
     - ECS
        - https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/ContainerInsights.html
     - EKS
        - Pulumi:
           - https://www.pulumi.com/registry/packages/aws-iam/api-docs/roleforserviceaccountseks/
           - https://www.pulumi.com/registry/packages/aws-iam/api-docs/eksrole/
     - Systems manager
        - https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/using-service-linked-roles.html#service-linked-role-permissions-opsitem
        - https://www.pulumi.com/registry/packages/aws-native/api-docs/getssmparameterlist/
        - https://www.pulumi.com/registry/packages/aws-native/api-docs/getssmparameterstring/
  - On-premise:
     - Outposts
        - S3 on Outposts:
           - https://docs.aws.amazon.com/AmazonS3/latest/API/API_Operations_Amazon_S3_on_Outposts.html
           - *Bucket* in https://docs.aws.amazon.com/AmazonS3/latest/API/API_Operations_AWS_S3_Control.html
           - https://docs.aws.amazon.com/AmazonS3/latest/userguide/metrics-dimensions.html#s3-outposts-cloudwatch-metrics

VERSION ==>                   #2023-04-04

SUMMARY ==>                   #Clients: config, REST API, JavaScript, CLI, UI
                              #Services: list, new checklist, actions, domain, versioning, quotas
                              #Regions: list, AZ, LZ, edge location, WZ, partition
                              #ID: account, ARN, name, path, MID
                              #Tags: actions, ABAC
                              #Support, billing


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:           NOTATIONS           :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


'DATE'                        #'YYYY-MM-DDTHH:MM:SS.SSSZ'
DATE_NUM                      #Epoch in ms
DURATION                      #Date specified as time since now
                              #'P[nY][nM][nW][nD][T[nH][nM][nS]]'


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:            CLIENTS            :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


REST API ==>                  #See API doc
JAVASCRIPT SDK ==>            #See JavaScript SDK doc
CLI ==>                       #See CLI doc
AWS CONSOLE ==>               #Web UI client
                              #Uses JavaScript SDK under the hood

AWS CONFIG ==>                #Common config for all clients except REST API. See its doc
AWS CRT ==>                   #"Common Runtime". C library shared by all clients

x-amz-user-agent [C]          #Optional. Set by multiple SDKs


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:           SERVICES            :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


NEW SERVICE DOCUMENTATION ==> #When documenting a new SERVICE, should check:
                              #  - put in right directory in my docs
                              #  - last version
                              #     - add changelog to RSS feed
                              #  - API:
                              #     - https://docs.aws.amazon.com/general/latest/gr/aws-service-information.html
                              #     - "Common request|response parameters" section
                              #     - action + version
                              #     - RPC
                              #     - request|response format
                              #     - requestId
                              #     - pagination
                              #     - whether not region-specific
                              #  - documentation:
                              #     - API reference, breaking it down resource by resource
                              #     - User guide
                              #     - Other related guides
                              #     - pricing
                              #     - add summary on top
                              #  - IAM:
                              #     - https://docs.aws.amazon.com/service-authorization/latest/reference/reference_policies_actions-resources-contextkeys.html
                              #     - https://docs.aws.amazon.com/aws-managed-policy/latest/reference/policy-list.html
                              #     - https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_aws-services-that-work-with-iam.html
                              #  - ORGs:
                              #     - https://docs.aws.amazon.com/organizations/latest/userguide/orgs_integrate_services_list.html
                              #  - CloudWatch:
                              #     - https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/aws-services-cloudwatch-metrics.html
                              #     - https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch-Quotas-Visualize-Alarms.html
                              #  - CLI:
                              #     - see if commands look normal: https://awscli.amazonaws.com/v2/documentation/api/latest/reference/index.html#available-services
                              #     - WAITs ACTIONs
                              #     - wizard ACTIONs
                              #  - JavaScript SDK:
                              #     - https://docs.aws.amazon.com/AWSJavaScriptSDK/v3/latest/index.html
                              #        - see if CLIENT looks normal
                              #        - see if there is any other related @aws-sdk/*
                              #  - Pulumi:
                              #     - https://www.pulumi.com/registry/packages/aws/api-docs/#modules
                              #     - https://www.pulumi.com/registry/packages/aws-native/api-docs/#modules
                              #     - run `require('@pulumi/aws').SERVICE` to see if there are some additional undocumented members
                              #     - look for SERVICE in https://github.com/pulumi/pulumi-aws/tree/master/sdk/nodejs, for *Mixins* files
                              #     - https://www.pulumi.com/docs/guides/crosswalk/aws/lambda/#available-aws-services-with-event-sources
                              #     - https://github.com/pulumi/pulumi-awsx/tree/master/awsx
                              #     - https://github.com/pulumi/pulumi-awsx/tree/master/awsx-classic
                              #     - https://www.pulumi.com/registry/packages/awsx/api-docs/
                              #     - https://www.pulumi.com/docs/clouds/aws/guides/
                              #     - https://www.pulumi.com/docs/clouds/aws/guides/aws-index-of-services/
                              #     - https://www.pulumi.com/registry/
                              #     - https://github.com/pulumi/pulumi-policy-aws/tree/master/src
                              #     - https://www.pulumi.com/registry/packages/aws/how-to-guides/
                              #  - in this doc:
                              #     - add to list of services

SERVICE                       #AWS service. Lowercase.
SERVICE_ACTION                #REST method name for a given SERVICE. Capitalized.
                              #Also called "operation"
ACTION                        #'SERVICE:SERVICE_ACTION'
                              #Can sometimes use wildcard *
PACTION                       #Either ACTION or "Permission-only action":
                              #  - Like ACTION, but can only be used in IAM POLICYs
                              #  - Does not refer to an actual REST method

SERVICE_DOMAIN                #'SERVICE.amazonaws.com'
                              #Used to identity a SERVICE sometimes.
SERVICE_FULL_DOMAIN           #'SERVICE[-fips][.dualstack][.REGION].AWS_DOMAIN'
                              #If SERVICE is REGION-less: no REGION, but can be 'us-gov'
                              #Used to make API calls.
AWS_DOMAIN                    #Either:
                              #  - 'amazonaws.com'
                              #      - for most SERVICEs, it is the only one
                              #  - 'api.aws'
                              #      - for somewhat recent SERVICEs, both can be used
                              #      - for recent SERVICEs, it is the only one
FIPS ==>                      #Some SERVICE can use FIPS 140-2:
                              #  - only for specific SERVICEs
                              #  - only for US|Canada REGIONs
DUALSTACK ==>                 #Endpoint supporting both IPv4|6

VERSIONING ==>                #Minor|patch release 'SVERSION':
                              #  - 'YYYY-MM-DD'
                              #  - specified in API requests
                              #Major releases:
                              #  - most are at v1
                              #  - some are at v2, which is specified in API request domain

QUOTAS ==>                    #Also named "limits"
                              #"Flexible": when can increase through support request
                              #Usually per REGION


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:         SERVICES LIST         :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


SECURITY ==>                  #  - IAM: authentication|authorization
                              #  - STS: temporary autentication|authorization
                              #  - CognitoIdentity: cross-device identification

MONITORING ==>                #  - CloudTrail: logs AWS API calls
                              #  - CloudWatch:
                              #     - Metrics: logs numbers/metrics
                              #     - Alarms: watch for Metrics
                              #     - Dashboard: data visualization for Metrics

AUTOMATING ==>                #  - AutoScaling: launch|terminate EC2 instances
                              #  - SWF: task coordination

IAAC ==>                      #  - CloudFormation: IaaC for AWS
                              #  - Pulumi for AWS
                              #  - Beanstalk: fast manage of stack of AWS resources

NETWORKING ==>                #  - VPC: general (including security, VPN)
                              #  - Route53: DNS server
                              #  - ELB: load balancing

COMPUTE ==>                   #  - EC2: long-running
                              #  - Lambda: on-demand
                              #  - ElastiCache: Redis/Memcached
                              #  - RDS: SQL Database

STORAGE ==>                   #  - EBS: virtual internal hard drive
                              #  - S3: virtual external hard drive
                              #  - CloudFront: CDN
                              #  - Glacier: cheap archiving
                              #  - CognitoSync

MESSAGE PASSING ==>           #  - SQS: pull-based, single consumer
                              #  - SNS: push-based, multiple consumers, emails|sms|push notification|HTTP[S]


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:            REGIONS            :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


GOAL ==>                      #Where resources are physically stored for:
                              #  - Lower latency
                              #  - Regulation
                              #Can still be accessed from any other region
                              #  - done over the internet, i.e. slower
                              #Group of AZs, LZs, edge locations and WZs.
                              #Named 'CONTINENT-COUNTRY-NUM'

AVAILABILITY ZONE ==>         #Also called AZ.
                              #Data center meant for redundancy
                              #  - for AWS: if one fails, can redirect to another
                              #  - for users: can explicitely repeat resources across AZs
                              #Precise location not advertised.
                              #Unless mentioned in list below, 3 per REGION

LOCAL ZONE ==>                #Also called LZ.
                              #Data center meant for low latency, close to users
                              #Only for:
                              #  - EC2/VPC-related SERVICEs
                              #  - RDS, Elasticache
                              #  - a few other SERVICEs
                              #Opt-in, about 25% more expensive.
                              #Named "REGION-...-1a"

EDGE LOCATION ==>             #Data center meant for low latency, close to users
                              #Only for:
                              #  - AWS CloudFront
                              #  - Route 53
                              #  - Firewall manager, Shield, WAF
                              #Not named, automatically picked by AWS
                              #Every REGION is also an edge location, i.e. not documented in list below

WAVELENGTH ZONE ==>           #Also called WZ.
                              #Data center for AWS WaveLength only
                              #Stays in internet provider 5G network, i.e. very low latency for 5G users
                              #Named "REGION-wl1-XXX-wlz-1"

PRICING ==>                   #Different pricing per REGION
                              #This documentation only shows cheapest (us-east-1)

EXCEPTIONS ==>                #Some SERVICEs are:
                              #  - global, not REGION-specific
                              #  - only in a few REGIONs
                              #  - not in some REGIONs

ENABLING ==>                  #Some REGIONs must be manually enabled
                              #Marked with + in the list below

LIST ==>                      #Between parenthesis: number of services
                              #  - us-east-1 (227): USA, Washington DC
                              #     - 6 AZs
                              #     - LZs + WZs + edge locations: Atlanta (atl), Boston (bos), Chicago (chi), Dallas (dfw), Houston (iah), Miami (mia), Minneapolis (msp), New Jersey (nyc)
                              #     - LZs + edge locations: Philadelphia (phl), Mexico (Querétaro) (qro)
                              #     - LZs: Kansas city (mci)
                              #     - WZs + edge locations: Detroit (dtw), Nashville (bna)
                              #     - WZs: Charlotte (clt), Tampa (tpa), Washington DC (was)
                              #  - us-east-2 (198): USA, Cincinnati
                              #  - us-west-1 (156): USA, San Francisco
                              #  - us-west-2 (218): USA, Portland
                              #     - 4 AZs
                              #     - LZs + WZs + edge locations: Denver (den), Los Angeles (lax), Phoenix (phx)
                              #     - LZs + WZs: Las Vegas (las)
                              #     - WZs + edge locations: Seattle (sea)
                              #     - WZs: San Francisco (sfo)
                              #     - edge locations: Salt Lake City
                              #  - ca-central-1 (175): Canada (Toronto)
                              #     - WZs: Toronto (yto)
                              #     - edge locations: Montréal, Vancouver
                              #  - eu-west-1 (214): Ireland (Dublin)
                              #  - eu-west-2 (188): UK (London)
                              #     - WZs + edge locations: UK (Manchester (man))
                              #     - WZs: UK (London (lon))
                              #  - eu-west-3 (153): France (Paris)
                              #     - edge locations: France (Marseille), Belgium (Brussels)
                              #  - eu-central-1 (203): Germany (Frankfurt)
                              #     - LZs + edge locations: Germany (Hamburg (ham)), Poland (Warsaw (waw))
                              #     - WZs + edge locations: Germany (Berlin (ber), Munich (muc))
                              #     - WZs: Germany (Dortmund (dtm))
                              #     - edge locations: Germany (Düsseldorf), Netherlands (Amsterdam)
                              #  - eu-north-1 (155): Sweden (Stockholm)
                              #     - LZs + edge locations: Denmark (Copenhagen (cph)), Finland (Helsinki (hel))
                              #     - edge locations: Norway (Oslo)
                              #  + eu-central-2 (69): Switzerland (Zurich)
                              #     - edge locations: Austria (Vienna), Bulgaria (Sofia), Czechia (Prague), Greece (Athens), Hungary (Budabest), Romania (Bucarest)
                              #  - eu-south-1 (122): Italy (Milano)
                              #     - edge locations: Italy (Palermo, Roma), Croatia (Zagreb)
                              #  - eu-south-2 (66): Spain (Madrid)
                              #     - edge locations: Portugal (Lisbon)
                              #  - ap-southeast-1 (199): Singapore
                              #     - LZs + edge locations: Thailand (Bangkok (bkk))
                              #     - edge locations: Malaysia (Kuala Lumpur), Philippines (Manila), Vietnam (Hanoi, Ho Chi Minh)
                              #  - ap-southeast-2 (206): Australia (Sydney)
                              #     - edge locations: New Zealand (Auckland)
                              #  + ap-southeast-3 (97): Indonesia (Jakarta)
                              #  + ap-southeast-4 (57): Australia (Melbourne)
                              #     - LZs + edge locations: Australia (Perth (per) (actually ap-southeast-1))
                              #  - ap-northeast-1 (205): Japan (Tokyo)
                              #     - 4 AZs
                              #     - LZs + edge locations: Taiwan (Taipei (tpe))
                              #     - WZs: Japan (Tokyo (nrt))
                              #  - ap-northeast-2 (179): South Korea (Seoul)
                              #     - 4 AZs
                              #     - WZs: South Korea (Daejeon (cjj), Seoul (sel))
                              #  - ap-northeast-3 (107): Japan (Osaka)
                              #     - WZs: Japan (Osaka (klx) (actually ap-northeast-1))
                              #  + ap-east-1 (133): Hong Kong
                              #  - ap-south-1 (175): India (Mumbai)
                              #     - LZs + edge locations: India (Delhi (del), Kolkata (ccu))
                              #  - ap-south-2 (66): India (Hyderabad)
                              #     - edge locations: India (Bangalore, Chennai)
                              #  - sa-east-1 (156): Brazil (São Paulo)
                              #     - edge locations: Brazil (Rio de Janeiro), Colombia (Bogota)
                              #     - LZs + edge locations: Argentina (Buenos Aires (bue)), Peru (Lima (lim)), Chile (Santiago (scl)) (actually us-east-1)
                              #  + me-south-1 (130): Bahrain
                              #     - LZs: Oman (Muscat (mct))
                              #     - edge locations: Israel (Tel aviv)
                              #  + me-central-1 (88): UAE (Dubai)
                              #     - edge locations: UAE (Fujairah)
                              #  + af-south-1 (127): South Africa (Cape Town)
                              #     - LZs: Nigeria (Lagos (los))
                              #     - edge locations: Kenya (Nairobi), South Africa (Johannesburg)
                              #Special REGIONs:
                              #  - us-gov-west-1 (137)
                              #  - us-gov-east-1 (113)

PARTITION                     #Group of REGIONs:
                              #  - 'aws-us-gov' (GovCloud)
                              #  - 'aws-cn': China (Shanghai)
                              #     - edge locations: Beijing, Shenzhen, Zhongwei
                              #  - 'aws' (Global / Commercial Cloud): everything else
                              #Cannot access each other resources


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:          IDENTIFIER           :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


ACCOUNT_ID                    #AWS account short ID
CANONICAL_ACCOUNT_ID          #AWS account long ID longer version
                              #Used only in very specific cases
                              #Also called "canonical user ID"

DEV ACCOUNTS ==>              #Using different accounts for dev|stage|production is good to avoid hitting limits.

ARN                           #Resource identifier
                              #"Amazon Resource Name" URI scheme
                              #'arn:PARTITION:SERVICE:[REGION]:[ACCOUNT_ID]:[RESOURCE_TYPE:][ARN_PATH/]NAME'
                              #  - sometimes RESOURCE_TYPE: -> RESOURCE_TYPE/
                              #Parts can sometimes use wildcard *

NAME                          #Resource name.
                              #Must be [[:alnum:]+=,.@-/]
                              #Must be unique even without path.
                              #Max 64 chars, 512 for path.

ARN_PATH                      #'[/...]/'. Namespaces a NAME.
                              #Def: '/'
                              #ASCII only
                              #Only for specific resources
                              #Some List*() actions have a PathPrefix STR parameter, to search from start

MID                           #Resource ID generated by AWS when creating some resources
                              #Either:
                              #  - 21 chars, [A-Z0-9]
                              #  - 100+ chars, [A-Za-z0-9-_], with Glacier
                              #Unlike ARN:
                              #  - does not change on NAME update
                              #  - not human-friendly


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:           RESOURCES           :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


DELETING RESOURCES ==>        #Must delete resources that use it first

RENAMING RESOURCES ==>        #Sometimes renamed in resources that use it, sometimes not


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:             TAGS              :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


TagRESOURCE()                 #Req: RESOURCE_TAGS
                              #Res: empty
ListRESOURCETags()            #Req: RESOURCE_TAGS
                              #  - only RESOURCE_NAME|ResourceARN
                              #Res: Tags TAGS
UntagRESOURCE()               #Req: RESOURCE_TAGS
                              #  - Tags -> TagKeys 'TAG'_ARR
                              #Res: empty
TAG ACTION NAME ==>           #One of:
                              #  - TagRESOURCE(), ListRESOURCETags(), UntagRESOURCE()
                              #  - TagResource(), ListResourceTags(), UntagResource()
                              #  - PutRESOURCETagging(), GetRESOURCETagging(), DeleteRESOURCETagging()
                              #  - AddTagsToRESOURCE(), ListTagsForRESOURCE(), RemoveTagsFromRESOURCE()

RESOURCE_TAGS.RESOURCE_NAME   #'NAME'
                              #RESOURCE_NAME is RESOURCE-specific
                              #For some SERVICEs using REST, this is a path parameter instead
RESOURCE_TAGS.ResourceARN     #ARN
                              #Alternative to RESOURCE_TAGS.RESOURCE_NAME for some RESOURCEs
RESOURCE_TAGS.Tags            #TAGS

RESOURCE.Tags                 #TAGS
                              #Only for specific RESOURCEs
                              #Sometimes only on request payloads, not responses

TAGS                          #Arbitrary metadata
                              #Used by SERVICEs that can operate on any resource, like:
                              #  - Resource groups, Resource Groups tagging, Resource explorer, Resource Access Manager, Tag editor
                              #  - Cost explorer
                              #  - IAM POLICYs (ABAC)
                              #Max 50 per resource
                              #  - except for aws:*, which are unlimited
TAGS.TAG                      #STR
                              #Key:
                              #  - max 128 bytes
                              #  - naming convention: dasherized, lowercase, prefixed with "NAMESPACE:"
                              #Value max 256 bytes
                              #Key|value should not include PII (Personally Identifiable Information)
TAG_PAIRS                     #Alternative syntax for TAGS. OBJ_ARR: Key 'TAG', Value STR

ABAC ==>                      #"Attribute-Based Access Control"
                              #Using the following CONDITION_KEYs
                              #Some SERVICEs do not support it on all|some of their resources
                              #  - usually because no resources, or do not have tags
aws:PrincipalTag/TAG          #STR. Value of TAG attached to the PRINCIPAL
aws:ResourceTag/TAG
SERVICE:ResourceTag/TAG       #STR. Value of TAG attached to the resource
aws:RequestTag/TAG            #STR. Value of a TAG part of the request payload, e.g. as part of TagRESOURCE()
aws:TagKeys                   #'TAG'_ARR part the request payload, e.g. as part of TagRESOURCE()


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:            SUPPORT            :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


PRICING ==>                   #  - basic: free
                              #  - developer: 3% of AWS usage (or min. 29$/month)
                              #  - business: 3-10% of AWS usage (depending on usage) (or min. 100$/month)
                              #  - enterprise on-ramp: 10% of AWS usage (or min. 5500$/month)
                              #  - enterprise: 3-10% of AWS usage (depending on usage) (or min. 15000$/month)

BASIC FEATURES ==>            #  - Account/billing questions
                              #  - Limits increase requests
                              #  - Trusted Advisor limited: close to service limit, SecurityGroups, IAM, MFA, 1 check/week
                              #  - Forums

DEVELOPER FEATURES ==>        #  - Technical support (web, business hours, 12 hours response time)
                              #     - Service healthchecks fails have higher priority
                              #     - Client-side diagnostic tools, to help technical support
                              #  - General advice consulting

BUSINESS FEATURES ==>         #  - Specific case consulting
                              #  - Technical support (web, phone, live chat, 24/7, 1 hour response time), with more experienced
                              #  - support::* IAM actions
                              #  - Trusted Advisor: automatic saving money, security, performance, reliability audit, 1 check/day
                              #  - REST API for AWS Support (creating Technical support case, and using Trusted Advisor)
                              #  - Support on third-party tools (e.g. OS used on EC2 instances)

ENTERPRISE FEATURES ==>       #  - Architecture specific case consulting
                              #  - Technical support even more experienced (15 mins response time, direct personal access)
                              #  - Connected to solution architects
                              #  - Event hand-to-hand help (one to three months)


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:            BILLING            :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


AWS CONSOLE ==>               #Must be used
                              #Bill details, invoices, including history and payment methods.

USAGE REPORTS ==>             #  - CSV for each service
                              #  - Detailed reports must be enabled and saved daily on a S3 BUCKET.
                              #    Without detailed, monthly report without tag is available on the console.
                              #  - Can be monthly or hourly
                              #  - Can have tags associated to resources, and resource IDs or not.
                              #  - "Blended rate" is normal cost, "Unblended rate" is average cost for other customers for
                              #    this type of resource.

COST EXPLORER ==>             #  - timeline of costs.
                              #  - Can be by service, ACCOUNT_ID, tags

IAM ==>                       #  - Can give access to some page to some IAM users (otherwise only root):
                              #     - Resource "*"
                              #     - Action "aws-portal:View|ModifyPAGE",
                              #       where PAGE is "Usage|PaymentMethods|Account" (single tab) or "Billing" (all others)
                              #        - also "ec2-reports:ViewInstanceUsageReport" and
                              #          "ec2-reports:ViewReservedInstanceUtilizationReport"

CLOUDWATCH ==>                #METRIC EstimatedCharges:
                              #  - Estimated monthly cost, sent by each SERVICE
                              #  - Dimensions: Currency "USD", ServiceName SERVICE, LinkedAccount ACCOUNT_ID
                              #  - Must enable it in AWS console.
                              #  - Caught from all REGION, but displayed in us-east-1

PAYMENT OFFERS ==>            #  - AWS Free Tier: Makes medium usage free for first year. Must sign up for it.
                              #  - Consolidated billing: one bill for several accounts in a single AWS organization
