
          
   LAMBDA  
          



VERSION ==>                       #2023-03-01


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:              API              :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


PAGINATION ==>                    #  - request variable: Marker STR, MaxItems STR (max: 1e4)
                                  #  - response body: NextMarker STR


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:       ACCOUNT SETTINGS        :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


GetAccountSettings()              #Request parameters: empty
                                  #Response body: ACCOUNT_SETTINGS

ACCOUNT_SETTINGS                  #AWS account settings for Lambda
ACCOUNT_SETTINGS.AccountLimit     #ACCOUNT_LIMIT. Maximum limits
ACCOUNT_SETTINGS.AccountUsage     #ACCOUNT_USAGE. Current usage
ACCOUNT_USAGE.FunctionCount       #NUM. Number of FUNCTIONs


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:           FUNCTION            :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


CreateFunction()                  #Request parameters: NEW_FUNC_VERSION
                                  #  - no RevisionId
                                  #Response body: FUNC_VERSION
UpdateFunctionConfiguration()     #Request parameters: NEW_FUNC_VERSION
                                  #  - no Architectures, PackageType, Tags, CodeSigningConfigArn, Publish, Code
                                  #Response body: FUNC_VERSION
UpdateFunctionCode()              #Request parameters: NEW_FUNC_CODE
                                  #  - also RevisionId|Architectures: like FUNC_VERSION
                                  #  - also Publish: like NEW_FUNC_VERSION.*
                                  #  - DryRun BOOL (def: false)
                                  #Response body: FUNC_VERSION
GetFunctionConfiguration()        #Request parameters: FUNC_VERSION
                                  #  - only FunctionName, Qualifier
                                  #Response body: FUNC_VERSION
GetFunction()                     #Request parameters: FUNC_VERSION
                                  #  - only FunctionName, Qualifier
                                  #Response body: FUNCTION
ListFunctions()                   #Request parameters:
                                  #  - FunctionVersion 'ALL': all FUNC_VERSIONs instead of only latest
                                  #  - MasterRegion STR: AWS region of FUNC_VERSION.MasterArn
                                  #Response body: Functions FUNC_VERSION_ARR
ListVersionsByFunction()          #Request parameters: FUNC_VERSION
                                  #  - only FunctionName
                                  #Response body: Versions FUNC_VERSION_ARR
DeleteFunction()                  #Request parameters: FUNC_VERSION
                                  #  - only FunctionName, Qualifier
                                  #Response body: empty

FUNCTION                          #AWS Lambda function
FUNCTION.Configuration            #FUNC_VERSION
FUNC_VERSION                      #FUNCTION's specific version
NEW_FUNC_VERSION                  #Like FUNC_VERSION, but when being created.
                                  #  - no FunctionArn, MasterArn, CodeSha256, Version
                                  #  - no CodeSize, LastModified, LastUpdateStatus*, State*, *.Error
                                  #  - no RuntimVersionConfig, Signing*, SnapStart.OptimizationStatus, VpcConfig.VpcId
                                  #  - Layers LAYER_VERSION_SUMMARY_ARR -> 'LAYER_VERSION_ARN'_ARR
                                  #Also some additional fields, documented here

FUNC_VERSION.LastModified         #'DATETIME'
FUNC_VERSION.Description          #STR

FUNC_VERSION.State                #STR, among 'Pending', 'Failed', 'Active', 'Inactive'
FUNC_VERSION.StateReason          #STR
FUNC_VERSION.StateReasonCode      #STR

FUNC_VERSION.LastUpdateStatus     #STR, among 'InProgress', 'Successful', 'Failed'
FUNC_VERSION
 .LastUpdateStatusReason          #STR
FUNC_VERSION
 .LastUpdateStatusReasonCode      #STR


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:          IDENTIFIERS          :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


FUNC_VERSION.FunctionArn          #'arn:aws:lambda:REGION:ACCOUNT_ID:function:FUNCTION'
FUNC_VERSION.MasterArn            #Main FUNC_ARN. Only for Lambda@Edge
FUNC_VERSION.FunctionName         #'FUNCTION'

REVISION_ID                       #Changes each time a specific model is updated.
                                  #Meant to pass current one to an update call so it fails if there is a concurrent update
FUNC_VERSION.RevisionId           #'REVISION_ID'
FUNC_VERSION.CodeSha256           #STR. SHA256 checksum
                                  #Can be used as a REVISION_ID


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:             ALIAS             :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


VERSION_NUM                       #NUM or '$LATEST'
QUALIFIER                         #Either:
                                  #  - 'VERSION_NUM': similar to git commit hash
                                  #  - 'ALIAS': similar to git tag
FUNC_VERSION.Version              #FUNCTION VERSION_NUM
FUNC_ARN                          #One of:
                                  #  - function full ARN
                                  #  - 'ACCOUNT_ID:function:FUNCTION[:QUALIFIER]'
                                  #  - 'FUNCTION[:QUALIFIER]'

CreateAlias()                     #Request parameters: ALIAS
                                  #  - AliasArn -> FunctionName FUNC_ARN
                                  #  - no RevisionId
                                  #Response body: ALIAS
UpdateAlias()                     #Request parameters: ALIAS
                                  #  - AliasArn -> FunctionName FUNC_ARN
                                  #Response body: ALIAS
GetAlias()                        #Request parameters: ALIAS
                                  #  - only Name
                                  #  - also AliasArn -> FunctionName FUNC_ARN
                                  #Response body: ALIAS
ListAliases()                     #Request parameters: ALIAS
                                  #  - only FunctionVersion
                                  #  - also AliasArn -> FunctionName FUNC_ARN
                                  #Response body: Aliases ALIAS_ARR:
DeleteAlias()                     #Request parameters: ALIAS
                                  #  - only Name
                                  #  - also AliasArn -> FunctionName FUNC_ARN
                                  #Response body: empty

ALIAS                             #'ALIAS' of a given FUNC_VERSION
ALIAS.AliasArn                    #ALIAS_ARN. 'arn:aws:lambda:REGION:ACCOUNT_ID:function:FUNCTION:ALIAS'
ALIAS.Name                        #'ALIAS'
ALIAS.RevisionId                  #'REVISION_ID'
ALIAS.FunctionVersion             #'FUNC_VERSION'
ALIAS.Description                 #STR

ALIAS.RoutingConfig               #ALIAS_ROUTING
ALIAS_ROUTING                     #Route different percentages of traffic to different FUNC_VERSION
                                  #OBJ:
                                  #  - key is 'FUNC_VERSION'
                                  #  - value is NUM from 0 to 1 (percentage)


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:             CODE              :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


FUNC_VERSION.PackageType          #How code is uploaded:
                                  #  - 'Zip': .zip file passed either directly or with S3 URL
                                  #  - 'Image': container image
                                  #Also called "deployment package"
FUNCTION.Code                     #FUNC_CODE. Where .zip archive or container image is located
NEW_FUNC_VERSION.Code             #NEW_FUNC_CODE


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:           CODE ZIP            :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


NEW_FUNC_CODE.ZipFile             #Zip archive content, base64-encoded

NEW_FUNC_CODE.S3Bucket            #STR. S3 'BUCKET' storing the .zip code
                                  #Automatically allocated.
NEW_FUNC_CODE.S3Key               #STR. S3 object path
NEW_FUNC_CODE
 .S3ObjectVersion                 #STR. S3 VERSION_ID

FUNC_CODE.RepositoryType          #STR hosting the file
FUNC_CODE.Location                #S3 'URI' to .zip archive
                                  #Only valid 10 minutes

FUNC_VERSION.CodeSize             #NUM (in bytes). Size of the zip archive
ACCOUNT_LIMIT.TotalCodeSize       #NUM (in bytes). Max size of all FUNC_VERSION|LAYER_VERSIONs .zip files on S3, per REGION.
                                  #Max 75GB but can be increased to a few TBs through support
                                  #I.e. should cleanup FUNC_VERSION|LAYER_VERSIONs.
ACCOUNT_USAGE.TotalCodeSize       #NUM (in bytes). Current usage of ACCOUNT_LIMIT.TotalCodeSize
ACCOUNT_LIMIT.CodeSizeZipped      #NUM (in bytes). Max size when uploading a single FUNCTION|LAYER's .zip archive directly (without S3)
ACCOUNT_LIMIT.CodeSizeUnzipped    #NUM (in bytes). Max size when extracting a single FUNCTION|LAYER's .zip archive


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:          CODE IMAGE           :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


FUNC_CODE.ResolvedImageUri        #'URI' to the container image
                                  #It must follow OCI specification
[NEW_]FUNC_CODE.ImageUri          #'URI' to the container image in AWS ECR
FUNC_VERSION.ImageConfigResponse
 .ImageConfig                     #IMAGE. Container image's configuration.
IMAGE.EntryPoint                  #STR_ARR. Like Docker ENTRYPOINT
IMAGE.Command                     #STR_ARR. Like Docker CMD, i.e. arguments to EntryPoint
IMAGE.WorkingDirectory            #STR. Like Docker WORKDIR


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:             LAYER             :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


ListLayers()                      #Request parameters: LAYER_VERSION
                                  #  - only CompatibleRuntime, CompatibleArchitecture
                                  #Response body: Layers LAYER_ARR
                                  #  - no LatestMatchingVersion.Content

LAYER                             #Lambda layer, as output
                                  #.zip archive with files shared between multiple FUNCTIONs
                                  #E.g. libraries, custom runtime or data|config files
                                  #Max 5 per FUNCTION
LAYER.LayerArn                    #'arn:aws:lambda:REGION:ACCOUNT_ID:layer:LAYER_NAME'
LAYER.LayerName                   #'LAYER_NAME'
LAYER.LatestMatchingVersion       #Most recent LAYER_VERSION

PublishLayerVersion()             #Request parameters: LAYER_VERSION
                                  #  - LayerVersionArn -> LayerName 'LAYER_NAME'
                                  #  - no CreatedDate, Version
                                  #Response body: LAYER_VERSION
GetLayerVersion()                 #Request parameters: LAYER_VERSION
                                  #  - LayerVersionArn -> LayerName 'LAYER_NAME'
                                  #  - only Version -> VersionNumber
                                  #Response body: LAYER_VERSION
GetLayerVersionByArn()            #Request parameters: LAYER_VERSION
                                  #  - LayerVersionArn -> Arn
                                  #  - only Version -> find
                                  #Response body: LAYER_VERSION
ListLayerVersions()               #Request parameters: LAYER_VERSION
                                  #  - LayerVersionArn -> LayerName 'LAYER_NAME'
                                  #  - only CompatibleRuntimes, CompatibleArchitectures
                                  #Response body: LayerVersions LAYER_VERSION_ARR
                                  #  - no Content
DeleteLayerVersion()              #Request parameters: LAYER_VERSION
                                  #  - LayerVersionArn -> LayerName 'LAYER_NAME'
                                  #  - only Version -> VersionNumber
                                  #Response body: empty

LAYER_VERSION                     #Specific version of a LAYER
LAYER_VERSION.LayerVersionArn     #'arn:aws:lambda:REGION:ACCOUNT_ID:layer:LAYER_NAME:NUM'
LAYER_VERSION.Version             #NUM
LAYER_VERSION.CreatedDate         #'DATETIME'
LAYER_VERSION.Description         #STR
LAYER_VERSION.LicenseInfo         #STR. Open-source license identifier

LAYER_VERSION.Content             #In input: LAYER_CONTENT_INPUT
                                  #In output: LAYER_CONTENT_OUTPUT
LAYER_VERSION_INPUT.ZipFile|S3*   #Like NEW_FUNC_CODE.*
LAYER_VERSION_OUTPUT.CodeSha256|
 CodeSize|SigningJobArn|
 SigningProfileVersionArn         #Like FUNC_VERSION.*
LAYER_VERSION_OUTPUT.Location     #Like FUNC_CODE.*

FUNC_VERSION.Layers               #LAYER_VERSION_SUMMARY_ARR. Layers to associate to a FUNC_VERSION
LAYER_VERSION_SUMMARY             #Like LAYER_VERSION, but fewer fields
LAYER_VERSION_SUMMARY.Arn         #LAYER_VERSION_ARN
LAYER_VERSION_SUMMARY
 .CodeSize|SigningJobArn|
 SigningProfileVersionArn         #Like LAYER_VERSION_OUTPUT.*


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:            PUBLISH            :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


PublishVersion()                  #Publish a FUNC_VERSION
                                  #Request parameters: FUNC_VERSION
                                  #  - only FunctionName, RevisionId, CodeSha256, Description
                                  #Response body: FUNC_VERSION
NEW_FUNC_VERSION.Publish          #BOOL (def: false)
                                  #Whether is is live
                                  #Makes it read-only


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:            RUNTIME            :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


FUNC_VERSION.Runtime              #STR. Runtime, among:
                                  #  - 'nodejs[VERSION]' with VERSION: 4.3[-edge], 6.10, 8.10, 10.x, 12.x, 14.x, 16.x, 18.x
                                  #  - 'goVERSION' with VERSION: 1.x
                                  #  - 'pythonVERSION' with VERSION: 2.7, 3.6, 3.7, 3.8, 3.9
                                  #  - 'javaVERSION' with VERSION: 8.al2, 11
                                  #  - 'rubyVERSION' with VERSION: 2.5, 2.7
                                  #  - 'dotnetcoreVERSION' with VERSION: 1.0, 2.0, 2.1, 3.1, 6
                                  #  - 'provided[VERSION]' with VERSION: .al2
                                  #Not if PackageType 'Image'
LAYER_VERSION.CompatibleRuntimes  #STR_ARR among same values as FUNC_VERSION.Runtime

FUNC_VERSION.Handler              #STR. Code's entry point function name
                                  #Not if PackageType 'Image'

FUNC_VERSION.SnapStart            #SNAP_START. Initializes|snapshots the FUNCTION at publish-time instead of during first invocation
                                  #Only with Runtime 'java*'
SNAP_START.ApplyOn                #Whether to apply: 'None' (def, i.e. no) or 'PublishedVersions' (yes)
SNAP_START.OptimizationStatus     #Whether to apply on each separate FUNC_VERSION|ALIAS: 'On' or 'Off' (def)


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:      RUNTIME MANAGEMENT       :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


PutRuntimeManagementConfig()      #Request parameters: RUNTIME_MGMT
                                  #  - FunctionArn -> FunctionName FUNC_ARN + Qualifier 'QUALIFIER'
                                  #  - RuntimeVersionArn: only if UpdateRuntimeOn 'Manual'
                                  #Response body: RUNTIME_MGMT
GetRuntimeManagementConfig()      #Request parameters:
                                  #  - only FunctionArn -> FunctionName FUNC_ARN + Qualifier 'QUALIFIER'
                                  #Response body: RUNTIME_MGMT

RUNTIME_MGMT                      #How RUNTIMEs are upgraded
RUNTIME_MGMT.FunctionArn          #FUNC_ARN
RUNTIME_MGMT.UpdateRuntimeOn      #STR. How RUNTIME upgrade happens, among:
                                  #  - 'Auto' (def):
                                  #     - in a first phase, only on newly created|updated FUNCTIONs
                                  #     - in a second phase, on all FUNCTIONs
                                  #  - 'FunctionUpdate': only on newly created|updated FUNCTIONs
                                  #  - 'Manual': pinned to RUNTIME_MGMT.RuntimeVersionArn
RUNTIME_MGMT
 .RuntimeVersionArn
FUNC_VERSION.RuntimeVersionConfig #RUNTIME_VERSION_ARN. Runtime specific version
 .RuntimeVersionArn               #'arn:aws:lambda:REGION::runtime:RUNTIME_VERSION'


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:     EXECUTION ENVIRONMENT     :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


FUNC_VERSION.Architectures        #STR_ARR. CPU architecture. Single item, among:
                                  #  - 'x86_64' (def)
                                  #  - 'arm64'
                                  #Not if PackageType 'Image'
LAYER_VERSION
 .CompatibleArchitectures         #STR_ARR among same values as FUNC_VERSION.Architectures

FUNC_VERSION.MemorySize           #NUM (in MB). Amount of memory
                                  #Min: 128, max: 10GB

FUNC_VERSION.Environment          #'VAL'. Environment variable.
 .Variables.VAR                   #Not logged by CloudTrail
FUNC_VERSION.KMSKeyArn            #AWS KMS key ARN. Encrypt environment variables
                                  #Also encrypts SNAP_START's snapshot, if any


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:          FILESYSTEM           :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


FUNC_VERSION.EphemeralStorage.Size#NUM (in MB) to allocate for /tmp
                                  #Def|min: 512, max: 10GB

FUNC_VERSION.FileSystemConfigs    #FUNC_EFS_ARR. Mount an AWS EFS
FUNC_EFS.Arn                      #EFS ACCESS_POINT ARN
FUNC_EFS.LocalMountPath           #'/mnt/DIR'


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:          NETWORKING           :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


FUNC_VERSION.VpcConfig            #FUNC_VPC. VPC of a FUNCTION
FUNC_VPC.VpcId                    #STR
FUNC_VPC.SubnetIds                #STR_ARR
FUNC_VPC.SecurityGroupIds         #STR_ARR


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:              URL              :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


CreateFunctionUrlConfig()         #Request parameters: FUNC_URL
                                  #  - FunctionArn -> FunctionName FUNC_ARN + Qualifier 'QUALIFIER'
                                  #  - no FunctionUrl, CreationTime, LastModifiedTime
                                  #Response body: FUNC_URL
UpdateFunctionUrlConfig()         #Request parameters: FUNC_URL
                                  #  - FunctionArn -> FunctionName FUNC_ARN + Qualifier 'QUALIFIER'
                                  #  - no FunctionUrl, CreationTime, LastModifiedTime
                                  #Response body: FUNC_URL
GetFunctionUrlConfig()            #Request parameters: FUNC_URL
                                  #  - FunctionArn -> FunctionName FUNC_ARN + Qualifier 'QUALIFIER'
                                  #Response body: FUNC_URL
ListFunctionUrlConfigs()          #Request parameters: FUNC_URL
                                  #  - FunctionArn -> FunctionName FUNC_ARN
                                  #Response body: FunctionUrlConfigs FUNC_URL_ARR
DeleteFunctionUrlConfig()         #Request parameters: FUNC_URL
                                  #  - FunctionArn -> FunctionName FUNC_ARN + Qualifier 'QUALIFIER'
                                  #Response body: empty

FUNC_URL                          #URL of a FUNCTION to invoke directly
FUNC_URL.FunctionArn              #FUNC_ARN
FUNC_URL.CreationTime             #'DATETIME'
FUNC_URL.LastModifiedTime         #'DATETIME'

FUNC_URL.FunctionUrl              #HTTP 'URL'
FUNC_URL.AuthType                 #Authentication to access the URL, among:
                                  #  - 'NONE' (def)
                                  #  - 'AWS_IAM': only IAM-authenticated users

FUNC_URL.Cors                     #CORS headers
CORS.AllowOrigins                 #'URI'_ARR
CORS.AllowMethods                 #'METHOD'_ARR
CORS.AllowHeaders                 #'HEADER'_ARR
CORS.AllowCredentials             #BOOL (def: false)
CORS.MaxAge                       #NUM (in secs). Max: 1 day
CORS.ExposeHeaders                #'HEADER'_ARR



                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:          PERMISSION           :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


FUNC_VERSION.Role                 #IAM's ROLE ARN, assumed by the FUNCTION

GetPolicy()                       #Retrieve a FUNC's IAM POLICY
                                  #Request parameters:
                                  #  - FunctionName FUNC_ARN + Qualifier 'QUALIFIER'
                                  #Response body:
                                  #  - Policy 'POLICY'
                                  #  - RevisionId STR: of the POLICY
GetLayerVersionPolicy()           #Retrieve a FUNC_LAYER's IAM POLICY
                                  #Request parameters:
                                  #  - LayerName 'LAYER_NAME'
                                  #  - VersionNumber NUM
                                  #Response body:
                                  #  - Policy 'POLICY'
                                  #  - RevisionId STR: of the POLICY

AddPermission()                   #Request parameters: PERMISSION
                                  #  - no Statement
                                  #Response body: PERMISSION
                                  #  - only Statement
RemovePermission()                #Request parameters: PERMISSION
                                  #  - only FunctionName|Qualifier|RevisionId|StatementId
                                  #Response body: empty

PERMISSION                        #Authorization to run a FUNC|FUNC_VERSION|ALIAS
PERMISSION.FunctionName           #FUNC_ARN
PERMISSION.Qualifier              #'QUALIFIER'
PERMISSION.RevisionId             #'REVISION_ID'

PERMISSION.StatementId            #POLICY's STATEMENT.Id
PERMISSION.Statement              #POLICY's STATEMENT as STR
PERMISSION.Action                 #'lambda:...' or 'lambda:*' or '*'
PERMISSION.PrincipalOrgID         #STR. Authorize all AWS accounts of that AWS organization ID.
PERMISSION.Principal              #STR. Authorize either:
                                  #  - AWS account ID
                                  #  - AWS service 'DOMAIN': e.g. 's3|sns.amazonaws.com' or '*'
PERMISSION.SourceArn              #'ARN' of the AWS service being authorized.
                                  #Meant as additional protection over PERMISSION.Principal
PERMISSION.SourceAccount          #STR. AWS organization ID of the AWS service being authorized
                                  #Meant as additional protection over PERMISSION.SourceArn
PERMISSION.EventSourceToken       #STR. Alexa Smart Home function token

AddLayerVersionPermission()       #Request parameters: LAYER_PERMISSION
                                  #  - no Statement
                                  #Response body: LAYER_PERMISSION
                                  #  - only RevisionId, Statement
RemoveLayerVersionPermission()    #Request parameters: LAYER_PERMISSION
                                  #  - only LayerName|VersionNumber|RevisionId|StatementId
                                  #Response body: empty

LAYER_PERMISSION                  #Authorization to run a LAYER_VERSION
LAYER_PERMISSION.LayerName        #'LAYER'
LAYER_PERMISSION.VersionNumber    #NUM
LAYER_PERMISSION.RevisionId       #'REVISION_ID'

LAYER_PERMISSION.StatementId      #POLICY's STATEMENT.Id
LAYER_PERMISSION.Statement        #POLICY's STATEMENT as STR
LAYER_PERMISSION.Action           #'lambda:...' or 'lambda:*' or '*'
LAYER_PERMISSION.Principal        #STR. Authorize an AWS account ID, or '*'
LAYER_PERMISSION.OrganizationId   #STR. With LAYER_PERMISSION.Principal '*', only authorize AWS accounts of that AWS organization ID.


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:              TAG              :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


TagResource()                     #Request parameters: FUNC_TAGS
                                  #Response body: empty
ListTags()                        #Request parameters: FUNC_TAGS
                                  #  - only ARN
                                  #Response body: FUNC_TAGS
                                  #  - no ARN
UntagResource()                   #Request parameters: FUNC_TAGS
                                  #  - Tags -> TagKeys STR_ARR
                                  #Response body: empty

FUNC_TAGS                         #Arbitrary metadata on a FUNCTION
                                  #Can be used for authorization
FUNC_TAGS.ARN                     #FUNC_ARN
FUNC_TAGS|FUNCTION|
 NEW_FUNC_VERSION.Tags            #OBJ with keys and STR values


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:         CODE SIGNING          :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


PutFunctionCodeSigningConfig()    #Request parameters: FUNC_CODE_SIGNING
                                  #Response body: FUNC_CODE_SIGNING
GetFunctionCodeSigningConfig()    #Request parameters: FUNC_CODE_SIGNING
                                  #  - no CodeSigningConfigArn
                                  #Response body: FUNC_CODE_SIGNING
ListFunctionsByCodeSigningConfig()#Request parameters: FUNC_CODE_SIGNING
                                  #  - no FunctionName
                                  #Response body: FunctionArns FUNC_ARN_ARR
DeleteFunctionCodeSigningConfig() #Request parameters: FUNC_CODE_SIGNING
                                  #  - no CodeSigningConfigArn
                                  #Response body: empty

FUNC_CODE_SIGNING                 #Associate a FUNCTION with a CODE_SIGNING
FUNC_CODE_SIGNING
 .FunctionName                    #FUNC_ARN
FUNC_CODE_SIGNING|
 NEW_FUNC_VERSION
 .CodeSigningConfigArn            #CODE_SIGNING_ARN

FUNC_VERSION.SigningJobArn        #AWS Signer's SIGNING_JOB_ARN
FUNC_VERSION
 .SigningProfileVersionArn        #AWS Signer's SIGNING_PROFILE_ARN

CreateCodeSigningConfig()         #Request parameters: CODE_SIGNING
                                  #  - no CodeSigningConfigArn|Id, LastModified
                                  #Response body: CODE_SIGNING
UpdateCodeSigningConfig()         #Request parameters: CODE_SIGNING
                                  #  - no CodeSigningConfigId, LastModified
                                  #Response body: CODE_SIGNING
GetCodeSigningConfig()            #Request parameters: CODE_SIGNING
                                  #  - only CodeSigningConfigArn
                                  #Response body: CODE_SIGNING
ListCodeSigningConfigs()          #Request parameters: empty
                                  #Response body: CodeSigningConfigs CODE_SIGNING_ARR
DeleteCodeSigningConfig()         #Request parameters: CODE_SIGNING
                                  #  - only CodeSigningConfigArn
                                  #Response body: empty

CODE_SIGNING                      #Require signing a code package to publish it
                                  #Uses AWS Signer
CODE_SIGNING.Description          #STR
CODE_SIGNING.LastModified         #'DATE_TIME'

CODE_SIGNING                      #CODE_SIGNING_ARN
 .CodeSigningConfigArn            #'arn:aws:lambda:REGION:ACCOUNT_ID:code-signing-config:CODE_SIGNING'
CODE_SIGNING                      #'CODE_SIGNING'.
 .CodeSigningConfigId             #'csc-' followed by [:alnum:]_-.
CODE_SIGNING.AllowedPublishers
 .SigningProfileVersionArns       #'ARN'_ARR of the profiles allowed to sign a code package
CODE_SIGNING                      #What to do when code package not properly signed. Either
 .CodeSigningPolicies             #  - 'Warn' (def): CloudWatch log
 .UntrustedArtifactOnDeployment   #  - 'Enforce': publish fails


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:            INVOKE             :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


TRIGGER ==>                       #What triggers a FUNCTION: FUNC_URL, Invoke() or EVENT_SOURCE

Invoke()                          #Request parameters: INVOCATION_REQ
                                  #  - URI path: FunctionName
                                  #  - Query variable: Qualifier
                                  #  - X-Amz-* [C] header: InvocationType|ClientContext|LogType
                                  #  - Request payload: Payload
                                  #Response: INVOCATION_RES
                                  #  - status code: StatusCode
                                  #  - X-Amz-* [S] headers: ExecutedVersion|LogResult|FunctionError
                                  #  - body: ResponseBody

INVOCATION_REQ                    #Request of a FUNCTION's run
INVOCATION_REQ.FunctionName       #FUNC_ARN
INVOCATION_REQ.Qualifier          #'QUALIFIER'

INVOCATION_REQ.InvocationType     #STR. One of:
                                  #  - 'RequestResponse' (def): sync call
                                  #  - 'Event':
                                  #     - async call
                                  #     - do not wait for response
                                  #  - 'DryRun': only validate parameters and permissions
INVOCATION_REQ.Payload            #'JSON'. Request payload
                                  #Sometimes also called "event"
INVOCATION_REQ.ClientContext      #STR. Base64-encoded context 'JSON' to pass to FUNCTION
INVOCATION_REQ.LogType            #Either:
                                  #  - 'None' (def)
                                  #  - 'Tail':
                                  #     - include X-Amz-Log-Result [S]
                                  #     - only if InvocationType 'RequestResponse'

INVOCATION_RES                    #Response of a FUNCTION's run
INVOCATION_RES.StatusCode         #NUM.
                                  #On success, depends on InvocationType:
                                  #  - RequestResponse: 200
                                  #  - Event: 202
                                  #  - DryRun: 204
INVOCATION_RES.ResponseBody       #STR, as sent by FUNCTION
                                  #Or error OBJ if FUNCTION errored
                                  #Empty if InvocationType 'Event|DryRun'
INVOCATION_RES.ExecutedVersion    #VERSION_NUM
INVOCATION_RES.LogResult          #FUNCTION stdout|stderr
                                  #Last 4KB only
                                  #Base64 encoded
INVOCATION_RES.FunctionError      #STR. Means INVOCATION errored


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:         EVENT INVOKE          :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


PutFunctionEventInvokeConfig()    #Request parameters: EVENT_INVOKE
                                  #  - FunctionArn -> FunctionName FUNC_ARN + Qualifier 'QUALIFIER'
                                  #  - no LastModified
                                  #Response body: EVENT_INVOKE
UpdateFunctionEventInvokeConfig() #Request parameters: EVENT_INVOKE
                                  #  - FunctionArn -> FunctionName FUNC_ARN + Qualifier 'QUALIFIER'
                                  #  - no LastModified
                                  #Response body: EVENT_INVOKE
GetFunctionEventInvokeConfig()    #Request parameters: EVENT_INVOKE
                                  #  - only FunctionArn -> FunctionName FUNC_ARN + Qualifier 'QUALIFIER'
                                  #Response body: EVENT_INVOKE
ListFunctionEventInvokeConfigs()  #Request parameters: EVENT_INVOKE
                                  #  - only FunctionArn -> FunctionName FUNC_ARN
                                  #Response body: FunctionEventInvokeConfigs EVENT_INVOKE_ARR
DeleteFunctionEventInvokeConfig() #Request parameters: EVENT_INVOKE
                                  #  - only FunctionArn -> FunctionName FUNC_ARN + Qualifier 'QUALIFIER'
                                  #Response body: empty

EVENT_INVOKE                      #Invocation configuration: retries, and persisting invocation payload
EVENT_INVOKE.FunctionArn          #FUNC_ARN
EVENT_INVOKE.LastModified         #DATETIME_NUM

EVENT_INVOKE.DestinationConfig    #DEST. Send invocation payload to SNS|SQS on success|failure
EVENT_INVOKE.MaximumRetryAttempts #NUM of retries if FUNCTION fails.
                                  #Max: 2
EVENT_INVOKE                      #NUM (in secs). Max amount of time to keep invocation payload, e.g. for retries
 .MaximumEventAgeInSeconds        #Min: 1m, max: 6h


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:         EVENT SOURCE          :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


CreateEventSourceMapping()        #Request parameters: EVENT_SOURCE
                                  #  - FunctionArn -> FunctionName FUNC_ARN
                                  #  - no UUID, LastModified, LastProcessingResult, StateTransitionReason
                                  #  - State -> Enabled BOOL
                                  #Response body: EVENT_SOURCE
UpdateEventSourceMapping()        #Request parameters: EVENT_SOURCE
                                  #  - FunctionArn -> FunctionName FUNC_ARN
                                  #  - no UUID, LastModified, LastProcessingResult, StateTransitionReason
                                  #  - no EventSourceArn, StartPosition*, Amazon|SelfManagedKafkaEventSourceConfig,
                                  #    SelfManagedEventSource, Queues, Topics
                                  #  - State -> Enabled BOOL
                                  #Response body: EVENT_SOURCE
GetEventSourceMapping()           #Request parameters: EVENT_SOURCE
                                  #  - only UUID
                                  #Response body: EVENT_SOURCE
ListEventSourceMappings()         #Request parameters: EVENT_SOURCE
                                  #  - only EventSourceArn
                                  #  - also FunctionArn -> FunctionName FUNC_ARN
                                  #Response body: EventSourceMappings EVENT_SOURCE_ARR
DeleteEventSourceMapping()        #Request parameters: EVENT_SOURCE
                                  #  - only UUID
                                  #Response body: EVENT_SOURCE

EVENT_SOURCE                      #Associate a source that triggers a FUNCTION
EVENT_SOURCE.UUID                 #'UUID'
EVENT_SOURCE.EventSourceArn       #EVENT_SOURCE_ARN
EVENT_SOURCE.FunctionArn          #FUNC_ARN
EVENT_SOURCE.LastModified         #DATETIME_NUM

EVENT_SOURCE.State                #STR among:
                                  #  - 'Creating'
                                  #  - 'Enabling|Disabling', 'Enabled|Disabled'
                                  #  - 'Updating'
                                  #  - 'Deleting'
EVENT_SOURCE.StateTransitionReason#STR. Whether current EVENT_SOURCE.State is due to user or to system
EVENT_SOURCE
 .FilterCriteria.Filters          #OBJ_ARR: Pattern 'OBJ'_JSON
EVENT_SOURCE.LastProcessingResult #STR. Result of last invocation

EVENT_SOURCE.BatchSize            #Batch each NUM records from the source together, to pass to the function's payload, up to payload size limit (6MB)
                                  #Def: 100
                                  #  - exception: 10 for SQS
                                  #Max: 1e4
                                  #Only if source is stream|queue
EVENT_SOURCE                      #NUM (in secs). Maximum duration to gather records for each batch
 .MaximumBatchingWindowInSeconds  #Def: 0
                                  #  - exception: 500ms for MSK, self-managed Kafka, MQ
                                  #Min: 0
                                  #  - exception: 1 if EVENT_SOURCE.BatchSize >10 with stream|SQS
                                  #Max: 300
EVENT_SOURCE                      #NUM (in secs). Processing window duration.
 .TumblingWindowInSeconds         #Max: 900
EVENT_SOURCE                      #STR_ARR, among:
 .FunctionResponseTypes           #  - 'ReportBatchItemFailures'

EVENT_SOURCE.StartingPosition     #STR. Position where to start reading stream source, among:
                                  #  - 'LATEST': at most recent time
                                  #  - 'AT_TIMESTAMP' (only with Kinesis): at specific time
                                  #  - 'TRIM_HORIZON'
                                  #Only if source is stream
EVENT_SOURCE
 .StartingPositionTimestamp       #DATETIME_NUM when EVENT_SOURCE 'AT_TIMESTAMP'

EVENT_SOURCE.ParallelizationFactor#NUM of batches to process concurrently.
                                  #Def: 1
                                  #Max: 10
                                  #Only if source is stream
EVENT_SOURCE                      #BOOL. If true (def: false) and function fails, split the batch in two and retry
 .BisectBatchOnFunctionError      #Only if source is stream
EVENT_SOURCE.MaximumRetryAttempts #NUM of times to try to gather records.
                                  #Def: -1, i.e. infinite
                                  #Max: 1e4
                                  #Only if source is stream
EVENT_SOURCE                      #NUM (in secs). Ignore older records.
 .MaximumRecordAgeInSeconds       #Def: -1, i.e. not used.
                                  #Max: 1 week
                                  #Only if source is stream

EVENT_SOURCE                      #SOURCE_ACCESS_ARR
 .SourceAccessConfigurations      #Only authorize specific source
SOURCE_ACCESS.Type                #STR among:
                                  #  (Amazon MQ)
                                  #  - 'BASIC_AUTH'
                                  #  (Self-managed RabbitMQ)
                                  #  - 'VIRTUAL_HOST'
                                  #  (Amazon MSK + self-managed Kafka)
                                  #  - 'SASL_SCRAM_512_AUTH'
                                  #  - 'CLIENT_CERTIFICATE_TLS_AUTH'
                                  #  (Self-managed Kafka)
                                  #  - 'BASIC_AUTH'
                                  #  - 'VPC_SUBNET'
                                  #  - 'VPC_SECURITY_GROUP'
                                  #  - 'SASL_SCRAM_256'
                                  #  - 'SERVER_ROOT_CA_CERTIFICATE'
SOURCE_ACCESS.URI                 #'URI'|'ARN'. Value based on SOURCE_ACCESS.Type

EVENT_SOURCE.ScalingConfig        #SCALING. Amazon SQS source config
SCALING.MaximumConcurrency        #NUM.
                                  #Min: 2
                                  #Max: 1e4
EVENT_SOURCE.DestinationConfig    #DEST. Amazon SQS|SNS destination config
                                  #Only if source is stream
DEST.OnSuccess|OnFailure
 .Destination                     #SQS|SNS_ARN

EVENT_SOURCE.Queues               #STR_ARR. Names of the Amazon MQ broker sources

EVENT_SOURCE.Topics               #STR_ARR. Names of Kafka topics
EVENT_SOURCE.Amazon
 ManagedKafkaEventSourceConfig    #MSK_SOURCE. Amazon MSK's source config
EVENT_SOURCE.Self
 ManagedKafkaEventSourceConfig    #SMSK_SOURCE. Self-managed Kafka source config
[S]MSK_SOURCE.ConsumerGroupId     #STR. Kafka consumer group id
EVENT_SOURCE
 .SelfManagedEventSource
 .Endpoints
 .KAFKA_BOOTSTRAP_SERVERS         #Self-managed Kafka source 'HOST:PORT'_ARR


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:          CONCURRENCY          :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


PutFunctionConcurrency()          #Request parameters: CONCURRENCY
                                  #  - also FunctionName FUNC_URL
                                  #Response body: CONCURRENCY
GetFunctionConcurrency()          #Request parameters: CONCURRENCY
                                  #  - also|only FunctionName FUNC_URL
                                  #Response body: CONCURRENCY
DeleteFunctionConcurrency()       #Request parameters: CONCURRENCY
                                  #  - also|only FunctionName FUNC_URL
                                  #Response body: empty

CONCURRENCY                       #Reserved concurrency, i.e. max amount of invocations of FUNCTIONs at once
CONCURRENCY
 .ReservedConcurrentExecutions    #NUM of concurrent executions
FUNCTION.Concurrency
 .ReservedConcurrentExecutions    #Same

PutProvisionedConcurrencyConfig() #Request parameters: PCONCURRENCY
                                  #  - FunctionArn -> FunctionName FUNC_ARN + Qualifier 'QUALIFIER'
                                  #  - only RequestedProvisionedConcurrentExecutions -> ProvisionedConcurrentExecutions NUM
                                  #Response body: PCONCURRENCY
GetProvisionedConcurrencyConfig() #Request parameters:
                                  #  - only FunctionArn -> FunctionName FUNC_ARN + Qualifier 'QUALIFIER'
                                  #Response body: PCONCURRENCY
ListProvisioned                   #Request parameters:
 ConcurrencyConfigs()             #  - only FunctionArn -> FunctionName FUNC_ARN
                                  #Response body: ProvisionedConcurrencyConfigs PCONCURRENCY_ARR
DeleteProvisioned                 #Request parameters:
 ConcurrencyConfig()              #  - only FunctionArn -> FunctionName FUNC_ARN + Qualifier 'QUALIFIER'
                                  #Response body: empty

PCONCURRENCY                      #Provisioned concurrency: like reserved concurrency, but without cold start
PCONCURRENCY.FunctionArn          #FUNC_ARN
PCONCURRENCY.LastModified         #'DATETIME'
PCONCURRENCY.Status               #STR indicating allocation process, among 'IN_PROGRESS', 'READY' and 'FAILED'
PCONCURRENCY.StatusReason         #STR. Set if PCONCURRENCY.Status 'Failed'

PCONCURRENCY.Available
 ProvisionedConcurrentExecutions  #NUM
PCONCURRENCY.Requested
 ProvisionedConcurrentExecutions  #NUM
PCONCURRENCY.Allocated
 ProvisionedConcurrentExecutions  #NUM

ACCOUNT_LIMIT.ConcurrentExecutions#NUM. Max amount of FUNCTIONs running at once
                                  #1e4, but can be increased to a few 1e5 through support
ACCOUNT_LIMIT
 .UnreservedConcurrentExecutions  #NUM. Like ACCOUNT_LIMIT.ConcurrentExecutions, but minus reserved concurrencies


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:             ERROR             :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


FUNC_VERSION.Timeout              #NUM (in secs). Times out for each FUNCTION's invocation
                                  #Excluding initialization, but including extensions

FUNC_VERSION.DeadLetterConfig
 .TargetArn                       #SQS|SNS_ARN where to send async FUNCTIONs failures event payloads

FUNC_VERSION.Environment|
 ImageConfigResponse|
 RuntimeVersionConfig.Error       #FUNC_VERSION_ERROR. Error when Environment|ImageConfig|Runtime cannot be applied
FUNC_VERSION_ERROR.Message        #STR
FUNC_VERSION_ERROR.ErrorCode      #STR

FUNC_VERSION.TracingConfig        #TRACING. AWS X-Ray configuration.
TRACING.Mode                      #Either 'Active' or 'PassThrough'
