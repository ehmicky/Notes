
          
   LAMBDA  
          



VERSION ==>                       #2023-02-25

ARNs ==>                          #'arn:aws:lambda:REGION:ACCOUNT_ID:function:FUNC_NAME'
FUNC_ARN                          #One of:
                                  #  - function full ARN
                                  #  - 'ACCOUNT_ID:function:FUNC_NAME'
                                  #  - 'FUNC_NAME'
AFUNC_ARN                         #FUNC_ARN, ALIAS_ARN or VERSION_ARN

PAGINATION ==>                    #  - request variable Marker STR, MaxItems STR (max: 1e4)
                                  #  - response body NextMarker STR

ALIAS_CONFIG                      #Alternative identifier 'ALIAS' for a FUNCTION
ALIAS_CONFIG.AliasArn             #ALIAS_ARN. 'arn:aws:lambda:REGION:ACCOUNT_ID:function:FUNC_NAME:ALIAS_NAME'
ALIAS_CONFIG.Name                 #'ALIAS_NAME'
ALIAS_CONFIG.RevisionId           #'REVISION_ID'
                                  #Can pass current one to UpdateAlias() so it fails if there is a concurrent update
ALIAS_CONFIG.FunctionVersion      #'FUNC_VERSION'
ALIAS_CONFIG.Description          #STR

CreateAlias()                     #Request parameters: ALIAS_CONFIG
                                  #  - AliasArn -> FunctionName FUNC_ARN
                                  #  - no RevisionId
                                  #Response body: ALIAS_CONFIG
UpdateAlias()                     #Request parameters: ALIAS_CONFIG
                                  #  - AliasArn -> FunctionName FUNC_ARN
                                  #Response body: ALIAS_CONFIG
GetAlias()                        #Request parameters: ALIAS_CONFIG
                                  #  - only Name
                                  #  - also AliasArn -> FunctionName FUNC_ARN
                                  #Response body: ALIAS_CONFIG
ListAliases()                     #Request parameters: ALIAS_CONFIG
                                  #  - only FunctionVersion
                                  #  - also AliasArn -> FunctionName FUNC_ARN
                                  #Response body: Aliases ALIAS_CONFIG_ARR:
DeleteAlias()                     #Request parameters: ALIAS_CONFIG
                                  #  - only Name
                                  #  - also AliasArn -> FunctionName FUNC_ARN
                                  #Response body: empty

ALIAS_ROUTING_CONFIG              #Route different percentages of traffic to different FUNC_VERSION
                                  #OBJ:
                                  #  - key is 'FUNC_VERSION'
                                  #  - value is NUM from 0 to 1 (percentage)
ALIAS_CONFIG.RoutingConfig        #ALIAS_ROUTING_CONFIG

FUNC_CODE_SIGNING_CONFIG          #Associate a FUNCTION with a CODE_SIGNING_CONFIG
FUNC_CODE_SIGNING_CONFIG
 .CodeSigningConfigArn            #CODE_SIGNING_CONFIG_ARN
FUNC_CODE_SIGNING_CONFIG
 .FunctionName                    #FUNC_ARN

PutFunctionCodeSigningConfig()    #Request parameters: FUNC_CODE_SIGNING_CONFIG
                                  #Response body: FUNC_CODE_SIGNING_CONFIG
GetFunctionCodeSigningConfig()    #Request parameters: FUNC_CODE_SIGNING_CONFIG
                                  #  - no CodeSigningConfigArn
                                  #Response body: FUNC_CODE_SIGNING_CONFIG
ListFunctionsByCodeSigningConfig()#Request parameters: FUNC_CODE_SIGNING_CONFIG
                                  #  - no FunctionName
                                  #Response body: FunctionArns FUNC_ARN_ARR
DeleteFunctionCodeSigningConfig() #Request parameters: FUNC_CODE_SIGNING_CONFIG
                                  #  - no CodeSigningConfigArn
                                  #Response body: empty

CODE_SIGNING_CONFIG               #Require signing a code package to publish it
CODE_SIGNING_CONFIG               #CODE_SIGNING_CONFIG_ARN
 .CodeSigningConfigArn            #'arn:aws:lambda:REGION:ACCOUNT_ID:code-signing-config:CODE_SIGNING'
CODE_SIGNING_CONFIG               #'CODE_SIGNING'.
 .CodeSigningConfigId             #'csc-' followed by [:alnum:]_-.
CODE_SIGNING_CONFIG               #
 .AllowedPublishers
 .SigningProfileVersionArns       #'ARN'_ARR of the profiles allowed to sign a code package
CODE_SIGNING_CONFIG               #What to do when code package not properly signed. Either
 .CodeSigningPolicies             #  - 'Warn' (def): CloudWatch log
 .UntrustedArtifactOnDeployment   #  - 'Enforce': publish fails
CODE_SIGNING_CONFIG.Description   #STR
CODE_SIGNING_CONFIG.LastModified  #'DATE_TIME'

CreateCodeSigningConfig()         #Request parameters: CODE_SIGNING_CONFIG
                                  #  - no CodeSigningConfigArn|Id, LastModified
                                  #Response body: CODE_SIGNING_CONFIG
UpdateCodeSigningConfig()         #Request parameters: CODE_SIGNING_CONFIG
                                  #  - no CodeSigningConfigId, LastModified
                                  #Response body: CODE_SIGNING_CONFIG
GetCodeSigningConfig()            #Request parameters: CODE_SIGNING_CONFIG
                                  #  - only CodeSigningConfigArn
                                  #Response body: CODE_SIGNING_CONFIG
ListCodeSigningConfigs()          #Request parameters: empty
                                  #Response body: CodeSigningConfigs CODE_SIGNING_CONFIG_ARR
DeleteCodeSigningConfig()         #Request parameters: CODE_SIGNING_CONFIG
                                  #  - only CodeSigningConfigArn
                                  #Response body: empty

EVENT_SOURCE_MAPPING              #Associate a source that triggers a FUNCTION
EVENT_SOURCE_MAPPING.UUID         #'UUID'
EVENT_SOURCE_MAPPING
 .EventSourceArn                  #EVENT_SOURCE_MAPPING_ARN
EVENT_SOURCE_MAPPING.FunctionArn  #FUNC_ARN
EVENT_SOURCE_MAPPING.LastModified #DATETIME_NUM

EVENT_SOURCE_MAPPING.State        #STR among:
                                  #  - 'Creating'
                                  #  - 'Enabling|Disabling', 'Enabled|Disabled'
                                  #  - 'Updating'
                                  #  - 'Deleting'
EVENT_SOURCE_MAPPING
 .StateTransitionReason           #STR. Whether current EVENT_SOURCE_MAPPING.State is due to user or to system
EVENT_SOURCE_MAPPING
 .FilterCriteria.Filters          #OBJ_ARR: Pattern 'OBJ'_JSON
EVENT_SOURCE_MAPPING
 .LastProcessingResult            #STR. Result of last invocation

EVENT_SOURCE_MAPPING.BatchSize    #NUM of records from the source stream|queue to pass to the function's payload,
                                  #up to payload size limit (6MB)
                                  #Def: 100
                                  #  - exception: 10 for SQS
                                  #Max: 1e4
EVENT_SOURCE_MAPPING              #NUM (in secs). How long to gather records from the source before starting.
 .MaximumBatchingWindowInSeconds  #Def: 0
                                  #  - exception: 500ms for MSK, self-managed Kafka, MQ
                                  #Min: 0
                                  #  - exception: 1 if EVENT_SOURCE_MAPPING.BatchSize >10 with SQS|streams
                                  #Max: 300
EVENT_SOURCE_MAPPING              #NUM (in secs). Processing window duration.
 .TumblingWindowInSeconds         #Max: 900
EVENT_SOURCE_MAPPING              #STR_ARR, among:
 .FunctionResponseTypes           #  - 'ReportBatchItemFailures'

EVENT_SOURCE_MAPPING              #STR. Position where to start reading stream source, among:
 .StartingPosition                #  - 'LATEST': at most recent time
                                  #  - 'AT_TIMESTAMP' (only with Kinesis): at specific time
                                  #  - 'TRIM_HORIZON'
                                  #Only if source is stream
EVENT_SOURCE_MAPPING
 .StartingPositionTimestamp       #DATETIME_NUM when EVENT_SOURCE_MAPPING 'AT_TIMESTAMP'

EVENT_SOURCE_MAPPING              #NUM of batches to process concurrently.
 .ParallelizationFactor           #Def: 1
                                  #Max: 10
                                  #Only if source is stream
EVENT_SOURCE_MAPPING              #BOOL. If true (def: false) and function fails, split the batch in two and retry
 .BisectBatchOnFunctionError      #Only if source is stream
EVENT_SOURCE_MAPPING              #NUM of times to try to gather records.
 .MaximumRetryAttempts            #Def: -1, i.e. infinite
                                  #Max: 1e4
                                  #Only if source is stream
EVENT_SOURCE_MAPPING              #NUM (in secs). Ignore older records.
 .MaximumRecordAgeInSeconds       #Def: -1, i.e. not used.
                                  #Max: 1 week
                                  #Only if source is stream

EVENT_SOURCE_MAPPING              #SOURCE_ACCESS_CONFIG_ARR
 .SourceAccessConfigurations      #Only authorize specific source
SOURCE_ACCESS_CONFIG.Type         #STR among:
                                  #  (Amazon MQ)
                                  #  - 'BASIC_AUTH'
                                  #  (Self-managed RabbitMQ)
                                  #  - 'VIRTUAL_HOST'
                                  #  (Amazon MSK + self-managed Kafka)
                                  #  - 'SASL_SCRAM_512_AUTH'
                                  #  - 'CLIENT_CERTIFICATE_TLS_AUTH'
                                  #  (Self-managed Kafka)
                                  #  - 'BASIC_AUTH'
                                  #  - 'VPC_SUBNET'
                                  #  - 'VPC_SECURITY_GROUP'
                                  #  - 'SASL_SCRAM_256'
                                  #  - 'SERVER_ROOT_CA_CERTIFICATE'
SOURCE_ACCESS_CONFIG.URI          #'URI'|'ARN'. Value based on SOURCE_ACCESS_CONFIG.Type

EVENT_SOURCE_MAPPING.ScalingConfig#SCALING_CONFIG. Amazon SQS source config
SCALING_CONFIG.MaximumConcurrency #NUM.
                                  #Min: 2
                                  #Max: 1e4
EVENT_SOURCE_MAPPING              #DEST_CONFIG. Amazon SQS|SNS destination config
 .DestinationConfig               #Only if source is stream
DEST_CONFIG.OnSuccess|OnFailure
 .Destination                     #SQS|SNS_ARN

EVENT_SOURCE_MAPPING.Queues       #STR_ARR. Names of the Amazon MQ broker sources

EVENT_SOURCE_MAPPING.Topics       #STR_ARR. Names of Kafka topics
EVENT_SOURCE_MAPPING.Amazon
 ManagedKafkaEventSourceConfig    #MSK_CONFIG. Amazon MSK's source config
EVENT_SOURCE_MAPPING.Self
 ManagedKafkaEventSourceConfig    #SMSK_CONFIG. Self-managed Kafka source config
[S]MSK_CONFIG.ConsumerGroupId     #STR. Kafka consumer group id
EVENT_SOURCE_MAPPING
 .SelfManagedEventSource
 .Endpoints
 .KAFKA_BOOTSTRAP_SERVERS         #Self-managed Kafka source 'HOST:PORT'_ARR

CreateEventSourceMapping()        #Request parameters: EVENT_SOURCE_MAPPING
                                  #  - FunctionArn -> FunctionName SFUNC_ARN
                                  #  - no UUID, LastModified, LastProcessingResult, StateTransitionReason
                                  #  - State -> Enabled BOOL
                                  #Response body: EVENT_SOURCE_MAPPING
UpdateEventSourceMapping()        #Request parameters: EVENT_SOURCE_MAPPING
                                  #  - FunctionArn -> FunctionName SFUNC_ARN
                                  #  - no UUID, LastModified, LastProcessingResult, StateTransitionReason
                                  #  - no EventSourceArn, StartPosition*, Amazon|SelfManagedKafkaEventSourceConfig,
                                  #    SelfManagedEventSource, Queues, Topics
                                  #  - State -> Enabled BOOL
                                  #Response body: EVENT_SOURCE_MAPPING
GetEventSourceMapping()           #Request parameters: EVENT_SOURCE_MAPPING
                                  #  - only UUID
                                  #Response body: EVENT_SOURCE_MAPPING
ListEventSourceMappings()         #Request parameters: EVENT_SOURCE_MAPPING
                                  #  - only EventSourceArn
                                  #  - also FunctionArn -> FunctionName SFUNC_ARN
                                  #Response body: EventSourceMappings EVENT_SOURCE_MAPPING_ARR
DeleteEventSourceMapping()        #Request parameters: EVENT_SOURCE_MAPPING
                                  #  - only UUID
                                  #Response body: EVENT_SOURCE_MAPPING

FUNC_URL_CONFIG                   #URL of a FUNCTION
FUNC_URL_CONFIG.AuthType          #Authentication to access the URL, among:
                                  #  - 'NONE' (def)
                                  #  - 'AWS_IAM': only IAM-authenticated users
FUNC_URL_CONFIG.Cors              #CORS headers
CORS.AllowOrigins                 #'URI'_ARR
CORS.AllowMethods                 #'METHOD'_ARR
CORS.AllowHeaders                 #'HEADER'_ARR
CORS.AllowCredentials             #BOOL (def: false)
CORS.MaxAge                       #NUM (in secs). Max: 1 day
CORS.ExposeHeaders                #'HEADER'_ARR
FUNC_URL_CONFIG.
FUNC_URL_CONFIG.
FUNC_URL_CONFIG.

CreateFunctionUrlConfig()         #Request parameters:
                                  #Response body:
UpdateFunctionUrlConfig()         #Request parameters:
                                  #Response body:
GetFunctionUrlConfig()            #Request parameters:
                                  #Response body:
ListFunctionUrlConfigs()          #Request parameters:
                                  #Response body:
DeleteFunctionUrlConfig()         #Request parameters:
                                  #Response body:

PutFunctionConcurrency()          #Request parameters:
                                  #Response body:
GetFunctionConcurrency()          #Request parameters:
                                  #Response body:
DeleteFunctionConcurrency()       #Request parameters:
                                  #Response body:

PutProvisionedConcurrencyConfig() #Request parameters:
                                  #Response body:
GetProvisionedConcurrencyConfig() #Request parameters:
                                  #Response body:
ListProvisioned                   #Request parameters:
 ConcurrencyConfigs()             #Response body:
DeleteProvisioned                 #Request parameters:
 ConcurrencyConfig()              #Response body:

PutFunctionEventInvokeConfig()    #Request parameters:
                                  #Response body:
UpdateFunctionEventInvokeConfig() #Request parameters:
                                  #Response body:
GetFunctionEventInvokeConfig()    #Request parameters:
                                  #Response body:
ListFunctionEventInvokeConfigs()  #Request parameters:
                                  #Response body:
DeleteFunctionEventInvokeConfig() #Request parameters:
                                  #Response body:

PublishLayerVersion()             #Request parameters:
                                  #Response body:
GetLayerVersion()                 #Request parameters:
                                  #Response body:
GetLayerVersionByArn()            #Request parameters:
                                  #Response body:
GetLayerVersionPolicy()           #Request parameters:
                                  #Response body:
ListLayerVersions()               #Request parameters:
                                  #Response body:
DeleteLayerVersion()              #Request parameters:
                                  #Response body:

AddLayerVersionPermission()       #Request parameters:
                                  #Response body:
RemoveLayerVersionPermission()    #Request parameters:
                                  #Response body:

AddPermission()                   #Request parameters:
                                  #Response body:
RemovePermission()                #Request parameters:
                                  #Response body:

GetAccountSettings()              #Request parameters:
                                  #Response body:

CreateFunction()                  #Request parameters:
                                  #Response body:
GetFunction()                     #Request parameters:
                                  #Response body:
ListFunctions()                   #Request parameters:
                                  #Response body:
DeleteFunction()                  #Request parameters:
                                  #Response body:

UpdateFunctionConfiguration()     #Request parameters:
                                  #Response body:
GetFunctionConfiguration()        #Request parameters:
                                  #Response body:

GetPolicy()                       #Request parameters:
                                  #Response body:

PutRuntimeManagementConfig()      #Request parameters:
                                  #Response body:
GetRuntimeManagementConfig()      #Request parameters:
                                  #Response body:

Invoke()                          #Request parameters:
                                  #Response body:
InvokeAsync()                     #Request parameters:
                                  #Response body:

ListLayers()                      #Request parameters:
                                  #Response body:

ListTags()                        #Request parameters:
                                  #Response body:

PublishVersion()                  #Request parameters:
                                  #Response body:
ListVersionsByFunction()          #Request parameters:
                                  #Response body:

TagResource()                     #Request parameters:
                                  #Response body:
UntagResource()                   #Request parameters:
                                  #Response body:

UpdateFunctionCode()              #Request parameters:
                                  #Response body:
