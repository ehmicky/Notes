
                  
   CLOUDFORMATION  
                  



TO DOCUMENT: AWS SAM

CLOUD FORMATION ==>           #Version from 2014-07-10

GOAL ==>                      #Controlling sets of AWS resources as one (create|update|delete)

CONCEPTS ==>                  #Template: JSON file with AWS resources and their configuration
                              #Stack:
                              #  - instantiation of a template
                              #  - when updating, compare with previous template, and only changes what changed


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:           STRUCTURE           :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


TEMPLATE STRUCTURE ==>        #  - AWSTemplateFormatVersion VERSION (current "2010-09-09")
                              #  - Description STR
                              #  - Resources:
                              #     - RESOURCE_VAR:
                              #        - Type "AWS::SERVICE::TYPE" (some SERVICE not available)
                              #        - Properties { PROP_VAR: VAL ... }
                              #           - usually same or similar as one used in createTYPE()
                              #        - DeletionPolicy "Delete|Retain|Snapshot"
                              #        - UpdatePolicy:
                              #           - AutoScalingRollingUpdate:
                              #              - MaxBatchSize NUM (def: 1)
                              #              - MinInstancesInService NUM (def: 0)
                              #              - PauseTime NUM "PT[..H][..M][..S]" (each .. is NUM) (def: "PT0S")
                              #           - AutoScalingScheduledAction: IgnoreUnmodifiedGroupSizeProperties BOOL (def: false)
                              #        - DependsOn RESOURCE_VAR
                              #        - Metadata OBJ
                              #  - Parameters:
                              #     - PARAM:
                              #        - Default STR
                              #        - Type "String|Number|CommaDelimitedList"
                              #        - Min|MaxLength NUM_STR (for "String")
                              #        - Min|MaxValue STR (for "Number")
                              #        - AllowedPattern GLOB_STR
                              #        - AllowedValues STR_ARR
                              #        - Description STR
                              #        - ConstraintDescription STR
                              #        - NoEcho BOOL: if true, show "****" when Describe*() is used
                              #  - Outputs:
                              #     - OUTPUT_VAR:
                              #        - Value VAL
                              #        - Description STR
                              #     - only shown in DescribeStacks() (not used otherwise)
                              #     - usually { "Ref": ... } to show e.g. IDs of resources created of parameters passed
                              #  - Mappings:
                              #     - FILTER_VAR:
                              #        - VAL: FILTER_OBJ
                              #  - Conditions:
                              #     - COND_VAR: BOOL
                              #     - Can then use { Condition: COND_VAR } either:
                              #        - replaced like any FUNC_STR, inside another FUNC2_STR taking BOOL as argument
                              #        - as member of OUTPUT_VAR or RESOURCE_VAR, to use it only if BOOL true

FUNCTIONS ==>                 #Any VAL (including an OBJ among OBJ_ARR) can be { FUNC_STR: ARGS }:
                              #  - { "Ref": RESOURCE_VAR }: replace with resource:
                              #      - ID: CloudFormation::Stack, CloudFront::Distribution,
                              #        EC2::VPCPeeringConnection|Volume|Instance, OpsWorks::App|Instance|Layer|Stack
                              #      - Name: all others
                              #      - ARN: SNS::Topic
                              #      - URL: CloudFormation::WaitConditionHandle, SQS::Queue
                              #      - Value: EC2::EIP, IAM::AccessKey
                              #  - { "Ref": PARAM }:
                              #      - replace with PARAM value, specified with Create|UpdateStack() Parameters
                              #      - some always available:
                              #         - AWS::StackId|StackName STR
                              #         - AWS::AccountId STR
                              #         - AWS::Region STR
                              #         - AWS::NotificationARNs STR_ARR: specified with Create|UpdateStack()
                              #         - AWS::NoValue: undefined (don't specify the VAR), used with "Fn::If"
                              #  - { "Fn::GetAtt": [ RESOURCE_VAR, ATTR_STR ] }:
                              #     - replace with RESOURCE_VAR attributes (even if default values)
                              #     - does not work with all possible attributes
                              #  - { "Fn::FindInMap": [ FILTER_VAR, VAL2, ATTR_STR ] }:
                              #     - replace with FILTER_VAR.VAL2.FILTER_OBJ.ATTR_STR
                              #     - used to introduce switch-like logic
                              #  - { "Fn::If" [ BOOL, VAL, VAL2 ] }: replaces with either VAL or VAL2
                              #  - { "Fn::Equals": [ VAL, VAL2 ] }: replaces with BOOL
                              #  - { "Fn::Not": [{ BOOL }] }: replaces with !BOOL
                              #  - { "Fn::And|Or": [{ BOOL },... ] }: replaces with BOOL2
                              #  - { "Fn::Select": [ INDEX_NUM, ARR ] }: index an ARR (starts at 0)
                              #  - { "Fn::Join": [ STR, STR2_ARR ] }: replaces with JavaScript STR2_ARR.join(STR)
                              #  - { "Fn::Base64": STR }
                              #  - { "Fn::GetAZs": REGION_STR }: replace with ZONE_ARR.
                              #    If REGION_STR "" (def), uses { "Ref": "AWS::Region" }

METADATA ==>                  #  - can be anything
                              #  - OBJ.VAR can be fetched with /opt/aws/bin/cfn-get-metadata --key VAR, which
                              #    takes same options as cfn-init
                              #  - /opt/aws/bin/cfn-hup -c DIR:
                              #     - daemon that fires actions when Metadata is changed, or anything on RESOURCE_VAR
                              #     - uses DIR/cfn-hup.conf, init file with [main]:
                              #        - interval NUM (def: 10): how many minutes to check
                              #        - stack STACK_ID
                              #        - credential-file STR
                              #        - region REGION
                              #        - verbose BOOL
                              #     - run all DIR/NAME.conf, init file with [NAME]:
                              #        - path STR: to monitor, either:
                              #           - "Resources.RESOURCE_VAR": anything in RESOURCE_VAR
                              #           - "Resources.RESOURCE_VAR.PhysicalResourceId": resource Id
                              #           - "Resources.RESOURCE_VAR.Metadata[(PATH)]": Metadata
                              #        - action STR: shell command
                              #        - triggers "post.add|update|remove"
                              #        - runas SHELL_USER


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:           LIFECYCLE           :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


STACK LIFECYCLE ==>           #Creating:
                              #  - Can specify order with DependsOn RESOURCE_VAR
                              #  - If specifying Internet|VpnGateway, should make AutoScalingGroup, EC2 instance,
                              #    LoadBalancer, ElasticIP, RouteTable depend on it
                              #Updating:
                              #  - only affects resources that changed, either (depending on the resource and propertie
                              #    changed):
                              #     - NoInterruption
                              #     - MinorInterruption: e.g. EC2 instance restarting
                              #     - Replacement: e.g. EC2 instance terminated then replaced
                              #     - Read-only: cannot be updated (must recreate the Stack)
                              #  - EC2 instance recreation is controlled by UpdatePolicy
                              #    (assigned to AWS::AutoScaling::AutoScalingGroup):
                              #     - AutoScalingRollingUpdate: terminates EC2 instances in batches, by modifying
                              #       AutoScalingGroup MinSize, MaxSize and DesiredCapactity
                              #     - IgnoreUnmodifiedGroupSizeProperties:
                              #        - how to handle AutoScalingGroup scheduledPolicy that happen while a Stack update is
                              #          ongoing
                              #        - should suspend scheduledPolicy before, then reenable
                              #  - rollback:
                              #     - on Create|UpdateStack() if either:
                              #        - error
                              #        - CancelUpdateStack()
                              #        - above TimeoutInMinutes (def: none)
                              #     - unless DisableRollback true
                              #     - according to OnFailure: if "DELETE", deletes the resource but do not rollback all
                              #       resources
                              #  - StackPolicy:
                              #     - IAM-like policies whose goal is to prevent resources from being updated by mistake
                              #     - OBJ: Statement: OBJ_ARR:
                              #        - Effect "Deny|Allow": by def. Allow all. If there is a StackPolicy, def. becomes
                              #          Deny all.
                              #        - Action "Update:Modify|Replace|Delete|*": Modify is MinorInterruption, Replace is
                              #          Replacement
                              #        - Principal: like IAM
                              #        - [Not]Resource: STR_ARR, where STR is "LogicalId/ID"
                              #        - Condition:
                              #           - StringEquals|StringLike (if globbing):
                              #              - ResourceType: STR_ARR, where STR is "AWS::SERVICE::TYPE"
                              #     - Can include globbing like IAM
                              #Erasing:
                              #  - Resources are deleted according to DeletionPolicy:
                              #     - "Delete" (def)
                              #     - "Retain"
                              #     - "Snapshot" (but still deletes), for EC2::Volume, RDS::DBInstance, Redshift::Cluster

UPDATES ==>                   #MinorInterruption:
                              #  - AutoScalingGroup: VPCZoneIdentifier
                              #  - Elasticache: CacheCluster: CacheParameterGroupName, EngineVersion
                              #  - ElasticBeanstalk:
                              #     - ApplicationVersion: Description
                              #     - Environment: OptionSettings, TemplateName, VersionLabel
                              #  - Redshift: Cluster: ClusterParameterGroupName
                              #  - RDS: DBInstance: AutoMinorVersionUpgrade|BackupRetentionPeriod|DBParameterGroupName|
                              #    PreferredMaintenanceWindow (sometimes), EngineVersion
                              #Replacement:
                              #  - AutoScaling:
                              #     - LaunchConfiguration: all
                              #     - ScheduledPolicy: AutoScalingGroupName
                              #  - CloudWatch: Alarm: AlarmName
                              #  - DynamoDB: Table: all but ProvisionedThroughput
                              #  - EC2:
                              #     - CustomerGateway: all but Tags
                              #     - DHCPOptions: all but Tags
                              #     - EIP: Domain
                              #     - EIPAssociation: InstanceId|NetworkInterfaceId + AllocationId|EIP (together)
                              #     - Instance: all but:
                              #        - BlockDeviceMappings (if only DeleteOnTerminatin changed), DisableApiTermination
                              #          InstanceInitiatedShutdownBehavior, Monitoring, SourceDestCheck, Tags, Volumes
                              #        - if EBS-backed: EbsOptimized|Instancetype|KernelId|RamdiskId|UserData
                              #          (only MinorInterruption), SecurityGroupIds
                              #      - NetworkAcl: VpcId
                              #      - NetworkAclEntry: Egress, NetworkAclId, RuleNumber
                              #      - NetworkInterface: PrivateIpAddress, PrivateIpAddresses (if primary), SubnetId
                              #      - Route: DestinationCidrBlock, RouteTableId
                              #      - RouteTable: VpcId
                              #      - SecurityGroup: GroupDescription, VpcId
                              #      - SecurityGroupEgress|Ingress: all
                              #      - Subnet: all but Tags
                              #      - SubnetNetworkAclAssociation: all
                              #      - SubnetRouteTableAssociation: SubnetId
                              #      - VPC: CidrBlock, InstanceTenancy
                              #      - VPCDHCPOptionsAssociation: VpcId
                              #      - VPCPeeringConnection: all but Tags
                              #      - VPNConnection: all but Tags
                              #      - VPNConnectionRoute: all but Tags
                              #      - VPNGateway: all but Tags
                              #   - Elasticache: CacheCluster: CacheNodeType, CacheSubnetGroupName, ClusterName, Engine,
                              #     Port, PreferredAvailabilityZone, SnapshotArns
                              #   - ElasticBeanstalk:
                              #      - Application: ApplicationName
                              #      - ApplicationVersion: ApplicationName
                              #      - ConfigurationTemplate: all but Description, OptionSettings (MinorInterruption)
                              #      - Environment: ApplicationName, CNAMEPrefix, EnvironmentName, SolutionStackName, Tier
                              #   - ElasticLoadBalancing: LoadBalancer: HealthCheck|Subnets (if add|remove, not modify),
                              #     LoadBalancerName
                              #   - IAM:
                              #      - AccessKey: Serial, UserName
                              #      - InstanceProfile: Path
                              #      - Role: Path
                              #   - Kinesis: Stream: ShardCount
                              #   - Logs: MetricFilter: LogGroupName
                              #   - OpsWork:
                              #      - App: Shortname, StackId
                              #      - Instance: all but AmiId, Architecture, InstallUpdatesOnBoot, InstanceType, LayerIds,
                              #        Os, SshKeyName (MinorInterruption)
                              #      - Layer: StackId, Type
                              #      - Stack: VpcId
                              #   - Redshift:
                              #      - Cluster: AvailabilityZone, ClusterSubnetGroupName, DBName, ElasticIp, Encrypted,
                              #        MasterUsername, OwnerAccount, Port, PubliclyAccessible, SnapshotClusterIdentifier,
                              #        SnapshotIdentifier
                              #      - ClusterParameterGroup: Description, ParameterGroupFamily
                              #      - ClusterSecurityGroup[Ingress]: all
                              #   - RDS:
                              #      - DBInstance: AvailabilityZone, DBInstanceIdentifier, DBName, DBSnapshotIdentifier,
                              #        DBSubnetGroupName, Engine, LicenseModel, MasterUsername, Port,
                              #        SourceDBInstanceIdentifier
                              #      - DBSecurityGroup: EC2VpcId, GroupDescription
                              #   - Route53:
                              #      - RecordSet: HostedZoneId|Name
                              #      - RecordSetGroup: HostedZoneId|Name
                              #   - S3: Bucket: BucketName
                              #   - SQS: Queue: QueueName
                              #Readonly
                              #   - CloudFormation WaitCondition[Handle]
                              #   - EC2 Volume[Attachment]
                              #   - Elasticache ParameterGroup, SecurityGroup[Ingress]
                              #   - S3 Policy: Bucket
                              #   - SDB (SimpleDB) Domain
                              #   - SNS all

CHILD STACKS ==>              #  - Specifying a RESOURCE_VAR of type "AWS::CloudFormation::Stack", with Properties
                              #    NotificationARNs, Parameters, TemplateURL, TimeoutInMinutes
                              #  - Will be created|updated along the parent


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:             ASYNC             :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


WAITCONDITIONS ==>            #  - used to introduce async pauses in the construction|updates, e.g. manual intervention on EC2
                              #    instance before continuing building
                              #  - RESOURCE_VAR of Type "AWS::CloudFormation::WaitCondition"
                              #     - Properties:
                              #        - Handle: { "Ref": RESOURCE2_VAR }
                              #           - where RESOURCE2_VAR is of Type "AWS::CloudFormation::WaitConditionHandle", with
                              #             empty Properties {}
                              #           - { ... } will resolve to HANDLE_URL
                              #        - Timeout NUM
                              #        - Count NUM2 (def: 1)
                              #     - usually DependsOn another RESOURCE3_VAR, and other RESOURCE4_VAR depend on it
                              #     - RESOURCE_VAR will be marked as Complete only once HANDLE_URL has been called NUM2 times
                              #        - can e.g. pass HANDLE_URL to EC2 instance UserData
                              #        - must do HTTP PUT - HANDLE_URL:
                              #           - no Content-Type [C]
                              #           - content is JSON:
                              #              - Status "SUCCESS|FAILURE"
                              #              - Reason STR
                              #              - UniqueId ID: unique accross different invocations if NUM2 > 1
                              #              - Data STR: can be accessed as { ID: STR } with
                              #                { "Fn::GetAtt", [ RESOURCE_VAR, "Data" ] } (max 4KB)
                              #        - can use /opt/aws/bin/cfn-signal HANDLE_URL to do it, with options:
                              #           -s BOOL: "SUCCESS|FAILURE" (def: "SUCCESS")
                              #           -e NUM:  "SUCCESS|FAILURE" according to exit code NUM
                              #                    Usually after cfn-init
                              #           -r STR:  "Reason"
                              #           -i ID:   "UniqueId"
                              #           -d STR:  "Data"
                              #     - if NotificationARNs, will use it to notify when ready, etc.
                              #       Can also see in DescribeStackEvents()

CUSTOM RESOURCES ==>          #  - RESOURCE_VAR:
                              #     - Type "Custom::CUSTOM" or "AWS::CloudFormation::CustomResource"
                              #     - Properties:
                              #        - ServiceToken SNS_TOPIC_ARN
                              #        - any CUSTOM_PROP
                              #     - Version "1.0"
                              #  - When Create|Update|DeleteStack(), sends SNS notification OBJ:
                              #     - RequestType "Create" (CreateStack()), "Update" (UpdateStack()) or "Delete"
                              #       (DeleteStack())
                              #     - [Old]ResourceProperties CUSTOM_PROP ("Old" too if UpdateStack())
                              #     - ResponseURL URL
                              #     - StackId STR
                              #     - RequestId STR
                              #     - ResourceType "Custom:CUSTOM"
                              #     - LogicalResourceId RESOURCE_VAR
                              #     - PhysicalResourceId ID (if UpdateStack())
                              #  - Should respond to URL with OBJ2:
                              #     - Status "SUCCESS|FAILED"
                              #     - PhysicalResourceId ID
                              #     - StackId, RequestId, LogicalResourceId
                              #     - Data OBJ3: can be accessed with { "Fn:GetAtt": [ RESOURCE_VAR, ATTR_STR ] } (max 4KB)


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:            HELPERS            :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


CLOUDFORMER ==>               #  - Web app (available as a CloudFormation Stack itself, which must be created (can do from
                              #    CloudFormation web console homepage))
                              #     - only cost price of one t1.micro
                              #     - URL is at OUTPUT_VAR.URL
                              #  - Creates a Template from existing resources
                              #     - Automatically manages DependsOn

/opt/aws/bin/cfn-init         #Wrapper around cloud-init. Must be fired from UserData.
                              #Uses as input RESOURCE_VAR.Metadata["AWS::CloudFormation::Init"].config:
                              #  - packages:
                              #     - yum|rpm|rubygems|apt: PATH|VERSION|[]
                              #  - sources: uncompress a URL to DIR (tar, tar.gz, tar.bz2, zip)
                              #     - DIR: URL
                              #  - files: FILE_PATH:
                              #     - mode STR
                              #     - owner|group STR
                              #     - source URL or content STR, encoding "plain|base64"
                              #     - context OBJ: used as Mustache template (must have aws-cfn-bootstrap and pystache
                              #       installed)
                              #     - authentication VAR:
                              #        - uses RESOURCE_VAR.Metadata["AWS::CloudFormation::Authentication"].VAR for
                              #          authentication of URL:
                              #           - type "basic|S3"
                              #           - username|password STR (if "basic")
                              #           - uris URL_ARR (if "basic")
                              #           - accessKeyId|secretKey STR (if "S3")
                              #           - roleName STR (if "S3")
                              #           - buckets STR_ARR (if "S3")
                              #  - users: USER:
                              #     - groups: GROUP_STR_ARR
                              #     - uid STR
                              #     - homeDir PATH
                              #  - groups: GROUP:
                              #     - gid STR
                              #  - commands: ANY: (run in alphabetical order)
                              #     - command COMMAND_STR[_ARR] (can be FILE too)
                              #     - test COMMAND_BOOL_STR
                              #     - cwd PATH
                              #     - env: VAR: VAL
                              #     - ignoreErrors BOOL
                              #  - container_commands: ANY:
                              #     - same as above, but run before and have access to AWS credentials ENVVAR
                              #     - leader_only BOOL: if true, only done on one instance in an AutoScalingGroup
                              #  - services: sysvinit: SERVICE:
                              #     - enabled BOOL: if true, SERVICE start run at boot
                              #     - ensureRunning BOOL: if true, makes sure SERVICE is running after Beanstalk finishes
                              #       setting up
                              #     - files|sources FILE|DIR[_ARR]: if changed, SERVICE restarted
                              #     - packages:
                              #        - yum|rpm|rubygems|apt: PATH|VERSION|[]: if installed|updated, SERVICE restarted
                              #     - commands COMMAND: command names, if run, SERVICE restarted
-s STACK_NAME                 #
-r RESOURCE_VAR               #
--region REGION               #
--access-key STR              #
--secret-key STR              #
--role STR                    #
--credential-file FILE        #
-v                            #

PRICING ==>                   #Free

                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:              API              :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


ARN ==>                       #arn:aws:cloudformation:REGION:ACCOUNT_ID:stack/STACK_NAME/STACK_ID

LIMITS ==>                    #  - Template number of keys:
                              #     - 200 RESOURCE_VAR
                              #     - 100 FILTER_VAR, with each 30 VAR
                              #     - 60 OUTPUT_VAR
                              #     - 60 PARAM
                              #  - 20 Stacks
                              #  - Template size: 51KB (body) or 460KB (URL)

PAGINATION ==>                #  - Request parameters: NextToken STR
                              #  - Response body: NextToken STR


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:            METHODS            :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


Create|UpdateStack()          #Request parameters:
                              #  - StackName STACK_NAME
                              #  - TemplateBody|URL STR
                              #  - UsePreviousTemplate BOOL (only "Update")
                              #  - Parameters OBJ_ARR:
                              #     - ParameterKey STR
                              #     - ParameterValue STR (max 4KB)
                              #     - UsePreviousValue BOOL
                              #  - DisableRollback BOOL (only "Create")
                              #  - OnFailure "DO_NOTHING|ROLLBACK|DELETE" (def: ROLLBACK) (only "Create")
                              #  - StackPolicy[DuringUpdate]Body|URL STR ("DuringUpdate": only "Update", and temporary for the
                              #    duration of UpdateStack())
                              #  - NotificationARNs STR_ARR
                              #  - Capabilities [ "CAPABILITY_IAM" ]: required when using IAM or CloudFormation resources,
                              #    to notify that IAM User is allowed to do those actions
                              #  - Tags TAG_ARR: Key STR, Value STR (only "Create")
                              #  - TimeoutInMinutes NUM (only "Create")
                              #Response body: StackId STR
CancelUpdateStack()           #Request parameters: StackName STR
DeleteStack()                 #Request parameters: StackName STR
DescribeStacks()              #Request parameters: StackName STR
                              #Response body: Stacks OBJ_ARR:
                              #  - Like in CreateUpdateStack() request: Capabilities, DisableRollback, NotificationARNs,
                              #    Parameters, StackName, Tags, TimeoutInMinutes
                              #  - StackId STACK_ID
                              #  - CreationTime|LastUpdatedTime DATE
                              #  - Description STR
                              #  - Outputs OBJ_ARR:
                              #     - Description STR
                              #     - OutputKey STR
                              #     - OutputValue STR
                              #  - StackStatus "CREATE|[UPDATE_]ROLLBACK|DELETE|UPDATE_IN_PROGRESS|FAILED|COMPLETE"
                              #    or "UPDATE_[ROLLBACK_]COMPLETE_CLEANUP_IN_PROGRESS"
                              #  - StackStatusReason STR
                              #Paginates
ListStacks()                  #Request parameters: StackStatusFilter STR_ARR
                              #Response body: StackSummaries OBJ_ARR
                              #  - CreationTime|DeletionTime|LastUpdatedTime DATE
                              #  - StackId|Name STR
                              #  - StackStatus "CREATE|ROLLBACK|DELETE|UPDATE_ROLLBACK|UPDATE_IN_PROGRESS|FAILED|COMPLETE"
                              #    or "UPDATE_[ROLLBACK_]COMPLETE_CLEANUP_IN_PROGRESS"
                              #  - StackStatusReason STR
                              #  - TemplateDescription STR
                              #Paginates

DescribeStackResource()       #Request parameters:
                              #  - LogicalResourceId STR
                              #  - StackName STR
                              #Response body: StackResourceDetail STACK_RESOURCE:
                              #  - Description STR
                              #  - LastUpdatedTimestamp DATE
                              #  - LogicalId RESOURCE_VAR
                              #  - PhysicalResourceId STR: Resource Id
                              #  - Metadata JSON_STR
                              #  - ResourceStatus "CREATE|DELETE|UPDATE_IN_PROGRESS|FAILED|COMPLETE"
                              #  - ResourceStatusReason STR
                              #  - ResourceType STR
                              #  - StackId|Name STR
DescribeStackResources()      #Request parameters:
                              #  - StackName STR
                              #  - LogicalResourceId RESOURCE_VAR
                              #  - PhysicalResourceId STR
                              #Response body: StackResources OBJ_ARR:
                              #  - Same as STACK_RESOURCE but no Metadata and LastUpdatedTimestamp -> Timestamp
ListStackResources()          #Request parameters: StackName STR
                              #Response body: StackResourceSummaries OBJ_ARR:
                              #  - Same as STACK_RESOURCE but no Description, Metadata, StackId|Name
                              #Paginates
DescribeStackEvents()         #Request parameters: StackName STR
                              #Response body: StackEvents OBJ_ARR:
                              #  - Same as STACK_RESOURCE but:
                              #     - no Description, Metadata
                              #     - LastUpdatedTimestamp -> Timestamp
                              #  - ResourceProperties STR
                              #Paginates

ValidateTemplate()            #Only validates the syntax, not if resources make sense.
                              #Request parameters: TemplateBody|URL STR
                              #Response body:
                              #  - Errors OBJ_ARR: Message STR, Code STR, Type STR
                              #  - Capabilities STR_ARR
                              #  - CapabilitiesReason STR
                              #  - Description STR
                              #  - Parameters PARAM_ARR:
                              #     - DefaultValue STR
                              #     - Description STR
                              #     - NoEcho BOOL
                              #     - ParameterKey STR
GetTemplate()                 #Request parameters: StackName STR
                              #Response body: TemplateBody STR
EstimateTemplateCost()        #Returns URL to the AWS price calculator
                              #Request parameters:
                              #  - Parameters PARAM_ARR
                              #  - TemplateBody|URL STR
                              #Response body: Url STR

SetStackPolicy()              #Request parameters:
                              #  - StackName STR
                              #  - StackPolicyBody|URL STR
GetStackPolicy()              #Request parameters: StackName STR
                              #Response body: StackPolicyBody STR
