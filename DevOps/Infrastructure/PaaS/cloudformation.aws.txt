
                  
   CLOUDFORMATION  
                  



TO DOCUMENT:
  - AWS SAM
  - Pulumi:
     - https://www.pulumi.com/registry/packages/aws-native/api-docs/extensionresource/
     - https://www.pulumi.com/registry/packages/aws-native/api-docs/importvalue/

VERSION ==>                       #2014-07-10


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:              API              :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


PAGINATION ==>                    #Req|res: NextToken STR


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:             STACK             :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


CreateStack()                     #Req: STACK
                                  #  - no StackId, *Time, Description, Outputs, StackStatus*
                                  #  - no UsePreviousTemplate
                                  #Res: STACK
                                  #  - only StackId
UpdateStack()                     #Req: STACK
                                  #  - no StackId, *Time, Description, Outputs, StackStatus*
                                  #  - no DisableRollback, OnFailure, Tags, TimeoutInMinutes
                                  #Res: STACK
                                  #  - only StackId
ListStacks()                      #Req: STACK
                                  #  - only StackStatus -> StackStatusFilter STR_ARR
                                  #Res: StackSummaries STACK_ARR
                                  #  - only StackId, StackName, *Time, StackStatus*, Description -> TemplateDescription
DescribeStacks()                  #Req: STACK
                                  #  - only StackName
                                  #Res: Stacks STACK_ARR
                                  #  - no Template*, UsePreviousTemplate, OnFailure, StackPolicy*
CancelUpdateStack()               #Req: STACK
                                  #  - only StackName
                                  #Res: empty
DeleteStack()                     #Req: STACK
                                  #  - only StackName
                                  #Res: empty

STACK                             #Provisioning of a TEMPLATE
                                  #Max 20
STACK_ARN                         #arn:aws:cloudformation:REGION:ACCOUNT_ID:stack/STACK/STACK_MID

STACK.StackId                     #STACK_MID
STACK.StackName                   #'STACK'
STACK.CreationTime                #DATE
STACK.LastUpdatedTime             #DATE
STACK.DeletionTime                #DATE
STACK.Description                 #STR

STACK.StackStatus                 #One of:
                                  #  - 'CREATE'
                                  #  - 'UPDATE_IN_PROGRESS'
                                  #  - '[UPDATE_]ROLLBACK'
                                  #  - 'UPDATE_[ROLLBACK_]COMPLETE_CLEANUP_IN_PROGRESS'
                                  #  - 'COMPLETE', 'DELETE', 'FAILED'
STACK.StackStatusReason           #STR

STACK.Capabilities                #['CAPABILITY_IAM']. Required when using AWS::IAM|CloudFormation::*

STACK.Tags                        #TAG_PAIRS

AWS::CloudFormation::Stack        #RESTYPE of a STACK
                                  #Allows creating child STACKs, created|updated along the parent


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:           TEMPLATE            :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


GetTemplate()                     #Req: STACK_TEMPLATE
                                  #  - only StackName
                                  #Res: STACK_TEMPLATE
                                  #  - only TemplateBody
ValidateTemplate()                #Req: STACK_TEMPLATE
                                  #  - only TemplateBody, TemplateURL
                                  #Res: STACK_TEMPLATE
                                  #  - no StackName, TemplateBody, TemplateURL
EstimateTemplateCost()            #Req: STACK_TEMPLATE
                                  #  - only TemplateBody, TemplateUrl, Parameters
                                  #Res: STACK_TEMPLATE
                                  #  - only one with Url

STACK_TEMPLATE.StackName          #'STACK'

STACK[_TEMPLATE].TemplateBody     #'TEMPLATE' JSON as STR
                                  #Max 51KB
STACK[_TEMPLATE].TemplateURL      #Same but as URL
                                  #Max 460KB
STACK.UsePreviousTemplate         #BOOL. Re-use current TEMPLATE

[STACK_]TEMPLATE                  #Set of AWS RESOURCEs
TEMPLATE.AWSTemplateFormatVersion #Currently '2010-09-09'
[STACK_]TEMPLATE.Description      #STR

STACK_TEMPLATE.Capabilities       #STR_ARR
STACK_TEMPLATE.CapabilitiesReason #STR

STACK_TEMPLATE.Errors             #TEMPLATE_ERROR_ARR
                                  #Only syntax errors, not semantic
TEMPLATE_ERROR.Type               #STR
TEMPLATE_ERROR.Code               #STR
TEMPLATE_ERROR.Message            #STR

STACK_TEMPLATE.Url                #URL to AWS price calculator


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:           RESOURCE            :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


ListStackResources()              #Req: STACK_RESOURCE
                                  #  - only StackName
                                  #Res: StackResourceSummaries STACK_RESOURCE_ARR
                                  #  - no StackId, StackName, Description, Metadata, ResourceProperties
DescribeStackResources()          #Req: STACK_RESOURCE
                                  #  - only *ResourceId, StackName
                                  #Res: StackResources STACK_RESOURCE_ARR
                                  #  - no Metadata, ResourceProperties
                                  #  - LastUpdatedTimestamp -> Timestamp
DescribeStackResource()           #Req: STACK_RESOURCE
                                  #  - only LogicalResourceId, StackName
                                  #Res: StackResourceDetail STACK_RESOURCE
                                  #  - no ResourceProperties
DescribeStackEvents()             #Req: STACK_RESOURCE
                                  #  - only StackName
                                  #Res: StackEvents STACK_RESOURCE_ARR
                                  #  - no Description, Metadata
                                  #  - LastUpdatedTimestamp -> Timestamp

TEMPLATE.Resources.RESOURCE       #RESOURCE. AWS resource
                                  #Max 200 per TEMPLATE

STACK_RESOURCE.LogicalResourceId  #'RESOURCE'
STACK_RESOURCE.PhysicalResourceId #MID of underlying AWS resource
RESOURCE.Type
STACK_RESOURCE.ResourceType       #'RESTYPE'
STACK_RESOURCE.StackId            #STACK_MID
STACK_RESOURCE.StackName          #'STACK'
STACK_RESOURCE
 .LastUpdatedTimestamp            #DATE
STACK_RESOURCE.Description        #STR

STACK_RESOURCE.ResourceStatus     #One of:
                                  #  - 'CREATE'
                                  #  - 'UPDATE_IN_PROGRESS'
                                  #  - 'COMPLETE', 'FAILED', 'DELETE'
STACK_RESOURCE
 .ResourceStatusReason            #STR

RESOURCE.Properties.RESPROP
STACK_RESOURCE.ResourceProperties #VAL
 .RESPROP                         #Usually same|similar as request payload of create|update ACTIONs of the RESTYPE

RESOURCE.DependsOn                #'RESOURCE2'
                                  #Create RESOURCE2 before RESOURCE
                                  #When deleting RESOURCE2, delete RESOURCE first


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:        CUSTOM RESOURCE        :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


Custom::CUSTOM
AWS::CloudFormation
 ::CustomResource                 #CUSTOM_RESOURCE
CUSTOM_RESOURCE.*                 #Anything

CUSTOM_RESOURCE.ServiceToken      #SNS_TOPIC_ARN
                                  #Called on RESOURCE create|update|delete, with REQ_PAYLOAD
REQ_PAYLOAD.RequestType           #'Create|Update|Delete'
REQ_PAYLOAD.ResourceProperties    #CUSTOM_RESOURCE.*
REQ_PAYLOAD.OldResourceProperties #Previous CUSTOM_RESOURCE.*, if update
REQ_PAYLOAD.ResourceType          #'Custom:CUSTOM'
REQ|RES_PAYLOAD.LogicalResourceId #'RESOURCE'
REQ|RES_PAYLOAD.PhysicalResourceId#RESOURCE_MID, if update
REQ|RES_PAYLOAD.StackId           #STACK_MID
REQ|RES_PAYLOAD.RequestId         #REQ_ID

REQ_PAYLOAD.ResponseURL           #URL. Should send RES_PAYLOAD to it
RES_PAYLOAD.Status                #'SUCCESS|FAILED'
RES_PAYLOAD.Data                  #OBJ. Sets CUSTOM_RESOURCE.Data OBJ, e.g. with { Fn::GetAtt }
                                  #Max 4KB


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:            UPDATE             :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


UPDATES ==>                       #No update if no RESOURCE.RESPROP has changed
                                  #Depending on RESOURCE.RESPROP, is done:
                                  #  - NoInterruption: with an Update*()
                                  #  - MinorInterruption: with an Update*() with side-effects, e.g. EC2 instance restarting
                                  #  - Replacement: with a Delete*() then Create*()
                                  #  - ReadOnly: cannot be updated, i.e. must recreate the STACK

RESOURCE.UpdatePolicy             #UPDATE_POLICY
                                  #Only for specific RESTYPEs like AutoScaling::AutoScalingGroup or Lambda::Alias
UPDATE_POLICY
 .AutoScalingRollingUpdate        #ROLLING_POLICY
                                  #When replacing RESOURCE, do it in batches
ROLLING_POLICY.MaxBatchSize       #NUM (def: 1)
ROLLING_POLICY
 .MinInstancesInService           #NUM (def: 0)
ROLLING_POLICY.PauseTime          #'PT[..H][..M][..S]' (def: 'PT0S'). Each .. is a NUM
UPDATE_POLICY                     #BOOL. If false (def), update RESOURCE batch sizes (e.g. AutoScalingGroup.MinSize|MaxSize|DesiredCapacity)
 .AutoScalingScheduledAction      #even when value has not changed.
 .IgnoreUnmodifiedGroupSize       #Reason: some RESOURCE changes those dynamically (e.g. AutoScalingGroup scheduled policy),
  Properties                      #which might be ongoing


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:           ROLLBACK            :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


STACK.TimeoutInMinutes            #After NUM mins (def: none), CancelUpdateStack()

STACK.DisableRollback             #BOOL. If false (def), rollback Create|UpdateStack() on error|cancel

STACK.OnFailure                   #Rollback behavior:
                                  #  - 'DO_NOTHING'
                                  #  - 'ROLLBACK' (def): rollback whole create|update
                                  #  - 'DELETE': only rollback errored RESOURCE


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:            DELETE             :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


RESOURCE.DeletionPolicy           #When STACK is deleted, what to do with RESOURCE, among:
                                  #  - 'Delete' (def)
                                  #  - 'Retain'
                                  #  - 'Snapshot':
                                  #     - delete but create a snapshot
                                  #     - only for specific RESTYPEs like EC2::Volume, RDS::DBInstance, Redshift::Cluster


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:          PARAMETERS           :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


STACK.Parameters                  #STACK_PARAM_ARR
                                  #Variable passed by STACK to TEMPLATE
STACK_PARAM|TEMPLATE_PARAM
 .ParameterKey                    #'PARAM'
STACK_PARAM.ParameterValue        #'VAL'
                                  #Max 4KB
STACK_PARAM.UsePreviousValue      #BOOL

STACK_TEMPLATE.Parameters         #TEMPLATE_PARAM_ARR

TEMPLATE.Parameters.PARAM         #PARAM. STACK.Parameters definition
                                  #Max 60 per TEMPLATE
PARAM.Type                        #'String|Number|CommaDelimitedList'
PARAM.Min|MaxLength               #'NUM'. Only with Type 'String'
PARAM.Min|MaxValue                #'NUM'. Only with Type 'Number'
PARAM.AllowedPattern              #'GLOB'
PARAM.AllowedValues               #STR_ARR
TEMPLATE_PARAM.DefaultValue
PARAM.Default                     #STR
[TEMPLATE_]PARAM.Description      #STR
PARAM.ConstraintDescription       #STR
[TEMPLATE_]PARAM.NoEcho           #BOOL (def: false). Show '****' when read

{ Ref: 'PARAM' }                  #Replaced with PARAM value

BUILT-IN PARAMS ==>               #
AWS::StackId                      #STACK_MID
AWS::StackName                    #'STACK'
AWS::AccountId                    #ACCOUNT_ID
AWS::Region                       #'REGION'
AWS::NoValue                      #undefined. Used with Fn::If


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:            OUTPUTS            :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


TEMPLATE.Outputs.OUTPUT           #OUTPUT. Meant to be retrieved as STACK.Outputs
                                  #Usually { Ref: ... } to show IDs of resources created of parameters passed
                                  #Max 60 per TEMPLATE
OUTPUT.Value                      #VAL
OUTPUT.Description                #STR

STACK.Outputs                     #STACK_OUTPUT_ARR
STACK_OUTPUT.OutputKey            #'OUTPUT'
STACK_OUTPUT.OutputValue          #VAL
STACK_OUTPUT.Description          #STR


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:           FUNCTIONS           :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


{ RFUNC: ARGS }                   #Can be used instead of any VAL

{ Ref: 'RESOURCE_MID' }           #
{ Ref: 'RESOURCE_NAME' }          #
{ Ref: 'RESOURCE_ARN' }           #
{ Ref: 'RESOURCE_URL' }           #
{ Fn::GetAtt:
 ['RESOURCE', 'RESPROP'] }        #RESOURCE.RESPROP value
{ Fn::GetAZs: 'REGION' }          #ZONE_ARR
                                  #If REGION "" (def), uses current one

TEMPLATE.Mappings.FILTER.VAR      #FILTER_OBJ
                                  #Max 100 FILTER per TEMPLATE
                                  #Max 30 VAR per FILTER
{ Fn::FindInMap:                  #Replace with FILTER.VAR.FILTER_OBJ.PROP
 ['FILTER', 'VAR', 'PROP'] }      #Used to introduce switch-like logic

TEMPLATE.Conditions.COND          #BOOL
{ Condition: 'COND' }             #Replaced by BOOL
{ Condition: 'COND', ... }        #Only output ... if COND true

{ Fn::If: [BOOL, VAL, VAL2] }     #VAL if true, VAL2 if false

{ Fn::Equals: [VAL, VAL2] }       #BOOL
{ Fn::Not: [BOOL] }               #!BOOL
{ Fn::And|Or: [BOOL,...] }        #BOOL2

{ Fn::Join: [STR, STR2_ARR] }     #STR2_ARR.join(STR)

{ Fn::Select: [NUM, ARR] }        #ARR[NUM] (0-index)

{ Fn::Base64: STR }               #STR2


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:           METADATA            :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


RESOURCE.Metadata                 #OBJ. Any custom property
STACK_RESOURCE.Metadata           #'OBJ_JSON'

cfn-get-metadata --key VAR        #Prints RESOURCE.Metadata.VAR
                                  #Takes same options as cfn-init

cfn-hup -c DIR                    #Daemon that executes commands when RESOURCE.* changes (including Metadata)
                                  #Uses DIR/cfn-hup.conf, init file with [main]:
                                  #  - interval NUM (def: 10): how many minutes to check
                                  #  - stack STACK_ID
                                  #  - credential-file STR
                                  #  - region REGION
                                  #  - verbose BOOL
                                  #Run all DIR/NAME.conf, init file with [NAME]:
                                  #  - path STR: to monitor, either:
                                  #     - "Resources.RESOURCE": anything in 'RESOURCE'
                                  #     - "Resources.RESOURCE.PhysicalResourceId": resource Id
                                  #     - "Resources.RESOURCE.Metadata[(PATH)]": Metadata
                                  #  - action STR: shell command
                                  #  - triggers "post.add|update|remove"
                                  #  - runas SHELL_USER


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:            POLICY             :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


SetStackPolicy()                  #Req: STACK
                                  #  - only StackName, StackPolicy*
                                  #Res: empty
GetStackPolicy()                  #Req: STACK
                                  #  - only StackName
                                  #Res: STACK
                                  #  - only StackPolicyBody

STACK.StackPolicyBody             #'POLICY_DOC', as STR
STACK.StackPolicyDuringUpdateBody #Same but only during update (not create)
STACK.StackPolicy[DuringUpdate]URL#Like *Body, but using a 'URL'

STACK POLICY ==>                  #Resource-based POLICY with resource-level permissions
                                  #Def: allow all if not specified, deny all if specified
                                  #PACTION can only be:
                                  #  - 'Update:Modify': updating a RESOURCE with MinorInterruption
                                  #  - 'Update:Replace': updating a RESOURCE with Replacement
                                  #  - 'Update:Delete': deleting a RESOURCE
                                  #  - 'Update:*'
                                  #RESOURCE is 'LogicalResourceId/MID'
COND_KEY ResourceType             #'RESTYPE'


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:             WAIT              :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


AWS::CloudFormation::WaitCondition#RESOURCE representing an async pause
                                  #Usually uses DependsOn to specify both previous|next RESOURCE
WAITCONDITION.Handle              #{ Ref } pointing to a RESOURCE of RESTYPE AWS::CloudFormation::WaitConditionHandle, with no RESPROPs
                                  #Becomes 'HANDLE_URL', which must be called to stop the pause
                                  #  - PUT
                                  #  - no Content-Type [C]
                                  #  - request body is JSON of HANDLE_REQ
WAITCONDITION.Count               #NUM (def: 1) of times to call HANDLE_URL
WAITCONDITION.Timeout             #NUM

HANDLE_REQ.Status                 #'SUCCESS|FAILURE'
HANDLE_REQ.Reason                 #'ERROR' when failure
HANDLE_REQ.UniqueId               #STR. Do not increment WAITCONDITION.Count when using same UniqueId twice
HANDLE_REQ.Data                   #STR. Sets WAITCONDITION.Data STR, e.g. with { Fn::GetAtt }
                                  #Max 4KB

cfn-signal HANDLE_URL             #Calls HANDLE_URL
-s                                #BOOL (def: true). HANDLE_REQ.Status
-e                                #Same but as NUM, using exit code
-r                                #HANDLE_REQ.Reason
-i                                #HANDLE_REQ.UniqueId
-d                                #HANDLE_REQ.Data


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:         NOTIFICATION          :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


STACK.NotificationARNs            #'ARN'_ARR

AWS::NotificationARNs             #'ARN'_ARR
                                  #Built-in PARAM


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:        INSTANCE SETUP         :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


/opt/aws/bin/cfn-*                #cfn-* location in EC2 instances

cfn-init                          #Initialize current machine based on EC2 metadata
                                  #Wrapper around cloud-init
-s                                #STACK
-r                                #RESOURCE
--region                          #REGION
--credential-file                 #FILE
-v                                #

RESOURCE.Metadata
 ["AWS::CloudFormation::Init"]
 .config                          #CFN_CONF

CFN_CONF.packages                 #CFN_PACKAGES
CFN_PACKAGES.PACKAGE_MANAGER      #'PATH|VERSION'. Install packages
                                  #PACKAGE_MANAGER can be yum|rpm|rubygems|apt

CFN_CONF.sources.DIR              #'URL'. Uncompress URL to DIR. For .tar[.gz|bz2] or .zip

CFN_CONF.files.FILE_PATH          #CFN_FILE. Create a file
CFN_FILE.content                  #STR
CFN_FILE.source                   #URL. Alternative to CFN_FILE.content
CFN_FILE.encoding                 #'plain' (def) or 'base64'
CFN_FILE.mode                     #STR. Unix file permission
CFN_FILE.owner                    #STR
CFN_FILE.group                    #STR
CFN_FILE.context                  #OBJ. Used as Mustache template
                                  #Must have aws-cfn-bootstrap and pystache installed

CFN_FILE.authentication           #'CFN_AUTH'. Authentication when retriving CFN_FILE.source
RESOURCE.Metadata["AWS::
 CloudFormation::Authentication"]
 .CFN_AUTH                        #CFN_AUTH
CFN_AUTH.type                     #Either 'basic' or 's3'
(if basic)
CFN_AUTH.username                 #STR
CFN_AUTH.password                 #STR
CFN_AUTH.uris                     #URL_ARR
(if s3)
CFN_AUTH.buckets                  #'BUCKET'_ARR
--access-key
CFN_AUTH.accessKeyId              #ACCESS_KEY_ID
--secret-key
CFN_AUTH.secretKey                #SECRET_KEY_ID
--role
CFN_AUTH.roleName                 #'ROLE'

CFN_CONF.users.USER               #CFN_USER. OS user to create
CFN_USER.uid                      #STR
CFN_USER.groups                   #'GROUP'_ARR
CFN_USER.homeDir                  #PATH

CFN_CONF.groups.GROUP             #CFN_GROUP. OS group to create
CFN_GROUP.gid                     #STR

CFN_CONF.commands.ANY             #CFN_COMMAND. OS command to run, in alphabetical order
CFN_CONF.container_commands.ANY   #CFN_COMMAND. Run before CFN_CONF.commands
                                  #Have access to AWS credentials ENVVARs
CFN_COMMAND.command               #'SHELL_COMMAND' or ['COMMAND', 'ARG',...]
CFN_COMMAND.test                  #'SHELL_COMMAND'. Do not run command if test exit code non-0
CFN_COMMAND.cwd                   #PATH
CFN_COMMAND.env.ENVVAR            #VAL
CFN_COMMAND.ignoreErrors          #BOOL. If false (def), abort on first failed command
CFN_COMMAND.leader_only           #BOOL (def: false). Execute only on one instance in an AutoScalingGroup
                                  #Only with CFN_CONF.container_commands

CFN_CONF.services.sysvinit.SERVICE#CFN_SERVICE. SysvInit daemon to define
CFN_SERVICE.enabled               #BOOL (def: false). Start at boot
CFN_SERVICE.ensureRunning         #BOOL (def: false). Wait for SERVICE to run before declaring machine as done starting
CFN_SERVICE.files                 #'PATH'[_ARR]. Restart SERVICE on change
CFN_SERVICE.sources               #Same with 'DIR'[_ARR]
CFN_SERVICE.packages              #CFN_PACKAGES. Restart SERVICE on install|update of those packages
CFN_SERVICE.commands              #'COMMAND'. Restart SERVICE when 'COMMAND' executed
