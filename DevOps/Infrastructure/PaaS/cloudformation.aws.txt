
                  
   CLOUDFORMATION  
                  



TO DOCUMENT:
  - AWS SAM
  - Pulumi:
     - https://www.pulumi.com/registry/packages/aws-native/api-docs/extensionresource/
     - https://www.pulumi.com/registry/packages/aws-native/api-docs/importvalue/

CLOUD FORMATION ==>               #Version from 2014-07-10

GOAL ==>                          #Controlling sets of AWS resources as one (create|update|delete)

CONCEPTS ==>                      #Template: JSON file with AWS resources and their configuration
                                  #Stack:
                                  #  - instantiation of a template
                                  #  - when updating, compare with previous template, and only changes what changed


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:           TEMPLATE            :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


TEMPLATE.AWSTemplateFormatVersion #Currently '2010-09-09'
TEMPLATE.Description              #STR

TEMPLATE.Resources.RESOURCE       #RESOURCE
RESOURCE.Type                     #RESTYPE
RESOURCE.Properties.RESPROP       #VAL
                                  #Usually same|similar as request payload of create|update ACTIONs of the RESTYPE

RESOURCE.DependsOn                #'RESOURCE'


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:            UPDATE             :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


RESOURCE.UpdatePolicy             #UPDATE_POLICY
UPDATE_POLICY
 .AutoScalingScheduledAction
 .IgnoreUnmodifiedGroupSize
  Properties                      #BOOL (def: false)
UPDATE_POLICY
 .AutoScalingRollingUpdate        #ROLLING_POLICY
ROLLING_POLICY.MaxBatchSize       #NUM (def: 1)
ROLLING_POLICY
 .MinInstancesInService           #NUM (def: 0)
ROLLING_POLICY.PauseTime          #'PT[..H][..M][..S]' (def: 'PT0S'). Each .. is a NUM


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:            DELETE             :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


RESOURCE.DeletionPolicy           #One of:
                                  #  - 'Delete'
                                  #  - 'Retain'
                                  #  - 'Snapshot'


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:            OUTPUTS            :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


TEMPLATE.Outputs.OUTPUT           #OUTPUT. Meant to be retrieved by DescribeStacks()
                                  #Usually { Ref: ... } to show IDs of resources created of parameters passed
OUTPUT.Value                      #VAL
OUTPUT.Description                #STR


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:           FUNCTIONS           :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


{ RFUNC: ARGS }                   #Can be used instead of any VAL

{ Ref: 'RESOURCE_MID' }           #
{ Ref: 'RESOURCE_NAME' }          #
{ Ref: 'RESOURCE_ARN' }           #
{ Ref: 'RESOURCE_URL' }           #
{ Fn::GetAtt:
 ['RESOURCE', 'RESPROP'] }        #RESOURCE.RESPROP value
{ Fn::GetAZs: 'REGION' }          #ZONE_ARR
                                  #If REGION "" (def), uses current one

TEMPLATE.Mappings.FILTER.VAL      #FILTER_OBJ
{ Fn::FindInMap:                  #Replace with FILTER.VAL.FILTER_OBJ.PROP
 ['FILTER', VAL, 'PROP'] }        #Used to introduce switch-like logic

TEMPLATE.Conditions.COND          #BOOL
{ Condition: 'COND' }             #Replaced by BOOL
{ Condition: 'COND', ... }        #Only output ... if COND true

{ Fn::If: [BOOL, VAL, VAL2] }     #VAL if true, VAL2 if false

{ Fn::Equals: [VAL, VAL2] }       #BOOL
{ Fn::Not: [BOOL] }               #!BOOL
{ Fn::And|Or: [BOOL,...] }        #BOOL2

{ Fn::Join: [STR, STR2_ARR] }     #STR2_ARR.join(STR)

{ Fn::Select: [NUM, ARR] }        #ARR[NUM] (0-index)

{ Fn::Base64: STR }               #STR2


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:          PARAMETERS           :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


TEMPLATE.Parameters.PARAM         #PARAM. Variable specified by Create|UpdateStack()
PARAM.Type                        #'String|Number|CommaDelimitedList'
PARAM.Min|MaxLength               #'NUM'. Only with Type 'String'
PARAM.Min|MaxValue                #'NUM'. Only with Type 'Number'
PARAM.AllowedPattern              #'GLOB'
PARAM.AllowedValues               #STR_ARR
PARAM.Default                     #STR
PARAM.Description                 #STR
PARAM.ConstraintDescription       #STR
PARAM.NoEcho                      #BOOL (def: false). Show '****' when read

{ Ref: 'PARAM' }                  #Replaced with PARAM value

BUILT-IN PARAMS ==>               #
AWS::StackId                      #STACK_MID
AWS::StackName                    #'STACK'
AWS::AccountId                    #ACCOUNT_ID
AWS::Region                       #'REGION'
AWS::NotificationARNs             #'ARN'_ARR
AWS::NoValue                      #undefined. Used with Fn::If


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:           METADATA            :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


RESOURCE.Metadata                 #OBJ
                                  #Fetched by cfn-get-metadata

METADATA ==>                      #  - can be anything
                                  #  - OBJ.VAR can be fetched with /opt/aws/bin/cfn-get-metadata --key VAR, which
                                  #    takes same options as cfn-init
                                  #  - /opt/aws/bin/cfn-hup -c DIR:
                                  #     - daemon that fires actions when Metadata is changed, or anything on 'RESOURCE'
                                  #     - uses DIR/cfn-hup.conf, init file with [main]:
                                  #        - interval NUM (def: 10): how many minutes to check
                                  #        - stack STACK_ID
                                  #        - credential-file STR
                                  #        - region REGION
                                  #        - verbose BOOL
                                  #     - run all DIR/NAME.conf, init file with [NAME]:
                                  #        - path STR: to monitor, either:
                                  #           - "Resources.RESOURCE": anything in 'RESOURCE'
                                  #           - "Resources.RESOURCE.PhysicalResourceId": resource Id
                                  #           - "Resources.RESOURCE.Metadata[(PATH)]": Metadata
                                  #        - action STR: shell command
                                  #        - triggers "post.add|update|remove"
                                  #        - runas SHELL_USER


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:           LIFECYCLE           :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


STACK LIFECYCLE ==>               #Creating:
                                  #  - Can specify order with DependsOn 'RESOURCE'
                                  #  - If specifying Internet|VpnGateway, should make AutoScalingGroup, EC2 instance,
                                  #    LoadBalancer, ElasticIP, RouteTable depend on it
                                  #Updating:
                                  #  - only affects resources that changed, either (depending on the resource and propertie
                                  #    changed):
                                  #     - NoInterruption
                                  #     - MinorInterruption: e.g. EC2 instance restarting
                                  #     - Replacement: e.g. EC2 instance terminated then replaced
                                  #     - Read-only: cannot be updated (must recreate the Stack)
                                  #  - EC2 instance recreation is controlled by UpdatePolicy
                                  #    (assigned to AWS::AutoScaling::AutoScalingGroup):
                                  #     - AutoScalingRollingUpdate: terminates EC2 instances in batches, by modifying
                                  #       AutoScalingGroup MinSize, MaxSize and DesiredCapactity
                                  #     - IgnoreUnmodifiedGroupSizeProperties:
                                  #        - how to handle AutoScalingGroup scheduledPolicy that happen while a Stack update is
                                  #          ongoing
                                  #        - should suspend scheduledPolicy before, then reenable
                                  #  - rollback:
                                  #     - on Create|UpdateStack() if either:
                                  #        - error
                                  #        - CancelUpdateStack()
                                  #        - above TimeoutInMinutes (def: none)
                                  #     - unless DisableRollback true
                                  #     - according to OnFailure: if "DELETE", deletes the resource but do not rollback all
                                  #       resources
                                  #  - StackPolicy:
                                  #     - IAM-like policies whose goal is to prevent resources from being updated by mistake
                                  #     - OBJ: Statement: OBJ_ARR:
                                  #        - Effect "Deny|Allow": by def. Allow all. If there is a StackPolicy, def. becomes
                                  #          Deny all.
                                  #        - Action "Update:Modify|Replace|Delete|*": Modify is MinorInterruption, Replace is
                                  #          Replacement
                                  #        - Principal: like IAM
                                  #        - [Not]Resource: STR_ARR, where STR is "LogicalId/ID"
                                  #        - Condition:
                                  #           - StringEquals|StringLike (if globbing):
                                  #              - ResourceType: 'RESTYPE'_ARR
                                  #     - Can include globbing like IAM
                                  #Erasing:
                                  #  - Resources are deleted according to DeletionPolicy:
                                  #     - "Delete" (def)
                                  #     - "Retain"
                                  #     - "Snapshot" (but still deletes), for EC2::Volume, RDS::DBInstance, Redshift::Cluster

UPDATES ==>                       #MinorInterruption:
                                  #  - AutoScalingGroup: VPCZoneIdentifier
                                  #  - Elasticache: CacheCluster: CacheParameterGroupName, EngineVersion
                                  #  - ElasticBeanstalk:
                                  #     - ApplicationVersion: Description
                                  #     - Environment: OptionSettings, TemplateName, VersionLabel
                                  #  - Redshift: Cluster: ClusterParameterGroupName
                                  #  - RDS: DBInstance: AutoMinorVersionUpgrade|BackupRetentionPeriod|DBParameterGroupName|
                                  #    PreferredMaintenanceWindow (sometimes), EngineVersion
                                  #Replacement:
                                  #  - AutoScaling:
                                  #     - LaunchConfiguration: all
                                  #     - ScheduledPolicy: AutoScalingGroupName
                                  #  - CloudWatch: Alarm: AlarmName
                                  #  - DynamoDB: Table: all but ProvisionedThroughput
                                  #  - EC2:
                                  #     - CustomerGateway: all but Tags
                                  #     - DHCPOptions: all but Tags
                                  #     - EIP: Domain
                                  #     - EIPAssociation: InstanceId|NetworkInterfaceId + AllocationId|EIP (together)
                                  #     - Instance: all but:
                                  #        - BlockDeviceMappings (if only DeleteOnTerminatin changed), DisableApiTermination
                                  #          InstanceInitiatedShutdownBehavior, Monitoring, SourceDestCheck, Tags, Volumes
                                  #        - if EBS-backed: EbsOptimized|Instancetype|KernelId|RamdiskId|UserData
                                  #          (only MinorInterruption), SecurityGroupIds
                                  #      - NetworkAcl: VpcId
                                  #      - NetworkAclEntry: Egress, NetworkAclId, RuleNumber
                                  #      - NetworkInterface: PrivateIpAddress, PrivateIpAddresses (if primary), SubnetId
                                  #      - Route: DestinationCidrBlock, RouteTableId
                                  #      - RouteTable: VpcId
                                  #      - SecurityGroup: GroupDescription, VpcId
                                  #      - SecurityGroupEgress|Ingress: all
                                  #      - Subnet: all but Tags
                                  #      - SubnetNetworkAclAssociation: all
                                  #      - SubnetRouteTableAssociation: SubnetId
                                  #      - VPC: CidrBlock, InstanceTenancy
                                  #      - VPCDHCPOptionsAssociation: VpcId
                                  #      - VPCPeeringConnection: all but Tags
                                  #      - VPNConnection: all but Tags
                                  #      - VPNConnectionRoute: all but Tags
                                  #      - VPNGateway: all but Tags
                                  #   - Elasticache: CacheCluster: CacheNodeType, CacheSubnetGroupName, ClusterName, Engine,
                                  #     Port, PreferredAvailabilityZone, SnapshotArns
                                  #   - ElasticBeanstalk:
                                  #      - Application: ApplicationName
                                  #      - ApplicationVersion: ApplicationName
                                  #      - ConfigurationTemplate: all but Description, OptionSettings (MinorInterruption)
                                  #      - Environment: ApplicationName, CNAMEPrefix, EnvironmentName, SolutionStackName, Tier
                                  #   - ElasticLoadBalancing: LoadBalancer: HealthCheck|Subnets (if add|remove, not modify),
                                  #     LoadBalancerName
                                  #   - IAM:
                                  #      - AccessKey: Serial, UserName
                                  #      - InstanceProfile: Path
                                  #      - Role: Path
                                  #   - Kinesis: Stream: ShardCount
                                  #   - Logs: MetricFilter: LogGroupName
                                  #   - OpsWork:
                                  #      - App: Shortname, StackId
                                  #      - Instance: all but AmiId, Architecture, InstallUpdatesOnBoot, InstanceType, LayerIds,
                                  #        Os, SshKeyName (MinorInterruption)
                                  #      - Layer: StackId, Type
                                  #      - Stack: VpcId
                                  #   - Redshift:
                                  #      - Cluster: AvailabilityZone, ClusterSubnetGroupName, DBName, ElasticIp, Encrypted,
                                  #        MasterUsername, OwnerAccount, Port, PubliclyAccessible, SnapshotClusterIdentifier,
                                  #        SnapshotIdentifier
                                  #      - ClusterParameterGroup: Description, ParameterGroupFamily
                                  #      - ClusterSecurityGroup[Ingress]: all
                                  #   - RDS:
                                  #      - DBInstance: AvailabilityZone, DBInstanceIdentifier, DBName, DBSnapshotIdentifier,
                                  #        DBSubnetGroupName, Engine, LicenseModel, MasterUsername, Port,
                                  #        SourceDBInstanceIdentifier
                                  #      - DBSecurityGroup: EC2VpcId, GroupDescription
                                  #   - Route53:
                                  #      - RecordSet: HostedZoneId|Name
                                  #      - RecordSetGroup: HostedZoneId|Name
                                  #   - S3: Bucket: BucketName
                                  #   - SQS: Queue: QueueName
                                  #Readonly
                                  #   - CloudFormation WaitCondition[Handle]
                                  #   - EC2 Volume[Attachment]
                                  #   - Elasticache ParameterGroup, SecurityGroup[Ingress]
                                  #   - S3 Policy: Bucket
                                  #   - SDB (SimpleDB) Domain
                                  #   - SNS all

CHILD STACKS ==>                  #  - Specifying a 'RESOURCE' of type "AWS::CloudFormation::Stack", with Properties
                                  #    NotificationARNs, Parameters, TemplateURL, TimeoutInMinutes
                                  #  - Will be created|updated along the parent


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:             ASYNC             :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


WAITCONDITIONS ==>                #  - used to introduce async pauses in the construction|updates, e.g. manual intervention on EC2
                                  #    instance before continuing building
                                  #  - 'RESOURCE' of Type "AWS::CloudFormation::WaitCondition"
                                  #     - Properties:
                                  #        - Handle: { "Ref": RESOURCE2_VAR }
                                  #           - where RESOURCE2_VAR is of Type "AWS::CloudFormation::WaitConditionHandle", with
                                  #             empty Properties {}
                                  #           - { ... } will resolve to HANDLE_URL
                                  #        - Timeout NUM
                                  #        - Count NUM2 (def: 1)
                                  #     - usually DependsOn another RESOURCE3_VAR, and other RESOURCE4_VAR depend on it
                                  #     - 'RESOURCE' will be marked as Complete only once HANDLE_URL has been called NUM2 times
                                  #        - can e.g. pass HANDLE_URL to EC2 instance UserData
                                  #        - must do HTTP PUT - HANDLE_URL:
                                  #           - no Content-Type [C]
                                  #           - content is JSON:
                                  #              - Status "SUCCESS|FAILURE"
                                  #              - Reason STR
                                  #              - UniqueId ID: unique accross different invocations if NUM2 > 1
                                  #              - Data STR: can be accessed as { ID: STR } with
                                  #                { Fn::GetAtt: [ 'RESOURCE', "Data" ] } (max 4KB)
                                  #        - can use /opt/aws/bin/cfn-signal HANDLE_URL to do it, with options:
                                  #           -s BOOL: "SUCCESS|FAILURE" (def: "SUCCESS")
                                  #           -e NUM:  "SUCCESS|FAILURE" according to exit code NUM
                                  #                    Usually after cfn-init
                                  #           -r STR:  "Reason"
                                  #           -i ID:   "UniqueId"
                                  #           -d STR:  "Data"
                                  #     - if NotificationARNs, will use it to notify when ready, etc.
                                  #       Can also see in DescribeStackEvents()

CUSTOM RESOURCES ==>              #  - 'RESOURCE':
                                  #     - Type "Custom::CUSTOM" or "AWS::CloudFormation::CustomResource"
                                  #     - Properties:
                                  #        - ServiceToken SNS_TOPIC_ARN
                                  #        - any CUSTOM_PROP
                                  #     - Version "1.0"
                                  #  - When Create|Update|DeleteStack(), sends SNS notification OBJ:
                                  #     - RequestType "Create" (CreateStack()), "Update" (UpdateStack()) or "Delete"
                                  #       (DeleteStack())
                                  #     - [Old]ResourceProperties CUSTOM_PROP ("Old" too if UpdateStack())
                                  #     - ResponseURL URL
                                  #     - StackId STR
                                  #     - RequestId STR
                                  #     - ResourceType "Custom:CUSTOM"
                                  #     - LogicalResourceId 'RESOURCE'
                                  #     - PhysicalResourceId ID (if UpdateStack())
                                  #  - Should respond to URL with OBJ2:
                                  #     - Status "SUCCESS|FAILED"
                                  #     - PhysicalResourceId ID
                                  #     - StackId, RequestId, LogicalResourceId
                                  #     - Data OBJ3: can be accessed with { Fn::GetAtt: [ 'RESOURCE', 'RESPROP' ] } (max 4KB)


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:            HELPERS            :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


CLOUDFORMER ==>                   #  - Web app (available as a CloudFormation Stack itself, which must be created (can do from
                                  #    CloudFormation web console homepage))
                                  #     - only cost price of one t1.micro
                                  #     - URL is at OUTPUT.URL
                                  #  - Creates a Template from existing resources
                                  #     - Automatically manages DependsOn

/opt/aws/bin/cfn-init             #Wrapper around cloud-init. Must be fired from UserData.
                                  #Uses as input RESOURCE.Metadata["AWS::CloudFormation::Init"].config:
                                  #  - packages:
                                  #     - yum|rpm|rubygems|apt: PATH|VERSION|[]
                                  #  - sources: uncompress a URL to DIR (tar, tar.gz, tar.bz2, zip)
                                  #     - DIR: URL
                                  #  - files: FILE_PATH:
                                  #     - mode STR
                                  #     - owner|group STR
                                  #     - source URL or content STR, encoding "plain|base64"
                                  #     - context OBJ: used as Mustache template (must have aws-cfn-bootstrap and pystache
                                  #       installed)
                                  #     - authentication VAR:
                                  #        - uses RESOURCE.Metadata["AWS::CloudFormation::Authentication"].VAR for
                                  #          authentication of URL:
                                  #           - type "basic|S3"
                                  #           - username|password STR (if "basic")
                                  #           - uris URL_ARR (if "basic")
                                  #           - accessKeyId|secretKey STR (if "S3")
                                  #           - roleName STR (if "S3")
                                  #           - buckets STR_ARR (if "S3")
                                  #  - users: USER:
                                  #     - groups: GROUP_STR_ARR
                                  #     - uid STR
                                  #     - homeDir PATH
                                  #  - groups: GROUP:
                                  #     - gid STR
                                  #  - commands: ANY: (run in alphabetical order)
                                  #     - command COMMAND_STR[_ARR] (can be FILE too)
                                  #     - test COMMAND_BOOL_STR
                                  #     - cwd PATH
                                  #     - env: VAR: VAL
                                  #     - ignoreErrors BOOL
                                  #  - container_commands: ANY:
                                  #     - same as above, but run before and have access to AWS credentials ENVVAR
                                  #     - leader_only BOOL: if true, only done on one instance in an AutoScalingGroup
                                  #  - services: sysvinit: SERVICE:
                                  #     - enabled BOOL: if true, SERVICE start run at boot
                                  #     - ensureRunning BOOL: if true, makes sure SERVICE is running after Beanstalk finishes
                                  #       setting up
                                  #     - files|sources FILE|DIR[_ARR]: if changed, SERVICE restarted
                                  #     - packages:
                                  #        - yum|rpm|rubygems|apt: PATH|VERSION|[]: if installed|updated, SERVICE restarted
                                  #     - commands COMMAND: command names, if run, SERVICE restarted
-s STACK_NAME                     #
-r RESOURCE                       #
--region REGION                   #
--access-key STR                  #
--secret-key STR                  #
--role STR                        #
--credential-file FILE            #
-v                                #


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:              API              :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


ARN ==>                           #arn:aws:cloudformation:REGION:ACCOUNT_ID:stack/STACK_NAME/STACK_ID

LIMITS ==>                        #  - Template number of keys:
                                  #     - 200 RESOURCEs
                                  #     - 100 FILTERs, with each 30 VAR
                                  #     - 60 OUTPUTs
                                  #     - 60 PARAM
                                  #  - 20 Stacks
                                  #  - Template size: 51KB (body) or 460KB (URL)

PAGINATION ==>                    #  - Request parameters: NextToken STR
                                  #  - Response body: NextToken STR


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:            METHODS            :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


Create|UpdateStack()              #Request parameters:
                                  #  - StackName STACK_NAME
                                  #  - TemplateBody|URL STR
                                  #  - UsePreviousTemplate BOOL (only "Update")
                                  #  - Parameters OBJ_ARR:
                                  #     - ParameterKey STR
                                  #     - ParameterValue STR (max 4KB)
                                  #     - UsePreviousValue BOOL
                                  #  - DisableRollback BOOL (only "Create")
                                  #  - OnFailure "DO_NOTHING|ROLLBACK|DELETE" (def: ROLLBACK) (only "Create")
                                  #  - StackPolicy[DuringUpdate]Body|URL STR ("DuringUpdate": only "Update", and temporary for the
                                  #    duration of UpdateStack())
                                  #  - NotificationARNs STR_ARR
                                  #  - Capabilities [ "CAPABILITY_IAM" ]: required when using IAM or CloudFormation resources,
                                  #    to notify that IAM User is allowed to do those actions
                                  #  - Tags TAG_ARR: Key STR, Value STR (only "Create")
                                  #  - TimeoutInMinutes NUM (only "Create")
                                  #Response body: StackId STR
CancelUpdateStack()               #Request parameters: StackName STR
DeleteStack()                     #Request parameters: StackName STR
DescribeStacks()                  #Request parameters: StackName STR
                                  #Response body: Stacks OBJ_ARR:
                                  #  - Like in CreateUpdateStack() request: Capabilities, DisableRollback, NotificationARNs,
                                  #    Parameters, StackName, Tags, TimeoutInMinutes
                                  #  - StackId STACK_ID
                                  #  - CreationTime|LastUpdatedTime DATE
                                  #  - Description STR
                                  #  - Outputs OBJ_ARR:
                                  #     - Description STR
                                  #     - OutputKey STR
                                  #     - OutputValue STR
                                  #  - StackStatus "CREATE|[UPDATE_]ROLLBACK|DELETE|UPDATE_IN_PROGRESS|FAILED|COMPLETE"
                                  #    or "UPDATE_[ROLLBACK_]COMPLETE_CLEANUP_IN_PROGRESS"
                                  #  - StackStatusReason STR
                                  #Paginates
ListStacks()                      #Request parameters: StackStatusFilter STR_ARR
                                  #Response body: StackSummaries OBJ_ARR
                                  #  - CreationTime|DeletionTime|LastUpdatedTime DATE
                                  #  - StackId|Name STR
                                  #  - StackStatus "CREATE|ROLLBACK|DELETE|UPDATE_ROLLBACK|UPDATE_IN_PROGRESS|FAILED|COMPLETE"
                                  #    or "UPDATE_[ROLLBACK_]COMPLETE_CLEANUP_IN_PROGRESS"
                                  #  - StackStatusReason STR
                                  #  - TemplateDescription STR
                                  #Paginates

DescribeStackResource()           #Request parameters:
                                  #  - LogicalResourceId STR
                                  #  - StackName STR
                                  #Response body: StackResourceDetail STACK_RESOURCE:
                                  #  - Description STR
                                  #  - LastUpdatedTimestamp DATE
                                  #  - LogicalId 'RESOURCE'
                                  #  - PhysicalResourceId STR: Resource Id
                                  #  - Metadata JSON_STR
                                  #  - ResourceStatus "CREATE|DELETE|UPDATE_IN_PROGRESS|FAILED|COMPLETE"
                                  #  - ResourceStatusReason STR
                                  #  - ResourceType STR
                                  #  - StackId|Name STR
DescribeStackResources()          #Request parameters:
                                  #  - StackName STR
                                  #  - LogicalResourceId 'RESOURCE'
                                  #  - PhysicalResourceId STR
                                  #Response body: StackResources OBJ_ARR:
                                  #  - Same as STACK_RESOURCE but no Metadata and LastUpdatedTimestamp -> Timestamp
ListStackResources()              #Request parameters: StackName STR
                                  #Response body: StackResourceSummaries OBJ_ARR:
                                  #  - Same as STACK_RESOURCE but no Description, Metadata, StackId|Name
                                  #Paginates
DescribeStackEvents()             #Request parameters: StackName STR
                                  #Response body: StackEvents OBJ_ARR:
                                  #  - Same as STACK_RESOURCE but:
                                  #     - no Description, Metadata
                                  #     - LastUpdatedTimestamp -> Timestamp
                                  #  - ResourceProperties STR
                                  #Paginates

ValidateTemplate()                #Only validates the syntax, not if resources make sense.
                                  #Request parameters: TemplateBody|URL STR
                                  #Response body:
                                  #  - Errors OBJ_ARR: Message STR, Code STR, Type STR
                                  #  - Capabilities STR_ARR
                                  #  - CapabilitiesReason STR
                                  #  - Description STR
                                  #  - Parameters PARAM_ARR:
                                  #     - DefaultValue STR
                                  #     - Description STR
                                  #     - NoEcho BOOL
                                  #     - ParameterKey STR
GetTemplate()                     #Request parameters: StackName STR
                                  #Response body: TemplateBody STR
EstimateTemplateCost()            #Returns URL to the AWS price calculator
                                  #Request parameters:
                                  #  - Parameters PARAM_ARR
                                  #  - TemplateBody|URL STR
                                  #Response body: Url STR

SetStackPolicy()                  #Request parameters:
                                  #  - StackName STR
                                  #  - StackPolicyBody|URL STR
GetStackPolicy()                  #Request parameters: StackName STR
                                  #Response body: StackPolicyBody STR
