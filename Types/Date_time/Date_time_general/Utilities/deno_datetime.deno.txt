
                 
   DENO_DATETIME  
                 



VERSION ==>                       #Part of std
                                  #Browser-compatible

FORMAT                            #Can include:
                                  #  - yy[yy]
                                  #  - M[M]
                                  #  - d[d]
                                  #  - H[H] (24h) or h[h] (12h)
                                  #  - m[m]
                                  #  - s[s]
                                  #  - S[S[S]]
                                  #  - a (AM|PM)
                                  #  - '...': not needed for - / .
                                  #Based on Unicode LDML
UNIT                              #One of 'milliseconds|seconds|minutes|hours|days|weeks|months|quarters|years'

std/datetime/format.ts            #
format(DATE, 'FORMAT')->STR       #Apply date format

std/datetime/parse.ts             #
format(STR, 'FORMAT')->DATE       #Inverse

std/datetime/difference.ts        #
difference(DATE, DATE2[, OPTS])   #Returns time difference as OBJ:
 ->OBJ                            #  - keys are 'UNIT' from OPTS.units
                                  #  - values are NUM
OPTS.units                        #'UNIT'_ARR

std/datetime/constants.ts         #
SECOND|MINUTE|HOUR|DAY|WEEK       #NUM of ms in a second|minute|hour|day|week

std/datetime/day_of_year.ts       #
dayOfYear(DATE)->NUM              #

std/datetime/week_of_year.ts      #
weekOfYear(DATE)->NUM             #

std/datetime/is_leap.ts           #
is[Utc]Leap(DATE|YEAR_NUM)->BOOL  #Whether leap year in local|UTC time
