
             
   JS-BASE64  
             



ALTERNATIVES ==>                  #  - native (browser): browser: atob|btoa(STR)
                                  #  - native (Node.js):
                                  #     - decode: Buffer.from(STR, 'base64').toString()
                                  #     - encode: Buffer.from(STR).toString('base64')
                                  #  - dankogai js-base64
                                  #  - mathiasbynens base64: not really maintained
                                  #  - beatgammit base64-js: no many tests, browser-only
                                  #Prefer native, unless need features of js-base64:
                                  #  - universal JavaScript
                                  #  - browser lack of support of:
                                  #     - Unicode chars
                                  #     - base64url
                                  #  - btoa|decode() removes non-base64 trash
                                  #  - UINT8ARR support

VERSION ==>                       #3.7.2

UNICODE CHARS ==>                 #With browser|BASE64 atob|btoa():
                                  #  - Unicode (non-ASCII) chars in STR must be escaped first
                                  #     - binary chars in \x00-\xff are fine too, only \uUUUU and inline Unicode characters are not
                                  #  - e.g. with unescape(encodeURIComponent()) and escape(decodeURIComponent())
                                  #This is done automatically by encode|decode[URI] and Node.js Buffer.from(...).toString(...)

atob|btoa(STR)->STR2              #RFC 4648 standard, binary only
                                  #btoa() removes any non-base64 trash
encode|decode(STR)->STR2          #RFC 4648 standard, can include Unicode characters
                                  #decode() removes any non-base64 trash
encodeURI|decode(STR)->STR2       #RFC 4648 base64url
fromUint8Array
 (UINT8ARR, BOOL)->STR2
toUint8Array                      #Same with UINT8ARR
 (STR, BOOL)->UINT8ARR            #If BOOL true, base64url, otherwise (def), standard
atob|btoaPolyfill(STR)->STR2      #Polyfill for browser atob|btoa()

isValid(STR)->BOOL                #Is valid RFC 4648 standard|base64url

extendString|Uint8Array()         #Add STR|UINTARR.*() to prototypes. Avoid
extendBuiltins()                  #Do both
