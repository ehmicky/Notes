
             
   CAMELCASE  
             



ALTERNATIVES ==>                  #  - camelcase (preferred for case changing)
                                  #  - underscore.string (preferred if camelcase does not have enough features)

VERSION ==>                       #7.0.0

CAMELCASE(STR[_ARR][, OPTS])->STR #Transforms to camelCase:
                                  #  - aa_BB_cc -> aaBbCc
                                  #  - aa-BB-cc -> aaBbCc
                                  #  - aa BB cc -> aaBbCc
                                  #  - aa.BB.cc -> aaBbCc
                                  #  - aaBBCc   -> aaBbCc
                                  #If STR_ARR, joined.
                                  #Trimmed.
                                  #Correctly handles Unicode characters.
                                  #OPTS:
                                  #  - pascalCase BOOL (def: false): capitalize first character
                                  #  - locale STR[_ARR]|BOOL (def: current): used when lowercasing|uppercasing
                                  #  - preserveConsecutiveUppercase BOOL (def: false): if multiple uppercase letters, keep them uppercase


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:        CAMELCASE-KEYS         :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/



VERSION ==>                       #8.0.1

CAMELCASEKEYS(OBJ[_ARR][, OPTS])  #Applies CAMELCASE() on OBJ keys
 ->OBJ[_ARR]                      #OPTS:
                                  #  - deep BOOL (def: false)
                                  #  - stopPaths 'VARR'_ARR: exclude those paths
                                  #  - exclude STR|REGEXP_ARR
                                  #  - pascalCase BOOL: like CAMELCASE()
                                  #Do nothing if key length > 100 (to prevent abuse)


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:          DECAMELIZE           :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


VERSION ==>                       #6.0.0

DECAMELIZE(STR[, OPTS])->STR      #Transforms from camelCase to underscored:
                                  #  - aaBbCc -> aa_bb_cc
                                  #  - aaBBCc -> aa_bb_cc
                                  #  - aa BB Cc -> aa bb cc
                                  #Lowercased.
                                  #OPTS:
                                  #  - separator STR2 (def: '_')
                                  #  - preserveConsecutiveUppercase BOOL (def: false)


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:        HUMANIZE-STRING        :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


VERSION ==>                       #3.0.0

HUMANIZESTRING(STR)->STR          #Like DECAMELIZE(STR, ' ') except:
                                  #  - trims
                                  #  - capitalize first letter
                                  #  - transform - to spaces
                                  #  - transform multiple spaces to single spaces
                                  #Example:
                                  #  - aaBbCc -> Aa bb cc
                                  #  - aaBBCc -> Aa bb cc
                                  #  - aa BB Cc -> Aa bb cc



                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:           TITLEIZE            :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


VERSION ==>                       #3.0.0

TITLEIZE(STR)->STR                #Capitalizes every space|dash-separated word:
                                  #  - aa BB cc -> Aa Bb Cc
                                  #  - aa-BB-cc -> Aa-Bb-Cc
