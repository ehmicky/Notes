
                                  ┏━━━━━━━━━━━━━━━━┓
                                  ┃   JSON_PATCH   ┃
                                  ┗━━━━━━━━━━━━━━━━┛

ALTERNATIVES ==>                  #  - JSON patch (preferred if needs more complex operations)
                                  #     - can set values to null
                                  #     - can append, splice, copy|move, simple branch
                                  #  - JSON merge patch (preferred otherwise)
                                  #     - simpler syntax

STANDARD ==>                      #RFC 6902

GOAL ==>                          #Perform patch on JSON, e.g. with HTTP PATCH

MIME ==>                          #application/json-patch+json

FORMAT ==>                        #PATCH_OP_ARR

PATCH_OP.op                       #STR, among following
                                  #Cannot do do more complex operations, like NUM++
PATCH_OP.op 'replace'             #Set value
PATCH_OP.op 'remove'              #Unset value, or remove ARR item (shifting items)
PATCH_OP.op 'add'                 #Set value, or insert ARR item (shifting items)
PATCH_OP.op 'copy'                #Set value using another property's value
PATCH_OP.op 'move'                #Like 'copy' but deletes original value
PATCH_OP.op 'test'                #Fails if value's deep comparison does not match

PATCH_OP.path                     #'PATH'. JSON pointer (see its doc), e.g. /VAR/VAR2
                                  #Excluding - (ARR append), but including ~0|~1 escaping
                                  #I.e. all operations are deep

PATCH_OP.value                    #VAL
                                  #With PATCH_OP 'replace|add|test'
PATCH_OP.from                     #'PATH2'. JSON pointer
                                  #With PATCH_OP 'copy|move'

MANIPULATION ==>                  #Operations applied in sequence
                                  #If error, stops and rollbacks sequence of operations
                                  #  - with HTTP PATCH, should send 422 or 409

ERRORS ==>                        #Error happens if:
                                  #  - op 'test' failed
                                  #  - PATH does not exist for op 'remove|replace'
                                  #  - PATH2 does not exist for op 'move|copy'
                                  #  - PATH's parent does not exist for op 'add'
