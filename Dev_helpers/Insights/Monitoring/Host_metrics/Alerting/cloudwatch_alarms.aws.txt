
                     
   CLOUDWATCH_ALARMS  
                     



VERSION ==>                       #See CloudWatch doc

SUMMARY ==>                       #Alarm: state, actions (EC2|SWF|AutoScaling|SNS|SSM), history, recommendations
                                  #Metric alarm: aggregated|insight|math query, threshold, evaluation period
                                  #Composite alarm: rule, suppressor
                                  #Anomaly detector: training, time ranges, aggregated|insight|math query


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:              API              :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/



SERVICE_DOMAIN
FORMAT ==>
PAGINATION ==>                    #See CloudWatch doc

THROTTLING ==>                    #ALARM: 3/s
                                  #  - except DescribeAlarms*: 9/s (flexible)
                                  #ANOMALY_DETECTOR: 10/s
                                  #  - except DeleteAnomalyDetector: 5/s

PRICING ==>                       #1$/month per 10 METRIC_ALARMs
                                  #  - multiplied by number of METRICs per METRIC_ALARM
                                  #     - 1 ANOMALY_DETECTOR counts as 3 METRICs
                                  #  - high StorageResolution: 3 times more expensive
                                  #  - free: 10/month
                                  #     - not with METRIC_DATA_REQ nor high StorageResolution
                                  #1$/month per 2 COMPOSITE_ALARMs


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:          ALARM MAIN           :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


SetAlarmState()                   #Req: ALARM
                                  #  - only AlarmName, StateReason, StateReasonData, StateValue
                                  #Res: empty
EnableAlarmActions()              #Req: ALARM
                                  #  - only AlarmName -> AlarmNames ARR
                                  #Res: empty
                                  #Set ActionsEnabled true
DisableAlarmActions()             #Req: ALARM
                                  #  - only AlarmName -> AlarmNames ARR
                                  #Res: empty
                                  #Set ActionsEnabled false

ALARM                             #Poller for METRICs
                                  #Trigger actions when a specific condition changes
                                  #Max 5000
ALARM.AlarmArn                    #ALARM_ARN. 'arn:aws:cloudwatch:REGION:ACCOUNT_ID:alarm:ALARM'
ALARM.AlarmName                   #'ALARM'
ALARM.AlarmDescription            #STR
ALARM.AlarmConfiguration
 UpdatedTimestamp                 #'DATE'

ALARM.ActionsEnabled              #BOOL (def: true). To disable ALARM

ALARM.StateValue                  #One of:
                                  #  - "OK": no feedback
                                  #  - "INSUFFICIENT_DATA": pending feedback due to either:
                                  #     - initial state when creating an ALARM
                                  #     - METRIC paginated or not available
                                  #  - "ALARM": feedback
                                  #Can be manually set, for testing
ALARM.StateReason                 #STR. Description of StateValue
ALARM.StateReasonData             #'JSON'. Data related to StateValue
ALARM.StateTransitionedTimestamp  #'DATE' of last StateValue change
ALARM.StateUpdatedTimestamp       #'DATE' of last StateValue|EvaluationState change

TagResource()
ListTagsForResource()
UntagResource()
RESOURCE_TAGS.ResourceARN
RESOURCE_TAGS.Tags
ALARM.Tags                        #

RECOMMENDED ALARMS ==>            #UI recommends specific ALARMs to set

AWS::CloudWatch::[Composite]Alarm #RESPROPs: AlarmName, AlarmDescription, ActionsEnabled, Tags

ICALARM.alarmArn
OPTS|ICALARM.alarmName
OPTS.compositeAlarmName
OPTS|ICALARM.alarmDescription
OPTS|ICALARM.actionsEnabled       #ALARM.*


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:         ALARM ACTIONS         :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


ALARM.AlarmActions                #ARN_ARR. Trigger action when StateValue becomes 'ALARM'
                                  #Max 5
                                  #ARN can be:
                                  #  - 1|many of:
                                  #     - SNS_TOPIC_ARN
                                  #     - 'arn:aws:ssm:REGION:ACCOUNT_ID:opsitem:SEVERITY[#CATEGORY=CATEGORY]'
                                  #  - METRIC_ALARM, 1 of:
                                  #     - 'arn:aws:automate:REGION:ec2:stop|terminate|reboot|recover'
                                  #     - 'arn:aws:swf:REGION:ACCOUNT_ID:action/actions/AWS_EC2.InstanceId.Stop|Terminate|Reboot|Recover/1.0'
                                  #     - 'arn:aws:autoscaling:REGION:ACCOUNT_ID:scalingPolicy:POLICY_MID:autoScalingGroupName/AUTO_SCALING_GROUP:policyName/POLICY'
                                  #     - 'arn:aws:sns:REGION:ACCOUNT_ID:TOPIC:autoScalingGroupName/AUTO_SCALING_GROUP:policyName/POLICY'
                                  #     - 'arn:aws:ssm-incidents::ACCOUNT_ID:responseplan/RESPONSE_PLAN'
                                  #Autoscaling actions are repeated once per minute
                                  #Should allow:
                                  #  - PACTION (e.g. "SNS:Publish")
                                  #  - to Principal.Service "cloudwatch.amazonaws.com"
                                  #  - restrict to:
                                  #     - specific Resource (e.g. TOPIC_ARN)
                                  #     - COND_KEY aws:SourceArn ALARM_ARN
                                  #     - COND_KEY aws:SourceAccount|SourceOrg*
ALARM.InsufficientDataActions     #Same for StateValue 'INSUFICIENT_DATA'
ALARM.OKDataActions               #Same for StateValue 'OK'

COND_KEY cloudwatch:AlarmActions  #STR_ARR of ALARM.*Actions. Only with Put*Alarm()

AWSServiceRoleForCloudWatchEvents #SERVICE_LINKED_ROLE used by CloudWatch to perform EC2 ALARM.*Actions
                                  #Allows ec2:Stop|Terminate|RecoverInstances() and ec2:DescribeInstances*()
                                  #Created by the first PutMetricAlarm() using EC2 actions
                                  #  - i.e. that call requires iam:CreateServiceLinkedRole() PACTION

AWS::CloudWatch::[Composite]Alarm #RESPROPs: AlarmActions, InsufficientDataActions, OKActions


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:       ALARM ACTIONS CDK       :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


ICALARM.addAlarmAction
 |addInsufficientDataAction
 |addOkAction(CALARM_ACTION)      #ALARM.AlarmActions

new SnsAction(CTOPIC)             #CALARM_ACTION. SNS_TOPIC_ARN
new SsmAction
 ('SEVERITY'[, 'CATEGORY'])       #CALARM_ACTION. 'arn:aws:ssm:REGION:ACCOUNT_ID:opsitem:SEVERITY[#CATEGORY=CATEGORY]'
new Ec2Action('METHOD')           #CALARM_ACTION. 'arn:aws:automate:REGION:ec2:METHOD'
new ApplicationScalingAction
 (CAPP_SCALING_ACTION)            #CALARM_ACTION. 'arn:aws:swf:REGION:ACCOUNT_ID:action/actions/AWS_EC2.InstanceId.Stop|Terminate|Reboot|Recover/1.0'
new AutoScalingAction
 (CAUTO_SCALING_ACTION)           #CALARM_ACTION. 'arn:aws:autoscaling:REGION:ACCOUNT_ID:scalingPolicy:POLICY_MID:autoScalingGroupName/AUTO_SCALING_GROUP:policyName/POLICY'
new SsmIncidentAction
 ('RESPONSE_PLAN')                #CALARM_ACTION. 'arn:aws:ssm-incidents::ACCOUNT_ID:responseplan/RESPONSE_PLAN'


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:             LIST              :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


DescribeAlarms()                  #Req: ALL_ALARMS_REQ
                                  #Res: ALL_ALARMS
DeleteAlarms()                    #Req: ALL_ALARMS_REQ
                                  #  - only AlarmNames
                                  #Res: empty

ALL_ALARMS_REQ.AlarmTypes         #'MetricAlarm|CompositeAlarm'_ARR (def: ['MetricAlarm'])
ALL_ALARMS_REQ.AlarmNames         #'ALARM'_ARR
ALL_ALARMS_REQ.AlarmNamePrefix    #STR. Filter by 'ALARM' starting with STR
ALL_ALARMS_REQ.ActionPrefix       #STR. Filter by ALARM.*Actions starting with STR
ALL_ALARMS_REQ.StateValue         #STR. Filter by ALARM.StateValue

ALL_ALARMS_REQ.ParentsOfAlarmName #'ALARM'. Filter by parent COMPOSITE_ALARM
                                  #Cannot use any other ALL_ALARMS_REQ.*
                                  #Only ALL_ALARMS.*.AlarmArn|Name is returned
ALL_ALARMS_REQ.ChildrenOfAlarmName#'ALARM'. Filter by children ALARM
                                  #Cannot use any other ALL_ALARMS_REQ.*
                                  #Only ALL_ALARMS.*.AlarmArn|Name|StateValue|StateUpdatedTimestamp is returned

ALL_ALARMS.MetricAlarms           #METRIC_ALARM_ARR
ALL_ALARMS.CompositeAlarms        #COMPOSITE_ALARM_ARR


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:            METRIC             :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


PutMetricAlarm()                  #Req: METRIC_ALARM
                                  #  - no AlarmArn,  AlarmConfigurationUpdatedTimestamp, *State*
                                  #Res: empty
DescribeAlarmsForMetric()         #Req: METRIC_ALARM
                                  #  - only Dimensions, ExtendedStatistic, MetricName, Namespace, Period, Statistic, Unit
                                  #Res: MetricAlarms METRIC_ALARM_ARR

METRIC_ALARM                      #Simple ALARM
                                  #WAIT (DescribeAlarms()) AlarmExists: when it exists
METRIC_ALARM.*                    #Any from ALARM.*

METRIC_ALARM.MetricName
METRIC_ALARM.Namespace
METRIC_ALARM.Dimensions           #Like METRIC.*
METRIC_ALARM.Unit                 #METRIC_DATUM.Unit
METRIC_ALARM.Statistic
METRIC_ALARM.ExtendedStatistic    #Like AGGR_QUERY_REQ.*
METRIC_ALARM.Period               #Like AGGR_QUERY_REQ.*, but min 10s

METRIC_ALARM.Metrics              #METRIC_DATA_REQ_ARR returning the values to evaluate
                                  #Advanced alternative to METRIC_ALARM.MetricName|Period|Statistic
                                  #Exactly one METRIC_DATA_REQ.ReturnData must be true
                                  #  - it is used to change the StateValue
                                  #Max 10 with MetricStat + 10 with Expression
                                  #Max 75 METRIC_ALARMs with INSIGHT_QUERY

METRIC_ALARM.ComparisonOperator   #'Greater|LessThan[OrEqualTo]Threshold'
METRIC_ALARM.Threshold            #NUM. Change StateValue based on VAL OP Threshold
                                  #  - VAL is each METRIC response values (after PERIOD aggregation)
                                  #  - OP is ComparisonOperator

METRIC_ALARM.EvaluationPeriods    #NUM of PERIODs with same evaluation before changing StateValue
                                  #Max total time: 1 day
METRIC_ALARM.DatapointsToAlarm    #NUM2. When combined with EvaluationPeriods NUM, means StateValue changes if either:
                                  #  - at least NUM2 out of NUM last PERIODs with same evaluation
                                  #  - NUM2 last PERIODs are undefined, and most recent defined PERIOD evaluates to false ("premature alarm")
                                  #Def: same value as EvaluationPeriods
METRIC_ALARM                      #Do not change StateValue if there are not enough PERIODs to be statistically significant.
 .EvaluateLowSampleCountPercentile#Only with ESTAT
                                  #Either 'evaluate' (false, def) or 'ignore' (true)
METRIC_ALARM.TreatMissingData     #EvaluationPeriods is NUM of non-undefined PERIODs
                                  #  - i.e. if a PERIOD is undefined, it is ignored and an additional earlier PERIOD is used instead
                                  #However, this is done up to a limit ("evaluation range").
                                  #When reached, undefined PERIODs are added to fill EvaluationPeriods. Those are:
                                  #  - 'missing' (def): ignored. If all PERIODs are undefined, keep current StateValue.
                                  #  - 'ignore': ignored. If all PERIODs are undefined, StateValue 'INSUFFICIENT_DATA'
                                  #  - 'breaching': StateValue 'ALARM'
                                  #  - 'notBreaching': StateValue 'OK'

METRIC_ALARM.EvaluationState      #'PARTIAL_DATA' when METRIC response values truncated due to matching >1e4 METRICs

AWS::CloudWatch::Alarm            #RESPROPs: MetricName, Namespace, Dimensions, Unit, Statistic, ExtendedStatistic, Period, Metrics,
                                  #ComparisonOperator, Threshold, EvaluationPeriods, DatapointsToAlarm, EvaluateLowSampleCountPercentile, TreatMissingData
                                  #RESATTRs: Arn


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:          METRIC CDK           :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


new Alarm(...CARGS, OPTS)         #CMETRIC_ALARM. CKRESOURCE wrapping METRIC_ALARM
                                  #Inherits ICALARM

Alarm.fromAlarmArn
 (...CARGS, ALARM_ARN)
 ->ICMETRIC_ALARM                 #
Alarm.fromAlarmName
 (...CARGS, 'ALARM')
 ->ICMETRIC_ALARM                 #

OPTS.period
OPTS.threshold
OPTS.evaluationPeriods
OPTS.datapointsToAlarm
OPTS
 .evaluateLowSampleCountPercentile
OPTS.treatMissingData             #METRIC_ALARM.*
OPTS.statistic                    #'XSTAT'. METRIC_ALARM.[Extended]Statistic. Can be case-insensitive
OPTS.comparisonOperator           #STR (def: 'GreaterThanOrEqualToThreshold'). METRIC_ALARM.ComparisonOperator

OPTS|CMETRIC_ALARM.metric         #ICMETRIC. METRIC_ALARM.MetricName|Namespace|Dimensions|Unit|[Extended]Statistic|Period
                                  #METRIC_ALARM.Metrics METRIC_DATA_REQ_ARR is used instead if one of:
                                  #  - MATH_QUERY
                                  #  - 'LABEL' specified: set as METRIC_DATA_REQ.Label
                                  #  - cross-account:
                                  #     - between STACKs of ALARM and METRIC (using CMETRIC.account or CMATH.searchAccount)
                                  #     - sets METRIC_DATA_REQ.AccountId ACCOUNT_ID
                                  #Then, METRIC_DATA_REQ items are:
                                  #  - if not MATH_QUERY, only one with: Id 'm1', ReturnData true
                                  #  - if MATH_QUERY, one with:
                                  #     - for CMATH: Id 'expr_NUM', ReturnData true
                                  #     - for each CMATH.usingMetrics.METRIC: Id 'METRIC', ReturnData false
ICMETRIC.createAlarm
 (...CARGS[, CMETRIC_ALARM_OPTS])
 ->CMETRIC_ALARM                  #Alternative, using OPTS.metric ICMETRIC


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:           COMPOSITE           :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


PutCompositeAlarm()               #Req: COMPOSITE_ALARM
                                  #  - no AlarmArn,  AlarmConfigurationUpdatedTimestamp, *State*
                                  #  - no ActionsSuppressedBy, ActionsSuppressedReason
                                  #Res: empty

COMPOSITE_ALARM                   #Combination of multiple ALARMs
                                  #WAIT (DescribeAlarms()) CompositeAlarmExists: when it exists
                                  #Max 100 ALARMs. Each ALARM can be used by max 150 COMPOSITE_ALARMs
COMPOSITE_ALARM.*                 #Any from ALARM.*

COMPOSITE_ALARM.AlarmRule         #STR. Compute StateValue based on underlying ALARMs StateValues.
                                  #'[NOT] ALARM_STATE [AND|OR ...]'
                                  #  - can use parenthesis
                                  #  - max 500 ALARM_STATEs, 1e4 chars
                                  #ALARM_STATE can be:
                                  #  - OK|INSUFFICIENT_DATA|ALARM('ALARM'|ALARM_ARN): true|false if has that StateValue
                                  #  - TRUE|FALSE: meant for testing
                                  #Final result true|false -> StateValue 'ALARM|OK'

COMPOSITE_ALARM.ActionsSuppressor #'ALARM'|ALARM_ARN
                                  #If that ALARM StateValue is 'ALARM', do not trigger COMPOSITE_ALARM.*Actions
                                  #Goal: reduce noise, avoiding both COMPOSITE_ALARM and suppressor ALARM to trigger when they are corrolated
COMPOSITE_ALARM                   #NUM (in secs, def: 0)
 .ActionsSuppressorWaitPeriod     #Duration for ActionsSuppressor to suppress *Actions, when COMPOSITE_ALARM StateValue becomes 'ALARM'
                                  #Goal: give enough time for suppressor ALARM to change its own StateValue
COMPOSITE_ALARM                   #NUM (in secs, def: 0)
 .ActionsSuppressorExtensionPeriod#Duration for ActionsSuppressor to suppress *Actions, when suppressor ALARM StateValue stops being 'ALARM'
                                  #Goal: give enough time for COMPOSITE_ALARM to change its own StateValue
COMPOSIT_ALARM.ActionsSuppressedBy#When ActionsSuppressor is active, the main reason:
                                  #  - 'Alarm': normal
                                  #  - 'WaitPeriod': ActionsSuppressorWaitPeriod
                                  #  - 'ExtensionPeriod': ActionsSuppressorExtensionPeriod
COMPOSITE_ALARM
 .ActionsSuppressedReason         #STR. Additional reason for ActionsSupressedBy

AWS::CloudWatch::CompositeAlarm   #RESPROPs: AlarmRule, ActionsSuppressor, ActionsSuppressorWaitPeriod, ActionsSuppressorExtensionPeriod
                                  #RESATTRs: Arn


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:         COMPOSITE CDK         :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


new CompositeAlarm(...CARGS, OPTS)#CCOMPOSITE_ALARM. CKRESOURCE wrapping COMPOSITE_ALARM
                                  #Inherits ICALARM

Alarm.fromCompositeAlarmArn
 (...CARGS, ALARM_ARN)
 ->ICCOMPOSITE_ALARM              #
Alarm.fromCompositeAlarmName
 (...CARGS, 'ALARM')
 ->ICCOMPOSITE_ALARM              #

OPTS.alarmRule                    #CALARM_RULE. COMPOSITE_ALARM.AlarmRule
AlarmRule.fromString
 (STR)->CALARM_RULE               #STR
AlarmRule.fromAlarm
 (ICALARM, STR)->CALARM_RULE      #'STR(ALARM_ARN)'
ICALARM                           #Is a CALARM_RULE itself. 'ALARM(ALARM_ARN)'
AlarmRule.fromBoolean
 (BOOL)->CALARM_RULE              #'TRUE|FALSE'
AlarmRule.not
 (CALARM_RULE)->CALARM_RULE2      #'(NOT (...))'
AlarmRule.allOf|anyOf
 (CALARM_RULE,...)->CALARM_RULE2  #'(... AND|OR ...)'

OPTS.actionsSuppressor            #ICALARM. COMPOSITE_ALARM.ActionsSuppressor
OPTS.actionsSuppressorWaitPeriod  #DURATION (def: 1m). COMPOSITE_ALARM.ActionsSuppressorWaitPeriod
OPTS
 .actionsSuppressorExtensionPeriod#DURATION (def: 1m). COMPOSITE_ALARM.ActionsSuppressorExtensionPeriod


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:            HISTORY            :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


DescribeAlarmHistory()            #Req: ALARM_HISTORY_ITEM
                                  #  - no HistoryData, HistorySummary
                                  #  - AlarmType -> AlarmTypes ARR
                                  #  - Timestamp -> StartDate|EndDate 'DATE'
                                  #  - also ScanBy 'TimestampDescending|TimestampAscending': sorting order
                                  #Res: AlarmHistoryItems ALARM_HISTORY_ITEM_ARR

ALARM_HISTORY_ITEM                #History of ALARMs change of properties, including StateValue
                                  #Only kept for 30 days
ALARM_HISTORY_ITEM.AlarmName      #'ALARM'
ALARM_HISTORY_ITEM.AlarmType      #'MetricAlarm|CompositeAlarm'

ALARM_HISTORY_ITEM.Timestamp      #'DATE'

ALARM_HISTORY_ITEM.HistoryItemType#One of:
                                  #  - 'StateUpdate': StateValue change
                                  #  - 'ConfigurationUpdate'
                                  #  - 'Action'
ALARM_HISTORY_ITEM.HistorySummary #STR. Description
ALARM_HISTORY_ITEM.HistoryData    #'JSON'


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:            ANOMALY            :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


PutAnomalyDetector()              #Req: ANOMALY_DETECTOR
                                  #  - no StateValue
                                  #Res: empty
DescribeAnomalyDetectors()        #Req: ANOMALY_DETECTOR
                                  #  - only AnomalyDetectorTypes, MetricName, Namespace, Dimensions
                                  #Res: AnomalyDetectors ANOMALY_DETECTOR_ARR
DeleteAnomalyDetector()           #Req: ANOMALY_DETECTOR
                                  #  - only MetricMathAnomalyDetector, SingleMetricAnomalyDetector
                                  #Res: empty

ANOMALY_DETECTOR                  #Guess expected values of a METRIC using machine learning
                                  #Generates upper|lower threshold
                                  #  - can differ per time of day, etc.
                                  #Shown in graphs
                                  #Based on last 2 weeks of METRIC_DATUMs
                                  #Max 500
ANOMALY_DETECTOR.Configuration    #ANOMALY_DETECTOR_CONF

ANOMALY_DETECTOR.StateValue       #Whether training:
                                  #  - 'PENDING_TRAINING': not started
                                  #  - 'TRAINED_INSUFFICIENT_DATA': ongoing
                                  #  - 'TRAINED': done
ANOMALY_DETECTOR_CONF             #RANGE_ARR
 .ExcludedTimeRanges              #Max 10
RANGE                             #Specific time range to exclude for training
RANGE.StartTime|EndTime           #'DATE'
ANOMALY_DETECTOR_CONF
 .MetricTimezone                  #STR. Def: UTC

ANOMALY_DETECTOR
 .AnomalyDetectorTypes            #STR_ARR among 'SINGLE_METRIC' (def) or 'METRIC_MATH'
ANOMALY_DETECTOR
 .SingleMetricAnomalyDetector     #SIMPLE_DETECTOR
SIMPLE_DETECTOR                   #Single METRIC, aggregated per PERIOD with XSTAT
SIMPLE_DETECTOR.MetricName
SIMPLE_DETECTOR.Namespace
SIMPLE_DETECTOR.Dimensions        #Like METRIC.*
SIMPLE_DETECTOR.Stat              #'XSTAT'
SIMPLE_DETECTOR.AccountId         #Like METRIC_DATA_REQ.*

ANOMALY_DETECTOR
 .MetricMathAnomalyDetector       #MATH_DETECTOR
MATH_DETECTOR                     #Advanced alternative to SIMPLE_DETECTOR, using MATH_QUERY|INSIGHT_QUERY
MATH_DETECTOR.MetricDataQueries   #METRIC_DATA_REQ_ARR. Like METRIC_ALARM.Metrics

ANOMALY_DETECTION_BAND            #MATH_QUERY function using ANOMALY_DETECTOR
 (ARR[, NUM])                     #ANOMALY_DETECTOR specified either:
                                  #  - SIMPLE_DETECTOR: using same MetricName
                                  #  - MATH_DETECTOR: parent
                                  #  - otherwise: automatically created
                                  #Returns an ARR_ARR with two elements: upper|lower threshold
                                  #NUM (def: 2) is number of standard deviations between mean and each threshold
                                  #Cannot be used with:
                                  #  - METRICS|SEARCH()
                                  #  - StorageResolution 1
                                  #When using multiple METRICs:
                                  #  - max 10 METRICs
                                  #  - must all have same PERIOD
                                  #Max 1 per MATH_QUERY
METRIC_ALARM.ThresholdMetricId    #'MVAR' of a METRIC_DATA_RES using ANOMALY_DETECTION_BAND
                                  #Alternative to METRIC_ALARM.Threshold: use ANOMALY_DETECTOR's upper|lower threshold
                                  #instead of single static value

ANOMALY_DETECTOR
 .MetricCharacteristics ???

AWS::CloudWatch::AnomalyDetector  #RESPROPs: Configuration, SingleMetricAnomalyDetector, MetricMathAnomalyDetector
AWS::CloudWatch::Alarm            #Includes RESPROPs: ThresholdMetricId
