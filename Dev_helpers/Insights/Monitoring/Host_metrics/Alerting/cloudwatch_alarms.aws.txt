
                                  ┏━━━━━━━━━━━━━━━━━━━━━━━┓
                                  ┃   CLOUDWATCH_ALARMS   ┃
                                  ┗━━━━━━━━━━━━━━━━━━━━━━━┛

VERSION ==>                       #See CloudWatch doc

SUMMARY ==>                       #Alarm: state, actions (EC2|SWF|AutoScaling|SNS|SSM|EventBridge), history, recommendations
                                  #Metric alarm: aggregated|insight|math query, threshold, evaluation period
                                  #Composite alarm: rule, suppressor
                                  #Anomaly detector: training, time ranges, aggregated|insight|math query

cdk-monitoring-constructs         #All the sections above named "... monitoring" are using it

                                  ┌─────────┐
                                  │   API   │
                                  └─────────┘

SERVICE_DOMAIN
FORMAT ==>
PAGINATION ==>                    #See CloudWatch doc

THROTTLING ==>                    #ALARM: 3/s
                                  #  - except DescribeAlarms*: 9/s (flexible)
                                  #ANOMALY_DETECTOR: 10/s
                                  #  - except DeleteAnomalyDetector: 5/s

PRICING ==>                       #1$/month per 10 METRIC_ALARMs
                                  #  - multiplied by number of METRICs per METRIC_ALARM
                                  #     - 1 ANOMALY_DETECTOR counts as 3 METRICs
                                  #  - high StorageResolution: 3 times more expensive
                                  #  - free: 10/month
                                  #     - not with METRIC_DATA_REQ nor high StorageResolution
                                  #1$/month per 2 COMPOSITE_ALARMs

                                  ┌────────────────┐
                                  │   ALARM MAIN   │
                                  └────────────────┘

ALARM                             #Poller for METRICs
                                  #Trigger actions when a specific condition changes
                                  #Max 5000
ALARM.AlarmArn                    #ALARM_ARN. 'arn:aws:cloudwatch:REGION:ACCOUNT_ID:alarm:ALARM'
ALARM.AlarmName                   #'ALARM'
ALARM.AlarmDescription            #STR
ALARM.AlarmConfiguration
 UpdatedTimestamp                 #'DATE'

ALARM.ActionsEnabled              #BOOL (def: true). To disable ALARM

ALARM.StateValue                  #One of:
                                  #  - "OK": no feedback
                                  #  - "INSUFFICIENT_DATA": pending feedback due to either:
                                  #     - initial state when creating an ALARM
                                  #     - METRIC paginated or not available
                                  #  - "ALARM": feedback
                                  #Can be manually set, for testing
ALARM.StateReason                 #STR. Description of StateValue
ALARM.StateReasonData             #'JSON'. Data related to StateValue
ALARM.StateTransitionedTimestamp  #'DATE' of last StateValue change
ALARM.StateUpdatedTimestamp       #'DATE' of last StateValue|EvaluationState change

RESOURCE_TAGS.ResourceARN
RESOURCE_TAGS.Tags
ALARM.Tags                        #AWS TAGS

RECOMMENDED ALARMS ==>            #UI recommends specific ALARMs to set

                                  ┌────────────────────┐
                                  │   ALARM MAIN API   │
                                  └────────────────────┘

SetAlarmState()                   #Req: ALARM
                                  #  - only AlarmName, StateReason, StateReasonData, StateValue
                                  #Res: empty
EnableAlarmActions()              #Req: ALARM
                                  #  - only AlarmName -> AlarmNames ARR
                                  #Res: empty
                                  #Set ActionsEnabled true
DisableAlarmActions()             #Req: ALARM
                                  #  - only AlarmName -> AlarmNames ARR
                                  #Res: empty
                                  #Set ActionsEnabled false

TagResource()
ListTagsForResource()
UntagResource()                   #AWS TAGS

                                  ┌────────────────────┐
                                  │   ALARM MAIN IAC   │
                                  └────────────────────┘

AWS::CloudWatch::[Composite]Alarm #RESPROPs: AlarmName, AlarmDescription, ActionsEnabled, Tags

ICALARM.alarmArn
OPTS|ICALARM.alarmName
OPTS.compositeAlarmName
OPTS|ICALARM.alarmDescription
OPTS|ICALARM.actionsEnabled       #ALARM.*

                                  ┌──────────────────────────────────┐
                                  │   ALARM MAIN EVENTBRIDGE EVENT   │
                                  └──────────────────────────────────┘

EVENT_TYPE 'CloudWatch Alarm
 Configuration Change'            #EventBridge EVENT emitted when ALARM created|updated|deleted
SOURCE                            #'aws.cloudwatch'
EVENT.Resources                   #'ALARM_ARN'_ARR (single item)

DETAIL.*                          #Like REQ.alarmData.* except:
                                  #  - no previousState
                                  #  - REQS -> REQC: alarmName, description, timestamp
                                  #  - following new properties
DETAIL.operation                  #'create|update|delete'

DETAIL.previousConfiguration      #REQC. Only if operation 'update'
REQC.actionsEnabled|okActions
 |alarmActions
 |insufficientDataActions         #ALARM.*
REQC.comparisonOperator|threshold
 |evaluationPeriods
 |treatMissingData                #METRIC_ALARM.*

                                  ┌───────────────────┐
                                  │   ALARM ACTIONS   │
                                  └───────────────────┘

ALARM.AlarmActions                #ARN_ARR. Trigger action when StateValue becomes 'ALARM'
                                  #Max 5
                                  #ARN can be:
                                  #  - 1|many of:
                                  #     - SNS TOPIC_ARN
                                  #     - Lambda FUNC_VERSION_ARN
                                  #     - 'arn:aws:ssm:REGION:ACCOUNT_ID:opsitem:SEVERITY[#CATEGORY=CATEGORY]'
                                  #     - Amazon Q INVESTIGATION_GROUP_ARN
                                  #  - METRIC_ALARM, 1 of:
                                  #     - 'arn:aws:automate:REGION:ec2:stop|terminate|reboot|recover'
                                  #     - 'arn:aws:swf:REGION:ACCOUNT_ID:action/actions/AWS_EC2.InstanceId.Stop|Terminate|Reboot|Recover/1.0'
                                  #     - 'arn:aws:autoscaling:REGION:ACCOUNT_ID:scalingPolicy:POLICY_MID:autoScalingGroupName/AUTO_SCALING_GROUP:policyName/POLICY'
                                  #     - 'arn:aws:sns:REGION:ACCOUNT_ID:TOPIC:autoScalingGroupName/AUTO_SCALING_GROUP:policyName/POLICY'
                                  #     - 'arn:aws:ssm-incidents::ACCOUNT_ID:responseplan/RESPONSE_PLAN'
                                  #Autoscaling actions are repeated once per minute
ALARM.InsufficientDataActions     #Same for StateValue 'INSUFICIENT_DATA'
ALARM.OKDataActions               #Same for StateValue 'OK'

                                  ┌────────────────────────┐
                                  │   ALARM ACTIONS AUTH   │
                                  └────────────────────────┘

PERMISSIONS ==>                   #Requires:
                                  #  - SERVICE-specific PACTION
                                  #     - SNS: 'sns:Publish'
                                  #  - to Principal.Service "cloudwatch.amazonaws.com"
                                  #  - restrict to:
                                  #     - specific Resource (e.g. TOPIC_ARN)
                                  #     - COND_KEY aws:SourceArn ALARM_ARN
                                  #     - COND_KEY aws:SourceAccount|SourceOrg*

AWSServiceRoleForCloudWatchEvents #SERVICE_LINKED_ROLE used by CloudWatch to perform EC2 ALARM.*Actions
                                  #Allows ec2:Stop|Terminate|RecoverInstances() and ec2:DescribeInstances*()
                                  #Created by the first PutMetricAlarm() using EC2 actions
                                  #  - i.e. that call requires iam:CreateServiceLinkedRole() PACTION

COND_KEY cloudwatch:AlarmActions  #STR_ARR of ALARM.*Actions. Only with Put*Alarm()

                                  ┌───────────────────────┐
                                  │   ALARM ACTIONS IAC   │
                                  └───────────────────────┘

AWS::CloudWatch::[Composite]Alarm #RESPROPs: AlarmActions, InsufficientDataActions, OKActions

ICALARM.addAlarmAction
 |addInsufficientDataAction
 |addOkAction(CALARM_ACTION)      #ALARM.AlarmActions

new SnsAction(ICTOPIC)            #CALARM_ACTION. SNS TOPIC_ARN
new SsmAction
 ('SEVERITY'[, 'CATEGORY'])       #CALARM_ACTION. 'arn:aws:ssm:REGION:ACCOUNT_ID:opsitem:SEVERITY[#CATEGORY=CATEGORY]'
new Ec2Action('METHOD')           #CALARM_ACTION. 'arn:aws:automate:REGION:ec2:METHOD'
new ApplicationScalingAction
 (CAPP_SCALING_ACTION)            #CALARM_ACTION. 'arn:aws:swf:REGION:ACCOUNT_ID:action/actions/AWS_EC2.InstanceId.Stop|Terminate|Reboot|Recover/1.0'
new AutoScalingAction
 (CAUTO_SCALING_ACTION)           #CALARM_ACTION. 'arn:aws:autoscaling:REGION:ACCOUNT_ID:scalingPolicy:POLICY_MID:autoScalingGroupName/AUTO_SCALING_GROUP:policyName/POLICY'
new SsmIncidentAction
 ('RESPONSE_PLAN')                #CALARM_ACTION. 'arn:aws:ssm-incidents::ACCOUNT_ID:responseplan/RESPONSE_PLAN'

                                  ┌──────────────────────────────────┐
                                  │   ALARM ACTIONS MONITORING IAC   │
                                  └──────────────────────────────────┘

CXALARM_OPTS.actionOverride
CXALARM[_[G]OPTS]
 |CXALARM_FACTORY.action
CXALARM_GOPTS                     #CXALARM_ACTION (def: none). ALARM.AlarmActions
 .disambiguatorAction.SEVERITY    #SEVERITY distinguishes multiple related ALARMs with different settings per severity

{addAlarmActions(CACTION_OPTS)}   #CXALARM_ACTION. Custom

new MultipleAlarmActionStrategy
 (CXALARM_ACTION_ARR)             #CXALARM_ACTION. Combines

new NoopAlarmActionStrategy()     #CXALARM_ACTION. No action

new SnsAlarmActionStrategy(OPTS)  #CXALARM_ACTION. TOPIC_ARN
                                  #OPTS.onAlarmTopic|onOkTopic|onInsufficientDataTopic ICTOPIC
new OpsItemAlarmActionStrategy
 ('SEVERITY'[, 'CATEGORY'])       #CXALARM_ACTION. 'arn:aws:ssm:REGION:ACCOUNT_ID:opsitem:SEVERITY[#CATEGORY=CATEGORY]'

                                  ┌─────────────────────────────────────┐
                                  │   ALARM ACTIONS EVENTBRIDGE EVENT   │
                                  └─────────────────────────────────────┘

EVENT_TYPE
 'CloudWatch Alarm State Change'  #EventBridge EVENT emitted when ALARM.StateValue changes
SOURCE                            #'aws.cloudwatch'
EVENT.Resources                   #'ALARM_ARN'_ARR (single item)
DETAIL.*                          #Like REQ.alarmData.*

                                  ┌────────────────────────┐
                                  │   ALARM ACTIONS LINT   │
                                  └────────────────────────┘

cdk-nag CloudWatchAlarmAction     #ALARM.*Actions.length > 0 and ALARM.ActionsEnabled true

                                  ┌──────────────────┐
                                  │   ALARM LAMBDA   │
                                  └──────────────────┘

INVOCATION ==>                    #InvocationType 'Event'
                                  #No response
                                  #Use following REQ

REQ.alarmData                     #REQD
REQD.configuration                #REQC

REQ.source                        #'aws.cloudwatch'
REQ.accountId                     #'ACCOUNT_ID'
REQ.region                        #'REGION'
REQ.time                          #'DATE'

REQ.alarmArn
REQD.alarmName
REQC.description                  #STR ALARM.*

REQD.previousState|state          #REQS. State before|after
REQS.value
REQS.reason
REQS.reasonData
REQS.timestamp                    #STR. ALARM.State*

REQC.metrics                      #REQM_ARR
REQM.metricStat.metric
 .namespace|name|dimensions
REQM.metricStat.unit|stat|period  #METRIC_ALARM.*
REQM.id
REQM.label
REQM.expression
REQM.returnData                   #METRIC_DATA_REQ.*

REQC.alarmRule
REQS.actionsSuppressedBy
REQS.actionsSuppressedReason
REQC.actionsSuppressor
REQC.actionsSuppressorWaitPeriod
REQC
 .actionsSuppressorExtensionPeriod#COMPOSITE_ALARM.*

                                  ┌───────────────────────┐
                                  │   ALARM LAMBDA AUTH   │
                                  └───────────────────────┘

PERMISSIONS ==>                   #Lambda FUNC must allow:
                                  #  - Principal.Service 'lambda.alarms.cloudwatch.amazonaws.com'
                                  #  - PACTION 'lambda:InvokeFunction'
                                  #  - COND_KEY SourceAccount 'ACCOUNT_ID'
                                  #  - COND_KEY SourceArn ALARM_ARN

                                  ┌──────────────────────┐
                                  │   ALARM LAMBDA IAC   │
                                  └──────────────────────┘

new LambdaAction(ICANYFUNC)       #CALARM_ACTION. FUNC_VERSION_ARN
                                  #Adds the proper CPERMISSION, as documented above
FFLAG @aws-cdk/
 aws-cloudwatch-actions:
 changeLambdaPermissionLogicalId  #BOOL (def: false, but recommended)
 ForLambdaAction                  #Append CALARM_CID to CPERMISSION_CID, i.e. allow multiple ALARMs for same FUNC_VERSION

                                  ┌─────────────────────────────────┐
                                  │   ALARM LAMBDA MONITORING IAC   │
                                  └─────────────────────────────────┘

new LambdaAlarmActionStrategy
 (ICANYFUNC)                      #CXALARM_ACTION

                                  ┌──────────┐
                                  │   LIST   │
                                  └──────────┘

ALL_ALARMS_REQ.AlarmTypes         #'MetricAlarm|CompositeAlarm'_ARR (def: ['MetricAlarm'])
ALL_ALARMS_REQ.AlarmNames         #'ALARM'_ARR
ALL_ALARMS_REQ.AlarmNamePrefix    #STR. Filter by 'ALARM' starting with STR
ALL_ALARMS_REQ.ActionPrefix       #STR. Filter by ALARM.*Actions starting with STR
ALL_ALARMS_REQ.StateValue         #STR. Filter by ALARM.StateValue

ALL_ALARMS_REQ.ParentsOfAlarmName #'ALARM'. Filter by parent COMPOSITE_ALARM
                                  #Cannot use any other ALL_ALARMS_REQ.*
                                  #Only ALL_ALARMS.*.AlarmArn|Name is returned
ALL_ALARMS_REQ.ChildrenOfAlarmName#'ALARM'. Filter by children ALARM
                                  #Cannot use any other ALL_ALARMS_REQ.*
                                  #Only ALL_ALARMS.*.AlarmArn|Name|StateValue|StateUpdatedTimestamp is returned

ALL_ALARMS.MetricAlarms           #METRIC_ALARM_ARR
ALL_ALARMS.CompositeAlarms        #COMPOSITE_ALARM_ARR

                                  ┌──────────────┐
                                  │   LIST API   │
                                  └──────────────┘

DescribeAlarms()                  #Req: ALL_ALARMS_REQ
                                  #Res: ALL_ALARMS
DeleteAlarms()                    #Req: ALL_ALARMS_REQ
                                  #  - only AlarmNames
                                  #Res: empty

                                  ┌────────────┐
                                  │   METRIC   │
                                  └────────────┘

METRIC_ALARM                      #Simple ALARM
                                  #WAIT (DescribeAlarms(), every 5s, timeout 3m): AlarmExists: when it exists
METRIC_ALARM.*                    #Any from ALARM.*

METRIC_ALARM.MetricName
METRIC_ALARM.Namespace
METRIC_ALARM.Dimensions           #Like METRIC.*
METRIC_ALARM.Unit                 #METRIC_DATUM.Unit
METRIC_ALARM.Statistic
METRIC_ALARM.ExtendedStatistic    #Like AGGR_QUERY_REQ.*
METRIC_ALARM.Period               #Like AGGR_QUERY_REQ.*, but min 10s
                                  #Min 1m if METRIC_ALARM.Namespace AWS/*

METRIC_ALARM.Metrics              #METRIC_DATA_REQ_ARR returning the values to evaluate
                                  #Advanced alternative to METRIC_ALARM.MetricName|Period|Statistic
                                  #Exactly one METRIC_DATA_REQ.ReturnData must be true
                                  #  - it is used to change the StateValue
                                  #Max 10 with MetricStat + 10 with Expression
                                  #Max 75 METRIC_ALARMs with INSIGHT_QUERY

METRIC_ALARM.ComparisonOperator   #'Greater|LessThan[OrEqualTo]Threshold'
METRIC_ALARM.Threshold            #NUM. Change StateValue based on VAL OP Threshold
                                  #  - VAL is each METRIC response values (after PERIOD aggregation)
                                  #  - OP is ComparisonOperator

METRIC_ALARM.EvaluationPeriods    #NUM of PERIODs with same evaluation before changing StateValue
                                  #Max total time: 7 days
                                  #If >= 1d, PERIOD must be >= 1h
METRIC_ALARM.DatapointsToAlarm    #NUM2. When combined with EvaluationPeriods NUM, means StateValue changes if either:
                                  #  - at least NUM2 out of NUM last PERIODs with same evaluation
                                  #  - NUM2 last PERIODs are undefined, and most recent defined PERIOD evaluates to false ("premature alarm")
                                  #Def: same value as EvaluationPeriods
METRIC_ALARM                      #Do not change StateValue if there are not enough PERIODs to be statistically significant.
 .EvaluateLowSampleCountPercentile#Only with ESTAT
                                  #Either 'evaluate' (false, def) or 'ignore' (true)
METRIC_ALARM.TreatMissingData     #EvaluationPeriods is NUM of non-undefined PERIODs
                                  #  - i.e. if a PERIOD is undefined, it is ignored and an additional earlier PERIOD is used instead
                                  #However, this is done up to a limit ("evaluation range").
                                  #When reached, undefined PERIODs are added to fill EvaluationPeriods. Those are:
                                  #  - 'missing' (def): ignored. If all PERIODs are undefined, keep current StateValue.
                                  #  - 'ignore': ignored. If all PERIODs are undefined, StateValue 'INSUFFICIENT_DATA'
                                  #  - 'breaching': StateValue 'ALARM'
                                  #  - 'notBreaching': StateValue 'OK'

METRIC_ALARM.EvaluationState      #'PARTIAL_DATA' when METRIC response values truncated due to matching >1e4 METRICs

                                  ┌────────────────┐
                                  │   METRIC API   │
                                  └────────────────┘

PutMetricAlarm()                  #Req: METRIC_ALARM
                                  #  - no AlarmArn,  AlarmConfigurationUpdatedTimestamp, *State*
                                  #Res: empty
DescribeAlarmsForMetric()         #Req: METRIC_ALARM
                                  #  - only Dimensions, ExtendedStatistic, MetricName, Namespace, Period, Statistic, Unit
                                  #Res: MetricAlarms METRIC_ALARM_ARR

                                  ┌────────────────┐
                                  │   METRIC IAC   │
                                  └────────────────┘

AWS::CloudWatch::Alarm            #RESPROPs: MetricName, Namespace, Dimensions, Unit, Statistic, ExtendedStatistic, Period, Metrics,
                                  #ComparisonOperator, Threshold, EvaluationPeriods, DatapointsToAlarm, EvaluateLowSampleCountPercentile, TreatMissingData
                                  #RESATTRs: Arn

new Alarm(...CARGS, OPTS)         #CMETRIC_ALARM. CKRESOURCE wrapping METRIC_ALARM
                                  #Inherits ICALARM

Alarm.fromAlarmArn
 (...CARGS, ALARM_ARN)
 ->ICMETRIC_ALARM                 #
Alarm.fromAlarmName
 (...CARGS, 'ALARM')
 ->ICMETRIC_ALARM                 #

OPTS.period
OPTS.threshold
OPTS.evaluationPeriods
OPTS.datapointsToAlarm
OPTS
 .evaluateLowSampleCountPercentile
OPTS.treatMissingData             #METRIC_ALARM.*
OPTS.statistic                    #'XSTAT'. METRIC_ALARM.[Extended]Statistic. Can be case-insensitive
OPTS.comparisonOperator           #STR (def: 'GreaterThanOrEqualToThreshold'). METRIC_ALARM.ComparisonOperator

OPTS|CMETRIC_ALARM.metric         #ICMETRIC. METRIC_ALARM.MetricName|Namespace|Dimensions|Unit|[Extended]Statistic|Period
                                  #METRIC_ALARM.Metrics METRIC_DATA_REQ_ARR is used instead if one of:
                                  #  - MATH_QUERY
                                  #  - 'LABEL' specified: set as METRIC_DATA_REQ.Label
                                  #  - cross-account:
                                  #     - between STACKs of ALARM and METRIC (using CMETRIC.account or CMATH.searchAccount)
                                  #     - sets METRIC_DATA_REQ.AccountId ACCOUNT_ID
                                  #Then, METRIC_DATA_REQ items are:
                                  #  - if not MATH_QUERY, only one with: Id 'm1', ReturnData true
                                  #  - if MATH_QUERY, one with:
                                  #     - for CMATH: Id 'expr_NUM', ReturnData true
                                  #     - for each CMATH.usingMetrics.METRIC: Id 'METRIC', ReturnData false
ICMETRIC.createAlarm
 (...CARGS[, CMETRIC_ALARM_OPTS])
 ->CMETRIC_ALARM                  #Alternative, using OPTS.metric ICMETRIC

                                  ┌─────────────────┐
                                  │   METRIC LINT   │
                                  └─────────────────┘

cfn-lint E3615                    #Validate METRIC_ALARM.Period

                                  ┌────────────────────────────────┐
                                  │   METRIC MAIN MONITORING IAC   │
                                  └────────────────────────────────┘

CFACADE|CMONITORING
 .createAlarmFactory(STR)
 ->CALARM_FACTORY
new AlarmFactory(PARENT_CONSTRUCT,#CALARM_FACTORY
 CALARM_FACTORY_OPTS)             #STR is CALARM_FACTORY_OPTS.localAlarmNamePrefix

CFACADE_OPTS.alarmFactoryDefaults
CALARM_FACTORY_OPTS
 .globalAlarmDefaults             #CXALARM_GOPTS

CALARM_FACTORY.addAlarm           #Like new Alarm()
 (ICMETRIC, CXALARM_OPTS)         #ICMETRIC is METRIC_ALARM.Metric, cloned
 ->CXALARM                        #  - its ICMETRIC.Label 'LABEL' removes any dynamic labels (...${...}...)
                                  #     - reason: not supported by WANNOT.label
CXALARM|CACTION_OPTS.alarm        #CMETRIC_ALARM
CXALARM_OPTS.metricAdjuster       #ARR of FUNC(ICMETRIC, PARENT_CONTRUCT, CXALARM_OPTS)->ICMETRIC, mapping ICMETRIC

CXALARM_[G]OPTS
 .actionsEnabled[.SEVERITY]       #METRIC_ALARM.ActionsEnabled
CXALARM_OPTS.period               #METRIC_ALARM.Period
CXALARM[_OPTS].comparisonOperator #METRIC_ALARM.ComparisonOperator
CXALARM[_OPTS].threshold          #METRIC_ALARM.Threshold
CXALARM[_[G]OPTS]
 .evaluationPeriods               #METRIC_ALARM.EvaluationPeriods (def: same as datapointsToAlarm).
CXALARM[_[G]OPTS]
 .datapointsToAlarm               #METRIC_ALARM.DatapointsToAlarm (def: 3)
CXALARM_OPTS                      #METRIC_ALARM.EvaluateLowSampleCountPercentile. Is false|true instead of 'evaluate|ignore'
 .evaluateLowSampleCountPercentile#Also, default is different: true
CXALARM_OPTS.treatMissingData     #METRIC_ALARM.TreatMissingData

CXALARM_OPTS                      #NUM. When set, use a CMATH with:
.minSampleCountToEvaluateDatapoint#  - expression 'IF(MVAR > NUM, MVAR2)'
                                  #  - usingMetrics.MVAR ICMETRIC: statistic 'SampleCount', label 'Sample count'
                                  #  - usingMetrics.MVAR2 ICMETRIC: as is
                                  #IF ICMETRIC is a CMATH2 itself:
                                  #  - re-use CMATH2.expression
                                  #  - must specify CXALARM_OPTS.sampleCountMetricId 'MVAR', unless there is only one MVAR

CXALARM[_OPTS]|CACTION_OPTS       #'CALARM_GROUP'_ARR (def: [])
 .customTags                      #Used only by CFACADE.createdAlarmsWithTag|createComposite*() to filter CALARMs
CXALARM[_OPTS]|CACTION_OPTS
 .customParams                    #OBJ (def: {}). Not used, but can be retrieved

                                  ┌────────────────────────────────┐
                                  │   METRIC NAME MONITORING IAC   │
                                  └────────────────────────────────┘

CXALARM.alarmName                 #METRIC_ALARM.AlarmName
CXALARM.alarmLabel                #DMETRICS.title

CXALARM[_OPTS].alarmNameSuffix    #Sets CXALARM.alarmName|alarmLabel
CXALARM_OPTS.alarmNameOverride    #Sets CXALARM.alarmName, but ignore prepended|appended parts
CMONITORING_OPTS
 .localAlarmNamePrefixOverride
CALARM_FACTORY_OPTS               #Prepended to CXALARM.alarmName|alarmLabel (joined with -)
 .localAlarmNamePrefix            #With CFACADE, is passed using CFACADE.createAlarmFactory(STR)
CXALARM_GOPTS.alarmNamePrefix     #Prepended to CXALARM.alarmName (joined with -)
                                  #With CFACADE, def: 'CFACADE' (unless CFACADE_OPTS.alarmFactoryDefaults set)
CXALARM[_OPTS]|CACTION_OPTS       #'SEVERITY'. Appended to CXALARM.alarmName|alarmLabel (joined with -)
 .disambiguator                   #Example: 'Warning', 'Critical', etc.

CXALARM_GOPTS.alarmNamingStrategy #Customize CXALARM.alarmName|alarmLabel logic
                                  #Not documented yet

CXALARM[_OPTS].alarmDescription   #METRIC_ALARM.AlarmDescription
CXALARM_[G]OPTS.runbookLink       #'URL'. Appends ' \r\n Runbook: URL' to CXALARM.alarmDescription
CXALARM_[G]OPTS.documentationLink #'URL'. Appends ' \r\n Documentation: URL' to CXALARM.alarmDescription

                                  ┌─────────────────────────────────┐
                                  │   METRIC TYPES MONITORING IAC   │
                                  └─────────────────────────────────┘

new *AlarmFactory(CALARM_FACTORY) #CXALARM_FACTORY
CXALARM_FACTORY.alarmFactory      #CALARM_FACTORY

CXALARM_FACTORY.add*Alarm         #Like CALARM_FACTORY.addAlarm() but with CXALARM_OPTS:
 (ICMETRIC, CXALARM_OPTS          #  - threshold -> THRESHOLD_PROP
 [, 'SEVERITY'])->CXALARM         #  - comparisonOperator (no default) -> comparisonOperatorOverride (def: depends)
                                  #  - treatMissingData (def: MISSING) -> treatMissingDataOverride (def: depends)
                                  #  - alarmNameSuffix and alarmDescription set
                                  #  - disambiguator 'SEVERITY'
                                  #Sometimes additional ARGS are passed to .addAlarm(...ARGS) to help set comparisonOperator|alarmNameSuffix|alarmDescription
                                  #Following *.* methods are available
                                  #  - e.g. Age.DaysToExpiry means new AgeAlarmFactory(...).addDaysToExpiryAlarm(...)

Custom.Custom                     #alarmNameSuffix ARGS[1]
                                  #alarmDescription CXALARM_OPTS.additionalDescription (def: 'Threshold of THRESHOLD has been breached.')

Error.ErrorCount                  #THRESHOLD_PROP maxErrorCount
                                  #comparisonOperator >
                                  #treatMissingData NOT_BREACHING
                                  #alarmNameSuffix 'ARGS[1]-Count'
                                  #alarmDescription 'ARGS[1] count is too high'
Error.ErrorRate                   #THRESHOLD_PROP maxErrorRate
                                  #comparisonOperator >
                                  #treatMissingData NOT_BREACHING
                                  #alarmNameSuffix 'ARGS[1]-Rate'
                                  #alarmDescription 'ARGS[1] rate is too high'

Latency.Latency                   #THRESHOLD_PROP maxLatency DURATION
                                  #comparisonOperator >
                                  #treat MissingData NOT_BREACHING
                                  #alarmNameSuffix 'Latency-ARGS[1][-ARGS[4]]'
                                  #alarmDescription 'ARGS[1] latency is too high'
Latency.Duration                  #THRESHOLD_PROP maxDuration DURATION
                                  #comparisonOperator >
                                  #treat MissingData NOT_BREACHING
                                  #alarmNameSuffix 'Duration-ARGS[1][-ARGS[4]]'
                                  #alarmDescription 'ARGS[1] duration is too high'

Tps.MinTps                        #THRESHOLD_PROP minTps
                                  #comparisonOperator <
                                  #alarmNameSuffix 'Tps-Min'
                                  #alarmDescription 'TPS is too low.'
Tps.MaxTps                        #THRESHOLD_PROP maxTps
                                  #comparisonOperator >
                                  #alarmNameSuffix 'Tps-Max'
                                  #alarmDescription 'TPS is too high.'

Age.DaysToExpiry                  #THRESHOLD_PROP minDaysToExpiry
                                  #comparisonOperator <
                                  #alarmNameSuffix 'DaysToExpiry'
                                  #alarmDescription 'Number of days until expiration is too low.'
Age.DaysSinceUpdate               #THRESHOLD_PROP maxDaysSinceUpdate
                                  #comparisonOperator >
                                  #alarmNameSuffix 'DaysSinceUpdate'
                                  #alarmDescription 'Number of days since update is too high.'
Age.IteratorMaxAge                #THRESHOLD_PROP maxAgeInMillis
                                  #comparisonOperator >
                                  #alarmNameSuffix 'Iterator-Age-Max'
                                  #alarmDescription 'Iterator Max Age is too high.'

TaskHealth.HealthyTaskPercent     #THRESHOLD_PROP minHealthyTaskPercent
                                  #comparisonOperator <
                                  #alarmNameSuffix 'Healthy-Task-Percent'
                                  #alarmDescription 'Percentage of healthy tasks is too low.'
TaskHealth.HealthyTaskCount       #THRESHOLD_PROP minHealthyTasks
                                  #comparisonOperator <
                                  #alarmNameSuffix 'Healthy-Tasks'
                                  #alarmDescription 'Number of healthy tasks is too low.'
TaskHealth.UnhealthyTaskCount     #THRESHOLD_PROP maxUnhealthyTasks
                                  #comparisonOperator >
                                  #alarmNameSuffix 'Unhealthy-Tasks'
                                  #alarmDescription 'Number of unhealthy tasks is too high.'
TaskHealth.RunningTaskRate        #THRESHOLD_PROP maxRunningTaskRate
                                  #comparisonOperator >
                                  #treat MissingData NOT_BREACHING
                                  #alarmNameSuffix 'Task-Rate'
                                  #alarmDescription 'Running task rate is too high.'
TaskHealth.MinRunningTaskCount    #THRESHOLD_PROP minRunningTasks
                                  #comparisonOperator <
                                  #alarmNameSuffix 'Running-Tasks-Low'
                                  #alarmDescription 'Number of running tasks is too low.'
TaskHealth.RunningTaskCount       #THRESHOLD_PROP maxRunningTasks
                                  #comparisonOperator >
                                  #alarmNameSuffix 'Running-Tasks-High'
                                  #alarmDescription 'Number of running tasks is too high.'
TaskHealth.Availability           #THRESHOLD_PROP minAvailabilityPercent
                                  #comparisonOperator <
                                  #alarmNameSuffix 'Availability'
                                  #alarmDescription 'The availability is too low.'

Usage.MinCount                    #THRESHOLD_PROP minCount
                                  #comparisonOperator <
                                  #alarmNameSuffix 'Min-Usage-Count'
                                  #alarmDescription 'The count is too low.'
Usage.MaxCount                    #THRESHOLD_PROP maxCount
                                  #comparisonOperator >
                                  #alarmNameSuffix 'Max-Usage-Count'
                                  #alarmDescription 'The count is too high.'
Usage.MaxCpuUsagePercent          #THRESHOLD_PROP maxUsagePercent
                                  #comparisonOperator >
                                  #alarmNameSuffix '[ARGS[3]-]CPU-Usage[-ARGS[4]]'
                                  #alarmDescription 'The CPU usage is too high.'
Usage.MemoryUsagePercent          #THRESHOLD_PROP maxUsagePercent
                                  #comparisonOperator >
                                  #alarmNameSuffix 'ARGS[2]-Memory-Usage'
                                  #alarmDescription 'The CPU usage is too high.'
Usage.MaxMemoryUsagePercent       #THRESHOLD_PROP maxUsagePercent
                                  #comparisonOperator >
                                  #alarmNameSuffix 'Memory-Usage'
                                  #alarmDescription 'The CPU usage is too high.'
Usage.MaxDiskUsagePercent         #THRESHOLD_PROP maxUsagePercent
                                  #comparisonOperator >
                                  #alarmNameSuffix 'Disk-Usage'
                                  #alarmDescription 'The disk usage is too high.'
Usage.MaxFileDescriptorPercent    #THRESHOLD_PROP maxUsagePercent
                                  #comparisonOperator >
                                  #alarmNameSuffix 'File-Descriptor-Usage'
                                  #alarmDescription 'The file descriptor usage is too high.'
Usage.MaxThreadCountUsage         #THRESHOLD_PROP maxUsageCount
                                  #comparisonOperator >
                                  #alarmNameSuffix 'Thread-Count'
                                  #alarmDescription 'The thread count is too high.'

Connection.MinConnectionCount     #THRESHOLD_PROP minConnectionCount
                                  #comparisonOperator <
                                  #alarmNameSuffix 'Connection-Count-Low'
                                  #alarmDescription 'Number of connections is too low.'
Connection.MaxConnectionCount     #THRESHOLD_PROP maxConnectionCount
                                  #comparisonOperator >
                                  #alarmNameSuffix 'Connection-Count-High'
                                  #alarmDescription 'Number of connections is too high.'

Throughput.MinProcessedBytes      #THRESHOLD_PROP minProcessedBytes
                                  #comparisonOperator <
                                  #treat MissingData NOT_BREACHING
                                  #alarmNameSuffix 'Processed-Bytes-Min'
                                  #alarmDescription 'Minimum number of processed bytes is too low.'

                                  ┌───────────────┐
                                  │   COMPOSITE   │
                                  └───────────────┘

COMPOSITE_ALARM                   #Combination of multiple ALARMs
                                  #WAIT (DescribeAlarms(), every 5s, timeout 3m) CompositeAlarmExists: when it exists
                                  #Max 100 ALARMs. Each ALARM can be used by max 150 COMPOSITE_ALARMs
COMPOSITE_ALARM.*                 #Any from ALARM.*

COMPOSITE_ALARM.AlarmRule         #STR. Compute StateValue based on underlying ALARMs StateValues.
                                  #'[NOT] ALARM_STATE [AND|OR ...]'
                                  #  - can use parenthesis
                                  #  - max 500 ALARM_STATEs, 1e4 chars
                                  #ALARM_STATE can be:
                                  #  - OK|INSUFFICIENT_DATA|ALARM('ALARM'|ALARM_ARN): true|false if has that StateValue
                                  #  - TRUE|FALSE: meant for testing
                                  #Final result true|false -> StateValue 'ALARM|OK'

COMPOSITE_ALARM.ActionsSuppressor #'ALARM'|ALARM_ARN
                                  #If that ALARM StateValue is 'ALARM', do not trigger COMPOSITE_ALARM.*Actions
                                  #Goal: reduce noise, avoiding both COMPOSITE_ALARM and suppressor ALARM to trigger when they are corrolated
COMPOSITE_ALARM                   #NUM (in secs, def: 0)
 .ActionsSuppressorWaitPeriod     #Duration for ActionsSuppressor to suppress *Actions, when COMPOSITE_ALARM StateValue becomes 'ALARM'
                                  #Goal: give enough time for suppressor ALARM to change its own StateValue
COMPOSITE_ALARM                   #NUM (in secs, def: 0)
 .ActionsSuppressorExtensionPeriod#Duration for ActionsSuppressor to suppress *Actions, when suppressor ALARM StateValue stops being 'ALARM'
                                  #Goal: give enough time for COMPOSITE_ALARM to change its own StateValue
COMPOSIT_ALARM.ActionsSuppressedBy#When ActionsSuppressor is active, the main reason:
                                  #  - 'Alarm': normal
                                  #  - 'WaitPeriod': ActionsSuppressorWaitPeriod
                                  #  - 'ExtensionPeriod': ActionsSuppressorExtensionPeriod
COMPOSITE_ALARM
 .ActionsSuppressedReason         #STR. Additional reason for ActionsSupressedBy

                                  ┌───────────────────┐
                                  │   COMPOSITE API   │
                                  └───────────────────┘

PutCompositeAlarm()               #Req: COMPOSITE_ALARM
                                  #  - no AlarmArn,  AlarmConfigurationUpdatedTimestamp, *State*
                                  #  - no ActionsSuppressedBy, ActionsSuppressedReason
                                  #Res: empty

                                  ┌───────────────────┐
                                  │   COMPOSITE IAC   │
                                  └───────────────────┘

AWS::CloudWatch::CompositeAlarm   #RESPROPs: AlarmRule, ActionsSuppressor, ActionsSuppressorWaitPeriod, ActionsSuppressorExtensionPeriod
                                  #RESATTRs: Arn

new CompositeAlarm(...CARGS, OPTS)#CCOMPOSITE_ALARM. CKRESOURCE wrapping COMPOSITE_ALARM
                                  #Inherits ICALARM

Alarm.fromCompositeAlarmArn
 (...CARGS, ALARM_ARN)
 ->ICCOMPOSITE_ALARM              #
Alarm.fromCompositeAlarmName
 (...CARGS, 'ALARM')
 ->ICCOMPOSITE_ALARM              #

OPTS.alarmRule                    #CALARM_RULE. COMPOSITE_ALARM.AlarmRule
AlarmRule.fromString
 (STR)->CALARM_RULE               #STR
AlarmRule.fromAlarm
 (ICALARM, STR)->CALARM_RULE      #'STR(ALARM_ARN)'
ICALARM                           #Is a CALARM_RULE itself. 'ALARM(ALARM_ARN)'
AlarmRule.fromBoolean
 (BOOL)->CALARM_RULE              #'TRUE|FALSE'
AlarmRule.not
 (CALARM_RULE)->CALARM_RULE2      #'(NOT (...))'
AlarmRule.allOf|anyOf
 (CALARM_RULE,...)->CALARM_RULE2  #'(... AND|OR ...)'

OPTS.actionsSuppressor            #ICALARM. COMPOSITE_ALARM.ActionsSuppressor
OPTS.actionsSuppressorWaitPeriod  #DURATION (def: 1m). COMPOSITE_ALARM.ActionsSuppressorWaitPeriod
OPTS
 .actionsSuppressorExtensionPeriod#DURATION (def: 1m). COMPOSITE_ALARM.ActionsSuppressorExtensionPeriod

                                  ┌──────────────────────────────┐
                                  │   COMPOSITE MONITORING IAC   │
                                  └──────────────────────────────┘

CFACADE.createCompositeAlarmUsing
 Disambiguator('SEVERITY', OPTS)
 [->CCOMPOSITE_ALARM]             #CFACADE.createdAlarmsWithDisambiguator() + CALARM_FACTORY.addCompositeAlarm()
CFACADE.createCompositeAlarmUsing
 Tag('CALARM_GROUP', OPTS)
 [->CCOMPOSITE_ALARM]             #CFACADE.createdAlarmsWithTag() + CALARM_FACTORY.addCompositeAlarm()
CALARM_FACTORY.addCompositeAlarm
 (CXALARM_ARR, OPTS)
 ->CCOMPOSITE_ALARM               #

OPTS.actionsEnabled
OPTS.actionOverride
CXALARM_GOPTS.action              #Like CALARM_FACTORY.addAlarm()
OPTS.alarmNameOverride
 |disambiguator
CALARM_FACTORY_OPTS
 .localAlarmNamePrefix
CXALARM_GOPTS.alarmNamePrefix     #Like CALARM_FACTORY.addAlarm(), except OPTS.alarmNameSuffix always 'Composite'
OPTS.alarmDescription|runbookLink
 |documentationLink               #Like CALARM_FACTORY.addAlarm(), except OPTS.alarmDescription def 'Composite Alarm'

OPTS.compositeOperator            #BOOL. Determine COMPOSITE_ALARM.AlarmRule:
                                  #  - false (def): 'ALARM(ALARM_ARN) OR ALARM(ALARM_ARN2) ...'
                                  #  - true: 'ALARM(ALARM_ARN) AND ALARM(ALARM_ARN2) ...'
OPTS.actionsSuppressor*           #CCOMPOSITE_ALARM.*

CXALARM.alarmRuleWhenOk
 |InsufficientData|Alarming       #'OK|INSUFFICIENT_DATA|ALARM(ALARM_ARN)'. Can be used as CCOMPOSITE_ALARM_OPTS.alarmRule

                                  ┌─────────────┐
                                  │   HISTORY   │
                                  └─────────────┘

ALARM_HISTORY_ITEM                #History of ALARMs change of properties, including StateValue
                                  #Only kept for 30 days
ALARM_HISTORY_ITEM.AlarmName      #'ALARM'
ALARM_HISTORY_ITEM.AlarmType      #'MetricAlarm|CompositeAlarm'

ALARM_HISTORY_ITEM.Timestamp      #'DATE'

ALARM_HISTORY_ITEM.HistoryItemType#One of:
                                  #  - 'StateUpdate': StateValue change
                                  #  - 'ConfigurationUpdate'
                                  #  - 'Action'
ALARM_HISTORY_ITEM.HistorySummary #STR. Description
ALARM_HISTORY_ITEM.HistoryData    #'JSON'

                                  ┌─────────────────┐
                                  │   HISTORY API   │
                                  └─────────────────┘

DescribeAlarmHistory()            #Req: ALARM_HISTORY_ITEM
                                  #  - no HistoryData, HistorySummary
                                  #  - AlarmType -> AlarmTypes ARR
                                  #  - Timestamp -> StartDate|EndDate 'DATE'
                                  #  - also ScanBy 'TimestampDescending|TimestampAscending': sorting order
                                  #Res: AlarmHistoryItems ALARM_HISTORY_ITEM_ARR

                                  ┌─────────────────┐
                                  │   HISTORY SAM   │
                                  └─────────────────┘

CloudWatchDescribeAlarm           #SAM POLICY_TEMPLATE (see its doc) that allows:
 HistoryPolicy                    #  - PACTION cloudwatch:DescribeAlarmHistory
                                  #  - on Resource '*'

                                  ┌─────────────┐
                                  │   ANOMALY   │
                                  └─────────────┘

ANOMALY_DETECTOR                  #Guess expected values of a METRIC using machine learning
                                  #Generates upper|lower threshold
                                  #  - can differ per time of day, etc.
                                  #Shown in graphs
                                  #Based on last 2 weeks of METRIC_DATUMs
                                  #Max 500
ANOMALY_DETECTOR.Configuration    #ANOMALY_DETECTOR_CONF

ANOMALY_DETECTOR.StateValue       #Whether training:
                                  #  - 'PENDING_TRAINING': not started
                                  #  - 'TRAINED_INSUFFICIENT_DATA': ongoing
                                  #  - 'TRAINED': done
ANOMALY_DETECTOR_CONF             #RANGE_ARR
 .ExcludedTimeRanges              #Max 10
RANGE                             #Specific time range to exclude for training
RANGE.StartTime|EndTime           #'DATE'
ANOMALY_DETECTOR_CONF
 .MetricTimezone                  #STR. Def: UTC
ANOMALY_DETECTOR
 .MetricCharacteristics
 .PeriodicSpikes                  #BOOL (def: false). Ignore spikes during training

ANOMALY_DETECTOR
 .AnomalyDetectorTypes            #STR_ARR among 'SINGLE_METRIC' (def) or 'METRIC_MATH'
ANOMALY_DETECTOR
 .SingleMetricAnomalyDetector     #SIMPLE_DETECTOR
SIMPLE_DETECTOR                   #Single METRIC, aggregated per PERIOD with XSTAT
SIMPLE_DETECTOR.MetricName
SIMPLE_DETECTOR.Namespace
SIMPLE_DETECTOR.Dimensions        #Like METRIC.*
SIMPLE_DETECTOR.Stat              #'XSTAT'
SIMPLE_DETECTOR.AccountId         #Like METRIC_DATA_REQ.*

ANOMALY_DETECTOR
 .MetricMathAnomalyDetector       #MATH_DETECTOR
MATH_DETECTOR                     #Advanced alternative to SIMPLE_DETECTOR, using MATH_QUERY|INSIGHT_QUERY
MATH_DETECTOR.MetricDataQueries   #METRIC_DATA_REQ_ARR. Like METRIC_ALARM.Metrics

ANOMALY_DETECTION_BAND            #MATH_QUERY function using ANOMALY_DETECTOR
 (ARR[, NUM])                     #ANOMALY_DETECTOR specified either:
                                  #  - SIMPLE_DETECTOR: using same MetricName
                                  #  - MATH_DETECTOR: parent
                                  #  - otherwise: automatically created
                                  #Returns an ARR_ARR with two elements: upper|lower threshold
                                  #NUM (def: 2) is number of standard deviations between mean and each threshold
                                  #Cannot be used with:
                                  #  - METRICS|SEARCH()
                                  #  - StorageResolution 1
                                  #When using multiple METRICs:
                                  #  - max 10 METRICs
                                  #  - must all have same PERIOD
                                  #Max 1 per MATH_QUERY
METRIC_ALARM.ThresholdMetricId    #'MVAR' of a METRIC_DATA_RES using ANOMALY_DETECTION_BAND
                                  #Alternative to METRIC_ALARM.Threshold: use ANOMALY_DETECTOR's upper|lower threshold
                                  #instead of single static value

                                  ┌─────────────────┐
                                  │   ANOMALY API   │
                                  └─────────────────┘

PutAnomalyDetector()              #Req: ANOMALY_DETECTOR
                                  #  - no StateValue
                                  #Res: empty
DescribeAnomalyDetectors()        #Req: ANOMALY_DETECTOR
                                  #  - only AnomalyDetectorTypes, MetricName, Namespace, Dimensions
                                  #Res: AnomalyDetectors ANOMALY_DETECTOR_ARR
DeleteAnomalyDetector()           #Req: ANOMALY_DETECTOR
                                  #  - only MetricMathAnomalyDetector, SingleMetricAnomalyDetector
                                  #Res: empty

                                  ┌─────────────────┐
                                  │   ANOMALY IAC   │
                                  └─────────────────┘

AWS::CloudWatch::AnomalyDetector  #RESPROPs: Configuration, SingleMetricAnomalyDetector, MetricMathAnomalyDetector, MetricCharacteristics
                                  #Not with Cloud Control (as of now)
AWS::CloudWatch::Alarm            #Includes RESPROPs: ThresholdMetricId

                                  ┌────────────────────────────┐
                                  │   ANOMALY MONITORING IAC   │
                                  └────────────────────────────┘

CCDETECTOR                        #CMATH + DMETRICS + METRIC_ALARM + DALARM
                                  #Creates one of each for each CCDETECTOR.addAlarmOnAnomaly.*
                                  #To set to CCDMETRICS.metrics (see CloudWatch Dashboard doc)
                                  #CMATH uses CMATH_OPTS:
                                  #  - expression 'ANOMALY_DETECTION_BAND(MVAR,STDEV_NUM)'
                                  #  - usingMetrics.MVAR ICMETRIC
                                  #Also, fixes a current CDK bug when using ANOMALY_DETECTION_BAND() + CMETRIC_ALARM:
                                  #  - use METRIC_ALARM.ThresholdMetricId instead of METRIC_ALARM.Threshold
                                  #  - correctly set METRIC_DATA_REQ.ReturnData
                                  #Also, fixes a current CDK bug when using ANOMALY_DETECTION_BAND() + DMETRICS
CCDETECTOR.metric                 #ICMETRIC
CCDETECTOR.period                 #CMATH_OPTS.period (def: ICMETRIC.period)
CCDETECTOR.anomalyDetection       #STDEV_NUM for DMETRICS
 StandardDeviationToRender        #Also sets CMATH_OPTS.label 'Expected (stdev = STDEV_NUM)'
CXALARM_OPTS                      #STDEV_NUM for DALARM
 .standardDeviationForAlarm       #Also sets CMATH_OPTS.label 'Band (stdev STDEV_NUM)'
                                  #Also appended to DMETRICS.title as ' (alarms with stdev STDEV_NUM, ...)'
CCDETECTOR.alarmFriendlyName      #'ALARM'. Sets CMATH_OPTS.expressionId 'anomaly_HASH[_SEVERITY]' using hash of 'ALARM'
                                  #  - '_SEVERITY' is prepended with DALARM, but not with DMETRICS
                                  #Must be [:alnum:]-_ only
CCDETECTOR                        #CXALARM_OPTS except:
 .addAlarmOnAnomaly.SEVERITY      #  - disambiguator always 'SEVERITY'
                                  #  - treatMissingData -> treatMissingDataOverride
                                  #  - threshold always 0
                                  #  - comparisonOperator -> alarmWhenAbove|BelowTheBand BOOL (def: false)
                                  #  - alarmDescription -> additionalDescription
                                  #    (def: 'Anomaly detection: value is outside|above|below the expected band')

CMETRIC_FACTORY                   #Like new MathExpression() but using positional arguments instead:
 .createMetricAnomalyDetection    #metric ICMETRIC, stdev NUM, label, color, expressionId 'MVAR' (def: 'm1'), period, searchRegion, searchAccount
 (...)->CMATH                     #Used by CCDETECTOR under-the-hood
                                  #Uses CMATH_OPTS:
                                  #  - expression 'ANOMALY_DETECTION_BAND(MVAR,NUM)'
                                  #  - usingMetrics.MVAR ICMETRIC
                                  #Also, fixes a current CDK bug when using ANOMALY_DETECTION_BAND() + CMETRIC_ALARM:
                                  #  - use METRIC_ALARM.ThresholdMetricId instead of METRIC_ALARM.Threshold
                                  #  - correctly set METRIC_DATA_REQ.ReturnData

AnomalyDetecting.WhenOutOfBand    #CXALARM_FACTORY type (see the other ones above) for ANOMALY_DETECTION_BAND()
                                  #Used by CCDETECTOR under-the-hood
                                  #threshold always 0
                                  #comparisonOperator CXALARM_OPTS.alarmWhenBelow|AboveTheBand BOOL (def: false)
                                  #alarmNameSuffix ARGS[1]
                                  #alarmDescription CXALARM_OPTS.additionalDescription
                                  #(def: 'Anomaly detection: value is outside|below|above the expected band.')
