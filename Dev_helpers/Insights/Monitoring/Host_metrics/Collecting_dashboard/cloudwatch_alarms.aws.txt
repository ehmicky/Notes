
                     
   CLOUDWATCH_ALARMS  
                     



VERSION ==>                   #See CloudWatch doc

SUMMARY ==>                   #Alarm: state, actions (EC2|SWF|AutoScaling|SNS|SSM), history
                              #Metric alarm: aggregated|insight|math query, threshold, evaluation period
                              #Composite alarm: rule, suppressor
                              #Anomaly detector: training, time ranges, aggregated|insight|math query


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:              API              :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/



SERVICE_DOMAIN
FORMAT ==>
PAGINATION ==>                #See CloudWatch doc

PRICING ==>                   #1$/month per 10 METRIC_ALARMs
                              #  - multiplied by number of METRICs per METRIC_ALARM
                              #     - 1 ANOMALY_DETECTOR counts as 3 METRICs
                              #  - high StorageResolution: 3 times more expensive
                              #  - free: 10/month
                              #     - not with METRIC_DATA_REQ nor high StorageResolution
                              #1$/month per 2 COMPOSITE_ALARMs


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:             MAIN              :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


SetAlarmState()               #Req: ALARM
                              #  - only AlarmName, StateReason, StateReasonData, StateValue
                              #Res: empty
EnableAlarmActions()          #Req: ALARM
                              #  - only AlarmName -> AlarmNames ARR
                              #Res: empty
                              #Set ActionsEnabled true
DisableAlarmActions()         #Req: ALARM
                              #  - only AlarmName -> AlarmNames ARR
                              #Res: empty
                              #Set ActionsEnabled false

ALARM                         #Poller for METRICs.
                              #Trigger actions when a specific condition changes.
                              #Max 5000
ALARM.AlarmArn                #ALARM_ARN. 'arn:aws:cloudwatch:REGION:ACCOUNT_ID:alarm:ALARM'
ALARM.AlarmName               #'ALARM'
ALARM.AlarmDescription        #STR
ALARM.AlarmConfiguration
 UpdatedTimestamp             #'DATE'

ALARM.ActionsEnabled          #BOOL (def: true). To disable ALARM

ALARM.StateValue              #One of:
                              #  - "OK": no feedback
                              #  - "INSUFFICIENT_DATA":
                              #     - pending feedback
                              #     - initial state when creating an ALARM
                              #  - "ALARM": feedback
                              #Can be manually set, for testing.
ALARM.StateReason             #STR. Description of StateValue
ALARM.StateReasonData         #'JSON'. Data related to StateValue
ALARM.StateTransitioned
 Timestamp                    #'DATE' of last StateValue change
ALARM.StateUpdatedTimestamp   #'DATE' of last StateValue|EvaluationState change

ALARM.AlarmActions            #ARN_ARR. Trigger action when StateValue becomes 'ALARM'
                              #ARN can be:
                              #  - METRIC_ALARM:
                              #     - "arn:aws:automate:REGION:ec2:stop|terminate|reboot|recover"
                              #     - "arn:aws:swf:REGION:ACCOUNT_ID:action/actions/AWS_EC2.InstanceId.Stop|Terminate|Reboot|Recover/1.0"
                              #     - "arn:aws:autoscaling:REGION:ACCOUNT_ID:scalingPolicy:POLICY_MID:autoScalingGroupName/AUTO_SCALING_GROUP:policyName/POLICY"
                              #     - "arn:aws:sns:REGION:ACCOUNT_ID:TOPIC:autoScalingGroupName/AUTO_SCALING_GROUP:policyName/POLICY"
                              #     - "arn:aws:ssm-incidents::ACCOUNT_ID:responseplan/RESPONSE_PLAN"
                              #  - COMPOSITE_ALARM:
                              #     - SNS_TOPIC_ARN
                              #  - both:
                              #     - "arn:aws:ssm:REGION:ACCOUNT_ID:opsitem:SEVERITY[#CATEGORY=CATEGORY]"
ALARM.InsufficientDataActions #Same for StateValue 'INSUFICIENT_DATA'
ALARM.OKDataActions           #Same for StateValue 'OK'

AWSServiceRole                #SERVICE_LINKED_ROLE used by CloudWatch to perform EC2 ALARM.*Actions
 ForCloudWatchEvents          #Allows ec2:Stop|Terminate|RecoverInstances() and ec2:DescribeInstances*()
                              #Created by the first PutMetricAlarm() using EC2 actions
                              #  - i.e. that call requires iam:CreateServiceLinkedRole() PACTION

TagResource()
ListTagsForResource()
UntagResource()
RESOURCE_TAGS.ResourceARN
RESOURCE_TAGS.Tags
ALARM.Tags                    #


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:             LIST              :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


DescribeAlarms()              #Req: ALL_ALARMS_REQ
                              #Res: ALL_ALARMS
DeleteAlarms()                #Req: ALL_ALARMS_REQ
                              #  - only AlarmNames
                              #Res: empty

ALL_ALARMS_REQ.AlarmTypes     #'MetricAlarm|CompositeAlarm'_ARR (def: ['MetricAlarm'])
ALL_ALARMS_REQ.AlarmNames     #'ALARM'_ARR
ALL_ALARMS_REQ.AlarmNamePrefix#STR. Filter by 'ALARM' starting with STR
ALL_ALARMS_REQ.ActionPrefix   #STR. Filter by ALARM.*Actions starting with STR
ALL_ALARMS_REQ.StateValue     #STR. Filter by ALARM.StateValue

ALL_ALARMS_REQ                #'ALARM'. Filter by parent COMPOSITE_ALARM
 .ParentsOfAlarmName          #Cannot use any other ALL_ALARMS_REQ.*
                              #Only ALL_ALARMS.*.AlarmArn|Name is returned
ALL_ALARMS_REQ                #'ALARM'. Filter by children ALARM
 .ChildrenOfAlarmName         #Cannot use any other ALL_ALARMS_REQ.*
                              #Only ALL_ALARMS.*.AlarmArn|Name|StateValue|StateUpdatedTimestamp is returned

ALL_ALARMS.MetricAlarms       #METRIC_ALARM_ARR
ALL_ALARMS.CompositeAlarms    #COMPOSITE_ALARM_ARR


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:            METRIC             :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


PutMetricAlarm()              #Req: METRIC_ALARM
                              #  - no AlarmArn,  AlarmConfigurationUpdatedTimestamp, *State*
                              #Res: empty
DescribeAlarmsForMetric()     #Req: METRIC_ALARM
                              #  - only Dimensions, ExtendedStatistic, MetricName, Namespace, Period, Statistic, Unit
                              #Res: MetricAlarms METRIC_ALARM_ARR

METRIC_ALARM                  #Simple ALARM
METRIC_ALARM.*                #Any from ALARM.*

METRIC_ALARM.MetricName
METRIC_ALARM.Namespace
METRIC_ALARM.Dimensions       #Like METRIC.*
METRIC_ALARM.Unit             #METRIC_DATUM.Unit
METRIC_ALARM.Period
METRIC_ALARM.Statistic
METRIC_ALARM.ExtendedStatistic#Like METRIC_AGGR_REQ.*

METRIC_ALARM.Metrics          #METRIC_DATA_REQ_ARR returning the values to evaluate
                              #Advanced alternative to METRIC_ALARM.MetricName|Period|Statistic
                              #Exactly one METRIC_DATA_REQ.ReturnData must be true
                              #  - it is used to change the StateValue
                              #Max 10 with MetricStat + 10 with Expression

METRIC_ALARM
 .ComparisonOperator          #'Greater|LessThan[OrEqualTo]Threshold'
METRIC_ALARM.Threshold        #NUM. Change StateValue based on VAL OP Threshold
                              #  - VAL is each METRIC response values (after PERIOD aggregation)
                              #  - OP is ComparisonOperator

METRIC_ALARM.EvaluationPeriods#NUM of periods with same evaluation before changing StateValue
                              #Def: 1
METRIC_ALARM.DatapointsToAlarm#NUM of DATAPOINTs with same evaluation before changing StateValue
                              #Def: 1
METRIC_ALARM.Evaluate         #Do not change StateValue if there are not enough DATAPOINTs to be statistically significant.
 LowSampleCountPercentile     #Only with ESTAT
                              #Either 'evaluate' (false, def) or 'ignore' (true)
METRIC_ALARM.TreatMissingData #How undefined values are handled among:
                              #  - 'missing' (def)
                              #  - 'ignore': filter out
                              #  - 'breaching': always 'ALARM'
                              #  - 'notBreaching': always 'OK'

METRIC_ALARM.EvaluationState  #'PARTIAL_DATA' when METRIC response values are being paginated


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:           COMPOSITE           :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


PutCompositeAlarm()           #Req: COMPOSITE_ALARM
                              #  - no AlarmArn,  AlarmConfigurationUpdatedTimestamp, *State*
                              #  - no ActionsSuppressedBy, ActionsSuppressedReason
                              #Res: empty

COMPOSITE_ALARM               #Combination of multiple ALARMs
                              #Max 100 ALARMs. Each ALARM can be used by max 150 COMPOSITE_ALARMs
COMPOSITE_ALARM.*             #Any from ALARM.*

COMPOSITE_ALARM.AlarmRule     #STR. Compute StateValue based on underlying ALARMs StateValues.
                              #'[NOT] ALARM_STATE [AND|OR ...]'
                              #  - can use parenthesis
                              #  - max 500 ALARM_STATEs, 1e4 chars
                              #ALARM_STATE can be:
                              #  - OK|INSUFFICIENT_DATA|ALARM('ALARM'|ALARM_ARN): true|false if has that StateValue
                              #  - TRUE|FALSE: meant for testing
                              #Final result true|false -> StateValue 'ALARM|OK'

COMPOSITE_ALARM               #'ALARM'|ALARM_ARN.
 .ActionsSuppressor           #If that ALARM StateValue is 'ALARM', do not trigger COMPOSITE_ALARM.*Actions
COMPOSITE_ALARM               #NUM (in secs, def: 0)
 .ActionsSuppressorWaitPeriod #Duration for ActionsSuppressor to suppress *Actions, when its StateValue is not 'ALARM'
COMPOSITE_ALARM.Actions       #NUM (in secs, def: 0)
 SuppressorExtensionPeriod    #Additional duration for ActionsSuppressor to suppress *Actions, once its StateValue is not 'ALARM' anymore
COMPOSITE_ALARM               #When ActionsSuppressor is active, the main reason:
 .ActionsSuppressedBy         #  - 'Alarm': normal
                              #  - 'WaitPeriod': ActionsSuppressorWaitPeriod
                              #  - 'ExtensionPeriod': ActionsSuppressorExtensionPeriod
COMPOSITE_ALARM
 .ActionsSuppressedReason     #STR. Additional reason for ActionsSupressedBy


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:            HISTORY            :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


DescribeAlarmHistory()        #Req: ALARM_HISTORY_ITEM
                              #  - no HistoryData, HistorySummary
                              #  - AlarmType -> AlarmTypes ARR
                              #  - Timestamp -> StartDate|EndDate 'DATE'
                              #  - also ScanBy 'TimestampDescending|TimestampAscending': sorting order
                              #Res: AlarmHistoryItems ALARM_HISTORY_ITEM_ARR

ALARM_HISTORY_ITEM            #History of ALARMs change of propertis, including StateValue
                              #Only kept for 2 weeks
ALARM_HISTORY_ITEM.AlarmName  #'ALARM'
ALARM_HISTORY_ITEM.AlarmType  #'MetricAlarm|CompositeAlarm'

ALARM_HISTORY_ITEM.Timestamp  #'DATE'

ALARM_HISTORY_ITEM            #One of:
 .HistoryItemType             #  - 'StateUpdate': StateValue change
                              #  - 'ConfigurationUpdate'
                              #  - 'Action'
ALARM_HISTORY_ITEM
 .HistorySummary              #STR. Description
ALARM_HISTORY_ITEM.HistoryData#'JSON'


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:            ANOMALY            :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


PutAnomalyDetector()          #Req: ANOMALY_DETECTOR
                              #  - no StateValue
                              #Res: empty
DescribeAnomalyDetectors()    #Req: ANOMALY_DETECTOR
                              #  - only AnomalyDetectorTypes
                              #Res: AnomalyDetectors ANOMALY_DETECTOR_ARR
DeleteAnomalyDetector()       #Req: ANOMALY_DETECTOR
                              #  - only MetricMathAnomalyDetector, SingleMetricAnomalyDetector
                              #Res: empty

ANOMALY_DETECTOR              #Guess expected values of a METRIC using machine learning
                              #Generates upper|lower threshold
                              #  - can differ per time of day, etc.
                              #Shown in graphs
                              #Based on last 2 weeks of METRIC_DATUMs
ANOMALY_DETECTOR.Configuration#ANOMALY_DETECTOR_CONF

ANOMALY_DETECTOR.StateValue   #Whether training:
                              #  - 'PENDING_TRAINING': not started
                              #  - 'TRAINED_INSUFFICIENT_DATA': ongoing
                              #  - 'TRAINED': done
ANOMALY_DETECTOR_CONF         #RANGE_ARR
 .ExcludedTimeRanges          #Max 10
RANGE                         #Specific time range to exclude for training
RANGE.StartTime|EndTime       #'DATE'
ANOMALY_DETECTOR_CONF
 .MetricTimezone              #STR. Def: UTC

ANOMALY_DETECTOR
 .SingleMetricAnomalyDetector #SIMPLE_DETECTOR
SIMPLE_DETECTOR               #Single METRIC, aggregated per PERIOD with XSTAT
SIMPLE_DETECTOR.MetricName
SIMPLE_DETECTOR.Namespace
SIMPLE_DETECTOR.Dimensions    #Like METRIC.*
SIMPLE_DETECTOR.Stat          #'XSTAT'

ANOMALY_DETECTOR
 .MetricMathAnomalyDetector   #MATH_DETECTOR
MATH_DETECTOR                 #Advanced alternative to SIMPLE_DETECTOR, using METRIC_MATH|METRIC_INSIGHT
MATH_DETECTOR
 .MetricDataQueries           #METRIC_DATA_REQ_ARR. Like METRIC_ALARM.Metrics

ANOMALY_DETECTION_BAND        #METRIC_MATH function using ANOMALY_DETECTOR
 (ARR[, NUM])                 #ANOMALY_DETECTOR specified either:
                              #  - SIMPLE_DETECTOR: using same MetricName
                              #  - MATH_DETECTOR: parent
                              #  - otherwise: automatically created
                              #Returns an ARR_ARR with two elements: upper|lower threshold
                              #NUM (def: 2) is number of standard deviations between mean and each threshold
                              #Cannot be used with:
                              #  - METRICS|SEARCH()
                              #  - StorageResolution 1
                              #When using multiple METRICs:
                              #  - max 10 METRICs
                              #  - must all have same PERIOD
                              #Max 1 per METRIC_MATH
METRIC_ALARM.ThresholdMetricId#'MVAR' of a METRIC_DATA_RES using ANOMALY_DETECTION_BAND
                              #Alternative to METRIC_ALARM.Threshold: use ANOMALY_DETECTOR's upper|lower threshold
                              #instead of single static value
