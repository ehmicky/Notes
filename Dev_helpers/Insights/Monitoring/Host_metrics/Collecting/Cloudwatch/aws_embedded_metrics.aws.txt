
                                  ┏━━━━━━━━━━━━━━━━━━━━━━━━━━┓
                                  ┃   AWS_EMBEDDED_METRICS   ┃
                                  ┗━━━━━━━━━━━━━━━━━━━━━━━━━━┛

ALTERNATIVES ==>                  #See @aws-lambda-powertools/metrics doc

VERSION ==>                       #4.2.0
                                  #Named aws-embedded-metrics

                                  ┌──────────┐
                                  │   INIT   │
                                  └──────────┘

metricScope(FUNC(MLOGGER)         #FUNC3(...) calls:
 ->FUNC2(...)[->>VAL])            #  - FUNC(createMetricsLogger())
 ->FUNC3(...)->>VAL               #  - FUNC2(...)
                                  #  - MLOGGER.flush()

createMetricsLogger()->MLOGGER    #

MLOGGER.*(...)->MLOGGER           #For all FUNCs, except flush()

                                  ┌─────────────┐
                                  │   PUBLISH   │
                                  └─────────────┘

MLOGGER.flush()->>                #Send metrics
                                  #Can only send one EMETRIC_META per flush()
                                  #Deletes:
                                  #  - MCONTEXT.metrics
                                  #  - MCONTEXT.meta (except timestamp if setTimestamp() was used)
                                  #Does not delete:
                                  #  - MCONTEXT.namespace
                                  #  - MCONTEXT.properties
                                  #  - DOBJ
                                  #     - if MLOGGER.flushPreserveDimensions false: only default DOBJ

                                  ┌─────────────────┐
                                  │   ENVIRONMENT   │
                                  └─────────────────┘

CONF.environmentOverride          #Environment, among the following ones
ENVVAR AWS_EMF_ENVIRONMENT        #Def: automatically detects Lambda|ECS|EC2, otherwise use Agent

ENV 'Local'                       #Send metrics with console.log('ROOT_JSON')
                                  #If needed due to max 100 ARR items in EMETRIC_META.Metrics or ROOT.METRIC, calls console.log() multiple times

ENV 'Agent'                       #Send metrics to CloudWatch agent

ENV 'Lambda'                      #logGroupName|serviceName: 'FUNCTION'
                                  #serviceType: 'AWS::Lambda::Function'
                                  #Send metrics with console.log() like ENV 'Local'
ROOT.executionEnvironment         #'AWS_Lambda_RUNTIME'
ROOT.memorySize                   #'NUM' of FUNC_VERSION.MemorySize
ROOT.functionVersion              #'NUM' of FUNC_VERSION.Version
ROOT.logStreamId                  #'LOG_STREAM'
ROOT.traceId                      #ENVVAR _X_AMZN_TRACE_ID

ENV 'EC2'                         #serviceType: 'AWS::EC2::Instance'
                                  #Send metrics to CloudWatch agent
ROOT.imageId|instanceId|privateIP
 |instanceType|availabilityZone   #Instance identity fields
ROOT._aws.*                       #Instance identity fields

ENV 'ECS'                         #logGroupName|serviceName: default to 'IMAGE'
                                  #serviceType: 'AWS::ECS::Container'
                                  #Send metrics to CloudWatch agent
ROOT.createdAt|startedAt|image
 |cluster|taskArn                 #Instance identity fields
ROOT.containerId                  #'HOSTNAME'
ROOT._aws.FormattedImageName      #'IMAGE'

                                  ┌────────────┐
                                  │   CONFIG   │
                                  └────────────┘

Configuration.VAR                 #CONF.VAR
                                  #Can be manually set

CONF.serviceType                  #'RESTYPE'. Used as default DVAR ServiceType
ENVVAR [AWS_EMF_]SERVICE_TYPE     #Def: 'Unknown'

CONF.serviceName                  #Resource 'NAME'. Used as default DVAR ServiceName
ENVVAR [AWS_EMF_]SERVICE_NAME     #Def: 'Unknown'

CONF.logGroupName                 #'LOG_GROUP'. Used as default DVAR LogGroup
ENVVAR AWS_EWF_LOG_GROUP_NAME     #Also set to ROOT._aws.logGroupName, if ENV ECS|EC2|Agent
                                  #Def: 'SERVICE_NAME-metrics'

CONF.logStreamName                #'LOG_STREAM_NAME'. Set to ROOT._aws.logStreamName
ENVVAR AWS_EWF_LOG_STREAM_NAME    #Only for ENV EC2|Agent

CONF.agentEndpoint                #'tcp|udp://HOST:PORT' of Cloudwatch agent
ENVVAR AWS_EMF_AGENT_ENDPOINT     #Only if ENV ECS|EC2|Agent
                                  #Def: 'tcp://0.0.0.0:25888'

CONF.debuggingLoggingEnabled
ENVVAR
 AWS_EMF_ENABLE_DEBUG_LOGGING     #BOOL (def: false). Prints debugging logs with console.log()

                                  ┌─────────────┐
                                  │   METRICS   │
                                  └─────────────┘
CONF.namespace
ENVVAR AWS_EWF_NAMESPACE
MCONTEXT.namespace                #'NAMESPACE' (def: 'aws-embedded-metrics')
MCONTEXT|MLOGGER
 .setNamespace('NAMESPACE')       #

MCONTEXT|MLOGGER                  #Set all DOBJs. DOBJ is { DVAR: DVAL, ... }
 .setDimensions(DOBJ[_ARR])       #Can use only DOBJ_ARR (not DOBJ) with MCONTEXT
MCONTEXT|MLOGGER.resetDimensions()#Same as setDimensions([])
MCONTEXT|MLOGGER                  #Add a new DOBJ
 .putDimensions(DOBJ)             #Remove existing DOBJs with exact same DVARs
MCONTEXT                          #Set default DOBJ
 .setDefaultDimensions(DOBJ)      #[re]setDimensions() (but not putDimensions()) remove default DOBJ, unless using last argument BOOL true
MCONTEXT.getDimensions()->DOBJ_ARR#

MCONTEXT.metrics                  #MAP where key is 'METRIC' and value is MVALUES
MVALUES.values                    #NUM_ARR
MVALUES.addValue(NUM)             #
MVALUES.unit                      #'UNIT' (def: 'None')
MVALUES.storageResolution         #NUM (def: 60)
MCONTEXT|MLOGGER.putMetric        #NUM2 is StorageResolution
 ('METRIC', NUM[, 'UNIT'[, NUM2]])#If 'METRIC' already exists, appended to MVALUES.values NUM_ARR

Unit.UNIT                         #'UNIT'
                                  #Same spelling, except /Second -> PerSecond
StorageResolution.High|Standard   #1|60

MCONTEXT.properties               #OBJ set to ROOT.*
MCONTEXT|MLOGGER
 .setProperty('VAR', VAL)         #

MCONTEXT.meta                     #OBJ set to ROOT._aws.*
MCONTEXT|MLOGGER
 .setTimestamp(DATE|DATE_NUM)     #Set to ROOT._aws.Timestamp DATE_NUM (def: now)
