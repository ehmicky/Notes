
              
   CLOUDTRAIL  
              



TO DOCUMENT ==>
  - https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/logging_cw_api_calls.html
  - IAM: https://docs.aws.amazon.com/IAM/latest/UserGuide/cloudtrail-integration.html
  - Glacier: https://docs.aws.amazon.com/amazonglacier/latest/dev/audit-logging.html
  - S3:
     - https://docs.aws.amazon.com/AmazonS3/latest/userguide/cloudtrail-logging.html
     - https://docs.aws.amazon.com/AmazonS3/latest/userguide/logging-with-S3.html
     - see common fields with NPAYLOAD (https://docs.aws.amazon.com/AmazonS3/latest/userguide/notification-content-structure.html)
     - JOBs: https://docs.aws.amazon.com/AmazonS3/latest/userguide/batch-ops-examples-event-bridge-cloud-trail.html

VERSION ==>                       #2014-08-27

GOAL ==>                          #Logs API calls:
                                  #  - made by user or by AWS services
                                  #  - sign-in attempts to AWS console, AWS forums or AWS support center, with eventSource
                                  #    "signin.amazonaws.com" and eventName "ConsoleLogin|etc."
                                  #Free (except S3|SNS costs)
                                  #Logs are created:
                                  #  - in a S3 BUCKET at OBJECT [PREFIX/]AWSLogs/ACCOUNT_ID/CloudTrail/REGION/YYYY/MM/DD/
                                  #    ACCOUNT_ID_CloudTrail_REGION_RANDOM.json.gz, so can use S3 to:
                                  #     - encrypt with S3 SSE
                                  #     - archive|rotate
                                  #  - region-wise
                                  #     - so global SERVICE (e.g. IAM) will duplicate logs accross regions
                                  #     - should disable global SERVICE events in all regions but one
                                  #  - not realtime:
                                  #     - new log file every 5 mins, calls take 15 mins to come.
                                  #     - Can deliver SNS notifications on log delivery, with message:
                                  #        - s3Bucket BUCKET
                                  #        - s3ObjectKey OBJECT_ARR
                                  #Must let logger manipulate BUCKET by applying a policy:
                                  #  - policy is:
                                  #     - allowing:
                                  #        - s3:GetBucketAcl on arn:aws:s3:::BUCKET
                                  #        - s3:PutObject on arn:aws:s3:::BUCKET/[PREFIX/]AWSLogs/ACCOUNT_ID/* with Condition
                                  #          s3:x-amz-acl == "bucket-owner-full-control"
                                  #        - SNS:Publish on arn:aws:sns:REGION:ACCOUNT_ID:TOPIC if SNS notifications
                                  #     - using Principal arn:aws:iam::ACCOUNT_ID:root, where ACCOUNT_ID of the logger depends on
                                  #       the REGION (check online doc)
                                  #Best practice: create one dedicated BUCKET using CreateSubscription(). Can also group several
                                  #users logs in same BUCKET.


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:              API              :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


FORMAT ==>                        #JSON


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:          TRAIL MAIN           :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


Create|UpdateTrail()              #Req: TRAIL
                                  #Res: TRAIL
DescribeTrails()                  #Req: TRAIL
                                  #  - only Name -> trailNameList 'TRAIL'_ARR
                                  #Response: TrailList TRAIL_ARR
DeleteTrail()                     #Req: TRAIL
                                  #  - only name
                                  #Res: empty

TRAIL                             #Max 1 per USER
TRAIL.IncludeGlobalServiceEvents  #BOOL (def: true)
TRAIL.Name                        #'TRAIL'
TRAIL.S3BucketName                #'BUCKET'
TRAIL.S3KeyPrefix                 #'TRAIL_PREFIX'
TRAIL.SnsTopicName                #SNS_TOPIC


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:         TRAIL STATUS          :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


StartLogging|StopLogging()        #Req: TRAIL
                                  #  - only Name
                                  #Res: empty
                                  #Sets TRAIL_STATUS.IsLogging
GetTrailStatus()                  #Req: TRAIL
                                  #  - only Name
                                  #Res: TRAIL_STATUS

TRAIL_STATUS.IsLogging            #BOOL
TRAIL_STATUS.StartLoggingTime     #DATE_NUM
TRAIL_STATUS.StopLoggingTime      #DATE_NUM
TRAIL_STATUS.LatestDeliveryError  #Last event delivery 'ERROR'
TRAIL_STATUS.LatestDeliveryTime   #DATE_NUM
TRAIL_STATUS
 .LatestNotificationError
TRAIL_STATUS
 .LatestNotificationTime          #Same as LatestDelivery* but for SNS notifications


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:           LOG FILE            :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


LOG_FILE                          #
LOG_FILE.Records                  #LOG_EVENT_ARR
LOG_EVENT.eventVersion            #Always '1.02'
LOG_EVENT.eventSource             #'SERVICE_DOMAIN'
LOG_EVENT.eventName               #'ACTION'
LOG_EVENT.awsRegion               #'REGION'
LOG_EVENT.requestParameters       #PARAMS_OBJ
LOG_EVENT.responseElements        #RESP_OBJ
LOG_EVENT.eventTime               #'DATE'
LOG_EVENT.sourceIPAddress         #'IP'
LOG_EVENT.userAgent               #STR of User-Agent [C]
LOG_EVENT.requestId               #REQ_ID
LOG_EVENT.eventId                 #STR. Unique accross all events for a given ACTION
LOG_EVENT.errorCode               #NUM
LOG_EVENT.errorMessage            #STR

LOG_EVENT.userIdentity            #IDENTITY
IDENTITY.type                     #"IAMUser|Root|FederatedUser|AssumedRole"
IDENTITY.principalId STR
IDENTITY.arn IAM_ARN
IDENTITY.userName NAME
IDENTITY.accountId ACCOUNT_ID
IDENTITY.accessKeyId ACCESS_KEY_ID
IDENTITY.invokedBy STR: if invoked by another AWS service
IDENTITY.sessionIssuer: user that got the STS tokens: type, principalId, arn, accountId, userName
IDENTITY.sessionContext (if STS):
                                  #           - creationDate DATE
                                  #           - mfaAuthenticated BOOL
IDENTITY.webIdFederationData (if FederatedUser):
                                  #           - federatedProvider DOMAIN
                                  #           - attributes STR
