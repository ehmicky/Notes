
              
   CLOUDTRAIL  
              



TO DOCUMENT ==>
  - https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/logging_cw_api_calls.html
  - IAM: https://docs.aws.amazon.com/IAM/latest/UserGuide/cloudtrail-integration.html
  - Glacier: https://docs.aws.amazon.com/amazonglacier/latest/dev/audit-logging.html
  - S3:
     - https://docs.aws.amazon.com/AmazonS3/latest/userguide/cloudtrail-logging.html
     - https://docs.aws.amazon.com/AmazonS3/latest/userguide/logging-with-S3.html
     - see common fields with NPAYLOAD (https://docs.aws.amazon.com/AmazonS3/latest/userguide/notification-content-structure.html)
     - JOBs: https://docs.aws.amazon.com/AmazonS3/latest/userguide/batch-ops-examples-event-bridge-cloud-trail.html

VERSION ==>                       #2014-08-27


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:              API              :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


FORMAT ==>                        #JSON

PAGINATION ==>                    #REQ|RES.NextToken STR
                                  #REQ.MaxResults NUM (def|max: 1e3, none with TRAIL|TAGS|PUBLIC_KEY)

PRICING ==>                       #Free (except S3|SNS costs)


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:          TRAIL MAIN           :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


CreateTrail()                     #Req: TRAIL
                                  #  - no TrailARN, HomeRegion, HasCustomEventSelectors, HasInsightSelectors, SnsTopicARN
                                  #  - LogFileValidationEnabled -> EnableLogFileValidation
                                  #Res: TRAIL
                                  #  - no HomeRegion, HasCustomEventSelectors, HasInsightSelectors, TagsList
UpdateTrail()                     #Req: TRAIL
                                  #  - no TrailARN, HomeRegion, HasCustomEventSelectors, HasInsightSelectors, SnsTopicARN, TagsList
                                  #  - LogFileValidationEnabled -> EnableLogFileValidation
                                  #Res: TRAIL
                                  #  - no HomeRegion, HasCustomEventSelectors, HasInsightSelectors, TagsList
GetTrail()                        #Req: TRAIL
                                  #  - only Name
                                  #Res: Trail TRAIL
                                  #  - no TagsList
ListTrails()                      #Req: empty
                                  #Res: Trails TRAIL_ARR
                                  #  - only TrailARN, Name, HomeRegion
DescribeTrails()                  #Req: TRAIL_REQ
                                  #Response: trailList TRAIL_ARR
                                  #  - no TagsList
DeleteTrail()                     #Req: TRAIL
                                  #  - only Name
                                  #Res: empty

TRAIL                             #Logs any AWS API calls to a S3 BUCKET
                                  #From both user and SERVICE_DOMAINs
                                  #Only for current REGION
                                  #Max 1 per USER

TRAIL.TrailARN                    #TRAIL_ARN. arn:aws:cloudtrail:REGION:ACCOUNT_ID:trail/TRAIL
TRAIL.Name                        #'TRAIL'
TRAIL_REQ.trailNameList           #ARR of 'TRAIL'|TRAIL_ARN

TRAIL_REQ.includeShadowTrails     #BOOL


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:         TRAIL REGION          :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


TRAIL.HomeRegion                  #'REGION'

TRAIL.IsMultiRegionTrail          #BOOL

TRAIL.IncludeGlobalServiceEvents  #BOOL (def: true). Whether to include global SERVICEs (e.g. IAM)
                                  #LOG_FILE is REGION-specific, i.e. global SERVICEs are duplicated per REGION
                                  #Should set to false in all REGIONs but one

CHANNEL_SOURCE.ApplyToAllRegions  #BOOL


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:         TRAIL STATUS          :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


StartLogging|StopLogging()        #Req: TRAIL
                                  #  - only Name
                                  #Res: empty
                                  #Sets TRAIL_STATUS.IsLogging
GetTrailStatus()                  #Req: TRAIL
                                  #  - only Name
                                  #Res: TRAIL_STATUS

TRAIL_STATUS.IsLogging            #BOOL
TRAIL_STATUS.StartLoggingTime     #DATE_NUM
TRAIL_STATUS.StopLoggingTime      #DATE_NUM

LOG DELIVERY ==>                  #LOG_FILE created every 5 mins
                                  #Calls take 15 mins to come
TRAIL_STATUS.LatestDeliveryError  #Last log delivery 'ERROR'
TRAIL_STATUS.LatestDeliveryTime   #DATE_NUM

TRAIL_STATUS.LatestDigest
 DeliveryError                    #'ERROR'
TRAIL_STATUS.LatestDigest
 DeliveryTime                     #DATE_NUM


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:          PERMISSIONS          :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


PERMISSIONS ==>                   #Logger is Principal arn:aws:iam::ACCOUNT_ID:root
                                  #  - ACCOUNT_ID is REGION-specific (see online doc for value)
                                  #Must be allowed PACTIONs:
                                  #  - s3:GetBucketAcl on arn:aws:s3:::LOG_BUCKET
                                  #  - s3:PutObject on arn:aws:s3:::LOG_BUCKET/TRAIL_PREFIX/AWSLogs/ACCOUNT_ID/*
                                  #     - with COND_KEY s3:x-amz-acl 'bucket-owner-full-control'
                                  #  (if SNS)
                                  #  - SNS:Publish on arn:aws:sns:REGION:ACCOUNT_ID:TOPIC


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:              SNS              :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


TRAIL.SnsTopicARN                 #SNS_TOPIC_ARN to send on log delivery, with SNS_PAYLOAD
TRAIL.SnsTopicName                #Same as 'SNS_TOPIC'

SNS_PAYLOAD.s3Bucket              #'LOG_BUCKET'
SNS_PAYLOAD.s3ObjectKey           #'LOG_FILE'

TRAIL_STATUS
 .LatestNotificationError
TRAIL_STATUS
 .LatestNotificationTime          #Same as LatestDelivery* but for SNS notifications


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:           LOG FILE            :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


TRAIL.S3BucketName                #S3 'LOG_BUCKET' to store LOG_FILE
                                  #Can use S3 to encrypt, archive|rotate, etc.
TRAIL.S3KeyPrefix                 #'TRAIL_PREFIX' (def: none)

TRAIL.KmsKeyId                    #KMS_KEY_ID

TRAIL.LogFileValidationEnabled    #BOOL

TRAIL_PREFIX/AWSLogs/ACCOUNT_ID
 /CloudTrail/REGION/YYYY/MM/DD
 /ACCOUNT_ID_CloudTrail_
  REGION_RANDOM.json.gz           #'LOG_FILE'

LOG_FILE                          #
LOG_FILE.Records                  #LOG_EVENT_ARR
LOG_EVENT.eventVersion            #Always '1.02'
LOG_EVENT.eventSource             #'SERVICE_DOMAIN'
LOG_EVENT.eventName               #'ACTION'
LOG_EVENT.awsRegion               #'REGION'
LOG_EVENT.requestParameters       #PARAMS_OBJ
LOG_EVENT.responseElements        #RESP_OBJ
LOG_EVENT.eventTime               #'DATE'
LOG_EVENT.sourceIPAddress         #'IP'
LOG_EVENT.userAgent               #STR of User-Agent [C]
LOG_EVENT.requestId               #REQ_ID
LOG_EVENT.eventId                 #STR. Unique accross all events for a given ACTION
LOG_EVENT.errorCode               #NUM
LOG_EVENT.errorMessage            #STR

LOG_EVENT.userIdentity            #IDENTITY
IDENTITY|ISSUER.type              #One of: 'IAMUser', 'Root', 'AssumedRole', 'FederatedUser'
IDENTITY|ISSUER.arn               #IDENTITY ARN, e.g. ROLE_ARN
IDENTITY|ISSUER.principalId       #IDENTITY ID, e.g. ROLE_MID
IDENTITY|ISSUER.userName          #'IDENTITY' name, e.g. 'ROLE'
IDENTITY|ISSUER.accountId         #ACCOUNT_ID
IDENTITY.accessKeyId              #ACCESS_KEY_ID
IDENTITY.invokedBy                #'SERVICE_DOMAIN', if called by another SERVICE

IDENTITY.sessionContext           #SESSION_CONTEXT. Only if type 'AssumedRole'
SESSION_CONTEXT.sessionIssuer     #ISSUER
SESSION_CONTEXT.attributes        #SESSION_ATTRS
SESSION_ATTRS.mfaAuthenticated    #'BOOL'
SESSION_ATTRS.creationDate        #'DATE'

IDENTITY.webIdFederationData      #FEDERATION_DATA. Only if type 'FederatedUser'
FEDERATION_DATA.federatedProvider #'DOMAIN'
FEDERATION_DATA.attributes        #STR


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:           SELECTORS           :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


PutEventSelectors()               #Req: SELECTORS
                                  #  - no TrailARN
                                  #Res: SELECTORS
                                  #  - no TrailName
GetEventSelectors()               #Req: SELECTORS
                                  #  - only TrailName
                                  #Res: SELECTORS
                                  #  - no TrailName

TRAIL.HasCustomEventSelectors     #BOOL

SELECTORS.TrailARN                #TRAIL_ARN
SELECTORS.TrailName               #'TRAIL'

SELECTORS|CHANNEL_SOURCE
 .AdvancedEventSelectors          #ADVANCED_SELECTOR_ARR
ADVANCED_SELECTOR.Name            #STR. Description
ADVANCED_SELECTOR.FieldSelectors  #FIELD_SELECTOR_ARR
FIELD_SELECTOR.Field              #STR
FIELD_SELECTOR
 .[Not]Starts|EndsWith            #STR_ARR
FIELD_SELECTOR.[Not]Equals        #STR_ARR

SELECTORS.EventSelectors          #SELECTOR_ARR
SELECTOR.ReadWriteType            #'All' (def), 'ReadOnly' or 'WriteOnly'
SELECTOR.IncludeManagementEvents  #BOOL
SELECTOR
 .ExcludeManagementEventSources   #STR_ARR
SELECTOR.DataResources            #DATA_RESOURCE_ARR
DATA_RESOURCE.Type                #STR
DATA_RESOURCE.Values              #STR_ARR


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:            CHANNEL            :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


CreateChannel()                   #Req: CHANNEL
                                  #  - no Source, SourceConfig, IngestionStatus
                                  #Res: CHANNEL
                                  #  - no SourceConfig, IngestionStatus
UpdateChannel()                   #Req: CHANNEL
                                  #  - no Source, SourceConfig, IngestionStatus, Tags
                                  #Res: CHANNEL
                                  #  - no SourceConfig, IngestionStatus, Tags
GetChannel()                      #Req: CHANNEL
                                  #  - only ChannelArn -> Channel
                                  #Res: CHANNEL
                                  #  - no Tags
ListChannels()                    #Req: empty
                                  #Res: Channels CHANNEL_ARR
                                  #  - only ChannelArn, Name
DeleteChannel()                   #Req: CHANNEL
                                  #  - only ChannelArn -> Channel
                                  #Res: empty

CHANNEL.ChannelArn                #CHANNEL_ARN
CHANNEL.Name                      #'CHANNEL'

CHANNEL.Source                    #STR
CHANNEL.SourceConfig              #CHANNEL_SOURCE

CHANNEL.Destinations              #CHANNEL_DEST_ARR
CHANNEL_DEST.Type                 #STR
CHANNEL_DEST.Location             #STR

CHANNEL.IngestionStatus           #CHANNEL_STATUS
CHANNEL_STATUS
 .LatestIngestionAttemptEventID   #STR
CHANNEL_STATUS
 .LatestIngestionAttemptTime      #DATE_NUM
CHANNEL_STATUS
 .LatestIngestionSuccessEventID   #STR
CHANNEL_STATUS
 .LatestIngestionSuccessTime      #DATE_NUM
CHANNEL_STATUS
 .LatestIngestionErrorCode        #'CODE'


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:            POLICY             :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


PutResourcePolicy()               #
GetResourcePolicy()               #
DeleteResourcePolicy()            #


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:             ORGS              :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


RegisterOrganization
 DelegatedAdmin()                 #
DeregisterOrganization
 DelegatedAdmin()                 #

TRAIL.IsOrganizationTrail         #BOOL


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:            INSIGHT            :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


GetInsightSelectors()             #
PutInsightSelectors()             #

TRAIL.HasInsightSelectors         #BOOL


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:            LOOKUP             :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


LookupEvents()                    #


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:          DATA STORE           :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


CreateEventDataStore()            #
UpdateEventDataStore()            #
StartEventDataStoreIngestion()    #
StopEventDataStoreIngestion()     #
GetEventDataStore()               #
ListEventDataStores()             #
DeleteEventDataStore()            #
RestoreEventDataStore()           #


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:            IMPORT             :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


StartImport()                     #
GetImport()                       #
ListImports()                     #
ListImportFailures()              #
StopImport()                      #


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:             QUERY             :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


StartQuery()                      #
DescribeQuery()                   #
ListQueries()                     #
CancelQuery()                     #
GetQueryResults()                 #


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:             TAGS              :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


AddTags()                         #
ListTags()                        #
RemoveTags()                      #

TRAIL.TagsList                    #TAG_PAIRS


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:          PUBLIC KEYS          :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


ListPublicKeys()                  #


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:          CLOUDWATCH           :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


TRAIL.CloudWatchLogsLogGroupArn   #STR
TRAIL.CloudWatchLogsRoleArn       #STR

TRAIL_STATUS.LatestCloudWatchLogs
 DeliveryError                    #'ERROR'
TRAIL_STATUS.LatestCloudWatchLogs
 DeliveryTime                     #DATE_NUM
