
          
   GITHUB  
          



git instaweb                  #Bundled in Git, but I prefer command line


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:           FEATURES            :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


USER PROFILE ==>              #  - must be same as git user.name|email
                              #  - private email: use USER@users.noreply.github.com
                              #  - can block users
                              #  - 2-factor authentication: mobile app, SMS
                              #  - SSH keys

ORGANIZATION ==>              #Team-based ACL:
                              #  - owners
                              #  - admin: create|delete repos
                              #  - write: like collaborators (see below) for given repos
                              #  - read: like everyone (see below) for given repos

PERMISSIONS ==>               #  - owner: can edit, manage collaborators, changing visibility to private
                              #  - collaborators: push, manage comments|issues|pull requests, create wiki, lock conversations
                              #  - everyone: pull|fork, comments|issues|pull requests, edit wiki

REPOSITORY ==>                #  - Creating: can initialize repo (LICENSE, .gitignore, README.md)
                              #  - GIT_URL: HTTPS, SSH (must use git@github.com), Git
                              #  - Private repo: paid
                              #  - Can transfer repos to other users|organizations or rename: will redirect automatically from
                              #    former URLs

FORKING ==>                   #  - when editing a file from another repo, automatically do it
                              #  - should add upstream repo with git remote

GIT FUNCTIONS ==>             #  - git log [-- FILE]: history
                              #  - git show COMMIT:FILE: <>
                              #  - git show COMMIT -p --stat (with also rich editing diff): commit
                              #  - git blame: blame
                              #  - git checkout, branch --list: branches
                              #  - git tag, git checkout, git archive: tags
                              #  - git diff (can also use REPO:COMMIT and {@DATE}COMMIT): REPO/compare

ISSUES AND PULL REQUESTS ==>  #  - assigning to people
                              #  - applying labels (help searching)
                              #  - applying milestones (user stories or releases, with date due, last update, percentage
                              #    issues|pull requests done)
                              #  - can be closed:
                              #     - with commit message "Closes|Fixes|Resolves [USER/REPO]#NUM"
                              #     - when pull request is (if associated with pull request)
                              #     - with pull request description "Closed #NUM"
                              #  - can setup default templates with ROOT/.github/PULL_REQUEST_TEMPLATE|ISSUE_TEMPLATE.md
                              #  - can show contributing link on issues/pull requests with ROOT/.github/CONTRIBUTING.md

PULL REQUESTS ==>             #  - Should add tests and update documentation
                              #  - Compare&review: pull request from same repo
                              #  - merged with --no-ff
                              #  - can revert too
                              #  - use LRBRANCH pull/ID/head:LBRANCH
                              #  - CONTRIBUTING.md: automatically shown
                              #  - Syntax guidelines (can use .jshintrc)

RENDERING ==>                 #Markdown can be used in source code previewed, issues|comments|pull requests, Gists:
                              #  - Live preview editor
                              #  - Additional syntax:
                              #     - links to commit ID, issue ID, @NAME mentions (notifies user)
                              #     - tables, strikethrough
                              #     - code blocks, with auto syntax highlighting
                              #     - URLs autolinking
                              #     - Emoji
                              #Other: diff of images, GeoJSON, STL (3D file), CSV|TSV
                              #Limits: 1GB/repo, 100MB/file

OTHER FUNCTIONS ==>           #  - commits comments
                              #  - Releases: like tags but also has deployment archives (different from source code) and
                              #    release comments
                              #  - Advanced search:
                              #     - repos, issues, users, code
                              #     - Explore: discover new repos, starring
                              #  - Stats:
                              #     - commits graphs over time
                              #     - contributors
                              #     - traffic (git clone, pageviews)

BADGES ==>                    #https://img.shields.io/github/:
                              #  - version:
                              #     - /tag|package-json|manifest-json/USER/REPO/TAG.svg: version
                              #     - /release/USER/REPO[/all].svg:
                              #        - release version
                              #       - if "all" include pre-releases
                              #     - /release-date[-pre]/USER/REPO.svg: release date
                              #  - license:
                              #     - /license/USER/REPO.svg
                              #  - traffic:
                              #     - /downloads[-pre]/USER/REPO/[latest|RELEASE/]total|FILE.svg
                              #        - GitHub release downloads
                              #        - "-pre": pre-release
                              #     - /forks|stars|watchers|followers/REPO/USER.svg?style=social&label=Fork|Star|Watch|Follow
                              #     - /search/USER/REPO/goto.svg: number of GitHub searches
                              #  - activity:
                              #     - /commits-since/USER/REPO[/TAG|BRANCH].svg: number of commits
                              #     - /commits-activity/w|m|y/USER/REPO.svg: number of commits
                              #     - /last-commit/USER/REPO[/TAG|BRANCH].svg: last commit date
                              #     - /contributors/USER/REPO.svg: number of contributors
                              #  - size:
                              #     - /languages/code-size/USER/REPO.svg: code size
                              #     - /repo-size/USER/REPO.svg: repo size
                              #     - /size/USER/REPO/PATH/TO/FILE.svg: file size
                              #  - issues/PR:
                              #     - /issues[-pr][-closed][-raw]/USER/REPO[/ISSUE_LABEL].svg: GitHub issues
                              #     - /issues/detail/s|title|u|label|comments|age|last-update/USER/REPORT/ISSUE_ID.svg:
                              #        - GitHub issue state|title|author|label|comments|age|last update
                              #     - /status/s|contexts/pulls/USER/REPO/PR_ID.svg: GitHub PR state
                              #  - languages:
                              #     - /languages/top/USER/REPO.svg: top language
                              #     - /languages/count/USER/REPO.svg: number of languages
                              #  - others:
                              #     - /commit-status/USER/REPO/BRANCH/COMMIT_HASH.svg: whether commit is in BRANCH

NOTIFICATIONS ==>             #  - commits pushed on own repos
                              #  - watching repos: releases, issues, pull requests, commits comments, create|remove branches
                              #  - use @NAME, assigning to issue|pull request, suscribe to conversation
                              #  - following people: starring, following, creates repo, gets new fork
                              #  - can email, RSS

WIKI ==>                      #  - REPO with name REPO.wiki, filename is file title, many *.md files
                              #  - Special files: Home, _Footer, _Sidebar

GITHUB PAGES ==>              #  - free Hosting
                              #  - no HTTPS
                              #  - can use custom domain name (create a CNAME root file)
                              #  - can be:
                              #     - user|organization page:
                              #        - REPO name is USER|ORG.github.io.
                              #        - Served at http://USER|ORG.github.io
                              #        - Uses master branch.
                              #     - project page:
                              #        - served at http://USER|ORG.github.io/PROJECT.
                              #        - Uses gh-pages orphan branch (git checkout --orphan)
                              #        - Can use ready-made HTML/CSS templates

GIST ==>                      #  - like REPO but single file
                              #  - can be secret (not shown on Explore, but URL still public)


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:     CONTINUOUS DEPLOYMENT     :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/



GH_RELEASES_DEPLOY            #Create|update GitHub release, with assets in it, with Travis (see its doc)
GH_RELEASES_DEPLOY.provider   #'releases'
GH_RELEASES_DEPLOY.api_key    #OAUTH_TOKEN: with [public_]repo scope
GH_RELEASES_DEPLOY.
 user|password                #STR. Alternative (prefer OAuth)
GH_RELEASES_DEPLOY.file       #FILE[_ARR]
GH_RELEASES_DEPLOY.file_glob  #BOOL (def: false). Allows globbing in GH_RELEASES_DEPLOY.file
GH_RELEASES_DEPLOY.overwrite  #BOOL (def: false)
GH_RELEASES_DEPLOY.name       #STR. GitHub release title
GH_RELEASES_DEPLOY.body       #STR. GitHub release description
GH_RELEASES_DEPLOY.
 draft|prerelease             #BOOL. Flag as draft|prerelease


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:              API              :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


GITHUB API ==>                    #Version 2022-11-28

https://api.github.com            #API root
https://github.com                #API root for /login, /settings

Accept:
 application/vnd.github[+json] [C]#
Accept: application/json [C]      #
Accept: application/              #When returning comments with Markdown, FORMAT can be:
 vnd.github.FORMAT+json [C]       #  - 'raw': as is, under `body`
                                  #  - 'text': as text, under `body_text`
                                  #  - 'html', under `body_html`
                                  #  - 'full', all
Accept:
 application/vnd.github.raw [C]   #When returning Git blob, return as is, instead of as { content: 'BASE64' }

X-GitHub-Api-Version:
 YYYY-MM-DD [C]                   #

Authorization: Bearer TOKEN [C]   #Can be: PERSONAL_ACCESS_TOKEN, GitHub app JWT, IAT, UAT
PERSONAL_ACCESS_TOKEN             #Generated from the UI for a given user
                                  #Can restrict PERMISSIONS
GITHUB ACTIONS ==>                #Should use ENVVAR GITHUB_TOKEN

OPENAPI ==>                       #3.0

User-Agent: STR [C]               #Must be specified

X-RateLimit-Limit: NUM [S]
X-RateLimit-Used: NUM [S]
X-RateLimit-Remaining: NUM [S]
X-RateLimit-Reset: NUM [S]        #

Link: <URL?PARAM=NUM>;
 rel="first|prev|next|last"
 ,... [S]
?page|before|after|since=STR [C]  #Pagination. Request parameter depends on endpoint
?per_page=NUM [C]                 #
RESP.total_count                  #NUM

OCTOKIT.paginate
 ('METHOD /URL'[, OPTS])->>RES    #Repeats calls using Link [S]
OPTS.per_page                     #NUM
OPTS.*                            #Like OCTOKIT.request()

E-Tag: STR [S]
Last-Modified: STR [S]
If-None-Match: STR [C]
If-Modified-Since: STR [C]        #Available on some endpoints

X-Github-Request-Id: STR [S]      #

LIST ==>                          #When listing RESOURCEs, only few attributes are present

ERROR_RESP.message                #'MESSAGE'
ERROR_RESP.errors                 #RESPERR_ARR|undefined
RESPERR.code                      #'ERROR_CODE'
RESPERR.documentation_url         #'URL'
RESPERR.resource                  #'RESOURCE' (e.g. 'Issue')
RESPERR.field                     #'PROP'
RESPERR.missing                   #'RESOURCE', when missing
RESPERR.missing_field             #'PROP', when missing
RESPERR.already_exists            #'RESOURCE', when already exists
RESPERR.invalid                   #'PROP', when invalid format
RESPERR.unprocessable             #'PROP', when invalid format

GET /                             #Return all API endpoints



                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:        OCTOKIT/REQUEST        :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


@octokit/request                  #Version 7.0.1
                                  #Node/browser/Deno

REQUEST('METHOD /PATH'[, OPTS])   #Make an HTTP request using @octokit/endpoint REQ_OPTS
 ->>RES                           #Automatically parses|serializes request|response body
                                  #Throws either AbortError or RequestError

OPTS.request.fetch                #FUNC (def: globalThis.fetch)
OPTS.request.log                  #OBJ, with OBJ.warn(STR) (def: console)
                                  #Only used to log deprecated endpoints
OPTS.request.*                    #fetch() REQQ, e.g. signal ABORT_SIGNAL or (Node only) agent AGENT
OPTS.request.hook                 #Middleware FUNC(REQUEST, REQ_OPTS)->REQUEST
                                  #REQUEST can use the following additional fields

RES.status                        #NUM
RES.url                           #'URL'
RES.headers                       #OBJ
RES.data                          #VAL

REQUEST.defaults(REQ_OPTS)
 ->REQUEST                        #Merge to default REQ_OPTS
REQUEST.endpoint                  #ENDPOINT (from @octokit/endpoint)

User-Agent: octokit-request.js
 /X.Y.Z USER_AGENT [C]            #


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:     OCTOKIT/REQUEST-ERROR     :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


@octokit/request-error            #4.0.2
                                  #Node/browser/Deno
ERROR.name                        #'HttpError'
ERROR.status                      #NUM
ERROR.request                     #REQ_OPTS
ERROR.headers                     #OBJ
ERROR.response                    #RES


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:       OCTOKIT/ENDPOINT        :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


@octokit/endpoint                 #Version 8.0.1
                                  #Node/browser/Deno
ENDPOINT
 (['METHOD /PATH'][, OPTS])
 ->REQ_OPTS                       #Get REQ_OPTS
defaults(OBJ)->ENDPOINT           #Merge to defaults values

OPTS.route                        #'METHOD /PATH'
OPTS.method                       #'METHOD' (def: 'GET')
OPTS.url                          #'/PATH' or absolute 'URL'. Can include :VAR
OPTS.baseUrl                      #Base 'URL' of OPTS.url, if absolute
                                  #Def: 'https://api.github.com'
OPTS.headers                      #OBJ. Def:
                                  #  Accept: application/vnd.github.v3+json [C]
                                  #  Content-Type: application/json; charset=utf-8 [C]
                                  #  User-Agent: octokit-endpoint.js/X.Y.Z USER_AGENT [C]
OPTS.data                         #VAL. Request body
OPTS.mediaType.format             #'MIME' (def: '') like 'raw', 'diff' or 'text+json'
OPTS.mediaType.previews           #STR_ARR. Opt-in beta features
OPTS.VAR                          #Either:
                                  #  - URL parameter
                                  #  - query variables (if GET|HEAD)
                                  #  - request body
OPTS.request                      #OBJ kept as is

REQ_OPTS.method                   #'METHOD'
REQ_OPTS.url                      #OPTS.url, after OPTS.baseUrl resolution, and templating with OPTS.VAR
REQ_OPTS.headers                  #OBJ
REQ_OPTS.body                     #VAL
REQ_OPTS.request                  #


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:           WEBHOOKS            :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


EVENT                             #Webhook main event
SUBEVENT                          #Webhook sub-event. Also named "action"

PAYLOAD                           #Passed to webhook
PAYLOAD.action                    #'SUBEVENT'

@octokit/webhooks-examples|schemas#Version 7.0.3
                                  #JSON schema:
                                  #  - v7
                                  #  - requires ajv-formats, and ajv.addKeyword('tsAdditionalProperties')
@octokit/webhooks-examples        #WEBHOOK_EXAMPLES_ARR
WEBHOOK_EXAMPLES.name             #'EVENT'
WEBHOOK_EXAMPLES.actions          #'SUBEVENT'_ARR
WEBHOOK_EXAMPLES.properties.PROP  #JSON_SCHEMA_OBJ of PAYLOAD.PROP
WEBHOOK_EXAMPLES.description      #STR
WEBHOOK_EXAMPLES.examples         #PAYLOAD_ARR

@octokit/webhooks-schemas         #JSON_SCHEMA_OBJ of any PAYLOAD (using `oneOf`)

@octokit/webhooks-methods         #
sign(...)
verify(...)
verifyWithFallback(...)

@octokit/webhooks                 #



repository_dispatch               #on-demand-test
workflow_dispatch                 #
workflow_run                      #requested in_progress completed
push                              #
pull_request                      #[re]opened edited closed
                                  #[un]locked
                                  #[un]assigned
                                  #[un]labeled
                                  #synchronize
                                  #converted_to_draft ready_for_review review_requested review_request_removed
                                  #auto_merge_enabled|disabled
                                  #Also:
                                  #dequeued|enqueued merged
pull_request_review               #submitted edited dismissed
pull_request_review_comment       #created edited deleted
merge_group                       #checks_requested
commit_comment                    #created
issues                            #[re]opened edited deleted closed
                                  #[un]locked
                                  #[un]pinned
                                  #[un]assigned
                                  #[un]labeled
                                  #[de]milestoned milestoned
                                  #transferred
issue_comment                     #created edited deleted
discussion                        #created edited deleted
                                  #[un]locked
                                  #[un]pinned
                                  #[un]labeled
                                  #[un]answered
                                  #transferred
                                  #category_changed
discussion_comment                #created edited deleted
label                             #created edited deleted
milestone                         #created opened edited deleted closed
project                           #created|reopened edited deleted closed
project_column                    #created edited deleted moved
project_card                      #created edited deleted moved converted
watch                             #started
fork                              #
release                           #created edited deleted [pre]released [un]published
package                           #published updated
deployment                        #Also:
                                  #created
deployment_status                 #Also:
                                  #created
status                            #
check_suite                       #[re]requested completed
check_run                         #created|rerequested completed requested_action
public                            #
create|delete                     #
member                            #added edited removed
page_build                        #
gollum                            #
branch_protection_rule            #created edited deleted

GitHub actions only: schedule, pull_request_target, workflow_call
new event name: registry_package -> package

Probably not GitHub actions:
github_app_authorization          #GitHub app UAT changes
                                  #Types: revoked
installation                      #GitHub app installation
                                  #Types:
                                  #  - created deleted
                                  #  - new_permissions_accepted
                                  #  - [un]suspend
installation_target               #GitHub app installation activity
installation_repositories         #added removed
marketplace_purchase              #cancelled changed pending_change pending_change_cancelled purchased

code_scanning_alert               #appeared_in_branch closed_by_user created fixed reopened reopened_by_user
dependabot_alert                  #created dismissed fixed reintroduced reopened
repository_vulnerability_alert    #create dismiss resolve
security_advisory                 #performed published updated withdrawn

org_block                         #blocked unblocked
organization                      #deleted member_added member_invited member_removed renamed
membership                        #added removed
team                              #added_to_repository created deleted edited removed_from_repository
team_add                          #
sponsorship                       #cancelled created edited pending_cancellation pending_tier_change tier_changed

deploy_key                        #created deleted
meta                              #deleted
ping                              #
projects_v2_item                  #archived converted created deleted edited reordered restored
pull_request_review_thread        #resolved unresolved
repository                        #archived created deleted edited privatized publicized renamed transferred unarchived
repository_import                 #
star                              #created deleted
workflow_job                      #completed in_progress queued waiting
