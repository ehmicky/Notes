
              
   GITHUB_API  
              



GITHUB API ==>                    #Version 2022-11-28

X-GitHub-Api-Version:
 YYYY-MM-DD [C]                   #

GET /versions                     #Returns 'YYYY-MM-DD'_ARR

GITHUB MAIN|WEBHOOKS|APPS
 |ACTIONS ==>                     #See other GitHub docs


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:            GENERAL            :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


https://api.github.com            #API root
https://github.com                #API root for /login, /settings

RREPO                             #/repos/USER/REPO
OORG                              #/orgs/ORG

OPENAPI ==>                       #3.0

GET /                             #Return all API endpoints
GET /meta                         #Return information about: server IPs, domain names, SSH keys

User-Agent: STR [C]               #Must be specified

X-Github-Request-Id: STR [S]      #



                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:             MIME              :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


Accept:
 application/vnd.github[+json] [C]#
Accept: application/json [C]      #

Accept: application/              #When returning comments with Markdown, FORMAT can be:
 vnd.github.FORMAT+json [C]       #  - 'raw': as is, under `body`
                                  #  - 'text': as text, under `body_text`
                                  #  - 'html', under `body_html`
                                  #  - 'full', all

Accept:
 application/vnd.github.raw [C]   #When returning Git blob, return as is, instead of as { content: 'BASE64' }


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:             AUTH              :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


Authorization: Bearer TOKEN [C]   #Can be: PERSONAL_ACCESS_TOKEN, GitHub app JWT, IAT, UAT

PERSONAL_ACCESS_TOKEN             #Generated from the UI for a given user
                                  #Can restrict PERMISSIONS

GITHUB ACTIONS ==>                #Should use ENVVAR GITHUB_TOKEN


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:         RATE LIMITING         :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


GET /rate_limit                   #
XRATE_LIMIT.rate
XRATE_LIMIT.resources.core        #XLIMITS. Default rate limits
XRATE_LIMIT.resources.search      #XLIMITS. Rate limits for non-code searches
XRATE_LIMIT.resources.code_search #XLIMITS. Rate limits for code searches
XRATE_LIMIT.resources.graphql     #XLIMITS. Rate limits for GraphQL
XRATE_LIMIT.resources
 .integration_manifest            #XLIMITS. Rate limits for creating apps (POST /app-manifests/CODE/conversions)
XRATE_LIMIT.resources
 .dependency_snapshots            #XLIMITS. Rate limits for creating dependency graph snapshots
XRATE_LIMIT.resources
 .code_scanning_upload            #XLIMITS. Rate limits for uploading SARIF results for code scanning
XRATE_LIMIT.resources.
 .actions_runner_registration     #XLIMITS. Rate limits for registering self-hosted GitHub actions runners

XLIMITS.limit
X-RateLimit-Limit: NUM [S]        #Total
XLIMITS.used
X-RateLimit-Used: NUM [S]         #Used
XLIMITS.remaining
X-RateLimit-Remaining: NUM [S]    #Left
XLIMITS.reset
X-RateLimit-Reset: DATE_NUM [S]   #When `used` becomes 0


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:          PAGINATION           :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


Link: <URL?PARAM=NUM>;
 rel="first|prev|next|last"
 ,... [S]
?page|before|after|since=STR [C]  #Pagination. Request parameter depends on endpoint
?per_page=NUM [C]                 #
RESP.total_count                  #NUM

OCTOKIT.paginate
 ('METHOD /URL'[, OPTS])->>RES    #Repeats calls using Link [S]
OPTS.per_page                     #NUM
OPTS.*                            #Like OCTOKIT.request()


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:            CACHING            :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


E-Tag: STR [S]
Last-Modified: STR [S]
If-None-Match: STR [C]
If-Modified-Since: STR [C]        #Available on some endpoints


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:             REST              :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


REST ==>                          #RESTful API
                                  #CRUD with POST|PATCH|GET|DELETE
                                  #All return a RES except DELETE

X*                                #API request|response body
X*_U                              #For fields that can be specified on create|update
X*_C                              #For fields that can be specified on create but not update
X*_F                              #For fields that are only returned when a single resource is retrieved, not a list

UARR                              #ARR which can be updated with fields:
                                  #  - PROP: replace whole ARR
                                  #  - add|remove_PROP


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:            ERRORS             :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


ERROR_RESP.message                #'MESSAGE'

ERROR_RESP.errors                 #RESPERR_ARR|undefined
RESPERR.code                      #'ERROR_CODE'
RESPERR.documentation_url         #'URL'
RESPERR.resource                  #'RESOURCE' (e.g. 'Issue')
RESPERR.field                     #'PROP'
RESPERR.missing                   #'RESOURCE', when missing
RESPERR.missing_field             #'PROP', when missing
RESPERR.already_exists            #'RESOURCE', when already exists
RESPERR.invalid                   #'PROP', when invalid format
RESPERR.unprocessable             #'PROP', when invalid format

@octokit/request-error            #4.0.2
                                  #Node/browser/Deno
ERROR.name                        #'HttpError'
ERROR.status                      #NUM
ERROR.request                     #REQ_OPTS
ERROR.headers                     #OBJ
ERROR.response                    #RES


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:        OCTOKIT/REQUEST        :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


@octokit/request                  #Version 7.0.1
                                  #Node/browser/Deno

REQUEST('METHOD /PATH'[, OPTS])   #Make an HTTP request using @octokit/endpoint REQ_OPTS
 ->>RES                           #Automatically parses|serializes request|response body
                                  #Throws either AbortError or RequestError

OPTS.request.fetch                #FUNC (def: globalThis.fetch)
OPTS.request.log                  #OBJ, with OBJ.warn(STR) (def: console)
                                  #Only used to log deprecated endpoints
OPTS.request.*                    #fetch() REQQ, e.g. signal ABORT_SIGNAL or (Node only) agent AGENT
OPTS.request.hook                 #Middleware FUNC(REQUEST, REQ_OPTS)->REQUEST
                                  #REQUEST can use the following additional fields

RES.status                        #NUM
RES.url                           #'URL'
RES.headers                       #OBJ
RES.data                          #VAL

REQUEST.defaults(REQ_OPTS)
 ->REQUEST                        #Merge to default REQ_OPTS
REQUEST.endpoint                  #ENDPOINT (from @octokit/endpoint)

User-Agent: octokit-request.js
 /X.Y.Z USER_AGENT [C]            #



                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:       OCTOKIT/ENDPOINT        :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


@octokit/endpoint                 #Version 8.0.1
                                  #Node/browser/Deno
ENDPOINT
 (['METHOD /PATH'][, OPTS])
 ->REQ_OPTS                       #Get REQ_OPTS
defaults(OBJ)->ENDPOINT           #Merge to defaults values

OPTS.route                        #'METHOD /PATH'
OPTS.method                       #'METHOD' (def: 'GET')
OPTS.url                          #'/PATH' or absolute 'URL'. Can include :VAR
OPTS.baseUrl                      #Base 'URL' of OPTS.url, if absolute
                                  #Def: 'https://api.github.com'
OPTS.headers                      #OBJ. Def:
                                  #  Accept: application/vnd.github.v3+json [C]
                                  #  Content-Type: application/json; charset=utf-8 [C]
                                  #  User-Agent: octokit-endpoint.js/X.Y.Z USER_AGENT [C]
OPTS.data                         #VAL. Request body
OPTS.mediaType.format             #'MIME' (def: '') like 'raw', 'diff' or 'text+json'
OPTS.mediaType.previews           #STR_ARR. Opt-in beta features
OPTS.VAR                          #Either:
                                  #  - URL parameter
                                  #  - query variables (if GET|HEAD)
                                  #  - request body
OPTS.request                      #OBJ kept as is

REQ_OPTS.method                   #'METHOD'
REQ_OPTS.url                      #OPTS.url, after OPTS.baseUrl resolution, and templating with OPTS.VAR
REQ_OPTS.headers                  #OBJ
REQ_OPTS.body                     #VAL
REQ_OPTS.request                  #


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:           ENDPOINTS           :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


GET RREPO/actions/artifacts
GET RREPO/actions/runs/RUN_ID/artifacts
GET RREPO/actions/artifacts/ARTIFACT_ID
DELETE RREPO/actions/artifacts/ARTIFACT_ID
GET RREPO/actions/artifacts/ARTIFACT_ID/FORMAT
                                  #Workflow artifacts

GET RREPO/actions/caches
GET OORG|RREPO/actions/cache/usage
GET OORG/actions/cache/usage-by-repository
DELETE RREPO/actions/caches
DELETE RREPO/actions/caches/CACHE_ID
                                  #GitHub action cache

GET OORG|RREPO/actions/oidc/customization/sub
POST OORG/actions/oidc/customization/sub
PUT RREPO/actions/oidc/customization/sub
                                  #OIDC, to allow GitHub actions to set credentials from cloud providers
