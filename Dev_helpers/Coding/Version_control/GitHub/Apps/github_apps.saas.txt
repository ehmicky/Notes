
               
   GITHUB_APPS  
               



GitHub API:
  - https://api.github.com: API root
  - Accept: application/vnd.github+json [C]
  - X-GitHub-Api-Version: YYYY-MM-DD [C]
     - current: 2022-11-28

OAuth apps:
  - deprecated older version of GitHub apps
  - could only "authorize", not "install"

Permissions:
  - specified on installation
  - are:
     - API actions
     - webhooks events
     - HTTP-based git access
        - including getting contents
        - separate permissions to get ./workflows
  - can choose repos
  - on repository, org, or account
  - can be installed by
     - a user
     - an org
        - only by org owner
        - or users with "GitHub app manager" role on specific app
           - can edit but not install|uninstall app
        - org user can request org owner
  - tokens are short-lived

Marketplace:
  - where it is installed
  - alternative:
     - GET https://github.com/apps/APP/installations/new
     - in UI, for local dev
     - private app
  - logo
  - can set a price

Can use GitHub API

Webhooks:
  - on events
  - webhook secret: to authenticate calls
  - prefer https

APP_ID
  - ID of app, secret
  - can get with GET /app

APP_PRIVATE_KEY
  - app secret
  - PEM format (PKCS#1 RSAPrivateKey)
  - not stored by GitHub, i.e. only shown once

CLIENT_ID
  - OAuth CLIENT_ID, public
  - can get from app settings UI

CLIENT_SECRET
  - OAuth CLIENT_SECRET, private
  - can get from app settings UI

Setup URL:
  - redirected on after installation
     - or on update
  - meant for docs

Installation:
  - single installation of an app
  - INSTALLATION_ID:
     - available in:
        - webhook event payloads
        - GET /app/installations
        - GET /orgs/ORG/installation
        - GET /users/USER/installation
        - GET /repos/USER/REPO/installation

Authentication:
  - as the app
     - using a JWT
        - creation:
           - JWT ENVLOP:
              - alg 'RS256'
           - JWT PAYLOAD:
              - iat DATE_NUM
              - exp DATE_NUM: max iat + 10min
              - iss 'APP_ID'
           - JWT private key is APP_PRIVATE_KEY
        - passed to Authorization: Bearer JWT [C]
  - as the app installation
     - also called "server-to-server"
     - requires an app "install"
     - read|write access a repo|org
     - actions shown as done by app
     - can be restricted to:
        - specific repositories
        - specific permissions
     - use installation access token (IAT)
        - creation:
           - POST /app/installations/INSTALLATION_ID/access_tokens
           - authenticated "as the app"
        - passed to Authorization: Bearer JWT [C]
           - for HTTP-based git, use: https://x-access-token:JWT@github.com/USER/REPO.git
        - only valid 1 hour, no refresh, but can re-create
        - not restricted by user permissions
  - as the user
     - also called "user-to-server"
     - requires an app "authorize"
     - act on behalf of user, for other things than repo|org
        - i.e. some actions only available like this
     - shown as done by user, with additional hint it's been done through an app
     - restricted by user permissions
     - use user access token (UAT)
        - uses OAuth
        - alternative flow if mobile app (instead of browser)
        - flow (see OAuth doc):
           - AUTH_URL: https://github.com/login/oauth/authorize
           - no response_type|grant_type parameters
           - no scope parameters, always '' in response
           - CALLBACK_URL:
              - def: ones specified in App settings
              - can|should specify multiple ones
           - additional parameters to GET AUTH_URL:
              - ?login=USER: prompt user to login
              - ?allow_signup=BOOL (def: true): allow unauthenticated users to signup, not only login
           - additional parameters to POST AUTH_URL:
              - repository_id REPO_ID: only permissions for this REPO
           - additional response from POST AUTH_URL:
              - refresh_token_expires_in
           - ACCESS_TOKEN start with ghu_*, REFRESH_TOKEN with ghr_*
        - can choose wheter to do it at installation time, instead of at first usage time
           - installation redirects to GET https://github.com/login/oauth/authorize
           - CALLBACK_URL: always use default one
           - no ?state
        - refreshing
           - expiration must be opted in
           - always 8h for ACCESS_TOKEN, 6 months for REFRESH_TOKEN
           - flow (see OAuth doc): TOKEN_URL https://github.com/login/oauth/access_token
        - revoking:
           - DELETE /applications/CLIENT_ID/token
           - can also be done by user
           - triggers 'github_app_authorization' webhook
              - should undo the app logic for that user
        - passed as Authorization: Bearer ACCESS_TOKEN [C]

Stopped at: https://docs.github.com/en/apps/creating-github-apps/authenticating-with-a-github-app/making-authenticated-api-requests-with-a-github-app-in-a-github-actions-workflow

tidbex/github-app-token           #GitHub action to get a currently installed GitHub app's IAT
                                  #Goal: use it instead of current GITHUB_TOKEN
                                  #Only needed when current GITHUB_TOKEN is missing permissions that GitHub app has
                                  #  - including access to other repos
                                  #Version 1.8.0
                                  #Checked internal code ???
INPUTS.app_id                     #APP_ID (should use secrets)
INPUTS.private_key                #APP_PRIVATE_KEY (should use secrets), base64'd or not
INPUTS.installation_id            #INSTALLATION_ID
INPUTS.repository                 #'USER/REPO' (def: current one)
INPUTS.permissions                #'OBJ_JSON'
INPUTS.github_api_url             #'URL' of GitHub API (for GitHub enterprise)
OUTPUTS.token                     #'JWT' (IAT)

@octokit/auth-app                 #???

@octokit/auth-oauth-app           #Node.js or Deno (through esm.sh)
                                  #Version 6.0.1

Registering:
  - by user or org
  - name, description, homepage URL

Rate limiting

https://docs.github.com/en/rest/apps/apps?apiVersion=2022-11-28
