
              
   GITHUB_CLI  
              



VERSION ==>                       #2.31.0

ENVVAR GH_NO_UPDATE_NOTIFIER      #Unless set, automatically updates

GOAL ==>                          #Not a command for every GitHub API endpoint, but instead replacing UI flow with CLI one

INSTALLATION ==>                  #Go binary, installed through OS package

HUB ==>                           #Old unofficial CLI, to avoid


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:            CONFIG             :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


ENVVAR GH_PATH                    #PATH to `gh` binary

GH_CONFIG_DIR                     #DIR of config files. Def:
                                  #  - $XDG_CONFIG_HOME/gh (if available)
                                  #  - $AppData/GitHub CLI (if available, Windows only)
                                  #  - ~/.config/gh
GH_CONFIG_DIR/config.yml          #CONFIG

gh config --host|-h               #'HOST'. Per-HOST CONFIG

gh config list                    #Print CONFIG
gh config get 'VAR'               #Get CONFIG.VAR
gh config set 'VAR' VAL           #Set CONFIG.VAR


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:              CLI              :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


ENVVAR GH_FORCE_TTY               #Force TTY. If NUM, number of COLs. If percentage, number of COLs multiplied by detected one
CONF.prompt
GH_PROMPT_DISABLED                #No interactive prompt

ENVVAR GLAMOUR_STYLE              #Markdown style
ENVVAR NO_COLOR                   #
ENVVAR CLICOLOR=0                 #
ENVVAR CLICOLOR_FORCE=1           #

gh completion                     #Completion script
--shell|-s                        #bash|zsh|fish|powershell


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:             EDIT              :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


CONFIG.pager
ENVVAR GH_PAGER|PAGER             #Used to read files

CONFIG.editor
ENVVAR GH_EDITOR|GIT_EDITOR
 |VISUAL|EDITOR                   #Used to edit files

CONFIG.browser
ENVVAR GH_BROWSER|BROWSER         #Used to open links
--web|-w                          #Use browser. Only with commands:
                                  #  - auth login
                                  #  - gist|issue|pr|project|release|repo|run|workflow view
                                  #  - codespace|issue|label|pr|project list
                                  #  - codespace|gist|issue|pr create
                                  #  - issue|pr comment
                                  #  - pr checks|diff
                                  #  - search, extension search
                                  #  - codespace code

gh browse [ARG]                   #Browse a REPO
gh browse NUM                     #Open issue|PR NUM
gh browse PATH                    #Open file
gh browse SHA                     #Open commit
--projects|-p                     #Open Projects page
--releases|-r                     #Open Releases page
--settings|-s                     #Open Settings page
--wiki|-w                         #Open Wiki page
--no-browser|-n                   #Print REPO URL without opening it
--commit|-c                       #'SHA' (def: 'last')


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:            OUTPUT             :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


ENVVAR GH_DEBUG                   #false, true, or 'api'. Verbose mode

--json                            #'VAR,...'. Outputs as JSON instead of text
                                  #If 'VAR,...' omitted, prints list of possible VARs
                                  #Only with commands:
                                  #  - codespace|issue|label|pr|repo|run list
                                  #  - codespace|issue|pr|release|repo|run view
                                  #  - issue|pr status
                                  #  - codespace ports
                                  #  - search, extension search
                                  #  - api: always enabled
--jq|-q                           #STR. Applies jq filter.
                                  #Requires --json
--template|-t                     #STR. Applies Go template.
                                  #Requires --json


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:             AUTH              :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


ENVVAR GH_HOST
gh auth ...
--hostname|-h                     #'HOSTNAME' (def: 'github.com')

gh auth login|refresh
--scopes|-s                       #Additional 'PRIVILEGE,...'. Default: repo, read:org, gist
--insecure-storage                #Do not encrypt gho_* token locally

gh auth login                     #Authenticate as an OAuth app, then keep gho_* token locally
--with-token                      #Read token from stdin instead of browser
CONFIG.git_protocol
--git-protocol|-p                 #'ssh' (def) or 'https'

ENVVAR GH_TOKEN|GITHUB_TOKEN      #Can be used too

gh auth logout                    #

gh auth status                    #Show auth status
--show-token|-t                   #Do not hide gho_* token

gh auth token                     #Print gho_* token

gh auth refresh                   #Grant more PRIVILEGEs

gh auth setup-git                 #Make `git` use `gh auth` for authentication


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:             ALIAS             :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


gh alias set ALIAS '...'          #Make `gh ALIAS [...]` a shortcut for gh ...
                                  #'...' can use:
                                  #  - $NUM: additional arguments in [...]
                                  #  - - (stdin)
--shell|-s                        #Run in `sh`
                                  #Can also prepend ALIAS with !

CONFIG.aliases.ALIAS              #'...'

gh alias list                     #

gh alias delete ALIAS             #

gh alias import PATH|-            #Import ALIASes
                                  #PATH is YAML, with keys being ALIAS, and values '...'
--clobber                         #Overwrite


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:              API              :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


--limit|-L                        #NUM (def: 30). ?per_page API parameter
                                  #Only for commands:
                                  #  - * list, except alias|config|variable|secret|extension|gpg-key|ssh-key
                                  #  - search, extension search

CONFIG.http_unix_socket           #Proxies HTTP requests to this Unix socket

gh api PATH                       #Run GitHub API request
      --cache duration        Cache the response, e.g. "3600s", "60m", "1h"
  -F, --field key=value       Add a typed parameter in key=value format
  -H, --header key:value      Add a HTTP request header in key:value format
      --hostname string       The GitHub hostname for the request (default "github.com")
  -i, --include               Include HTTP response status line and headers in the output
      --input file            The file to use as body for the HTTP request (use "-" to read from standard input)
  -q, --jq string             Query to select values from the response using jq syntax
  -X, --method string         The HTTP method for the request (default "GET")
      --paginate              Make additional HTTP requests to fetch all pages of results
  -p, --preview names         GitHub API preview names to request (without the "-preview" suffix)
  -f, --raw-field key=value   Add a string parameter in key=value format
      --silent                Do not print the response body
  -t, --template string       Format JSON output using a Go template; see "gh help formatting"


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:          EXTENSIONS           :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


CLI EXTENSION ==>                 #Use topic `gh-extension`

gh extension install STR          #Install EXTENSION
                                  #STR can be 'USER/REPO', URL or DIR
--force                           #If already installed, upgrade
--pin                             #'TAG|COMMIT' to pin version

gh extension remove EXTENSION     #

gh EXTENSION ...
gh extension exec EXTENSION ...   #Run an EXTENSION

gh extension list                 #List installed EXTENSIONs

gh extension browse               #Browse available EXTENSIONs in TUI
gh extension search QUERY         #Search available EXTENSIONs

gh extension create NAME          #Create a new
--precompiled                     #'go|other'. Precompiled binary


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:             REPO              :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


--repo-owner                      #'USER'
                                  #Only for commands:
                                  #  - codespace code|cp|delete|edit|jupyter|logs|ports|rebuild|ssh|stop|view

ENVVAR GH_REPO                    #'USER/REPO'
--repo|-R                         #For same commands as --repo-owner, plus:
                                  #  - codespace create|list
                                  #  - search (can be 'USER/REPO,...')
--repos|-r                        #'USER/REPO,...'
                                  #Only for commands: git secret|variable set

--branch|-b                       #'BRANCH'
                                  #Only for commands: browse, codespace create, pr checkout, repo sync|view, run list

--user|-u                         #'USER'
                                  #Only for commands: codespace delete|list|stop, secret delete|list|set, run list

--org|-o                          #'ORG'
                                  #Same commands as --user, plus: variable delete|list|set, repo fork, status

gh status                         #Shows assigned issues|PRs, PR reviews, @-mentions, new issues|PR|comments
--exclude|-e                      #'USER/REPO,...'
