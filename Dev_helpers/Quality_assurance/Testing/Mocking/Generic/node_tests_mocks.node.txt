
                    
   NODE_TESTS_MOCKS  
                    



ALTERNATIVES ==>                  #See Node.js core

VERSION ==>                       #Part of Node.js core


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:             SPIES             :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


new ASSERT.CallTracker()          #Spy on a FUNC
CALLTRACKER.calls([FUNC][, NUM])  #Asserts FUNC called NUM times (def: 1)
 ->FUNC2                          #Def FUNC: noop
CALLTRACKER.getCalls(FUNC)
 ->OBJ_ARR                16.18.0*#Spied FUNC calls. OBJ: arguments ARR, thisArg VAL
CALLTRACKER.report()
 ->ASSERTIONERROR_ARR             #
CALLTRACKER.verify()              #Throw all ASSERTIONERROR_ARR aggregated as one
CALLTRACKER.reset([FUNC]) 16.18.0*#Reset spied FUNC (def: all)


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:             MOCKS             :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


[T.]mock                   19.1.0*#MOCK_TRACKER
new MockTracker()          19.1.0*#MOCK_TRACKER
MOCKTRACKER.fn([FUNC]      19.1.0*#Def FUNC: noop
 [, FUNC2][, OPTS])->MFUNC 19.1.0*#If FUNC2, call MCONTEXT.mockImplementation(FUNC2)
                           19.1.0*#OPTS:
                           19.1.0*#  - times NUM (def: Infinity): after NUM times, call MCONTEXT.restore()
MOCKTRACKER.method         19.1.0*#Same but for a method. Directly modifies it
 (OBJ, 'VAR'|SYM[, FUNC2]  19.1.0*#OPTS:
 [, OPTS])->MFUNC          19.1.0*#  - times NUM
                           19.1.0*#  - getter|setter BOOL (def: false)
MOCKTRACKER.getter|setter
 (...)                     19.3.0*#Same as MOCKTRACKER.method(...) with OPTS.getter|setter true
MOCKTRACKER.restoreAll()   19.1.0*#Call all MCONTEXT.restore()
MOCKTRACKER.reset()        19.1.0*#Call MOCKTRACKER.restoreAll(), and undo all MOCKTRACKER.fn()
                           19.1.0*#T.mock.reset() is automatically called after each test

MFUNC.mock                 19.1.0*#MCONTEXT
new MockFunctionContext()  19.1.0*#MCONTEXT

MCONTEXT.calls()->CALL_ARR 19.1.0*#Function calls
CALL.arguments             19.1.0*#ARR
CALL.this                  19.1.0*#`this` VAL
CALL.result                19.1.0*#Return VAL
CALL.error                 19.1.0*#ERROR thrown, or undefined
CALL.stack                 19.1.0*#ERROR created during call, to get ERROR.stack
CALL.target                19.1.0*#new.target if FUNC is constructor, or undefined
MCONTEXT.callCount()       19.1.0*#Like MCONTEXT.calls.length
MCONTEXT.resetCalls()      19.3.0*#Reset MCONTEXT.calls

MCONTEXT.
 mockImplementation
 (FUNC2)                   19.1.0*#Mocks implementation
MCONTEXT.
 mockImplementationOnce    19.1.0*#Same but calls restore() right after the call.
 (FUNC2[, NUM])            19.1.0*#If NUM, only mock it for the call number NUM.
MCONTEXT.restore()         19.1.0*#Undo MCONTEXT.mockImplementation()
