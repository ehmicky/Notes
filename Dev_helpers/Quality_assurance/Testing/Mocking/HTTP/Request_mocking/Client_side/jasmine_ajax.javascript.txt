
                
   JASMINE_AJAX  
                



ALTERNATIVES ==>                                #See nise

VERSION ==>                                     #3.4.0
                                                #Mocks XMLHttpRequest:
                                                #  - asserts client-side HTTP requests
                                                #  - mocks client-side HTTP responses
                                                #Uses Jasmine


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:            GENERAL            :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


JASMINE.Ajax                                    #AJAX

AJAX.install()                                  #Sets the mocks
                                                #Must be done in before*()
AJAX.uninstall()                                #Must be done in after*()
AJAX.withMock(FUNC)                             #Calls AJAX.install|uninstall() before FUNC and after it (in a "finally")


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:           RESPONSE            :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


AJAX.stubRequest(URL_STR|REGEXP
 [, DATA|QUERY_STR|REGEXP][, 'METHOD'])->STUB   #Mock future calls to 'URL', with query|data and METHOD matching too
STUB.andReturn([RESP])                          #Mocks: respond with RESP (def RESP.status 200)
STUB.andError([RESP])                           #Mocks: respond with RESP, which can only have RESP.status (def: 500)
STUB.andTimeout()                               #Mocks: respond with timeout
STUB.andCallFunction(FUNC)                      #Mocks: calls FUNC(XHR)

RESP                                            #OBJ:
                                                #  - status NUM
                                                #  - statusText STR
                                                #  - contentType 'MIME'
                                                #  - response VAL
                                                #  - responseJSON VAL (same but apply JSON.stringify())
                                                #  - responseText STR
                                                #  - responseHeaders OBJ
                                                #  - responseURL STR


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:            REQUEST            :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


XHR.respondWith(RESP)                           #Make this call respond with RESP

XHR                                             #Same members as XHR except responseBody|Timeout, upload(), withCredentials
                                                #Does not support ARRBUFFER|BLOB
                                                #Members can be directly set.
XHR.method                                      #STR
XHR.url                                         #STR
XHR.requestHeaders                              #OBJ
XHR.params                                      #OBJ (query variables)
XHR.data()->VAL                                 #VAL (request body)
XHR.password|username                           #STR
XHR.responseTimeout()                           #Fake a timeout after JASMINE.clock().tick(30000)

AJAX.requests                                   #REQUESTS
REQUESTS.first|mostRecent()->XHR                #Gets first|last XHR
REQUESTS.at(NUM)->XHR                           #Same for XHR numero NUM
REQUESTS.count()->NUM                           #Number of requests
REQUESTS.filter('URL'|REGEXP|FUNC(XHR)->BOOL)
 ->XHR_ARR                                      #Returns matching requests
REQUESTS.reset()                                #Resets REQUESTS
