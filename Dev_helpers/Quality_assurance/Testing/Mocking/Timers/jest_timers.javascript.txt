
               
   JEST_TIMERS  
               



VERSION ==>                       #Package within Jest monorepo (see its doc)
                                  #Based on @sinonjs/fake-timers


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:             CORE              :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


JEST.useFakeTimers([TIMERS_CONF]) #Mocks clear|setTimeout|Interval|Immediate and process.nextTick()
JEST.useRealTimers()              #Unmocks

CONF.fakeTimers                   #TIMERS_CONF
TIMERS_CONF.enableGlobbaly        #BOOL (def: false). Calls JEST.useFakeTimers()
TIMERS_CONF.doNotFake             #'FUNC'_ARR (def: [])
TIMERS_CONF.timerLimit            #Like @sinonjs/fake-timers OPTS.loopLimit NUM (def: 1e5)
TIMERS_CONF.advanceTimers         #Like @sinonjs/fake-timers OPTS.shouldAdvanceTime BOOL and OPTS.advanceTimeDelta NUM (def: false)
TIMERS_CONF.now                   #Like @sinonjs/fake-timers
TIMERS_CONF.legacyFakeTimers      #BOOL (def: false)

JEST.clearAllTimers()             #Clears all setTimeout|Interval|Immediate() and process.nextTick()
JEST.getTimerCount()->NUM         #Number of fake timers

JEST.setSystemTime(DATE_NUM)      #
JEST.getSystemTime()->DATE_NUM    #

JEST-MOCK-NOW ==>                ##Mocks Date.now() so it always return the same DATE


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:            ADVANCE            :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


AUTOMATIC ADVANCE ==>             #At end of any async test, automatically advances setImmediate() and process.nextTick() timers
                                  #until there are no more left.
                                  #This is done even if fake timers are disabled

JEST.advanceTimersByTime(NUM)     #Advance timers mocks (except process.nextTick()) by NUMms
JEST.advanceTimersToNextTimer()   #Advance timers mocks (except process.nextTick()) to next one
JEST.runAllTimers()               #Advance timers mocks until there are no more left
JEST.runAllImmediates()           #Like runAllTimers() for only setImmediate()
JEST.runAllTicks()                #Like runAllTimers() for only process.nextTick()
JEST.runOnlyPendingTimers()       #Like runAllTimers() but if new timers are registered by them, those timers are advanced but not run
