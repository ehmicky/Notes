
             
   NODE_TEST  
             



VERSION ==>                       #Part of Node.js core

ASSERTIONS ==>                    #None, but can use core 'assert' module or any assertion library that throws


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:             TESTS             :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


node --test                18.1.0*#Must be used

test(['TITLE'][, OPTS], FUNC(T))  #Test fails when throwing
 ->PROMISE                        #FUNC can be async by using a PROMISE or callback FUNC(ERROR)
                                  #Def 'TITLE': FUNC.name or '<anonymous>'
                                  #PROMISE resolves once test has completed.
T.test(...)->PROMISE              #Sub-test.
                                  #Inherits all OPTS
                                  #PROMISE should be awaited

describe|it                18.6.0*#Like [T.]test[.skip|...](...) except:
 [.skip|todo|only](...)    18.6.0*#  - sync
                           18.6.0*#  - T is not passed as argument


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:           SELECTION           :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


node FILE...                      #File selection
                                  #Default: any files matching all of:
                                  #  - in cwd or descendant
                                  #  - not inside node_modules
                                  #  - extension is .js|cjs|mjs
                                  #  - either:
                                  #     - descendant of 'test' DIR
                                  #     - basename is test[-*], *.test, *_test or *-test

OPTS.skip                         #BOOL|'MESSAGE'
                                  #Skip the test
T.skip(['MESSAGE'])               #Same

OPTS.todo                         #BOOL|'MESSAGE'
                                  #Mark test as TODO
T.todo(['MESSAGE'])               #Same

OPTS.only                         #BOOL
                                  #Only run this test, providing node --test-only is used
T.runOnly(BOOL)                   #Same

                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:           EXECUTION           :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


TEST RUN ==>                      #Test functions are run as they are defined (i.e. synchronously)
                                  #Top-level tests are performed serially, i.e. each test wait for previous one to end.

PROCESS EXIT ==>                  #On process exit (including SIGINT|SIGTERM):
                                  #  - make tests still running fail ("cancelled")
                                  #  - exit code 1 if one test failed
                                  #'uncaughtException|unhandledRejection' make top test fail


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:           REPORTING           :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


TAP ==>                           #TAP is output on stdout, and exit code is 0|1 depending on success
                                  #See TAP documentation for details

T.diagnostic('MESSAGE')           #TAP comment. Only if test failed


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:          PARALLELISM          :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


PARALLELISM ==>                   #Each file is executed in its own child process, in parallel

OPTS.concurrency                  #NUM (def: 1)
                                  #Run sub-tests in parallel, providing Promise.all() is used
