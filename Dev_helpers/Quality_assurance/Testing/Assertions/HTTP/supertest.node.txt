
                                  ┏━━━━━━━━━━━━━━━┓
                                  ┃   SUPERTEST   ┃
                                  ┗━━━━━━━━━━━━━━━┛

ALTERNATIVES ==>                #See frisby

VERSION ==>                     #0.15.0
                                #SUPERAGENT customized for server-side testing

require("supertest")            #Usually called REQUEST
REQUST[.agent](DOMAIN_URL|APP)  #Returns SUPERAGENT REQUEST, augmented with some functions.
                                #If Express APP, deduces DOMAIN_URL.
                                #Use ".agent" if cookies

REQUEST.expect
(HEADER_STR, REGEXP|STR)        #Expectations should be at end of chain.
REQUEST.expect([STATUS_UINT, ]
[BODY_OBJ|STR|REGEXP])          #
REQUEST.expect(FUNC(RES))       #If error, should return|throw STR. Otherwise nothing

REQUEST.end                     #ERROR is not null if expectations failed, so can be used as async callback to Mocha.
(FUNC2(ERROR, RESPONSE))        #Can instead:
                                #  - pass FUNC2 as last argument to expect() (does not work with expect(FUNC))
                                #    Example: it( STR, function(done) { REQUEST.get(URL).expect(..., done); } );
                               ##  - if require("supertest-as-promised") (1.0.0) instead of require("supertest"),
                               ##    REQUEST.expect() returns PROMISE:
                               ##     - only REQUEST.then(...), resolved with RESPONSE or rejected with ERROR
                               ##     - can return REQUEST.expect() in a test case if using CHAI-AS-PROMISED
