
                  
   COUNTRIES-LIST  
                  



VERSION ==>                       #3.0.6

countries                         #OBJ of all countries
                                  #KEY is 'CODE': ISO 3166-2 alpha-2 code
                                  #Value is OBJ2:
                                  #  - name STR (e.g. 'Sweden')
                                  #  - native STR (e.g. 'Sverige')
                                  #  - phone STR (e.g. '46')
                                  #  - continuent STR (e.g. 'EU')
                                  #  - capital STR (e.g. 'Stockholm')
                                  #  - currency STR (e.g. 'SEK')
                                  #  - languages STR_ARR (e.g. ['sv'])

getCountryDataList()->OBJ         #Returns countries, but OBJ also has:
                                  #  - iso2 'CODE' (2 letters)
                                  #  - iso3 'CODE' (3 letters)
getCountryCode('CODE')->OBJ       #Like countries.CODE, but with getCountryDataList()

getCountryCode('COUNTRY')->'CODE' #

getEmojiFlag('COUNTRY')->STR|''   #From country ISO to flag emoji

continents                        #{ KEY: STR, ... } of all continents
                                  #E.g. { EU: 'Europe' }

languages                         #{ KEY: { name STR, native STR[, rtl 1] } } of all languages (ISO 639-1)
                                  #E.g. { fr: { name: 'French', native: 'Français' } }
