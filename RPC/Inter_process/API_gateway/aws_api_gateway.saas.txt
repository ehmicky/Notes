
                   
   AWS_API_GATEWAY  
                   



VERSION ==>                       #2023-22-06

NOTATION ==>                     1#v1 only (can also guess from not using X*)
                                 2#v2 only (can also guess from using X*)
                                 -#v1, or v2 HTTP only
                                 ~#v1, or v2 WebSocket only


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:              API              :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


VERSION ==>                       #There are two versions of the API:
                                 1#  - v1 (also called "REST")
                                 1#     - more features, except for a few that v2-only
                                 2#  - v2 (also called "HTTP"/"WebSocket")
                                 2#     - cheaper
                                 2#     - slightly faster
                                 2#     - simpler
                                 2#     - i.e. preferred unless need v1 features
                                  #Resources are version-specific, i.e. cannot use v1|v2 together

SERVICE_DOMAIN                    #apigateway.amazonaws.com

FORMAT ==>                        #JSON REST

REQ_ID                            #x-amzn-requestid [S]

PAGINATION ==>                    #Uses:
                                 1#  - REQ.limit NUM (def 25, max 500), REQ|RES.position STR
                                 2#  - REQ.maxResults NUM (def 25, max 500), REQ|RES.nextToken STR
                                  #No pagination:
                                  #  - GetTags()
                                 1#  - GetStages()


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:          API EXECUTE          :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


EXECUTE API ==>                   #Separate API, also called "data plane API"
                                  #Only for *Connection()

SERVICE_DOMAIN                    #[X]API_MID.execute-api.amazonaws.com/STAGE

FORMAT ==>                        #JSON REST

XAPI.apiEndpoint                  #'XAPI_MID/execute-api.amazonaws.com'
[X]API.disableExecuteApiEndpoint  #BOOL (def: true). Allow [X]API_MID.execute-api.amazonaws.com
                                  #If false, can still use [X]DNAME


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:             PATCH             :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


PATCH METHODS ==>                1#All Update*() request payload is different from other SERVICEs
                                 1#Instead, it is { patchOperations: PATCH_OP_ARR }

PATCH_OP.op                       #STR, among the following
PATCH_OP.op 'replace'             #Set value. Unless documented otherwise, always available
PATCH_OP.op 'add|remove'          #Add|remove ARR item. Unless documented otherwise, always available if property is ARR
                                  #Also for properties that are 'VAL,...', or dynamic OBJs (where keys are user-defined)
PATCH_OP.op 'copy'                #Set value using another property's value
                                  #Only with STAGE.deploymentId, with PATCH_OP.from '/canarySettings/deploymentId'
PATCH_OP.op 'move'                #Like 'copy' but deletes original value
PATCH_OP.op 'test'                #Like 'replace' but dry run

PATCH_OP.path                     #VARR to property, as JSON pointer, e.g. /VAR/VAR2
                                  #Excluding - (ARR append), but including ~0|~1 escaping
                                  #Only for mutable attributes
                                  #OBJ: unless documented otherwise:
                                  #  - dynamic OBJs: only OBJ itself, not OBJ.* (but can use op 'add|remove')
                                  #  - non-dynamic OBJs: only for OBJ.*, not OBJ itself
                                  #OBJ_ARR: use an OBJ id, not the ARR index
                                  #Other ARR: only for ARR itself, not ARR.*

PATCH_OP.value                    #STR. Only with PATCH_OP 'replace|add|test'
PATCH_OP.from                     #VARR to property containing the value to set, as JSON pointer
                                  #Only with PATCH_OP 'copy|move'


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:           REST API            :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


POST /restapis                    #Req: API
                                  #  - no id, createdDate, warnings
                                  #  - only one with cloneFrom
CreateRestApi()                   #Res: API
PATCH /restapis/API_MID           #Req: API
                                  #  - no id, createdDate, version, warnings, tags
UpdateRestApi()                   #Res: API
GET /restapis                     #Req: empty
GetRestApis()                     #Res: item API_ARR
GET /restapis/API_MID             #Req: empty
GetRestApi()                      #Res: API
DELETE /restapis/API_MID          #Req: empty
DeleteRestApi()                   #Res: empty

POST /v2/apis                     #Req: XAPI
CreateApi()                       #  - no apiId, warnings, importInfo, apiEndpoint, apiGatewayManaged, createdDate
                                  #  - only ones with target|credentialsArn|routeKey
                                  #Res: XAPI
PATCH /v2/apis/XAPI_MID           #Req: XAPI
UpdateApi()                       #  - no apiId, warnings, importInfo, apiEndpoint, apiGatewayManaged, createdDate
                                  #  - no protocolType, tags
                                  #  - only ones with target|credentialsArn|routeKey
                                  #Res: XAPI
GET /v2/apis                      #Req: empty
GetApis()                         #Res: items XAPI_ARR
GET /v2/apis/XAPI_MID             #Req: empty
GetApi()                          #Res: XAPI
DELETE /v2/apis/XAPI_MID          #Req: empty
DeleteApi()                       #Res: empty
DELETE /v2/apis/XAPI_MID/cors     #Req: empty
DeleteCorsConfiguration()         #Res: empty
                                  #Deletes XAPI.corsConfiguration

API.id
XAPI.apiId                        #[X]API_MID
[X]API.name                       #'API'
[X]API.description                #STR
[X]API.createdDate                #DATE_NUM|'DATE'

API.cloneFrom                     #API_MID to copy from

[X]API.version                    #'API_VERSION'

XAPI.protocolType                 #Either 'HTTP' or 'WEBSOCKET'

API.minimumCompressionSize        #NUM (max: 10MB). When set, allow compressed request body, and produce response body
                                  #Only when body >=NUM bytes.
API.binaryMediaTypes              #Additional 'MIME'_ARR supported for Content-Type [C]
                                  #By default, only allows UTF8

XAPI.routeSelectionExpression     #'ROUTE_EXPR' used by each request
                                  #For HTTP: always '${request.method} ${request.path}'

API.endpointConfiguration         #ENDPOINT
ENDPOINT.types                    #STR_ARR among:
                                  #  - 'EDGE' (def, "edge-optimized"): use edge location
                                  #  - 'REGIONAL': use current REGION
                                  #  - 'PRIVATE': use VPC
ENDPOINT.vpcEndpointIds           #VPC ENDPOINT_MID_ARR. Only if types 'PRIVATE'

API.policy                        #'OBJ_JSON'

[X]API.tags                       #TAGS

XAPI.corsConfiguration            #CORS
                                  #Only with HTTP
CORS.allowOrigins                 #'ORIGIN'_ARR. Access-Control-Allow-Origin [S]
CORS.allowMethods                 #'HTTP_METHOD'_ARR. Access-Control-Allow-Method [S]
CORS.allowHeaders                 #'HEADER'_ARR. Access-Control-Allow-Headers [S]
CORS.allowCredentials             #BOOL. Access-Control-Allow-Credentials [S]
CORS.maxAge                       #NUM. Access-Control-Max-Age [S]
CORS.exposeHeaders                #'HEADER'_ARR. Access-Control-Expose-Headers [S]

XAPI.apiGatewayManaged            #BOOL (def: false). Do not allow update|delete
                                  #Following properties|behaviors are also set.
XSTAGE.apiGatewayManaged          #BOOL. Create a '$default' XSTAGE, readonly
XROUTE.apiGatewayManaged          #BOOL. Create a '$default' XROUTE, readonly
XINTEGRATION.apiGatewayManaged    #BOOL. Do not allow delete (but allow update)


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:         IMPORT/EXPORT         :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


GET /restapis/API_MID
 /stages/STAGE                    #Req: API_EXPORT
 /exports/API_EXPORT_TYPE         #  - stageName is in URL path
GetExport()                       #Res: RAW_API_EXPORT
POST /restapis?mode=import        #Req: RAW_API_EXPORT + [API_]IMPORT (query variables)
ImportRestApi()                   #  - no mode
                                  #Res: API
PUT /restapis/API_MID             #Req: RAW_API_EXPORT + [API_]IMPORT (query variables)
PutRestApi()                      #Res: API

GET /v2/apis/XAPI_MID
 /exports/XAPI_EXPORT_TYPE        #Req: XAPI_EXPORT
ExportApi()                       #Res: XRAW_API_EXPORT
PUT /v2/apis                      #Req: XRAW_API_EXPORT + X[API]_IMPORT (query variables)
ImportApi()                       #Res: XAPI
PUT /v2/apis/XAPI_MID             #Req: XRAW_API_EXPORT + X[API]_IMPORT (query variables)
ReimportApi()                     #Res: XAPI

[X]API_EXPORT_TYPE                #OpenAPI version, either 'oas30' (3.0) or 'swagger' (2.0)

Accepts: MIME [C]                 #'application/json' or 'application/yaml'
XAPI_EXPORT.outputType            #'JSON' or 'YAML'

[X]RAW_API_EXPORT                 #'JSON|YAML' OpenAPI SPEC

XAPI_EXPORT.exportVersion         #Always '1.0'
XAPI_EXPORT.includeExtensions     #BOOL (def: true). Include all x-amazon-apigateway-*
API_EXPORT.extensions             #'STR,...' to enabled among:
                                  #  - 'integrations|apigateway': x-amazon-apigateway-integration
                                  #  - 'authorizers': x-amazon-apigateway-authorizer
                                  #  - 'postman': Postman extensions

[X]API_EXPORT.stageName           #'XSTAGE' to export

IMPORT.mode                       #Instead of creating a new API, either:
                                  #  - 'merge' (def) to one
                                  #  - 'overwrite' one

[X]API.warnings                   #'MESSAGE'_ARR. Import issues
[X]IMPORT.failOnWarnings          #BOOL (def: false). Fail on [X]API.warnings

API_IMPORT.ignore                 #If 'documentation', do not import DOCPARTs
API_IMPORT
 .endpointConfigurationTypes      #STR (def: 'EDGE'), of ENDPOINT.types
[X]API_IMPORT.basepath            #STR on how to set OpenAPI SERVER.basePath, among:
                                  #  - 'ignore' (def)
                                  #  - 'prepend'
                                  #  - 'split'
                                  #Only with HTTP

XAPI.importInfo                   #STR_ARR ???
                                  #Not with HTTP


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:           RESOURCE            :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


POST /restapis/API_MID            #Req: RESOURCE
 /resources/PARENT_RESOURCE_MID   #  - no id, path, resourceMethods
CreateResource()                  #  - parentId is in URL path
                                  #Res: RESOURCE
PATCH /restapis/API_MID           #Req: RESOURCE
 /resources/RESOURCE_MID          #  - no id, path, resourceMethods
UpdateResource()                  #Res: RESOURCE
GET /restapis/API_MID/resources   #Req: empty
GetResources()                    #Res: item RESOURCE_ARR
GET /restapis/API_MID
 /resources/RESOURCE_MID          #Req: empty
GetResource()                     #Res: RESOURCE
DELETE /restapis/API_MID
 /resources/RESOURCE_MID          #Req: empty
DeleteResource()                  #Res: empty

RESOURCE.id                       #RESOURCE_MID
RESOURCE.parentId                 #PARENT_RESOURCE_MID
RESOURCE.path                     #'/PATH'
RESOURCE.pathPart                 #Last part of '/PATH'
RESOURCE
 .resourceMethods.HTTP_METHOD     #ROUTE


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:          ROUTE MAIN           :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


PUT /restapis/API_MID
 /resources/RESOURCE_MID          #Req: ROUTE
 /methods/HTTP_METHOD             #  - no httpMethod, methodIntegration, methodResponses
PutMethod()                       #Res: ROUTE
PATCH /restapis/API_MID           #Req: ROUTE
 /resources/RESOURCE_MID          #  - no httpMethod, methodIntegration, methodResponses
 /methods/HTTP_METHOD             #  - op:add|remove, not op:replace: authorizationScopes
UpdateMethod()                    #Res: ROUTE
GET /restapis/API_MID
 /resources/RESOURCE_MID
 /methods/HTTP_METHOD             #Req: empty
GetMethod()                       #Res: ROUTE
DELETE /restapis/API_MID
 /resources/RESOURCE_MID
 /methods/HTTP_METHOD             #Req: empty
DeleteMethod()                    #Res: empty

POST /v2/apis/XAPI_MID/routes     #Req: XROUTE
CreateRoute()                     #  - no routeId, apiGatewayManaged
                                  #Res: XROUTE
PATCH /v2/apis/XAPI_MID           #Req: XROUTE
 /routes/XROUTE_MID               #  - no routeId, apiGatewayManaged
UpdateRoute()                     #Res: XROUTE
GET /v2/apis/XAPI_MID/routes      #Req: empty
GetRoutes()                       #Res: items XROUTE_ARR
GET /v2/apis/XAPI_MID
 /routes/XROUTE_MID               #Req: empty
GetRoute()                        #Res: XROUTE
DELETE /v2/apis/XAPI_MID
 /routes/XROUTE_MID               #Req: empty
DeleteRoute()                     #Res: empty
DELETE /v2/apis/XAPI_MID
 /routes/XROUTE_MID               #Req: empty
 /requestparameters/XPARAM        #Res: empty
DeleteRouteRequestParameter()     #Delete XROUTE.requestParameters

XROUTE.routeId                    #XROUTE_MID
XROUTE.routeKey                   #'XROUTE'
                                  #For HTTP: either 'HTTP_METHOD /PATH' or '$default' (catch-all)
                                  #For WebSocket: ???
ROUTE.httpMethod                  #'HTTP_METHOD'

[X]ROUTE.operationName            #'OPERATION', used by SDK and OpenAPI

[X]ROUTE.requestParameters       ~#OBJ. Allowed request non-body parameters
                                 ~#Key is 'method.request.LOCATION.PARAM'
                                 ~#LOCATION can be 'path', 'querystring', 'header'
                                 ~#Value is BOOL: requiredness of PARAM
                                 ~#Not with MOCK INTEGRATIONs
[X]ROUTE.requestModels.MIME      ~#'MODEL'. Allowed request body parameters
XROUTE.modelSelectionExpression  ~#'MODEL_EXPR'. Allowed request body parameters

XROUTE.target                     #STR ???


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:        ROUTE RESPONSE         :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


PUT /restapis/API_MID
 /resources/RESOURCE_MID
 /methods/HTTP_METHOD             #Req: RRESP
 /responses/STATUS_NUM            #  - no statusCode
PutMethodResponse()               #Res: RRESP
PATCH /restapis/API_MID
 /resources/RESOURCE_MID
 /methods/HTTP_METHOD             #Req: RRESP
 /responses/STATUS_NUM            #  - no statusCode
UpdateMethodResponse()            #Res: RRESP
GET /restapis/API_MID
 /resources/RESOURCE_MID
 /methods/HTTP_METHOD
 /responses/STATUS_NUM            #Req: empty
GetMethodResponse()               #Res: RRESP
DELETE /restapis/API_MID
 /resources/RESOURCE_MID
 /methods/HTTP_METHOD
 /responses/STATUS_NUM            #Req: empty
DeleteMethodResponse()            #Res: empty

POST /v2/apis/XAPI_MID            #Req: XRRESP
 /routes/XROUTE_MID/routeresponses#  - no routeResponseId
CreateRouteResponse()             #Res: XRRESP
PATCH /v2/apis/XAPI_MID
 /routes/XROUTE_MID               #Req: XRRESP
 /routeresponses/XRRESP_MID       #  - no routeResponseId
UpdateRouteResponse()             #Res: XRRESP
GET /v2/apis/XAPI_MID
 /routes/XROUTE_MID/routeresponses#Req: empty
GetRouteResponses()               #Res: XRRESP
GET /v2/apis/XAPI_MID
 /routes/XROUTE_MID
 /routeresponses/XRRESP_MID       #Req: empty
GetRouteResponse()                #Res: items XRRESP_ARR
DELETE /v2/apis/XAPI_MID
 /routes/XROUTE_MID
 /routeresponses/XRRESP_MID       #Req: empty
DeleteRouteResponse()             #Res: empty

XRRESP.routeReponseId             #XRRESP_MID
XRRESP.routeReponseKey            #'XRRESP'

RRESP.statusCode                  #'STATUS_NUM'
[X]RRESP.responseParameters       #OBJ. Response headers
                                  #Key is 'method.response.header.HEADER'
                                  #Value is BOOL: requiredness
[X]RRESP.responseModels.MIME      #'MODEL'. Response body
XRRESP.modelSelectionExpression   #'MODEL_EXPR'. Response body
                                  #Only with WebSocket

ROUTE.methodResponses.STATUS_NUM  #RRESP
XROUTE.routeResponse
 .SelectionExpression           2~#'RRESP_EXPR'


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:          ROUTE TEST           :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


POST /restapis/API_MID
 /resources/RESOURCE_MID
 /methods/HTTP_METHOD             #Req: INVOKE_ROUTE_REQ
TestInvokeMethod()                #Res: INVOKE_ROUTE_RES

INVOKE_ROUTE_REQ
 .pathWithQueryString             #'/PATH?QUERY'. Request path
INVOKE_ROUTE_REQ.headers.HEADER   #'VAL'. Request headers
INVOKE_ROUTE_REQ
 .multiValueHeaders.HEADER        #Same as 'VAL'_ARR
INVOKE_ROUTE_REQ.body             #STR. Request body
INVOKE_ROUTE_REQ
 .stageVariables.STAGE_VAR        #'VAL'

INVOKE_ROUTE_RES.status           #STATUS_NUM of response
INVOKE_ROUTE_RES.headers.HEADER   #'VAL'. Response headers
INVOKE_ROUTE_RES
 .multiValueHeaders.HEADER        #Same as 'VAL'_ARR
INVOKE_ROUTE_RES.body             #STR. Response body
INVOKE_ROUTE_RES.latency          #NUM (in ms). Duration
INVOKE_ROUTE_RES.log              #STR. Execution log


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:       INTEGRATION MAIN        :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


PUT /restapis/API_MID
 /resources/RESOURCE_MID          #Req: INTEGRATION
 /methods/HTTP_METHOD/integration #  - no integrationResponses
PutIntegration()                  #Res: INTEGRATION
PATCH /restapis/API_MID
 /resources/RESOURCE_MID          #Req: INTEGRATION
 /methods/HTTP_METHOD/integration #  - no credentials, integrationResponses
UpdateIntegration()               #Res: INTEGRATION
GET /restapis/API_MID
 /resources/RESOURCE_MID
 /methods/HTTP_METHOD/integration #Req: empty
GetIntegration()                  #Res: INTEGRATION
DELETE /restapis/API_MID
 /resources/RESOURCE_MID
 /methods/HTTP_METHOD/integration #Req: empty
DeleteIntegration()               #Res: empty

POST /v2/apis/XAPI_MID            #Req: XINTEGRATION
 /integrations                    #  - no integrationId, integrationResponseSelectionExpression, apiGatewayManaged
CreateIntegration()               #Res: XINTEGRATION
PATCH /v2/apis/XAPI_MID           #Req: XINTEGRATION
 /integrations/XINTEGRATION_MID   #  - no integrationId, integrationResponseSelectionExpression, apiGatewayManaged
UpdateIntegration()               #Res: XINTEGRATION
GET /v2/apis/XAPI_MID
 /integrations                    #Req: empty
GetIntegrations()                 #Res: items XINTEGRATION_ARR
GET /v2/apis/XAPI_MID
 /integrations/XINTEGRATION_MID   #Req: empty
GetIntegration()                  #Res: XINTEGRATION
DELETE /v2/apis/XAPI_MID
 /integrations/XINTEGRATION_MID   #Req: empty
DeleteIntegration()               #Res: empty

XINTEGRATION.integrationId        #XINTEGRATION_MID
XINTEGRATION.description          #STR

INTEGRATION.type                  #STR. "Backend" to forward to:
XINTEGRATION.integrationType     ~#  - HTTP: a new HTTP request
                                 ~#  - AWS: a call to an AWS SERVICE
                                  #  - HTTP_PROXY|AWS_PROXY: the original request
                                 ~#  - MOCK: another API Gateway [X]API
INTEGRATION.uri                   #Depending on type:
XINTEGRATION.integrationUri       #  - 'HTTP[_PROXY]': 'URI' to call
                                  #  - 'AWS[_PROXY]':
                                 2#     - Lambda FUNC_ARN
                                  #     - 'arn:aws:apigateway:REGION:[SUBDOMAIN.]SERVICE:action/ACTION[&PARAM=VAL&...]': any SERVICEs
                                  #     - 'arn:aws:apigateway:REGION:[SUBDOMAIN.]SERVICE:path/PATH[?PARAM=VAL&...]': REST SERVICEs only
                                  #     - PARAMs are only for URL paths and query parameters
                                  #  - 'MOCK': not allowed
INTEGRATION.httpMethod            #'HTTP_METHOD' to call
XINTEGRATION.integrationMethod    #Not with type 'MOCK'
XINTEGRATION.integrationSubtype   #'SERVICE'
                                  #Only with type 'AWS_PROXY'

[X]INTEGRATION                    #OBJ. Request parameters to forward.
 .requestParameters              ~#Uses:
                                 ~#  - key is PARAM
                                 ~#  - value is 'method.request.LOCATION.PARAM2'
                                -2#Is:
                                -2#  - key is TRANSFORM:LOCATION
                                -2#  - TRANSFORM can be 'append', 'overwrite' or 'remove'
                                  #LOCATION is 'path', 'querystring' or 'header'
[X]INTEGRATION
 .requestTemplates.MIME          ~#'TEMPLATE' transforming request body to forward. Based on Content-Type: MIME [C]
XINTEGRATION
 .templateSelectionExpression    ~#'EXPR' selecting template ???

XINTEGRATION.responseParameters   #OBJ. Response headers to reply.
                                  #Key is TRANSFORM:HEADER.LOCATION
                                  #Only with HTTP
INTEGRATION
 .integrationResponses.STR        #IRESP
XINTEGRATION.integrationResponse  #'IRESP_EXPR'
 SelectionExpression              #Only with WebSocket
XINTEGRATION.payloadFormatVersion #'X.Y' of the request sent to backend.
                                  #With Lambda, either '1.0' or '2.0'
                                  #Otherwise, always '1.0'

[X]INTEGRATION                   ~#STR. Default behavior when no requestTemplates matches. Can be:
 .passthroughBehavior            ~#  - NEVER: respond with 415
                                 ~#  - WHEN_NO_MATCH: forward request body as is
                                 ~#  - WHEN_NO_TEMPLATES: like NEVER if requestTemplates is defined, as WHEN_NO_MATCH otherwise
INTEGRATION.contentHandling      ~#STR. Whether request payload should be:
XINTEGRATION                     ~#  - default: kept as is
 .contentHandlingStrategy        ~#  - CONVERT_TO_BINARY: binary BLOB
                                 ~#  - CONVERT_TO_TEXT: base64'd STR

INTEGRATION.credentials           #STR. Authentication, among:
XINTEGRATION.credentialsArn       #  - ROLE_ARN: require assuming ROLE
                                  #  - 'arn:aws:iam::*:user/*': allow any authenticated USER
                                  #  - null: use Lambda FUNCTION PERMISSION

INTEGRATION.cacheKeyParameters    #'PARAM'_ARR to cache
INTEGRATION.cacheNamespace        #STR prefixing cache key. Def: resource ID

[X]INTEGRATION.timeoutInMillis    #NUM (in ms, def|max: 29s). Request timeout

XAPI.target                       #STR. "Quick create", i.e. automatically create default XSTAGE and XINTEGRATION
                                  #Can be:
                                  #  - 'URL': type 'HTTP_PROXY'
                                  #  - Lambda FUNC_ARN: type 'AWS_PROXY'
                                  #Only with HTTP
XAPI.credentialsArn               #STR. Only with XAPI.target FUNC_ARN.
                                  #Same value as XINTEGRATION.credentialsArn
XAPI.routeKey                     #'XROUTE' created by "Quick create"
                                  #Def: '$default' (readonly)
                                  #Only with HTTP

ROUTE.methodIntegration           #INTEGRATION


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:     INTEGRATION RESPONSE      :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


PUT /restapis/API_MID
 /resources/RESOURCE_MID
 /methods/HTTP_METHOD             #Req: IRESP
 /integration/responses/STATUS_NUM#  - no statusCode
PutIntegrationResponse()          #Res: IRESP
PATCH /restapis/API_MID
 /resources/RESOURCE_MID
 /methods/HTTP_METHOD             #Req: IRESP
 /integration/responses/STATUS_NUM#  - no statusCode
UpdateIntegrationResponse()       #Res: IRESP
GET /restapis/API_MID
 /resources/RESOURCE_MID
 /methods/HTTP_METHOD
 /integration/responses/STATUS_NUM#Req: empty
GetIntegrationResponse()          #Res: IRESP
DELETE /restapis/API_MID
 /resources/RESOURCE_MID
 /methods/HTTP_METHOD
 /integration/responses/STATUS_NUM#Req: empty
DeleteIntegrationResponse()       #Res: empty

POST /v2/apis/XAPI_MID
 /integrations/XINTEGRATION_MID   #Req: XIRESP
 /integrationresponses            #  - no integrationResponseId
CreateIntegrationResponse()       #Res: XIRESP
PATCH /v2/apis/XAPI_MID
 /integrations/XINTEGRATION_MID   #Req: XIRESP
 /integrationresponses/XIRESP_MID #  - no integrationResponseId
UpdateIntegrationResponse()       #Res: XIRESP
GET /v2/apis/XAPI_MID
 /integrations/XINTEGRATION_MID
 /integrationresponses            #Req: empty
GetIntegrationResponses()         #Res: items XIRESP_ARR
GET /v2/apis/XAPI_MID
 /integrations/XINTEGRATION_MID
 /integrationresponses/XIRESP_MID #Req: empty
GetIntegrationResponse()          #Res: XIRESP
DELETE /v2/apis/XAPI_MID
 /integrations/XINTEGRATION_MID
 /integrationresponses/XIRESP_MID #Req: empty
DeleteIntegrationResponse()       #Res: empty

XIRESP.integrationResponseId      #XIRESP_MID
XIRESP.integrationResponseKey     #'XIRESP'

IRESP.statusCode                  #'STATUS_NUM'
[X]IRESP.responseParameters       #OBJ. Set response headers.
                                  #Key is 'method.response.header.HEADER'
                                  #Value is either:
                                  #  - 'integration.response.header.HEADER': use backend response HEADER
                                  #  - 'integration.response.body.VARR': use backend response body
[X]IRESP.responseTemplates.MIME   #'TEMPLATE' transforming response body from backend
                                  #MIME is based on Content-Type [C]
IRESP.selectionPattern            #'REGEXP' whether to use IRESP, matched against response body from backend
XIRESP.templateSelectionExpression#'EXPR' selecting template ???
IRESP.contentHandling
XIRESP.contentHandlingStrategy    #Like [X]INTEGRATION.*


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:       GATEWAY RESPONSE        :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


POST /restapis/API_MID            #Req: GRESP
 /gatewayresponses/RESP_TYPE      #  - no defaultResponse
PutGatewayResponse()              #  - responseType is in URL path
                                  #Res: GRESP
PUT /restapis/API_MID             #Req: GRESP
 /gatewayresponses/RESP_TYPE      #  - no defaultResponse
UpdateGatewayResponse()           #  - responseType is in URL path
                                  #Res: GRESP
GET /restapis/API_MID
 /gatewayresponses                #Req: empty
GetGatewayResponses()             #Res: item GRESP_ARR
GET /restapis/API_MID
 /gatewayresponses/RESP_TYPE      #Req: empty
GetGatewayResponse()              #Res: GRESP
DELETE /restapis/API_MID
 /gatewayresponses/RESP_TYPE      #Req: empty
DeleteGatewayResponse()           #Res: empty

GRESP                             #Default responses, that can be customized
GRESP.statusCode
GRESP.responseParameters
GRESP.responseTemplates           #Same as IRESP.*
GRESP.defaultResponse             #BOOL (def: true). Whether has been customized
GRESP.responseType                #STR among:
                                  #  - specific error type among: RESOURCE_NOT_FOUND, UNAUTHORIZED, INVALID_API_KEY, ACCESS_DENIED, AUTHORIZER_FAILURE,
                                  #    AUTHORIZER_CONFIGURATION_ERROR, INVALID_SIGNATURE, EXPIRED_TOKEN, MISSING_AUTHENTICATION_TOKEN,
                                  #    INTEGRATION_FAILURE, INTEGRATION_TIMEOUT, API_CONFIGURATION_ERROR, UNSUPPORTED_MEDIA_TYPE,
                                  #    BAD_REQUEST_PARAMETERS, BAD_REQUEST_BODY, REQUEST_TOO_LARGE, THROTTLED, QUOTA_EXCEEDED
                                  #  - DEFAULT_4XX, DEFAULT_5XX: if none above matches


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:          MODEL MAIN           :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


POST /restapis/API_MID/models     #Req: MODEL
CreateModel()                     #  - no id
                                  #Res: MODEL
PATCH /restapis/API_MID           #Req: MODEL
 /models/MODEL                    #  - no id, name, contentType
UpdateModel()                     #Res: MODEL
GET /restapis/API_MID/models      #Req: empty
GetModels()                       #Res: item MODEL_ARR
GET /restapis/API_MID             #Req: MODEL
 /models/MODEL                    #  - only one with flatten
GetModel()                        #Res: MODEL
DELETE /restapis/API_MID
 /models/MODEL                    #Req: empty
DeleteModel()                     #Res: empty

POST /v2/apis/XAPI_MID/models     #Req: XMODEL
CreateModel()                     #  - no modelId
                                  #Res: XMODEL
PATCH /v2/apis/XAPI_MID           #Req: XMODEL
 /models/XMODEL_MID               #  - no modelId
UpdateModel()                     #Res: XMODEL
GET /v2/apis/XAPI_MID/models      #Req: empty
GetModels()                       #Res: items XMODEL_ARR
GET /v2/apis/XAPI_MID
 /models/XMODEL_MID               #Req: empty
GetModel()                        #Res: XMODEL
DELETE /v2/apis/XAPI_MID
 /models/XMODEL_MID               #Req: empty
DeleteModel()                     #Res: empty

MODEL.id
XMODEL.modelId                    #[X]MODEL_MID
[X]MODEL.name                     #'MODEL'
[X]MODEL.description              #STR

[X]MODEL.contentType              #'MIME'
[X]MODEL.schema                   #STR. JSON schema v4. Only with contentType 'application/json'
MODEL.flatten                     #BOOL (def: false). Resolve all JSON references


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:        MODEL TEMPLATE         :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


GET /restapis/API_MID
 /models/MODEL/default_template   #Req: empty
GetModelTemplate()                #Res: MODEL_TEMPLATE

GET /v2/apis/XAPI_MID
 /models/XMODEL_MID/template      #Req: empty
GetModelTemplate()                #Res: XMODEL_TEMPLATE

[X]MODEL_TEMPLATE.value          ~#'TEMPLATE'


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:           VALIDATOR           :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


POST /restapis/API_MID            #Req: REQVALID
 /requestvalidators               #  - no id
CreateRequestValidator()          #Res: REQVALID
PATCH /restapis/API_MID           #Req: REQVALID
 /requestvalidators/REQVALID_MID  #  - no id
UpdateRequestValidator()          #Res: REQVALID
GET /restapis/API_MID
 /requestvalidators               #Req: empty
GetRequestValidators()            #Res: item REQVALID_ARR
GET /restapis/API_MID
 /requestvalidators/REQVALID_MID  #Req: empty
GetRequestValidator()             #Res: REQVALID
DELETE /restapis/API_MID
 /requestvalidators/REQVALID_MID  #Req: empty
DeleteRequestValidator()          #Res: empty

REQVALID.id                       #REQVALID_MID
REQVALID.name                     #'REQVALID'
REQVALID.validateRequestParameters#BOOL. Validate request parameters
REQVALID.validateRequestBody      #BOOL. Validate request body against its MODEL

ROUTE.requestValidatorId          #VALIDATOR_MID

XAPI.disableSchemaValidation      #BOOL (def: false). Do not validate MODELs during DEPLOYMENT
                                  #Only for WebSockets


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:        AUTHORIZER MAIN        :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


POST /restapis/API_MID/authorizers#Req: AUTHORIZER
CreateAuthorizer()                #  - no id
                                  #Res: AUTHORIZER
PATCH /restapis/API_MID           #Req: AUTHORIZER
 /authorizers/AUTHORIZER_MID      #  - no id
UpdateAuthorizer()                #  - op:add|remove, not op:replace: providerARNs
                                  #Res: AUTHORIZER
GET /restapis/API_MID/authorizers #Req: empty
GetAuthorizers()                  #Res: item AUTHORIZER_ARR
GET /restapis/API_MID
 /authorizers/AUTHORIZER_MID      #Req: empty
GetAuthorizer()                   #Res: AUTHORIZER
DELETE /restapis/API_MID
 /authorizers/AUTHORIZER_MID      #Req: empty
DeleteAuthorizer()                #Res: empty

POST /v2/apis/XAPI_MID/authorizers#Req: XAUTHORIZER
CreateAuthorizer()                #  - no authorizerId
                                  #Res: XAUTHORIZER
PATCH /v2/apis/XAPI_MID           #Req: XAUTHORIZER
 /authorizers/XAUTHORIZER_MID     #  - no authorizerId
UpdateAuthorizer()                #Res: XAUTHORIZER
GET /v2/apis/XAPI_MID/authorizers #Req: empty
GetAuthorizers()                  #Res: items XAUTHORIZER_ARR
GET /v2/apis/XAPI_MID
 /authorizers/XAUTHORIZER_MID     #Req: empty
GetAuthorizer()                   #Res: XAUTHORIZER
DELETE /v2/apis/XAPI_MID
 /authorizers/XAUTHORIZER_MID     #Req: empty
DeleteAuthorizer()                #Res: empty

AUTHORIZER.id
XAUTHORIZER.authorizerId          #[X]AUTHORIZER_MID
[X]AUTHORIZER.name                #'AUTHORIZER'

AUTHORIZER.type                   #STR among:
XAUTHORIZER.authorizerType        #  - 'REQUEST': request parameters, checked by Lambda FUNCTION
                                 1#  - 'TOKEN': request header, checked by Lambda FUNCTION
                                 1#  - 'COGNITO_USER_POOLS': Cognito USER_POOL
                                -2#  - 'JWT': JWT

AUTHORIZER.identitySource         #'EXPR,...'. Locates request authentication info.
                                  #E.g. 'method.request.header.HEADER'
                                  #Returns 401 right away if missing request authentication info
XAUTHORIZER.identitySource        #Same but use STR_ARR instead of 'EXPR,...'
                                  #With type 'JWT', locates the JWT, and only in headers or query variables
[X]AUTHORIZER                     #'REGEXP' matched, depending on type:
 .identityValidationExpression    #  - 'TOKEN': token
                                  #  - 'COGNITO_USER_POOLS': `aud` field
                                  #Returns 401 right away if no match

AUTHORIZER.authType               #OpenAPI SECURITY_DEF.type. Only for documentation purpose
[X]AUTHORIZER.authorizerUri       #'arn:aws:apigateway:REGION:lambda:path/API_VERSION/functions/FUNC_ARN/invocations'
                                  #Only with type 'REQUEST|TOKEN'
AUTHORIZER.authorizerCredentials  #ROLE_ARN to assume.
XAUTHORIZER                       #Optional, e.g. can use Lambda FUNCTION PERMISSION instead
 .authorizerCredentialsArn        #Only with type 'REQUEST'
[X]AUTHORIZER                    -#NUM of secs to cache responses
 .authorizerResultTtlInSeconds   -#Can be 0. Def: 5m, max: 1h
                                 -#Only with type 'REQUEST|TOKEN'
XAUTHORIZER                      -#'1.0' or '2.0'. Format of Lambda FUNCTION request|response body
 .authorizerPayloadFormatVersion -#Only with type 'REQUEST|TOKEN'
XAUTHORIZER.enableSimpleResponses-#BOOL (def: false). With authorizerPayloadFormatVersion '2.0', whether Lambda FUNCTION
                                 -#uses the simple format.

AUTHORIZER.providerARNs           #Cognito USER_POOL_ARN_ARR
                                  #Only with type 'COGNITO_USER_POOLS'

XAUTHORIZER.jwtConfiguration      #XJWT
                                  #Only with type 'JWT'
XJWT.issuer                       #STR, matched against PAYLOAD.iss
XJWT.audience                     #STR_ARR, matched against PAYLOAD.aud

[X]ROUTE|ROUTE_SUMMARY            #Authorizer, among:
 .authorizationType               #  - 'NONE'
                                 1#  - 'COGNITO_USER_POOLS': requires Cognito authentication
                                ~2#  - 'AWS_IAM': requires authenticated USER
                                -2#  - 'JWT'
                                  #  - 'CUSTOM': AUTHORIZER
[X]ROUTE.authorizerId             #STR. Not with authorizationType 'NONE'
                                  #Requires credentials to use that user ID
[X]ROUTE.authorizationScopes      #'SCOPE'_ARR. Only with authorizationType 'COGNITO_USER_POOLS|JWT'
                                  #Requires credentials to include that SCOPE


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:        AUTHORIZER TEST        :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


POST /restapis/API_MID
 /authorizers/AUTHORIZER_MID      #Req: INVOKE_AUTHORIZER_REQ
TestInvokeAuthorizer()            #Res: INVOKE_AUTHORIZER_RES

INVOKE_AUTHORIZER_REQ
 .pathWithQueryString|headers
 |multiValueHeaders|body
 |stageVariables                  #Like INVOKE_ROUTE_REQ.*
INVOKE_AUTHORIZER_REQ
 .additionalContext.VAR           #STR ???

INVOKE_AUTHORIZER_RES.latency|log #Like INVOKE_ROUTE_REQ.*
INVOKE_AUTHORIZER_REQ
 .authorization.STR               #STR_ARR
INVOKE_AUTHORIZER_REQ.clientStatus#STATUS_NUM. 0 if AUTHORIZER passed
INVOKE_AUTHORIZER_REQ.policy      #'POLICY' returned by AUTHORIZER
INVOKE_AUTHORIZER_REQ.principalId #STR returned by AUTHORIZER
INVOKE_AUTHORIZER_REQ.claims.STR  #STR
                                  #Only with type 'COGNITO_USER_POOLS'


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:             STAGE             :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


POST /restapis/API_MID/stages     #Req: STAGE
CreateStage()                     #  - no accessLogSettings, cacheClusterStatus, clientCertificateId, createdDate,
                                  #    lastUpdatedDate, methodSettings, webAclArn
                                  #Res: STAGE
PATCH /restapis/API_MID           #Req: STAGE
 /stages/STAGE                    #  - no stageName, createdDate, lastUpdatedDate, tags, webAclArn
UpdateStage()                     #  - whole OBJ (not only OBJ.*): methodSettings|variables
                                  #  - can use op:remove: accessLogSettings|canarySettings
                                  #  - no op:add|remove: variables|stageVariableOverrides
                                  #  - methodSettings.* PATCH_OP.path:
                                  #     - throttling|cache|logging|metrics* -> throttling|cache|logging|metrics/*
                                  #     - dataTraceEnabled -> logging/dataTrace
                                  #     - *CacheControl* -> caching/*CacheControl*
                                  #Res: STAGE
GET /restapis/API_MID/stages      #Req: STAGE
GetStages()                       #  - only deploymentId
                                  #Res: item STAGE_ARR
GET /restapis/API_MID
 /stages/STAGE                    #Req: empty
GetStage()                        #Res: STAGE
DELETE /restapis/API_MID
 /stages/STAGE                    #Req: empty
DeleteStage()                     #Res: empty
DELETE /restapis/API_MID
 /stages/STAGE/cache/data         #Req: empty
FlushStageCache()                 #Res: empty
DELETE /restapis/API_MID
 /stages/STAGE/cache/authorizers  #Req: empty
FlushStageAuthorizersCache()      #Res: empty

POST /v2/apis/XAPI_MID/stages     #Req: XSTAGE
CreateStage()                     #  - no createdDate, lastUpdatedDate, lastDeploymentStatusMessage, apiGatewayManaged
                                  #Res: XSTAGE
PATCH /v2/apis/XAPI_MID           #Req: XSTAGE
 /stages/XSTAGE                   #  - no createdDate, lastUpdatedDate, lastDeploymentStatusMessage, apiGatewayManaged
UpdateStage()                     #  - no stageName, tags
                                  #Res: XSTAGE
GET /v2/apis/XAPI_MID/stages      #Req: empty
GetStages()                       #Res: items XSTAGE_ARR
GET /v2/apis/XAPI_MID
 /stages/XSTAGE                   #Req: empty
GetStage()                        #Res: XSTAGE
DELETE /v2/apis/XAPI_MID
 /stages/XSTAGE                   #Req: empty
DeleteStage()                     #Res: empty
DELETE /v2/apis/XAPI_MID
 /stages/XSTAGE                   #Req: empty
 /routesettings/XROUTE            #Res: empty
DeleteRouteSettings()             #Delete XSTAGE.routeSettings
DELETE /v2/apis/XAPI_MID          #Req: empty
 /stages/XSTAGE/accesslogsettings #Res: empty
DeleteAccessLogSettings()         #Delete XSTAGE.accessLogSettings
DELETE /v2/apis/XAPI_MID
 /stages/XSTAGE/cache/authorizers #Req: empty
ResetAuthorizersCache()           #Res: empty

[X]STAGE                          #Included in requester's path
[X]STAGE.stageName                #'STAGE'
[X]STAGE.description              #STR
[X]STAGE.createdDate              #DATE_NUM|'DATE'
[X]STAGE.lastUpdatedDate          #DATE_NUM|'DATE'

STAGE.variables.STAGE_VAR
XSTAGE.stageVariables.XSTAGE_VAR  #'VAL'

STAGE                             #ROUTE_SETTINGS
 .methodSettings./PATH/HTTP_METHOD#PATH|HTTP_METHOD can be *
XSTAGE.routeSettings.ROUTE        #XROUTE_SETTINGS
XSTAGE.defaultRouteSettings       #XROUTE_SETTINGS applied to any ROUTE

[X]STAGE.tags                     #TAGS

STAGE.tracingEnabled              #BOOL (def: false). Enable X-Ray
STAGE.webAclArn                   #WEB_ACL_ARN. Enable WAF

STAGE.canarySettings              #CANARY. STAGE's DEPLOYMENT that only gets a portion of requests.
CANARY.deploymentId               #DEPLOYMENT_MID
CANARY.percentTraffic             #0-100 percentage of traffic to send to canary DEPLOYMENT
CANARY.stageVariableOverrides
 .XSTAGE_VAR                      #'VAL'
CANARY.useStageCache              #BOOL. Whether to use STAGE.cacheCluster*

ROUTE_SETTINGS.metricsEnabled
XROUTE_SETTINGS
 .detailedMetricsEnabled          #BOOL (def: false). Send CloudWatch METRICs

[X]STAGE.accessLogSettings        #[X]ACCESS_LOG. Send request logs
[X]ACCESS_LOG.destinationArn      #Either:
                                  #  - CloudWatch LOG_GROUP_ARN
                                  #  - Kinesis Firehose DELIVERY_STREAM_ARN
                                  #     - name must start with 'amazon-apigateway-'
[X]ACCESS_LOG.format              #'EXPR' transforming each request to a single line
                                  #Must include $context.requestId
ACCOUNT.cloudwatchRoleArn         #ROLE_ARN used to send to CloudWatch logs

[X]ROUTE_SETTINGS.loggingLevel   ~#STR. Send CloudWatch Logs:
                                 ~#  - 'OFF' (def): none
                                 ~#  - 'ERROR': errors-only
                                 ~#  - 'INFO': any request
[X]ROUTE_SETTINGS
 .dataTraceEnabled               ~#BOOL (def: false). Send data trace to CloudWatch logs

STAGE.cacheClusterEnabled         #BOOL (def: false). Cache responses
STAGE.cacheClusterSize            #'NUM' (in GB). Cache size.
                                  #Can be 0.5, 1.6, 6.1, 13.5, 28.4, 58.2, 118, 237
STAGE.cacheClusterStatus          #STR among:
                                  #  - CREATE_IN_PROGRESS
                                  #  - AVAILABLE
                                  #  - DELETE_IN_PROGRESS
                                  #  - NOT_AVAILABLE
                                  #  - FLUSH_IN_PROGRESS

ROUTE_SETTINGS.cachingEnabled     #BOOL (def: false). Enable caching for that ROUTE
                                  #Requires STAGE.cacheClusterEnabled true
ROUTE_SETTINGS.cacheTtlInSeconds  #NUM (in secs). How long to cache
ROUTE_SETTINGS.cacheDataEncrypted #BOOL. Encrypt cached responses
ROUTE_SETTINGS.require
 AuthorizationForCacheControl     #BOOL. Require authorization for invalidation requests
ROUTE_SETTINGS.unauthorized       #How to handle unauthorized invalidation requests, among:
 CacheControlHeaderStrategy       #  - 'FAIL_WITH_403'
                                  #  - 'SUCCEED_WITHOUT_RESPONSE_HEADER'
                                  #  - 'SUCCEED_WITH_RESPONSE_HEADER'


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:          DEPLOYMENT           :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


POST /restapis/API_MID/deployments#Req: DEPLOYMENT + STAGE
CreateDeployment()                #  - DEPLOYMENT: no id, createdDate, apiSummary
                                  #  - STAGE:
                                  #     - no accessLogSettings, cacheClusterStatus, clientCertificateId, createdDate,
                                  #       lastUpdatedDate, methodSettings, webAclArn
                                  #     - no [canarySettings.]deploymentId, documentationVersion, tags
                                  #     - description -> stageDescription
                                  #Res: DEPLOYMENT
PATCH /restapis/API_MID           #Req: DEPLOYMENT
 /deployments/DEPLOYMENT_MID      #  - only description
UpdateDeployment()                #Res: DEPLOYMENT
GET /restapis/API_MID/deployments #Req: empty
GetDeployments()                  #Res: item DEPLOYMENT_ARR
GET /restapis/API_MID             #Req:
 /deployments/DEPLOYMENT_MID      #  - embed 'apisummary': to return apiSummary
GetDeployment()                   #Res: DEPLOYMENT
DELETE /restapis/API_MID
 /deployments/DEPLOYMENT_MID      #Req: empty
DeleteDeployment()                #Res: empty

POST /v2/apis/XAPI_MID/deployments#Req: XDEPLOYMENT
CreateDeployment()                #  - no deploymentId, deploymentStatus*, autoDeployed
                                  #Res: XDEPLOYMENT
PATCH /v2/apis/XAPI_MID           #Req: XDEPLOYMENT
 /deployments/XDEPLOYMENT_MID     #  - no deploymentId, deploymentStatus*, autoDeployed
UpdateDeployment()                #  - no stageName
                                  #Res: XDEPLOYMENT
GET /v2/apis/XAPI_MID/deployments #Req: empty
GetDeployments()                  #Res: items XDEPLOYMENT_ARR
GET /v2/apis/XAPI_MID
 /deployments/XDEPLOYMENT_MID     #Req: empty
GetDeployment()                   #Res: XDEPLOYMENT
DELETE /v2/apis/XAPI_MID
 /deployments/XDEPLOYMENT_MID     #Req: empty
DeleteDeployment()                #Res: empty

DEPLOYMENT.id
XDEPLOYMENT.deploymentId          #[X]DEPLOYMENT_MID
[X]DEPLOYMENT.description         #STR
[X]DEPLOYMENT.createdDate         #DATE_NUM

DEPLOYMENT
 .apiSummary.PATH.HTTP_METHOD     #ROUTE_SUMMARY

XDEPLOYMENT.deploymentStatus      #STR among:
                                  #  - PENDING
                                  #  - SUCCEEDED, FAILED
XDEPLOYMENT
 .deploymentStatusMessage         #STR, when deploymentStatus FAILED

XSTAGE.autoDeploy                 #BOOL (def: false). Create a XDEPLOYMENT when XAPI is updated
XDEPLOYMENT.autoDeployed          #BOOL
XSTAGE.lastDeploymentStatusMessage#STR. Last XDEPLOYMENT.deploymentStatusMessage when using XSTAGE.autoDeploy true

[X]STAGE.deploymentId             #[X]DEPLOYMENT_MID


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:           DOC PART            :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


POST /restapis/API_MID            #Req: DOCPART
 /documentation/parts             #  - no id
CreateDocumentationPart()         #Res: DOCPART
PATCH /restapis/API_MID           #Req: DOCPART
 /documentation/parts/DOCPART_MID #  - only properties
UpdateDocumentationPart()         #Res: DOCPART
GET /restapis/API_MID             #Req: DOCPART
 /documentation/parts             #  - only DOCPART_LOCATION.type|path|name -> type|path|nameQuery
GetDocumentationParts()           #  - only one with locationStatus
                                  #Res: item DOCPART_ARR
GET /restapis/API_MID
 /documentation/parts/DOCPART_MID #Req: empty
GetDocumentationPart()            #Res: DOCPART
DELETE /restapis/API_MID
 /documentation/parts/DOCPART_MID #Req: empty
DeleteDocumentationPart()         #Res: empty

DOCPART.id                        #DOCPART_MID
DOCPART.properties                #'OBJ_JSON' with OpenAPI SPEC, but only the documentation-related properties
                                  #Unknown properties are kept under OBJ['x-amazon-apigateway-documentation']
DOCPART.locationStatus            #'[UN]DOCUMENTED'. Whether DOCPART has contents

DOCPART.location                  #DOCPART_LOCATION. Indicates the OpenAPI field to target.
DOCPART_LOCATION.type             #STR among:
                                  #  - API
                                  #  - AUTHORIZER
                                  #  - MODEL
                                  #  - RESOURCE, METHOD
                                  #  - PATH_PARAMETER, QUERY_PARAMETER, REQUEST_HEADER, REQUEST_BODY
                                  #  - RESPONSE, RESPONSE_HEADER, RESPONSE_BODY
DOCPART_LOCATION.path             #'PATH'
                                  #Not with type API|AUTHORIZER|MODEL
DOCPART_LOCATION.method           #'HTTP_METHOD'
                                  #Not with type API|AUTHORIZER|MODEL|RESOURCE
DOCPART_LOCATION.name             #'VAR'
                                  #Not with type API|RESOURCE|METHOD|RESPONSE[_BODY]
DOCPART_LOCATION.statusCode       #'STATUS_NUM'
                                  #Only with type RESPONSE*


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:          DOC IMPORT           :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


PUT /restapis/API_MID             #Req: RAW_DOCPART_IMPORT + IMPORT (query variables)
 /documentation/parts
ImportDocumentationParts()        #Res: DOCPART_IMPORT

RAW_DOCPART_IMPORT                #Same as DOCPART.properties

DOCPART_IMPORT.ids                #DOCPART_MID_ARR
DOCPART_IMPORT.warnings           #Like API.*


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:          DOC VERSION          :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


POST /restapis/API_MID            #Req: DOCVERS
 /documentation/versions          #  - no createdDate
CreateDocumentationVersion()      #  - version -> documentationVersion
                                  #  - only one with stageName
                                  #Res: DOCVERS
PATCH /restapis/API_MID
 /documentation/versions          #Req: DOCVERS
 /DOCVERS_MID                     #  - only description
UpdateDocumentationVersion()      #Res: DOCVERS
GET /restapis/API_MID
 /documentation/versions          #Req: empty
GetDocumentationVersions()        #Res: item DOCVERS_ARR
GET /restapis/API_MID
 /documentation/versions
 /DOCVERS_MID                     #Req: empty
GetDocumentationVersion()         #Res: DOCVERS
DELETE /restapis/API_MID
 /documentation/versions
 /DOCVERS_MID                     #Req: empty
DeleteDocumentationVersion()      #Res: empty

DOCVERS.version                   #'DOCVERS'
DOCVERS.description               #STR
DOCVERS.createdDate               #DATE_NUM

DOCVERS.stageName                 #'STAGE'

STAGE.documentationVersion        #'DOCVERS'


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:              SDK              :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


GET /sdktypes                     #Req: empty
GetSdkTypes()                     #Res: item SDKTYPE_ARR
GET /sdktypes/SDKTYPE_MID         #Req: empty
GetSdkType()                      #Res: SDKTYPE
GET /restapis/API_MID
 /stages/STAGE/sdks/SDKTYPE       #Req: SDKTYPE_CONFVARS
GetSdk()                          #Res: RAW_SDK

RAW_SDK                           #Auto-generated client library

SDKTYPE.id                        #SDKTYPE_MID
SDKTYPE.friendlyName              #'SDKTYPE', among 'javascript', 'java', 'ruby', 'android', 'swift', 'objectivec'
SDKTYPE.description               #STR

SDKTYPE_CONFVARS.SDKTYPE_CONFVAR  #'VAL'. SDKTYPE-specific configuration properties
SDKTYPE.configurationProperties   #SDKTYPE_CONFVAR_ARR
SDKTYPE_CONFVAR.name              #SDKTYPE_CONFVAR_MID
SDKTYPE_CONFVAR.friendlyName      #'SDKTYPE_CONFVAR'
SDKTYPE_CONFVAR.description       #STR
SDKTYPE_CONFVAR.required          #BOOL
SDKTYPE_CONFVAR.defaultValue      #'VAL'

SDKTYPE_CONFVAR 'serviceName'     #With java
SDKTYPE_CONFVAR 'javaPackageName' #With java
SDKTYPE_CONFVAR 'groupId'         #With android
SDKTYPE_CONFVAR 'artifactId'      #With android
SDKTYPE_CONFVAR 'artifactVersion' #With android
SDKTYPE_CONFVAR 'invokerPackage'  #With android
SDKTYPE_CONFVAR 'classPrefix'     #With swift|objectivec


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:          DOMAIN NAME          :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


POST /domainnames                 #Req: DNAME
CreateDomainName()                #  - no regionalHostedZoneId, regionalDomainName, certificateUploadDate, domainNameStatus*, truststoreWarnings
                                  #Res: DNAME
PATCH /domainnames/DNAME          #Req: DNAME
UpdateDomainName()                #  - no regionalHostedZoneId, regionalDomainName, certificateUploadDate, domainNameStatus*, truststoreWarnings
                                  #  - no domainName, distribution*, vpcEndpointIds, tags
                                  #  - op:add|remove, not op:replace: ENDPOINT.types
                                  #Res: DNAME
GET /domainnames                  #Req: empty
GetDomainNames()                  #Res: item DNAME_ARR
GET /domainnames/DNAME            #Req: empty
GetDomainName()                   #Res: DNAME
DELETE /domainnames/DNAME         #Req: empty
DeleteDomainName()                #Res: empty

POST /v2/domainnames              #Req: XDNAME
CreateDomainName()                #  - no apiMappingSelectionExpression, truststoreWarnings
                                  #Res: XDNAME
PATCH /v2/domainnames/XDNAME      #Req: XDNAME
UpdateDomainName()                #  - no apiMappingSelectionExpression, truststoreWarnings
                                  #  - no domainName, tags
                                  #Res: XDNAME
GET /v2/domainnames               #Req: empty
GetDomainNames()                  #Res: items XDNAME_ARR
GET /v2/domainnames/XDNAME        #Req: empty
GetDomainName()                   #Res: XDNAME
DELETE /v2/domainnames/XDNAME     #Req: empty
DeleteDomainName()                #Res: empty

[X]DNAME.domainName               #'[X]DNAME'

XDNAME.domainNameConfigurations   #XDDNAME_ARR

DNAME.domainName
XDDNAME.apiGatewayDomainName      #Main domain name, e.g. 'example.com'
DNAME.distributionDomainName      #CloudFront domain name, if DNAME points to CloudFront
DNAME.regionalDomainName          #Regional domain name, if DNAME points to it, and ENDPOINT.types 'REGIONAL'
XDDNAME.hostedZoneId
DNAME.distributionHostedZoneId
DNAME.regionalHostedZoneId        #Like *DomainName, but as Route53 ZONE_MID

DNAME.endpointConfiguration       #ENDPOINT
XDDNAME.endpointType              #STR, like ENDPOINT.types, but no 'PRIVATE'

[XD]DNAME.domainNameStatus        #STR, among:
                                  #  - PENDING_CERTIFICATE_REIMPORT
                                  #  - PENDING_OWNERSHIP VERIFICATION
                                  #  - UPDATING
                                  #  - AVAILABLE
[XD]DNAME.domainNameStatusMessage #STR

[XD]DNAME.securityPolicy          #'TLS_1_0|1_2'
[X]DNAME.mutualTlsAuthentication  #[X]DNAME_TLS. Require client TLS authentication
[X]DNAME_TLS.truststoreUri        #'s3://BUCKET/OBJECT' to truststore, that contains CAs
[X]DNAME_TLS.truststoreVersion    #VERSION_ID of S3 OBJECT
[X]DNAME_TLS.truststoreWarnings   #'MESSAGE'_ARR. Warnings related to truststore

[XD]DNAME.certificateArn          #ACM certificate ARN, used for TLS
DNAME.certificateName             #Same but as 'CERTIFICATE' name
DNAME.regionalCertificateArn|Name #Same but for DNAME.regionalDomainName
[XD]DNAME.certificateUploadDate   #DATE_NUM|'DATE'
[XD]DNAME.ownershipVerification   #ACM certificate ARN, used for ownership verification
 CertificateArn                   #Only needed when both:
                                  #  - using [X]DNAME_TLS
                                  #  - DNAME.regionalCertificateArn's CA is either private, or using ACM

[X]DNAME.tags                     #TAGS

TODO: see patch conditions on https://docs.aws.amazon.com/apigateway/latest/api/patch-operations.html#UpdateDomainName-Patch???


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:            MAPPING            :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


POST /domainnames/DNAME
 /basepathmappings                #Req: MAPPING
CreateBasePathMapping()           #Res: MAPPING
PATCH /domainnames/DNAME
 /basepathmappings/BASEPATH       #Req: MAPPING
UpdateBasePathMapping()           #Res: MAPPING
GET /domainnames/DNAME
 /basepathmappings                #Req: empty
GetBasePathMappings()             #Res: item MAPPING_ARR
GET /domainnames/DNAME
 /basepathmappings/BASEPATH       #Req: empty
GetBasePathMapping()              #Res: MAPPING
DELETE /domainnames/DNAME
 /basepathmappings/BASEPATH       #Req: empty
DeleteBasePathMapping()           #Res: empty

POST /v2/domainnames/XDNAME       #Req: XMAPPING
 /apimappings                     #  - no apiMappingId
CreateApiMapping()                #Res: XMAPPING
PATCH /v2/domainnames/XDNAME      #Req: XMAPPING
 /apimappings/XMAPPING_MID        #  - no apiMappingId
UpdateApiMapping()                #Res: XMAPPING
GET /v2/domainnames/XDNAME
 /apimappings                     #Req: empty
GetApiMappings()                  #Res: item XMAPPING_ARR
GET /v2/domainnames/XDNAME
 /apimappings/XMAPPING_MID        #Req: empty
GetApiMapping()                   #Res: XMAPPING
DELETE /v2/domainnames/XDNAME
 /apimappings/XMAPPING_MID        #Req: empty
DeleteApiMapping()                #Res: empty

[X]MAPPING                        #Make a PATH use a specific [X]STAGE
XMAPPING.apiMappingId             #XMAPPING_MID
XMAPPING.apiMappingKey            #'XMAPPING'

MAPPING.basePath                  #'BASEPATH'. Can be '(none)'
MAPPING.restApiId
XMAPPING.apiId                    #[X]API_MID
[X]MAPPING.stage                  #'[X]STAGE'

XDNAME
 .apiMappingSelectionExpression   #'XMAPPING_EXPR'


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:          CERTIFICATE          :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


POST /clientcertificates          #Req: CERTIFICATE
GenerateClientCertificate()       #  - no clientCertificateId, createdDate, expirationDate, pemEncodedCertificate
                                  #Res: CERTIFICATE
PATCH /clientcertificates         #Req: CERTIFICATE
 /CERTIFICATE_MID                 #  - no clientCertificateId, createdDate, expirationDate, pemEncodedCertificate, tags
UpdateClientCertificate()         #Res: CERTIFICATE
GET /clientcertificates           #Req: empty
GetClientCertificates()           #Res: item CERTIFICATE_ARR
GET /clientcertificates
 /CERTIFICATE_MID                 #Req: empty
GetClientCertificate()            #Res: CERTIFICATE
DELETE /clientcertificates
 /CERTIFICATE_MID                 #Req: empty
DeleteClientCertificate()         #Res: empty

CERTIFICATE.clientCertificateId   #CERTIFICATE_MID
CERTIFICATE.description           #STR
CERTIFICATE.createdDate           #DATE_NUM
CERTIFICATE.expirationDate        #DATE_NUM

CERTIFICATE.pemEncodedCertificate #'PEM' of client certificate

CERTIFICATE.tags                  #TAGS

[X]STAGE.clientCertificateId      #[X]CERTIFICATE_MID

INVOKE_ROUTE_REQ
 .clientCertificateId             #CERTIFICATE_MID


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:        USAGE PLAN MAIN        :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


POST /usageplans                  #Req: USAGEPLAN
CreateUsagePlan()                 #  - no id, productCode
                                  #Res: USAGEPLAN
PATCH /usageplans/USAGEPLAN_MID   #Req: USAGEPLAN
UpdateUsagePlan()                 #  - no id, tags
                                  #  - can use op:remove: quota, throttle, API_STAGE.throttle.HTTP_METHOD
                                  #  - apiStages.NUM -> /apiStages/STAGE
                                  #Res: USAGEPLAN
GET /usageplans                   #Req: USAGEPLAN
GetUsagePlans()                   #  - only keyId, only one with it
                                  #Res: item USAGEPLAN_ARR
GET /usageplans/USAGEPLAN_MID     #Req: empty
GetUsagePlan()                    #Res: USAGEPLAN
DELETE /usageplans/USAGEPLAN_MID  #Req: empty
DeleteUsagePlan()                 #Res: empty

USAGEPLAN                         #Limit number of requests made to a given API by a given client
USAGEPLAN.id                      #USAGEPLAN_MID
USAGEPLAN.name                    #'USAGEPLAN'
USAGEPLAN.description             #STR

USAGEPLAN.apiStages               #API_STAGE_ARR
API_STAGE.apiId                   #API_MID
API_STAGE.stage                   #'STAGE'

USAGEPLAN.quota                   #QUOTA
QUOTA.limit                       #Max NUM of requests per QUOTA.period
QUOTA.period                      #'DAY|WEEK|MONTH'
QUOTA.offset                      #NUM (def: 0) of requests to substract in the first QUOTA.period

USAGEPLAN.throttle
API_STAGE.throttle.HTTP_METHOD    #THROTTLE
THROTTLE.burstLimit               #NUM
THROTTLE.rateLimit                #NUM

[X]ROUTE_SETTINGS
 .throttlingRate|BurstLimit       #Like THROTTLE.*, but only for that ROUTE
ACCOUNT.throttleSettings          #THROTTLE, only for that ACCOUNT

USAGEPLAN.productCode             #PRODUCT_MID from AWS Marketplace

USAGEPLAN.tags                    #TAGS

ACCOUNT.features                  #STR_ARR. Must include 'UsagePlans' to enable USAGEPLAN


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:        USAGE PLAN KEY         :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


POST /usageplans/USAGEPLAN_MID    #Req: USAGEKEY
 /keys                            #  - only id|type -> keyId|keyType
CreateUsagePlanKey()              #Res: USAGEKEY
GET /usageplans/USAGEPLAN_MID     #Req: USAGEKEY
 /keys                            #  - only name -> nameQuery
                                  #  - only one with usagePlanId
GetUsagePlanKeys()                #Res: item USAGEKEY_ARR
GET /usageplans/USAGEPLAN_MID
 /keys/USAGEKEY_MID               #Req: empty
GetUsagePlanKey()                 #Res: USAGEKEY
DELETE /usageplans/USAGEPLAN_MID
 /keys/USAGEKEY_MID               #Req: empty
DeleteUsagePlanKey()              #Res: empty

USAGEKEY.id                       #USAGEKEY_MID
USAGEKEY.name                     #'USAGEKEY'

USAGEPLAN.keyId                   #USAGEKEY_MID
USAGEKEY.usagePlanId              #USAGEPLAN_MID

USAGEKEY.type                     #Always 'API_KEY'
USAGEKEY.value                    #'APIKEY_VAL'


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:       USAGE PLAN COUNT        :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


PATCH /usageplans/USAGEPLAN_MID   #Req: USAGEPLAN
 /keys/USAGEKEY_MID/usage         #  - only values.USAGE_KEY_VAL[0][1] -> remaining
UpdateUsage()                     #Res: USAGEPLAN
GET /usageplans/USAGEPLAN_MID     #Req: USAGEPLAN
 /usage                           #  - only one with keyId
GetUsage()                        #Res: USAGEPLAN

USAGECOUNT.usagePlanId            #USAGEPLAN_MID
USAGECOUNT.keyId                  #USAGEKEY_MID
USAGECOUNT.startDate|endDate      #'DATE'
USAGECOUNT.values.APIKEY          #[NUM, NUM2]_ARR, with NUM being used quota, NUM2 remaining quota


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:         API KEY MAIN          :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


POST /apikeys                     #Req: APIKEY
CreateApiKey()                    #  - no id, createdDate, lastUpdatedDate
                                  #  - stageKeys 'API_MID/STAGE'_ARR -> ARR of { restApiId API_MID, stageName 'STAGE' }
                                  #Res: APIKEY
PATCH /apikeys/APIKEY_MID         #Req: APIKEY
UpdateApiKey()                    #  - no id, createdDate, lastUpdatedDate, value
                                  #  - tags -> labels
                                  #Res: APIKEY
GET /apikeys                      #Req: APIKEY
GetApiKeys()                      #  - only name -> nameQuery, value STR -> includeValues BOOL, customerId
                                  #Res: item APIKEY_ARR
GET /apikeys/APIKEY_MID           #Req: APIKEY
GetApiKey()                       #  - only value STR -> includeValue BOOL
                                  #Res: APIKEY
DELETE /apikeys/APIKEY_MID        #Req: empty
DeleteApiKey()                    #Res: empty

APIKEY.id                         #APIKEY_MID
APIKEY.name                       #'APIKEY'
APIKEY.description                #STR
APIKEY.enabled                    #BOOL (def: true)
APIKEY.createdDate                #DATE_NUM
APIKEY.lastUpdatedDate            #DATE_NUM

APIKEY.value                      #'APIKEY_VAL'
APIKEY.stageKeys                  #'API_MID/STAGE'_ARR. Only enables for those API|STAGEs

APIKEY.customerId                 #CUSTOMER_MID, from AWS Marketplace

APIKEY.tags                       #TAGS

API.apiKeySource                  #STR. Where APIKEY is located among:
                                  #  - 'HEADER': X-Api-Key [C]
                                  #  - 'AUTHORIZER': AUTHORIZER
XAPI.apiKeySelectionExpression    #Same, but only WebSocket and named either:
                                  #  - '$request.header.x-api-key'
                                  #  - '$context.authorizer.usageIdentifierKey'
[X]ROUTE|ROUTE_SUMMARY
 .apiKeyRequired                 ~#BOOL (def: false). Requires requests to have an APIKEY

ACCOUNT.apiKeyVersion             #STR


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:        API KEY IMPORT         :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


POST /apikeys?mode=import         #Req: RAW_APIKEY_IMPORT + [APIKEY_]IMPORT (query variables)
ImportApiKeys()                   #  - no mode
                                  #Res: APIKEY_IMPORT

RAW_APIKEY_IMPORT                 #

APIKEY_IMPORT.format              #Always 'csv'

APIKEY_IMPORT.ids                 #APIKEY_MID_ARR
APIKEY_IMPORT.warnings            #Like API.*


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:              VPC              :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


POST /vpclinks                    #Req: VPCLINK
CreateVpcLink()                   #  - no id, status*
                                  #Res: VPCLINK
PATCH /vpclinks/VPCLINKS_MID      #Req: VPCLINK
UpdateVpcLink()                   #  - no id, status*, targetArns, tags
                                  #Res: VPCLINK
GET /vpclinks                     #Req: empty
GetVpcLinks()                     #Res: item VPCLINK_ARR
GET /vpclinks/VPCLINKS_MID        #Req: empty
GetVpcLink()                      #Res: VPCLINK
DELETE /vpclinks/VPCLINKS_MID     #Req: empty
DeleteVpcLink()                   #Res: empty

POST /v2/vpclinks                 #Req: XVPCLINK
CreateVpcLink()                   #  - no vpcLinkId, createdDate, vpcLinkVersion, vpcLinkStatus*
                                  #Res: XVPCLINK
PATCH /v2/vpclinks/XVPCLINK_MID   #Req: XVPCLINK
UpdateVpcLink()                   #  - no vpcLinkId, createdDate, vpcLinkVersion, vpcLinkStatus*
                                  #  - no subnetIds, securityGroupIds, tags
                                  #Res: XVPCLINK
GET /v2/vpclinks                  #Req: empty
GetVpcLinks()                     #Res: items XVPCLINK_ARR
GET /v2/vpclinks/XVPCLINK_MID     #Req: empty
GetVpcLink()                      #Res: XVPCLINK
DELETE /v2/vpclinks/XVPCLINK_MID  #Req: empty
DeleteVpcLink()                   #Res: empty

VPCLINK.id
XVPCLINK.vpcLinkId                #[X]VPCLINK_MID
[X]VPCLINK.name                   #'[X]VPCLINK'
VPCLINK.description               #STR
XVPCLINK.createdDate              #'DATE'
XVPCLINK.vpcLinkVersion           #Always 'V2'

VPCLINK.targetArns                #ELB_ARN_ARR
                                  #Must be in same ACCOUNT
XVPCLINK.subnetIds                #VPC SUBNET_MID_ARR
XVPCLINK.securityGroupIds         #VPC SECURITY_GROUP_MID_ARR

VPCLINK.status                    #STR, among:
XVPCLINK.vpcLinkStatus            #  - PENDING
                                  #  - AVAILABLE
                                  #  - DELETING
                                  #  - FAILED, INACTIVE
VPCLINK.statusMessage
XVPCLINK.vpcLinkStatusMessage     #STR

[X]VPCLINK.tags                   #TAGS

[X]INTEGRATION.connectionType     #Either:
                                  #  - 'INTERNET' (def)
                                  #  - 'VPC_LINK': use connectionId
[X]INTEGRATION.connectionId       #[X]VPCLINK_MID. Called "private INTEGRATION"
                                  #Only with type 'HTTP[_PROXY]'
                                  #Only with HTTP
                                  #[X]INTEGRATION.uri:
                                  #  - must be:
                                  #     - ELB network LISTENER_ARN
                                 2#     - ELB application LISTENER_ARN
                                 2#     - Cloud Map ARN
                                  #  - from same ACCOUNT
[X]INTEGRATION.tlsConfig          #[X]TLSCONFIG. Use HTTPS
                                  #Only with [X]VPCLINK
XTLSCONFIG.serverNameToVerify     #'HOSTNAME' to verify with TLS handshake
TLSCONFIG.insecureSkipVerification#BOOL. If false (def), verify TLS certificate against known CAs


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:            ACCOUNT            :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


PATCH /account                    #Req: ACCOUNT
UpdateAccount()                   #  - no apiKeyVersion, throttleSettings
                                  #Res: ACCOUNT
GET /account                      #Req: empty
GetAccount()                      #Res: ACCOUNT


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:             TAGS              :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


PUT /tags/ARN                     #Req: RESOURCE
TagResource()                     #Res: empty
GET /tags/ARN                     #Req: empty
GetTags()                         #Res: RESOURCE
DELETE /tags/ARN                  #Req: RESOURCE
UntagResource()                   #  - tags TAGS -> tagKeys 'TAG'_ARR
                                  #Res: empty

POST /v2/tags/ARN                 #Req: XRESOURCE
TagResource()                     #Res: empty
GET /v2/tags/ARN                  #Req: empty
GetTags()                         #Res: XRESOURCE
DELETE /v2/tags/ARN               #Req: XRESOURCE
UntagResource()                   #  - tags TAGS -> tagKeys 'TAG'_ARR
                                  #Res: empty

[X]RESOURCE.tags                  #TAGS


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:          CONNECTION           :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


POST /@connections/CONNECTION_MID #Req: RAW_CONNECTION_DATA
PostToConnection()                #Res: empty
GET /@connections/CONNECTION_MID  #Req: empty
GetConnection()                   #Res: CONNECTION
DELETE
 /@connections/CONNECTION_MID     #Req: empty
DeleteConnection()                #Res: empty

RAW_CONNECTION_DATA               #

CONNECTION.ConnectedAt            #'DATE'
CONNECTION.LastActiveAt           #'DATE'
CONNECTION.Identity.SourceIp      #'IP'
CONNECTION.Identity.UserAgent     #STR
