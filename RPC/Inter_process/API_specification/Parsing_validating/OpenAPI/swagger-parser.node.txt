
                  
   SWAGGER-PARSER  
                  



VERSION ==>                   #10.1.0

ALTERNATIVES ==>              #See Sway


SWAGGERPARSER.*               #Inherits from JSON-SCHEMA-REF-PARSER (i.e. dereferences JSON references)

SwaggerParser|SWAGGERPARSE
 .validate(...)               #Like REFPARSER.dereference(...) except validates (see below)
POPTS.validate.schema         #BOOL (def: true) or custom FUNC(SPEC)
                              #Validate against official OpenAPI 2.0/3.1 JSON schema (using ajv)
POPTS.validate.spec           #BOOL (def: true) or custom FUNC(SPEC)
                              #Extra checks:
                              #  - very limited check that SCHEMA are valid JSON schemas
                              #  - duplicate PARAM
                              #  - PARAM: multiple body|formData, missing|undeclared path, right MIME with file


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:          SWAGGER-CLI          :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


SWAGGER-CLI ==>               #CLI around Swagger-parser
                              #Version 4.0.4

swagger-cli validate FILE     #Fires SWAGGERPARSER.validate(...) then sets exit code
--no-schema|spec              #POPTS.validate.schema|spec false

swagger-cli bundle FILE       #Fires SWAGGERPARSER.bundle(...)
-o FILE2
--output FILE2                #Writes JSON file as output
-r
--dereference                 #Fires SWAGGERPARSER.dereference(...) instead
-f NUM
--format NUM                  #JSON.stringify() spaces argument (def: 2)
-t|--type json|yaml           #Def: 'json'


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:  SWAGGER-EXPRESS-MIDDLEWARE   :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


SWAGGER-EXPRESS-MIDDLEWARE ==>#Features:
                              #  - validates, assigns default and parses REQ according to PARAM
                              #  - throw 4** when REQ does not match SPEC
                              #  - mock responses according to RESP.headers and RESP.schema.default|example
                              #  - static file serving of OpenAPI specification
                              #  - set current PATHDEF|OPERATION|PARAM|SECURITY_USES to REQ.swagger
                              #  - CORS handling using SPEC
                              #Based on Swagger-parser
                              #Version 2.0.2

createMiddleware
 ([SPEC_OBJ|PATH|URL, ]
 [APP, ]FUNC)->SMDW           #Calls Middleware(APP).init(SPEC, FUNC)
Middleware([APP])->SMDW       #
SMDW.init(SPEC_OBJ|PATH|URL
 [, FUNC(ERROR, SMDW, SPEC,   #Calls SWAGGERPARSER.dereference(...)
 SWAGGERPARSER)])             #Must be called before other methods

SMDW.files([APP, ]OPTS)       #Express middlewares for:
 ->MDW_ARR                    #  - GET /api-docs/:
                              #     - serves bundled OpenAPI specification
                              #     - simply uses RES.json() (no HTTP caching, range requests, etc.)
                              #  - GET /api-docs/*:
                              #     - serves each OpenAPI specification before bundling
                              #     - uses RES.sendFile()
                              #OPTS:
                              #  - useBasePath BOOL (def: false): prepends SPEC.basePath
                              #  - apiPath STR|false (def: '/api-docs/'): for GET /api-docs/
                              #  - rawFilePath STR|false (def: '/api-docs/'): for GET /api-docs/*

SMDW.metadata([APP])->MDW_ARR #Express middlewares that adds REQ.swagger:
                              #  - api SPEC
                              #  - pathName '/PATH'
                              #  - path PATHDEF
                              #  - operation OPERATION
                              #  - params PARAM_ARR
                              #  - security SECURITY_USES
                              #According to current URL.
                              #Nothing is set if current request URL is not under SPEC.basePath.
                              #Must be used before SMDW.CORS|parseRequest|mock()

SMDW.parseRequest([APP, ]OPTS)#Calls:
 ->MDW_ARR                    #  - COOKIE-PARSER(OPTS.cookie.secret, OPTS.cookie) (see its doc)
                              #  - BODY-PARSER.json|text|urlencoded|raw(OPTS.json|text|urlencoded|raw) (see its doc)
                              #     - OPTS.limit '1mb' ('5mb' for 'raw')
                              #     - sets OPTS.type
                              #     - OPTS.extended true
                              #  - MULTER(OPTS.multipart) (see its doc)
                              #For each PARAM:
                              #  - in REQ.query|headers|files|body|pathParams.VAR, REQ.body according to PARAM's [SMALL_]SCHEMA
                              #  - validates (with tv4)
                              #  - assigns SCHEMA.default|example
                              #  - parses from STR to right type
                              #  - including SCHEMA.format|collectionFormat

SMDW.validateRequest()        #Throw ERRORs:
 ->MDW_ARR                    #  - ERROR.status 500: wrong SPEC
                              #  - ERROR.status 401, WWW-Authenticate: Basic realm="HOSTNAME" [S] according to current SECURITY_DEF:
                              #     - basic: no Authorization: Basic [C]
                              #     - apiKey: missing in REQ.headers|query
                              #  - ERROR.status 404: current URL not in SPEC.paths.*
                              #  - ERROR.status 405, Allow [S]: current METHOD not in PATHDEF
                              #  - ERROR.status 406: Accept [C] not in API|OPERATION.produces
                              #  - ERROR.status 413: request body but no body|formData PARAM
                              #  - ERROR.status 415: Content-Type [C] not in API|OPERATION.consumes

SMDW.mock([APP][, STORE])     #Send a mock response according to RESP.headers and RESP.schema.default|example
 ->MDW_ARR                    #Based on:
                              #  - RESP according to:
                              #     - RES.statusCode
                              #     - first RESP with priority order: 2**, 3**, default, 4**|5**
                              #  - REQ.method
                              #Does:
                              #  - if first 2** RESP is array (according to RESP.schema), uses collections
                              #  - GET|HEAD|OPTIONS returns (in priority):
                              #     - empty if RESP.schema true
                              #     - RES.body if set by previous middleware
                              #     - model saved by previous request
                              #     - RESP.schema.default|example
                              #  - POST|PATCH|DELETE|PUT saves REQ
                              #  - PARAM named "file" with target file path
                              #Identifies resources using MODEL.id|key|code|num[ber]|nbr|[user]name or first required scalar property
                              #Calls RES.json|send()
                              #Sets headers:
                              #  - according to RESP.headers
                              #     - value is automatically generated from RESP.headers.NAME.default|schema
                              #  - Content-Type [S] according to SPEC|OPERATION.consumes|produces
                              #  - Location [S], Last-Modified [S], Content-Disposition [S]
                              #  - Set-Cookie [S] randomly generated
                              #STORE:
                              #  - persists mock data between requests
                              #  - can be:
                              #     - new MemoryDataStore() (def): in-memory
                              #     - new FileDataStore(['DIR']) (def 'DIR': process.cwd())
                              #Can use:
                              #  - APP.set('mock', false): disables
                              #  - APP.get('mock data store')->STORE

SMDW.CORS()->MDW_ARR          #Set CORS response headers (on both preflight requests and final request):
                              #  Access-Control-Allow-Origin: 'ORIGIN|*' [S]
                              #   - using Origin [C]
                              #  Access-Control-Allow-Methods: 'METHOD,...' [S]
                              #   - using OPERATION.*
                              #   - or Access-Control-Request-Method [C]
                              #   - or all possible OpenAPI methods
                              #  Access-Control-Allow-Credentials: true|false [S]
                              #   - false if Access-Control-Allow-Origin: '*'
                              #  Access-Control-Allow-Headers: 'VAL|' [S]
                              #   - using Access-Control-Request-Headers [C]
                              #  Access-Control-Max-Age: 0 [S]
                              #  Vary: Origin [S]
                              #   - unless Access-Control-Allow-Origin '*'
                              #  Any Access-Control-* specified in RESP.headers for current OPERATION or OPTIONS's OPERATION
                              #On preflight request:
                              #  - calls RES.send()
                              #  - does not set 204 status nor Content-Length: 0 [S] (although should)
                              #Prefer CORS (see its doc)
