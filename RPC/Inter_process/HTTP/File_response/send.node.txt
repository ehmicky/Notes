
                                  ┏━━━━━━━━━━┓
                                  ┃   SEND   ┃
                                  ┗━━━━━━━━━━┛

ALTERNATIVES ==>                  #  - express.js:
                                  #     - RES.sendFile(): reuse SEND() and add some convenience function to avoid using SENDSTREAM
                                  #     - RES.send(): send content directly, not file content. Fewer HTTP features

VERSION ==>                       #1.1.0

                                  ┌──────────┐
                                  │   MAIN   │
                                  └──────────┘

SEND(REQ, 'PATH'[, OPTS])
 ->SENDSTREAM
SENDSTREAM.pipe(RES)->RES         #Similar to RES.end(STR) but using 'PATH' file contents.

                                  ┌──────────┐
                                  │   FILE   │
                                  └──────────┘

'PATH'                            #Must be encodeURIComponent()'d
                                  #If wrong, sends 400
                                  #If contains .., sends 403
                                  #If cannot find, sends 404
                                  #If other error (filesystem, headers already sent, etc.), sends 500

OPTS.root                         #'DIR'. Make 'PATH' relative to 'DIR'
OPTS.extensions                   #'EXT'[_ARR] or false (def)
                                  #If 'PATH' cannot be found, try 'PATH.EXT'

OPTS.index                        #'FILE'[_ARR]|false (def: 'index.html')
                                  #If 'PATH' is 'DIR/' and cannot be found, send DIR/FILE

OPTS.dotfiles                     #What to do if 'PATH' contains dotfiles:
                                  #  - 'allow': nothing
                                  #  - 'deny': sends 403
                                  #  - 'ignore' (def): sends 404

                                  ┌──────────┐
                                  │   BODY   │
                                  └──────────┘

NO BODY ==>                       #When using HEAD or 304
Content-Length [S]                #Set, unless empty body
Content-Type [S]                  #Deduced from 'PATH' (using mime-types, see its doc)
                                  #(def: 'application/octet-stream'), unless empty body or already set

OPTS.start|end                    #NUM. Only send the file content from those byte offsets
OPTS.acceptRanges                 #BOOL (def: true). Handle range requests, using RANGE-PARSER (see its doc)
                                  #I.e. Range [C], If-Range [C], Accept-Ranges: bytes [S], Content-Range [S], 206, 416

                                  ┌─────────────┐
                                  │   CACHING   │
                                  └─────────────┘

If-None-Match [C]
If-Modified-Since [C]             #If fail (using fresh, see its doc), send 304
If-Match [C]
If-Unmodified-Since [C]           #If fail, send 412
OPTS.lastModified                 #BOOL (def: true). Sets Last-Modified: FILE_MTIME [S]
OPTS.etag                         #BOOL (def: true). Sets ETag [S], using ETAG(...) (see its doc), i.e. "SIZE-MTIME"

OPTS.cacheControl                 #BOOL (def: true). Sets default: Cache-Control: public, max-age=0 [S]
OPTS.maxAge                       #NUM (def: 0) or STR (using ms, see its doc) used by default Cache-Control [S]
OPTS.immutable                    #BOOL (def: false). Make default Cache-Control [S] use `immutable`

Content-Security-Policy:
 default-src 'none' [S]
X-Content-Type-Options:
 nosniff [S]                      #If 3**|4**|5**

                                  ┌────────────┐
                                  │   EVENTS   │
                                  └────────────┘

SENDSTREAM.on('file',
 FUNC('PATH', FSSTAT))            #When 'PATH' is FILE found, going to be sent
SENDSTREAM.on('headers',
 FUNC(RES, 'PATH', FSSTAT))       #Before setting response headers
SENDSTREAM.on('stream',
 FUNC(ISTREAM))                   #Sending body has started (if body)
SENDSTREAM.on('end', FUNC())      #Sending body has ended (if body)

SENDSTREAM.on('directory',        #Fired when 'PATH' is DIR
 FUNC(RES, 'PATH'))               #Def:
                                  #  - if does not end with /: send 301 with Location: 'PATH/' [S], and HTML body "Redirecting to PATH/"
                                  #  - if ends with /: 403

SENDSTREAM.on('error',            #Fired when 4**|5** would be sent.
 FUNC(HTTPERROR))                 #Def: RES.end('HTML')
                                  #  - ERROR.message as body
                                  #  - set status code
                                  #HTTPERROR (see its doc)
