
        
   SEND  
        


ALTERNATIVES ==>              #  - express.js:
                              #     - RES.sendFile(): reuse SEND() and add some convenience function to avoid using
                              #       SENDSTREAM
                              #     - RES.send(): send content directly, not file content. Less HTTP features

VERSION ==>                   #0.18.0
                              #Like RES.end() but tailored for sending file content according to a 'PATH'
                              #Handles: range requests, [un]conditional caching, conditional modification,
                              #Content-Type|Length [S], HEAD
                              #Does not depend on Express.js

SEND(REQ, 'PATH'[, OPTS])     #Similar to RES.end(STR) but also:
 ->SENDSTREAM                 #  - send 'PATH' file content
SENDSTREAM.pipe(RES)->RES     #  - handle range requests, using RANGE-PARSER (see its doc), if OPTS.acceptRanges true (def)
                              #     - i.e. Range [C], If-Range [C], Accept-Ranges: bytes [S], Content-Range [S], 206, 416
                              #  - sets Content-Type|Length [S], if body and not already set
                              #     - Content-Type [S] is deduced from 'PATH'
                              #  - sets Cache-Control: public, max-age=NUM[, immutable] [S]:
                              #     - NUM is OPTS.maxAge (def: 0)
                              #     - unless OPTS.cacheControl false, or already defined
                              #     - immutable if OPTS.immutable true (def: false)
                              #  - sets Last-Modified: FILE_MTIME [S] if OPTS.lastModified true (def)
                              #  - sets ETag [S], using ETAG(...) (see its doc), i.e. "SIZE-MTIME", if OPTS.etag true (def)
                              #  - if REQ.fresh: 304
                              #     - actually does not use REQ.fresh itself but similar logic
                              #       (i.e. check conditional caching headers)
                              #  - if If-Match [C] or If-Unmodified-Since [C] fail, send 412
                              #  - if 304 or HEAD, no body
                              #  - if 3**|4**|5**, sets Content-Security-Policy: "default-src 'none'" [S]
                              #'PATH':
                              #  - must be encodeURIComponent()'d
                              #  - if wrong, sends 400
                              #  - if contains .., sends 403
                              #  - if cannot find, sends 404
                              #  - if other filesystem error, sends 500
                              #OPTS:
                              #  - start|end NUM: only send the file content from those byte offsets
                              #  - root 'DIR': make 'PATH' relative to 'DIR'
                              #  - extensions 'EXT'_ARR or false (def): if 'PATH' cannot be found, try 'PATH.EXT'
                              #  - index 'FILE'[_ARR]|false (def: 'index.html'): if 'PATH' cannot be found and is DIR,
                              #    PATH/FILE
                              #  - dotfiles STR: what to do if 'PATH' contains dotfiles:
                              #     - 'allow': nothing
                              #     - 'deny': sends 403
                              #     - 'ignore' (def): sends 404

SENDSTREAM.on('error',        #Fired when 4**|5** would be sent.
FUNC(HTTPERROR, STATUS_NUM))  #Unless defined, will:
                              #  - RES.sendStatus(STATUS_NUM)
                              #  - also set Content-Range [S] if 416
                              #HTTPERROR (see its doc)
SENDSTREAM.on                 #Fired when 'PATH' is DIR but misses last '/'
('directory',FUNC(RES,'PATH'))#Unless defined, will send 301 with Location: 'PATH/' [S], and HTML body "Redirecting to PATH/"

SENDSTREAM.on
('file', FUNC('PATH', FSSTAT))#When 'PATH' is FILE found, goind to be sent
SENDSTREAM.on('headers',
FUNC(RES, 'PATH', FSSTAT))    #Before setting response headers
SENDSTREAM.on
('stream', FUNC(ISTREAM))     #Sending body has started (if body)
SENDSTREAM.on('end', FUNC())  #Sending body has ended (if body)
