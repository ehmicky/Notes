
                      
   SWAGGER-TO-GRAPHQL  
                      



VERSION ==>                   #1.2.7

SWAGGER-TO-GRAPHQL            #Converts OpenAPI into a GraphQL SCHEMA.
 (SPEC_OBJ|PATH|URL           #The GraphQL schema has one top level Query|Mutation operation per OPERATION:
 [,'HOST'([GRAPHQL_CONTEXT])] #  - called after OPERATION.operationId
 [, HEADERS])                 #  - description is OPERATION.description
 ->PROMISE_GRAPHQL_SCHEMA     #  - type is according to first 2** RESP.schema
                              #  - args:
                              #     - each GraphQL arg corresponds to one PARAM
                              #     - they are translated into header|query|path|formData|body in HTTP request
                              #     - GraphQLString|Int|Float|Boolean|[Input]Object|List according to PARAM's SCHEMA.type
                              #     - type name is SCHEMA.title or "param_OPERATIONID_NAME[Input]"
                              #     - type description is SCHEMA.description
                              #  - resolver:
                              #     - fires an REST HTTP request (using REQUEST) according to OpenAPI spec
                              #     - HOST is either:
                              #        - 'HOST'
                              #        - CONTEXT.GQLProxyBaseUrl
                              #        - SPEC.servers[0].url (replacing the SERVER_VAR with default or enum[0])
                              #     - PATH and METHOD are based on SPEC
                              #     - Content-Type [C] based on SPEC but only supports JSON
                              #     - can add CONTEXT.headers OBJ or HEADERS
                              #SPEC is dereferenced (using JSON-SCHEMA-REF-PARSER.bundle(), see its doc)
                              #OpenAPI 2.0 except SERVER which follows OpenAPI 3.0
                              #Does not support GraphQL:
                              #  - GraphQLInterfaceType
                              #  - GraphQLEnumType
                              #  - ARG.defaultValue
                              #  - subcriptions
