
      
   KY  
      



ALTERNATIVES ==>                  #See HTTP client summary

KY ==>                            #Browser-only
                                  #Version 0.31.1
KY-UNIVERSAL ==>                  #Like KY, but on Node.js, polyfills global.fetch() using NODE-FETCH
                                  #Version 0.10.1

KY('URL'|REQ[, OPTS])->PROMISE_RES#Wrapper around fetch(...)
                                  #Additional OPTS (beyond fetch(...) ones):
                                  #  - prefixUrl STR: prepended to 'URL'
                                  #  - searchParams STR|SEARCHPARAMS|ITERABLE (same as new URLSearchParams() argument)
                                  #  - json OBJ: instead of OPTS.body. Sets Content-Type: application/json [C]
                                  #  - parseJson FUNC(STR)->VAL (def: JSON.parse())
                                  #  - throwHttpErrors BOOL (def: true):
                                  #     - throw HTTPERROR is !RES.ok or if no more retries left
                                  #  - timeout NUM (def: 10000, in ms)
                                  #     - uses ABORT-CONTROLLER when available
                                  #     - throws TIMEOUTERROR
                                  #  - retry:
                                  #     - double timeout on each retry (starting at 300ms)
                                  #        - if 413|429|503 with Retry-After [S], use it instead
                                  #     - either:
                                  #        - OBJ:
                                  #           - limit NUM (def: 2): number of retries
                                  #           - methods STR_ARR (def: ['get', 'put', 'head', 'delete', 'options', 'trace'])
                                  #           - statusCodes NUM_ARR (def: [408, 413, 429, 500, 502, 503, 504])
                                  #           - maxRetryAfter NUM (in secs): ignore Retry-After [S] if above this
                                  #        - NUM: same as {limit: NUM}
                                  #  - onDownloadProgress(OBJ):
                                  #     - OBJ:
                                  #        - percent 0-1 (0 if no Content-Length [S])
                                  #        - transferredBytes NUM
                                  #        - totalBytes NUM (0 if no Content-Length [S])
                                  #  - hooks OBJ:
                                  #     - beforeRequest ARR of FUNC(REQ, OPTS)[->[PROMISE_]_REQ|RES]
                                  #        - can return KY.stop to stop retry
                                  #     - beforeRetry ARR of FUNC(OBJ)[->PROMISE]
                                  #        - can return KY.stop to stop retry
                                  #        - OBJ: request REQ, options OPTS, error ERROR (including ERROR.response RES), retryCount NUM
                                  #     - afterResponse ARR of FUNC(REQ, OPTS, RES)->[PROMISE_]RES
                                  #     - beforeError ARR of FUNC(ERROR)->ERROR
                                  #  - fetch(...): custom fetch
PROMISE.json|text|formData|       #Like (await PROMISE).json|...().
 arrayBuffer|blob()->VAL          #Also sets Accept: application/json|text/*|multipart/form-data|*/*|*/* [C]

KY[.METHOD](...)                  #Same with OPTS.method set
KY.create(OPTS)->KY               #Override defaults OPTS
KY.extend(OPTS)->KY               #Add to defaults OPTS

TimeoutError                      #Name 'TimeoutError', request REQ
HTTPError                         #Name 'HTTPError', request REQ, response RES, options OPTS
