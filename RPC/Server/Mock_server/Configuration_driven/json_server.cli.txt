
               
   JSON_SERVER  
               



VERSION ==>                       #0.17.4
                                  #Automatic API over JSON data


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:            CONFIG             :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


CONF                              #Can be:
                                  #  - --config|-c PATH
                                  #  - ./json-server.json
                                  #Is JSON file, with same values as CLI flags


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:             DATA              :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


DB                                #Can be:
                                  #  - JSON file: read|write on-file
                                  #  - URL: read once remotely, then modified in-memory
                                  #  - JavaScript file: exporting DATA, then modified in-memory
                                  #  - def: in-memory
                                  #Uses lowdb under-the-hood

DATA.MODEL                        #COBJ_ARR (not singleton) or COBJ (singleton)

--snapshots|-S                    #'DIR' (def: '.')
                                  #On stdin `s` command, saves DATA to DIR/db-DATE_NUM.json


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:              CLI              :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


json-server [DB]                  #
--host|-H                         #'HOST' (def: 'localhost')
--port|-p                         #NUM (def: 3000)

--watch|-w                        #BOOL (def: false). Reload on DB change

--quiet|-q                        #BOOL (def: false)


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:         PROGRAMMATIC          :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


create()->APP                     #Express APP
                                  #Alternative to using the CLI

router([DB[, CONF]])->ROUTER      #To add to APP

defaults([OPTS])->MDWR_FUNC       #To add to APP
OPTS.static
OPTS.readOnly
OPTS.noCors                       #Like CLI flags
OPTS.logger                       #BOOL (def: true)
OPTS.bodyParser                   #BOOL (def: true)


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:              API              :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


https://
 jsonplaceholder.typicode.com     #API using json-server

MODELS ==>                        #
users                             #id NUM, name STR, username STR, email 'EMAIL', phone STR, website 'URL'
                                  #address: street STR, suite STR, city STR, zipcode STR, geo.lat|lng 'NUM'
                                  #company: name STR, catchPhrase STR, bs STR
posts                             #id NUM, userId USER_ID, title STR, body STR
comments                          #id NUM, postId POST_ID, name STR, email 'EMAIL', body STR
albums                            #id NUM, userId USER_ID, title STR
photos                            #id NUM, albumId ALBUM_ID, title STR, url 'URL', thumbnailUrl 'URL'
todos                             #id NUM, userId USER_ID, title STR, completed BOOL


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:          MIDDLEWARE           :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


Content-Type:
 application/json [C|S]
Content-Type:                     #Using body-parser (see its doc)
 application/x-www-form-urlencoded#Uses OPTS.extended false, i.e. no complex VARR
 [C|S]                            #Max 10MB with JSON

Accept-Encoding: gzip|deflate [C] #Handled using `compression` (see its doc)
--no-gzip|-ng                     #BOOL (def: false)

--read-only|--ro                  #BOOL (def: false). Only allow GET
X-HTTP-Method-Override: METHOD [C]#Using method-override (see its doc)

--no-cors|--nc                    #BOOL. If false (def), handle CORS, using `cors` (see its doc)

--delay|-d                        #NUM (in ms) to wait to respond

REQUEST LOGGING ==>               #Uses `morgan` (see its doc) with format 'dev'

ERROR HANDLER ==>                 #Uses `errorhandler` (see its doc) if ENVVAR NODE_ENV 'development'

--middlewares|-m                  #'PATH' to JavaScript file exporting Express middleware FUNC
                                  #Can be specified several times


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:            ROUTES             :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


POST /MODEL                       #Request: COBJ
                                  #Response: COBJ
PUT /MODEL/ID                     #Request: COBJ (full)
                                  #Response: COBJ
PATCH /MODEL/ID                   #Request: COBJ (partial)
                                  #Response: COBJ
GET /MODEL                        #Request: empty
                                  #Response: COBJ_ARR
GET /MODEL/ID                     #Request: empty
                                  #Response: COBJ
DELETE /MODEL/ID                  #Request: empty
                                  #Response: empty

SINGLETON ==>                     #When DATA.MODEL is COBJ, not COBJ_ARR
                                  #No ID in routes
                                  #PATCH is not partial
                                  #No DELETE route
                                  #No CHILD resources

GET /db                           #Request: empty
                                  #Response: DATA

GET /                             #Static server, using `serve-static` (see its doc)
--static|-s                       #'DIR' (def: ./public)

--routes|-r                       #'PATH' to JSON file with ROUTES
ROUTES.URL                        #'URL2'. Re-write URL to URL2
                                  #URL[2] can contain :VAR
                                  #URL can contain *, expanded as $NUM in URL2


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:           RELATIONS           :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


--id|-i                           #'PROP' (def: 'id') of primary keys
                                  #Readonly
                                  #Def on creation: nanoid

/MODEL/ID/CHILD                   #Can be used for child resources
--foreignKeySuffix|--fks          #'PROP' (def: 'Id') of foreign keys, appended to model name
                                  #I.e. GET /MODEL/ID/CHILD -> GET /CHILD?ModelPROP=ID

?_embed=VAR                       #Populate MODEL.CHILD (must be foreign key), when using GET /MODEL[/ID]
?_expand=VAR                      #Adds and populate MODEL.PARENT, when using GET /MODEL[/ID]


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:             QUERY             :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


QUERY ==>                         #Only for GET /MODEL

?VARR=VAL                         #===
?VAR_ne=NUM                       #!==
?VAR_lte=NUM
?VAR_gte=NUM                      #>= <=
?VAR_like=REGEXP                  #REGEXP.test(), case-insensitive

?q=STR                            #includes(STR), case-insensitive, deep

?_sort=VAR,...
?_order=desc|asc,...              #Sort

?_limit=NUM                       #NUM. Def: 10
?_page=NUM                        #Pagination, using _limit NUM page size
                                  #Returns Link: first|prev|next|last [S]
?_start|_end=NUM                  #Pagination, using either _limit or _end
X-Total-Count: NUM [S]            #If ?_limit|_page|_end
