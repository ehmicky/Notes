
                                  ┏━━━━━━━━━━━━━━━━━━━━┓
                                  ┃   STEP_FUNCTIONS   ┃
                                  ┗━━━━━━━━━━━━━━━━━━━━┛

VERSION ==>                       #2024-11-28

TODO:
  - https://docs.aws.amazon.com/step-functions/latest/apireference/Welcome.html
  - https://states-language.net/spec.html
  - new_services doc
  - CDK:
     - document which properties are supported by --hotswap
     - API Gateway:
        - StepFunctionsIntegration:
           - v1: https://github.com/aws/aws-cdk/blob/main/packages/aws-cdk-lib/aws-apigateway/lib/integrations/stepfunctions.ts
           - v2: https://github.com/aws/aws-cdk/blob/main/packages/aws-cdk-lib/aws-apigatewayv2-integrations/lib/http/stepfunctions.ts
        - StepFunctionsRestApi: https://github.com/aws/aws-cdk/blob/main/packages/aws-cdk-lib/aws-apigateway/lib/stepfunctions-api.ts
        - https://github.com/aws/aws-cdk/blob/main/packages/aws-cdk-lib/aws-apigateway/README.md#aws-stepfunctions-backed-apis
  - SAM:
     - https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-statemachine.html
        - RESPROP Policies: document like AWS::Serverless::Function, i.e. just refer to SAM_POLICIES
     - https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-specification-generated-resources-statemachine.html
     - https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/serverless-step-functions-in-sam.html
     - `aws cloudformation package` and `sam package` can be used with:
        - AWS::StepFunctions::StateMachine RESPROP DefinitionS3Location
        - AWS::Serverless::StateMachine RESPROP DefinitionUri
     - document that hot reloading is supported by `sam sync`
        - including part which documents that contents caching is done using STATE_MACHINE definition
     - move documentation about `sam remote invoke`
     - move documentation about AWS::Serverless::Connector
     - move POLICY_TEMPLATE doc from SAM transform doc
     - mention that SAM_POLICIES apply to AWS::Serverless::StateMachine RESPROP Policies too
     - see example of how to document this with AWS::Serverless::Function documentation in CloudWatch Logs
     - test locally using sam-translate binary
  - Infrastructure Composer
     - https://docs.aws.amazon.com/infrastructure-composer/latest/dg/using-composer-services-sf.html
     - https://docs.aws.amazon.com/infrastructure-composer/latest/dg/using-composer-external-files-new.html
     - connection from API Gateway API to Step Functions STATE_MACHINE
  - https://docs.aws.amazon.com/step-functions/latest/dg/welcome.html
  - https://github.com/awslabs/statelint

                                  ┌─────────┐
                                  │   API   │
                                  └─────────┘

PAGINATION ==>                    #Uses REQ.maxResults (def 100, max 1000) + REQ|RES.nextToken
                                  #ValidateStateMachineDefinition(): REQ.maxResults (def|max 100), no REQ|RES.nextToken, RES.truncated BOOL
                                  #No pagination: ListTagsForResource()

                                  ┌─────────────┐
                                  │   MACHINE   │
                                  └─────────────┘

CreateStateMachine()              #Req: MACHINE + NEW_VERSION
                                  #  - no creationDate, label, status
                                  #  - no stateMachineArn
                                  #  - only one with tags
                                  #Res: VERSION
                                  #  - no updateDate, revisionId
UpdateStateMachine()              #Req: MACHINE + NEW_VERSION
                                  #  - no creationDate, label, status
                                  #  - no name, type
                                  #Res: VERSION
                                  #  - no stateMachineArn, creationDate
ListStateMachines()               #Req: empty
                                  #Res: stateMachines MACHINE_ARR
                                  #  - only stateMachineArn, name, creationDate, type
DescribeStateMachine()            #Req:
                                  #  - MACHINE: only stateMachineArn
                                  #  - MACHINE_GET
                                  #Res:
                                  #  - MACHINE
                                  #  - VERSION: no stateMachineVersionArn, no updateDate
DescribeStateMachineForExecution()#Req:
                                  #  - EXEC: only executionArn
                                  #  - MACHINE_GET
                                  #Res:
                                  #  - MACHINE: no creationDate, status, type
                                  #  - VERSION: no stateMachineVersionArn, description
                                  #  - MAP_RUN: only mapRunArn
DeleteStateMachine()              #Req: MACHINE
                                  #  - only stateMachineArn
                                  #Res: empty

MACHINE.stateMachineArn           #'MACHINE_ARN'
MACHINE.name                      #'MACHINE'
MACHINE.creationDate              #DATE_NUM

MACHINE.status                    #STR

MACHINE.type                      #STR

MACHINE.label                     #STR

MACHINE.roleArn                   #'ROLE_ARN'

MACHINE.variableReferences.MVAR   #STR_ARR

MACHINE.encryptionConfiguration   #MACHINE_ENCRYPT
MACHINE_ENCRYPT.type              #STR
MACHINE_ENCRYPT.kmsKeyId          #KMS 'KEY_ID'
MACHINE_ENCRYPT
 .kmsDataKeyReusePeriodSeconds    #NUM

MACHINE
 .tracingConfiguration.enabled    #BOOL

MACHINE.loggingConfiguration      #MACHINE_LOGGING
MACHINE_LOGGING.destinations[*]
 .cloudWatchLogsLogGroup
 .logGroupArn                     #'LOG_GROUP_ARN'
MACHINE_LOGGING.level             #STR
MACHINE_LOGGING
 .includeExecutionData            #BOOL

                                  ┌─────────────┐
                                  │   VERSION   │
                                  └─────────────┘

PublishStateMachineVersion()      #Req: VERSION
                                  #  - no stateMachineVersionArn, *Date
                                  #  - only one with description, revisionId
                                  #Res: VERSION
                                  #  - only stateMachineVersionArn, creationDate
ListStateMachineVersions()        #Req: MACHINE
                                  #  - only stateMachineArn
                                  #Res: stateMachineVersions VERSION_ARR
                                  #  - only stateMachineVersionArn, creationDate
CreateStateMachine()
UpdateStateMachine()
DescribeStateMachine()            #Return VERSION too (see above)
DeleteStateMachineVersion()       #Req: VERSION
                                  #  - only stateMachineVersionArn
                                  #Res: empty

VERSION.stateMachineVersionArn    #'VERSION_ARN'
VERSION.stateMachineArn           #'MACHINE_ARN'
VERSION.description
NEW_VERSION.versionDescription    #STR
VERSION.creationDate              #DATE_NUM
VERSION.updateDate                #DATE_NUM

NEW_VERSION.publish               #BOOL

VERSION.revisionId                #STR

                                  ┌───────────┐
                                  │   ALIAS   │
                                  └───────────┘

CreateStateMachineAlias()         #Req: ALIAS
                                  #  - no stateMachineAliasArn, *Date
                                  #Res: ALIAS
                                  #  - only stateMachineAliasArn, creationDate
UpdateStateMachineAlias()         #Req: ALIAS
                                  #  - no name, *Date
                                  #Res: ALIAS
                                  #  - only updateDate
ListStateMachineAliases()         #Req: STATE_MACHINE
                                  #  - only stateMachineArn
                                  #Res: stateMachineAliases ALIAS_ARR
                                  #  - only stateMachineAliasArn, creationDate
DescribeStateMachineAlias()       #Req: ALIAS
                                  #  - only stateMachineAliasArn
                                  #Res: ALIAS
DeleteStateMachineAlias()         #Req: ALIAS
                                  #  - only stateMachineAliasArn
                                  #Res: empty

ALIAS.stateMachineAliasArn        #'ALIAS_ARN'
ALIAS.name                        #'ALIAS'
ALIAS.description                 #STR
ALIAS.creationDate                #DATE_NUM
ALIAS.updateDate                  #DATE_NUM

ALIAS.routingConfiguration        #ALIAS_ROUTING_ARR
ALIAS_ROUTING
 .stateMachineVersionArn          #'VERSION_ARN'
ALIAS_ROUTING.weight              #NUM

                                  ┌────────────────┐
                                  │   DEFINITION   │
                                  └────────────────┘

MACHINE.definition                #STR
MACHINE_GET.includedData          #STR

                                  ┌────────────────┐
                                  │   VALIDATION   │
                                  └────────────────┘

ValidateStateMachineDefinition()  #Req:
                                  #  - MACHINE: only definition|type
                                  #  - DIAGNOSTIC: only severity
                                  #Res: VALIDATE_RES

VALIDATE_RES.result               #'OK' or 'FAIL'
VALIDATE_RES.diagnostics          #DIAGNOSTIC_ARR
DIAGNOSTIC.code                   #'CODE'
DIAGNOSTIC.message                #'MESSAGE'
DIAGNOSTIC.severity               #'ERROR' (def) or 'WARNING'
DIAGNOSTIC.location               #STR

                                  ┌───────────────┐
                                  │   EXECUTION   │
                                  └───────────────┘

StartExecution()                  #Req: EXEC
                                  #  - only stateMachineArn, name, input, traceHeader
                                  #Res: EXEC
                                  #  - only executionArn, startDate
StartSyncExecution()              #Req:
                                  #  - EXEC: only stateMachineArn, name, input, traceHeader
                                  #  - EXEC_GET
                                  #Res: EXEC
                                  #  - no mapRunArn, redrive*, stateMachineVersionArn|stateMachineAliasArn
                                  #  - only one with billingDetails
ListExecutions()                  #Req:
                                  #  - EXEC: only either stateMachineArn or mapRunArn
                                  #Res: executions EXEC_ARR
                                  #  - no cause, error, input*|output*, redriveStatus[Reason], traceHeader
                                  #  - only one with itemCount
DescribeExecution()               #Req:
                                  #  - EXEC: only executionArn
                                  #  - EXEC_GET
                                  #Res: EXEC
StopExecution()                   #Req: EXEC
                                  #  - only executionArn, cause, error
                                  #Res: EXEC
                                  #  - only stopDate

EXEC.executionArn                 #'EXEC_ARN'
EXEC.name                         #'EXEC'
EXEC.startDate                    #DATE_NUM
EXEC.stopDate                     #DATE_NUM

EXEC.stateMachineArn              #'MACHINE_ARN'
EXEC.stateMachineVersionArn       #'VERSION_ARN'
EXEC.stateMachineAliasArn         #'ALIAS_ARN'

EXEC.status                       #STR
EXEC.cause                        #STR
EXEC.error                        #STR

EXEC.input                        #STR
EXEC.inputDetails.included        #BOOL
EXEC.output                       #STR
EXEC.outputDetails.included       #BOOL

EXEC.traceHeader                  #STR

EXEC.billingDetails               #EXEC_BILLING
EXEC_BILLING
 .billedDurationInMilliseconds    #NUM
EXEC_BILLING.billedMemoryUsedInMB #NUM

EXEC_GET.includedData             #STR

TO MOVE ==>
EXEC.redriveCount                 #NUM
EXEC.redriveDate                  #DATE_NUM
EXEC.redriveStatus                #STR
EXEC.redriveStatusReason          #STR

TO MOVE ==>
EXEC.mapRunArn                    #'MAP_RUN_ARN'
EXEC.itemCount                    #NUM

RedriveExecution()                #Req:
                                  #Res:

GetExecutionHistory()             #Req:
                                  #Res:

CreateActivity()                  #Req:
                                  #  - only one with tags
                                  #Res:
ListActivities()                  #Req:
                                  #Res:
DescribeActivity()                #Req:
                                  #Res:
DeleteActivity()                  #Req:
                                  #Res:

GetActivityTask()                 #Req:
                                  #Res:
SendTaskSuccess()                 #Req:
                                  #Res:
SendTaskFailure()                 #Req:
                                  #Res:
SendTaskHeartbeat()               #Req:
                                  #Res:

UpdateMapRun()                    #Req:
                                  #Res:
ListMapRuns()                     #Req:
                                  #Res:
DescribeMapRun()                  #Req:
                                  #Res: MAP_RUN
DescribeStateMachineForExecution()#Also returns mapRunArn (see above)

TestState()                       #Req:
                                  #Res:

                                  ┌──────────┐
                                  │   TAGS   │
                                  └──────────┘

TagResource()                     #Req: TAGS
                                  #Res: empty
ListTagsForResource()             #Req: TAGS
                                  #  - only resourceArn
                                  #Res: TAGS
                                  #  - no resourceArn
UntagResource()                   #Req: TAGS
                                  #  - tags -> tagKeys 'TAG'_ARR
                                  #Res: empty

TAGS.resourceArn                  #'MACHINE_ARN|ACTIVITY_ARN'
TAGS.tags
MACHINE|ACTIVITY.tags             #TAG_PAIRS
