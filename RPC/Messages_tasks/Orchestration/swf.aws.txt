
                                  ┏━━━━━━━━━┓
                                  ┃   SWF   ┃
                                  ┗━━━━━━━━━┛

SWF ==>                       #Version from 2013-12-30

GOAL ==>                      #Task coordination between different components (e.g. EC2 instances)

WORKFLOW (SUMMARY) ==>        #Chain of actions/events using several actors (e.g. EC2 instances)
                              #Events:
                              #  - Anything happening in a Workflow, e.g. Workflow|DecisionTask|Activity start|stop
                              #  - Retrieved with:
                              #     - PollForDecisionTask() (last events (using [previous]StartedEventId), only basic info)
                              #     - GetWorkflowExecutionHistory() (all events, full info)
                              #  - Kept for workflowExecutionRetentionPeriodInDays (domain attribute) (def|max: 90 days)
                              #High-level actions:
                              #  - StartWorkflowExecution(), TerminateWorkflowExecution(),
                              #    RequestCancelWorkflowExecution(), SignalWorkflowExecution()
                              #  - done by actors "External"
                              #DecisionTask:
                              #  - scheduled when any major EVENT (not minor) is fired
                              #  - started by actors "Deciders" with PollForDecisionTask() (long polling of 60 secs)
                              #     - assigned only once to one decider.
                              #        - actually return all events, not only last ones (which are assigned only once to that
                              #          decider), but can see last ones assigned with [previous]StartedEventId
                              #        - must respond to it with RespondDecisionTaskCompleted() (including with empty
                              #          Decisions) in order to poll again
                              #     - must then use GetWorkflowExecutionHistory() to get details about events
                              #  - stopped by Deciders, which return an action DECISION
                              #     - one possible DECISION is to schedule an ActivityTask
                              #ActivityTask:
                              #  - started by actors "Workers" with PollForActivityTask() (long polling of 60 secs)
                              #     - assigned only once to one worker
                              #  - stopped by Workers, giving feedback when finished
                              #In short:
                              #  - Externals start the workflow
                              #  - Deciders reacts to events and schedule activities accordingly
                              #  - Workers do the actual task

IDENTIFIERS ==>               #  - name + version: unique ID for WorkflowType or ActivityType
                              #  - domain: shared ID (namespace) for WorkflowType
                              #  - workflowId + runId: unique ID for Workflow.
                              #     - If looping with "continueAsNewWorkflowExecution", change runId but not workflowId.
                              #  - taskList: shared ID (namespace) (def: use default ones) for:
                              #     - DecisionTask: assigned to Workflows (of same domain) and Decider can pick which
                              #       DecisionTask's taskList to poll from
                              #     - ActivityTask: assigned by Decider, and Worker picks which ActivityTask's taskList to poll
                              #       from
                              #  - tagList: tags for Workflow, used as filters when listing them

OTHERS ==>                    #  - WorkflowType|ActivityType:
                              #     - to share description and default values across Workflow|Activity
                              #     - can be thought as classes and instances
                              #     - there are no system default, so if no default values in WorkflowType|ActivityType,
                              #       must specify it in later actions or they will fail
                              #  - Child workflows:
                              #     - Launched by Deciders
                              #     - when parent terminates, child either (childPolicy) "TERMINATE", "REQUEST_CANCEL" (Cancel)
                              #       or "ABANDON" (do nothing)
                              #  - passing information:
                              #     - signals: custom event with input STR and signalName STR, performed by External or Decider
                              #     - input STR when starting workflow: available in the EVENT
                              #     - input STR when Decider schedules an ActivityTask: available by Worker when getting the
                              #       ActivityTask
                              #  - custom metadata associated with some EVENT:
                              #     - markers (recordMarker()): custom event with only metadata (don't schedule a DecisionTask)
                              #     - executionContext STR: with decisionTaskCompleted EVENT
                              #     - control STR: with other EVENT
                              #     - identity STR: with pollForDecisionTask(), should be identity of Decider
                              #  - timer:
                              #     - custom event fired after a delay (startToFireTimeout)
                              #     - starting the delay fires "TimerStarted" (doesn't schedule a DecisionTask), finishing the
                              #       delay fires "TimerFired" (schedule a DecisionTask)
                              #     - SWF version of setTimeout()

TIMEOUTS ==>                  #Timeouts (def: none for all):
                              #  - ExecutionStartToCloseTimeout: timeout between workflow start and end
                              #  - TaskStartToCloseTimeout: timeout between activity start and end
                              #  - TaskScheduleToStartTimeout: timeout between activity scheduled start and  (event emitted)
                              #  - TaskScheduleToCloseTimeout: timeout between activity scheduled end and scheduled
                              #    (event emitted)
                              #  - TaskHeartbeatTimeout: worker must fire RecordActivityTaskHeartbeat() at regular interval to
                              #    have timeout

WORKFLOW (DETAILED) ==>       #Workflow start (all below: EVENT "workflowExecutionStarted"):
                              #  - StartWorkflowExecution()
                              #  - DECISION "startChildWorkflowExecution":
                              #     - child workflow (EVENT "startChildWorkflowExecutionInitiated|Failed")
                              #     - Child workflow emits same EVENT as normal Workflow but as "childWorkflow*"
                              #  - DECISION "continueAsNewWorkflowExecution":
                              #     - stop current + start new one with same workflowType|Id (looping) but different runId
                              #       (EVENT "workflowExecutionContinuedAsNew", "continueAsNewWorkflowExecutionFailed")
                              #Workflow stop:
                              #  - DECISION "completeWorkflowExecution"
                              #     - normal exit. Communicates a result STR to the EVENT.
                              #       (EVENT "workflowExecutionCompleted", "completeWorkflowExecutionFailed")
                              #  - TerminateWorkflowExecution() (EVENT "workflowExecutionTerminated")
                              #  - Cancelling:
                              #     - either by (all below: EVENT "requestCancelExternalWorkflowExecutionInitiated|Failed"):
                              #        - a decider: DECISION "requestCancelExternalWorkflowExecution"
                              #          (EVENT "externalWorkflowExecutionCancelRequested")
                              #        - not a decider: RequestCancelWorkflowExecution()
                              #          (EVENT "workflowExecutionCancelRequested")
                              #     - decider should respond with DECISION "cancelWorkflowExecution" (so let decider choose)
                              #       (EVENT "workflowExecutionCanceled", "cancelWorkflowExecutionFailed")
                              #  - DECISION "failWorkflowExecution"
                              #    (EVENT "workflowExecutionFailed", "failWorkflowExecutionFailed")
                              #Workflow signal:
                              #  - either by (all below: EVENT "signalExternalWorkflowExecutionInitiated|Failed"):
                              #     - a decider: DECISION "signalExternalWorkflowExecution"
                              #       (EVENT "externalWorkflowExecutionSignaled"):
                              #     - not a decider: SignalWorkflowExecution() (EVENT "workflowExecutionSignaled"):
                              #Decision task:
                              #  - start schedule: when an EVENT is fired (EVENT "decisionTaskScheduled")
                              #  - start decision task: PollForDecisionTask() (EVENT "decisionTaskStarted")
                              #  - stop decision task: RespondDecisionTaskCompleted() (EVENT "decisionTaskTimedOut")
                              #Activity:
                              #  - start schedule: DECISION "scheduleActivityTask"
                              #    (EVENT "activityTaskScheduled", "scheduleActivityTaskFailed"):
                              #     - pass input STR to Activity Worker
                              #  - stop schedule: DECISION "requestCancelActivityTask"
                              #    (EVENT "activityTaskCancelRequested|Canceled", "requestCancelActivityTaskFailed")
                              #  - start activity: PollForActivityTask() (EVENT "activityTaskStarted")
                              #  - stop activity:
                              #     - worker using RespondActivityTaskCanceled|Completed|Failed()
                              #       (EVENT "activityTaskCanceled|Completed|Failed")
                              #     - decider using DECISION "requestCancelActivityTask" (same EVENT as above)
                              #Marker:
                              #  - create: DECISION "recordMarker" (EVENT "markerRecorded", "recordMarkerFailed")
                              #Timer:
                              #  - start: DECISION "startTimer"
                              #    (EVENT "timerStarted|Fired" (different if startToFireTimeout), "startTimerFailed")
                              #  - stop: DECISION "cancelTimer" (EVENT "timerCanceled", "cancelTimerFailed")
                              #Timeouts: EVENT "workflowExecutionTimedOut", "decisionTaskTimedOut", "activityTaskTimedOut"

PRICING ==>                   #Per month:
                              #  - 1$/10000 Workflows (first 1000 free)
                              #  - 0.05$/10000 Workflows opened days (first 30000 Workflows opened days free)
                              #  - same price for retained Workflows (so should set low workflowExecutionRetentionPeriodInDays)
                              #  - 1$/40000 ActivityTask|Signal|Timer|Marker (first 10000 free)
                              #Data transfer: in free, out 1$/8GB (like EC2)
                              #Prices varies per REGION

                                  ┌─────────┐
                                  │   API   │
                                  └─────────┘

API ==>                       #Uses JSON not XML

ARN ==>                       #  - arn:aws:swf:*:ACCOUNT_ID:/domain/ID
                              #  - COND_KEYs:
                              #     - swf:workflowType|activityType.name|version STR
                              #     - swf:typeFilter.name|version STR
                              #     - swf:[default]TaskList.name STR
                              #     - swf:tagList.member.NUM STR
                              #     - swf:tagFilter.tag
                              #     - swf:name|version

CLOUDWATCH ==>                #METRIC:
                              #  - Workflow|DecisionTaskStartToCloseTime
                              #  - DecisionTaskScheduleToStartTime: time between scheduled and started
                              #  - DecisionTasksCompleted
                              #  - StartedDecisionTasksTimedOutOnClose: number of DecisionTasks that timed out
                              #  - WorkflowsCanceled|Completed|ContinuedAsNew|Failed|Terminated|TimedOut
                              #  - ActivityTaskScheduleToClose|ScheduleToStart|StartToCloseTime
                              #  - ActivityTasksCanceled|Completed|Failed
                              #  - ScheduledActivityTasksTimedOutOnClose|Start:
                              #    number of ActivityTask that timed out while cancelling or before starting
                              #  - StartedActivityTasksTimedOutOnClose|Heartbeart:
                              #    number of ActivityTask that timed out while stopping or during Heartbeat
                              #Dimensions: Domain, WorkflowTypeName|Version, ActivityTypeName|Version

LIMITS ==>                    #  - 100 domains
                              #  - 10000 ActivityType|WorkflowType per domain
                              #  - 1MB/API call
                              #  - 100000 Workflow per domain
                              #  - Workflow max 1 year
                              #  - 25000 events per workflow
                              #  - 1000 child workflow per workflow
                              #  - 1000 opened Activity per workflow
                              #  - 1000 timers per workflow
                              #  - input|metadata|result max 32000 chars

PAGINATION ==>                #  - Request parameters: nextPageToken STR, maximumPageSize NUM (def|max: 100), reverseOrder BOOL
                              #  - Response body: nextPageToken STR

                                  ┌─────────────┐
                                  │   METHODS   │
                                  └─────────────┘

RegisterDomain()              #Same as *WorkflowTypes() except:
DeprecateDomain()             #  - Instead of default*:
DescribeDomain()              #     - workflowExecutionRetentionPeriodInDays STR
ListDomains()                 #  - typeInfo -> domainInfo:
                              #     - workflowType -> name STR
                              #     - no creation|deprecationDate
                              #  - no domain, version
                              #  - ACT_REQ -> only name STR

RegisterWorkflowType()        #Request parameters:
                              #  - domain STR
                              #  - name STR
                              #  - version STR
                              #  - description STR
                              #  - defaultChildPolicy STR
                              #  - defaultExecution|TaskStartToCloseTimeout STR
                              #  - defaultTaskList STR
DeprecateWorkflowType()       #Request parameters ACT_REQ:
                              #  - domain STR
                              #  - workflowType:
                              #     - name STR
                              #     - version STR
DescribeWorkflowType()        #Request parameters ACT_REQ
                              #Response body:
                              #  - configuration: default*
                              #  - typeInfo WORK_TYPEINFO:
                              #     - workflowType:
                              #        - name STR
                              #        - version STR
                              #     - creation|deprecationDate DATE
                              #     - description STR
                              #     - status "REGISTERED|DEPRECATED"
ListWorkflowTypes()           #Request parameters:
                              #  - domain STR
                              #  - name STR
                              #  - registrationStatus "REGISTERED|DEPRECATED"
                              #Response body: typeInfos WORK_TYPEINFO_ARR
                              #Paginates

StartWorkflowExecution()      #Request parameters STARTED_WORKFLOW:
                              #  - workflowId STR
                              #  - workflowType:
                              #     - name STR
                              #     - version STR
                              #  - domain STR
                              #  - taskList: name STR
                              #  - taskStartToCloseTimeout STR
                              #  - executionStartToCloseTimeout STR
                              #  - childPolicy "TERMINATE|REQUEST_CANCEL|ABANDON"
                              #  - input STR
                              #  - tagList STR_ARR
                              #Response body: runId STR
TerminateWorkflowExecution()  #Request parameters:
                              #  - workflowId, runId, domain, childPolicy
                              #  - reason STR, details STR
RequestCancelWorkflowExecution#Request parameters: workflowId, runId, domain
SignalWorkflowExecution()     #Request parameters:
                              #  - workflowId, runId, domain
                              #  - signalName STR
                              #  - input STR
ListOpen|Closed               #Request parameters WORKFLOW:
WorkflowExecutions()          #  - domain STR
                              #  - executionFilter: workflowId STR
                              #  - start|closeTimeFilter: latest|oldestDate DATE (close: only "Closed")
                              #  - typeFilter:
                              #     - name STR
                              #     - version STR
                              #  - tagFilter: tag STR
                              #  - closeStatusFilter: status STR (only "Closed")
                              #Response body: executionInfos OBJ_ARR:
                              #  - cancelRequested BOOL
                              #  - closeStatus STR
                              #  - start|closeTimestamp DATE
                              #  - execution|parent EXEC_INFO:
                              #     - runId STR
                              #     - workflowId STR
                              #  - executionStatus STR
                              #  - tagList STR_ARR
                              #  - workflowType:
                              #     - name STR
                              #     - version STR
                              #Paginates
CountOpen|Closed              #Request parameters WORKFLOW
WorkflowExecutions()          #Response body:
                              #  - count NUM
                              #  - truncated BOOL
DescribeWorkflowExecution()   #Request parameters:
                              #  - domain STR
                              #  - execution EXEC_INFO
                              #Response body:
                              #  - executionConfiguration:
                              #     - childPolicy STR
                              #     - executionStartToCloseTimeout STR
                              #     - taskList: name STR
                              #     - taskStartToCloseTimeout STR
                              #  - executionInfo EXEC_INFO
                              #  - latestActivityTaskTimestamp DATE
                              #  - latestExecutionContext STR
                              #  - openCounts:
                              #     - openActivityTasks NUM
                              #     - openChildWorkflowExecutions NUM
                              #     - openDecisionTasks NUM
                              #     - openTimers NUM

PollForDecisionTask()         #Request parameters:
                              #  - domain STR
                              #  - taskList: name STR
                              #  - identity STR
                              #Response body:
                              #  - events EVENT_ARR:
                              #     - eventId NUM
                              #     - eventTimestamp NUM
                              #     - eventType EVENT_TYPE
                              #     - *EventsAttributes OBJ: see GetWorkflowExecutionHistory()
                              #  - [previous]StartedEventId NUM: range of the eventId of the events returned
                              #  - taskToken STR: unique ID for this DECISION, to use in RespondDecisionTaskCompleted()
                              #  - workflowExecution EXEC_INFO
                              #  - workflowType:
                              #     - name STR
                              #     - version STR
                              #Paginates
CountPendingDecisionTasks()   #Like CountPendingActivityTasks()
RespondDecisionTaskCompleted()#Request parameters:
                              #  - taskToken STR
                              #  - executionContext STR
                              #  - decisions OBJ_ARR:
                              #     - decisionType DECISION (e.g. "CancelWorkflowExecution")
                              #       (All following actually end with *DecisionAttributes)
                              #     - scheduleActivityTask SCHEDULE_ACTIVITY_TASK:
                              #        - activityId STR
                              #        - activityType:
                              #           - name STR
                              #           - version STR
                              #        - taskList: name STR
                              #        - input STR
                              #        - control STR
                              #        - heartbeat|scheduleToClose|scheduleToStart|startToCloseTimeout STR
                              #     - requestCancelActivityTask: activityId STR
                              #     - completeWorkflowExecution: result STR
                              #     - cancelWorkflowExecution: details STR
                              #     - requestCancelExternalWorkflowExecution:
                              #        - control STR
                              #        - EXEC_INFO members
                              #     - failWorkflowExecution:
                              #        - details STR
                              #        - reason STR
                              #     - continueAsNewWorkflowExecution CONTINUE_AS_NEW:
                              #        - same members as STARTED_WORKFLOW but:
                              #           - no domain, workflowId
                              #           - workflowType -> workflowTypeVersion STR
                              #     - startChildWorkflowExecution CHILD_WORKFLOW_EXECUTION:
                              #        - same members as STARTED_WORKFLOW but no domain
                              #        - control STR
                              #     - signalExternalWorkflowExecution SIGNAL_WORKFLOW:
                              #        - control STR
                              #        - input STR
                              #        - signalName STR
                              #        - EXEC_INFO members
                              #     - recordMarker MARKER:
                              #        - details STR
                              #        - markerName STR
                              #     - startTimer TIMER:
                              #        - timerId STR
                              #        - startToFireTimeout NUM
                              #        - control STR
                              #     - cancelTimer: timerId STR

RegisterActivityType()        #Same as *WorkflowTypes() except:
DeprecateActivityType()       #  - WorkflowType -> ActivityType
DescribeActivityType()        #  - instead of default*:
ListActivityTypes()           #     - defaultTaskHeartbeat|TaskStartToClose|TaskScheduleToStart|CloseTimeout STR
                              #     - defaultTaskList: name STR

PollForActivityTask()         #Request parameters:
                              #  - domain STR
                              #  - identity STR
                              #  - taskList: name STR
                              #Response body:
                              #  - activityId STR
                              #  - activityType:
                              #     - name STR
                              #     - version STR
                              #  - input STR
                              #  - startedEventId NUM
                              #  - taskToken STR
                              #  - workflowExecution EXEC_INFO
CountPendingActivityTasks()   #Request parameters:
                              #  - domain STR
                              #  - taskList: name STR
                              #Response body:
                              #  - count NUM
                              #  - truncated BOOL
RespondActivityTask           #Request parameters:
Canceled|Completed|Failed()   #  - taskToken STR
                              #  - details STR or ("Completed") --result STR
                              #  - reason STR (only "Failed")
RecordActivityTaskHeartbeat() #Request parameters:
                              #  - details STR
                              #  - taskToken STR
                              #Response body: cancelRequested BOOL

GetWorkflowExecutionHistory() #Request parameters:
                              #  - domain STR
                              #  - execution EXEC_INFO
                              #Response body: events:
                              #  - same members as EVENT_ARR
                              #  - one of the following members EVENT_TYPE:
                              #     - VAR is EVENTTYPEEventAttributes, e.g. if eventType "ActivityTaskCanceled", VAR will be
                              #       activityTaskCanceledEventAttributes (only written as activityTaskCanceled below)
                              #     - some recurring members:
                              #        - decisionTaskCompletedEventId: eventId of the decisionTaskCompleted EVENT that
                              #          triggered that EVENT
                              #        - startedEventId: eventId of the EVENT that triggered that EVENT
                              #  - workflowExecutionStarted:
                              #     - same members as STARTED_WORKFLOW but: no workflowId nor domain
                              #     - continuedExecutionRunId STR
                              #     - parentInitiatedEventId NUM
                              #     - parentWorkflowExecution EXEC_INFO
                              #  - signal|requestCancelExternalWorkflowExecutionInitiated
                              #     - decisionTaskCompletedEventId NUM
                              #     - same members as SIGNAL_WORKFLOW except no input nor signalName if "signal"
                              #  - signal|requestCancelExternalWorkflowExecutionFailed:
                              #     - decisionTaskCompletedEventId NUM
                              #     - cause STR
                              #     - control STR
                              #     - initiatedEventId NUM
                              #     - EXEC_INFO members
                              #  - [external]WorkflowExecutionSignaled:
                              #     - [external]InitiatedEventId NUM
                              #     - [external]WorkflowExecution EXEC_INFO
                              #     - input STR (if no "external")
                              #     - signalName STR (if no "external")
                              #  - workflowExecutionCompleted:
                              #     - decisionTaskCompletedEventId NUM
                              #     - result STR
                              #  - workflowExecutionFailed:
                              #     - decisionTaskCompletedEventId NUM
                              #     - details STR
                              #     - reason
                              #  - complete|cancel|continueAsNew|failWorkflowExecutionFailed:
                              #     - cause STR
                              #     - decisionTaskCompletedEventId NUM
                              #  - workflowExecutionTimedOut:
                              #     - childPolicy STR
                              #     - timeoutType "START_TO_CLOSE"
                              #  - workflowExecutionContinuedAsNew:
                              #     - decisionTaskCompletedEventId NUM
                              #     - same as CONTINUE_AS_NEW but:
                              #        - newExecutionRunId STR
                              #        - workflowTypeVersion -> workflowType: name STR, version STR
                              #  - workflowExecutionTerminated:
                              #     - cause STR
                              #     - childPolicy STR
                              #     - details STR
                              #     - reason STR
                              #  - [external]WorkflowExecutionCancelRequested:
                              #     - cause STR (if no "external")
                              #     - [external]InitiatedEventId NUM ("external" if no "external", not the other way around)
                              #     - [external]WorkflowExecution EXEC_INFO
                              #  - workflowExecutionCanceled:
                              #     - decisionTaskCompletedEventId NUM
                              #     - details STR
                              #  - childWorflow*: like workflow* but:
                              #     - not for workflowExecutionSignaled nor workflowExecutionContinuedAsNew
                              #     - has extra members:
                              #        - initiatedEventId NUM
                              #        - startedEventId NUM
                              #        - workflowExecution EXEC_INFO
                              #        - workflowType:
                              #           - name STR
                              #           - version STR
                              #     - does not have members decisionTaskCompletedEventId, childPolicy
                              #     - workflowExecutionStarted -> does not have any of its members
                              #  - startChildWorkflowExecutionInitiated:
                              #     - decisionTaskCompletedEventId NUM
                              #     - same members as CHILD_WORKFLOW_EXECUTION
                              #  - startChildWorkflowExecutionFailed:
                              #     - decisionTaskCompletedEventId NUM
                              #     - cause STR
                              #     - control STR
                              #     - initiatedEventId NUM
                              #     - workflowId STR
                              #     - workflowType:
                              #        - name STR
                              #        - version STR
                              #  - activityTaskScheduled:
                              #     - decisionTaskCompletedEventId NUM
                              #     - same members as SCHEDULE_ACTIVITY_TASK
                              #  - scheduleActivityTaskFailed:
                              #     - decisionTaskCompletedEventId NUM
                              #     - activityId STR
                              #     - activityType:
                              #        - name STR
                              #        - version STR
                              #     - cause STR
                              #  - activityTaskStarted:
                              #     - scheduledEventId NUM
                              #     - identity STR
                              #  - activityTaskCancelRequested:
                              #     - decisionTaskCompletedEventId NUM
                              #     - activityId STR
                              #  - activityTaskCanceled:
                              #     - scheduledEventId NUM
                              #     - startedEventId NUM
                              #     - latestCancelRequestedEventId NUM
                              #     - details STR
                              #  - activityTaskCompleted:
                              #     - scheduledEventId NUM
                              #     - startedEventId NUM
                              #     - result STR
                              #  - activityTaskFailed:
                              #     - scheduledEventId NUM
                              #     - startedEventId NUM
                              #     - details STR
                              #     - reason STR
                              #  - requestCancelActivityTaskFailed:
                              #     - decisionTaskCompletedEventId NUM
                              #     - activityId STR
                              #     - cause STR
                              #  - activityTaskTimedOut:
                              #     - scheduledEventId NUM
                              #     - startedEventId NUM
                              #     - details STR
                              #     - timeoutType "START_TO_CLOSE|SCHEDULE_TO_START|SCHEDULE_TO_CLOSE|HEARTBEAT"
                              #  - decisionTaskScheduled:
                              #     - startToCloseTimeout STR
                              #     - taskList: name STR
                              #  - decisionTaskStarted:
                              #     - scheduledEventId NUM
                              #     - identity STR
                              #  - decisionTaskCompleted:
                              #     - scheduledEventId NUM
                              #     - startedEventId NUM
                              #     - executionContext STR
                              #  - decisionTaskTimedOut:
                              #     - scheduledEventId NUM
                              #     - startedEventId NUM
                              #     - timeoutType "START_TO_CLOSE"
                              #  - markerRecorded:
                              #     - decisionTaskCompletedEventId NUM
                              #     - details STR
                              #     - markerName STR
                              #  - recordMarkerFailed:
                              #     - decisionTaskCompletedEventId NUM
                              #     - cause STR
                              #     - markerName STR
                              #  - timerFired:
                              #     - startedEventId NUM
                              #     - timerId STR
                              #  - timerStarted:
                              #     - decisionTaskCompletedEventId NUM
                              #     - same members as TIMER
                              #  - startTimerFailed:
                              #     - decisionTaskCompletedEventId NUM
                              #     - cause STR
                              #     - timerId STR
                              #  - timerCanceled:
                              #     - decisionTaskCompletedEventId NUM
                              #     - startedEventId NUM
                              #     - timerId STR
                              #  - cancelTimerFailed:
                              #     - decisionTaskCompletedEventId NUM
                              #     - cause STR
                              #     - timerId STR
                              #Paginates
