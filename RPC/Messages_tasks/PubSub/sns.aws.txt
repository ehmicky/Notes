
                                  ┏━━━━━━━━━┓
                                  ┃   SNS   ┃
                                  ┗━━━━━━━━━┛

VERSION ==>                       #2024-09-24

TODO:
  - Lambda:
     - https://github.com/aws/aws-cdk/blob/8ce02838ba5033a6b35123a34e444c4f35350975/packages/aws-cdk-lib/aws-lambda-event-sources/lib/sns.ts
        - https://github.com/aws/aws-cdk/tree/8ce02838ba5033a6b35123a34e444c4f35350975/packages/aws-cdk-lib/aws-lambda-event-sources#sns
  - CloudWatch Logs:
     - revisit MASK_POLICY, since it seems to be a subset of SNS's
  - https://github.com/awslabs/amazon-sns-python-extended-client-lib and https://github.com/awslabs/amazon-sns-java-extended-client-lib
     - see SQS doc, which has same concept
  - SAM:
     - https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-property-function-sns.html
     - see example of how to document this with AWS::Serverless::Function documentation in CloudWatch Logs
     - test locally using sam-translate binary
     - move documentation about AWS::Serverless::Connector
     - move POLICY_TEMPLATE doc from SAM transform doc
  - Application Composer
     - connection from SNS TOPIC to SQS QUEUE (creating a SUBSCRIPTION)
     - connection from S3 BUCKET to SNS TOPIC
  - https://github.com/Admiral-Piett/goaws
     - see current doc of `goaws`, moving the SNS-specific part at the bottom
     - see https://github.com/Admiral-Piett/goaws README for SNS
  - https://docs.aws.amazon.com/sns/latest/dg/welcome.html
  - https://aws.amazon.com/sns/faqs
  - check sns_backup.txt in Desktop
  - https://aws.amazon.com/sns/pricing
  - add summary

                                  ┌─────────┐
                                  │   API   │
                                  └─────────┘

NAME ==>                          #Simple Notification Service

SERVICE_DOMAIN                    #sns.amazonaws.com

SVERSION                          #'2010-03-31'

FORMAT ==>                        #Request: query parameters (ARR uses VAR.NUM)
                                  #Response: XML
                                  #Uses REQ.Action|Version

REQ_ID                            #RES.ResponseMetadata.RequestId

PAGINATION ==>                    #Uses REQ|RES.NextToken
                                  #Uses REQ.MaxResults only with:
                                  #  - ListOriginationNumbers() (def|max 30)
                                  #  - ListSMSSandboxPhoneNumbers() (def|max 100)
                                  #No pagination: ListTagsForResource()
                                  #Others: page size always 100

MESSAGE THROTTLING ==>            #MESSAGEs per seconds, not API calls, i.e. regardless of Publish[Batch]()
                                  #Is:
                                  #  - same REGION: 30000|9000|1500|300 (REGION-specific, soft) and 20MB/s
                                  #  - cross-REGIONs: 1000 (soft) and 6MB/s
                                  #  - SMS: 20 (soft)
                                  #  - email: 10

THROTTLING ==>                    #3000|900|150|30/s (REGION-specific, soft): *Topic*(), ConfirmSubscription(),
                                  # *SubscriptionAttributes(), GetDataProtectionPolicy(), *Platform|Endpoint*()
                                  #100/s: [Un]Subscribe()
                                  #50/s: CheckIfPhoneNumberIsOptedOut()
                                  #30/s: ListTopics(), ListSubscriptions[ByTopic](), ListEndpointsByPlatformApplication()
                                  #20/s: GetSMSAttributes(), OptInPhoneNumber()
                                  #15/s: ListPlatformApplications()
                                  #10/s: *Permission*(), *Tag*(), ListPhoneNumbersOptedOut(), GetSMSSandboxAccountStatus()
                                  #1/s (soft): PutDataProtectionPolicy()
                                  #1/s: *SMSSandboxPhoneNumber*(), SetSMSAttributes(), ListOriginationNumbers()

                                  ┌──────────┐
                                  │   AUTH   │
                                  └──────────┘

AmazonSNSFullAccess               #AWS managed POLICY. Allows all 'sns:*' PACTIONs
                                  #Also allows sms-voice:PACTION (SMS|Voice with AWS End User Messaging):
                                  #  - DestinationNumber*, SendTextMessage, SetTextMessageSpendLimitOverride, DescribeAccountAttributes,
                                  #    DescribeSpendLimits, DescribePhoneNumbers, DescribeOptedOutNumbers, DeleteOptedOutNumber
                                  #  - COND_KEY aws:CalledViaLast 'sns.amazonaws.com'
AmazonSNSReadOnlyAccess           #Same but readonly

                                  ┌───────────┐
                                  │   TOPIC   │
                                  └───────────┘

TOPIC                             #Forwards MESSAGEs to SUBSCRIPTIONs
                                  #Creating|deleting is idempotent
                                  #Max 1e5 (soft) non-FIFO TOPICs, 1e3 (soft) FIFO TOPICs
TOPIC.TopicArn                    #'TOPIC_ARN'. 'arn:aws:sns:REGION:ACCOUNT_ID:TOPIC'
TOPIC.Name                        #'TOPIC'
                                  #Max 256 chars, [:alnum:]-_
TOPIC.Attributes                  #TOPIC_ATTRS

TOPIC_ATTRS.TracingConfig         #'PassThrough' or 'Active'. X-Ray settings
                                  #Not on FIFO

                                  ┌───────────────┐
                                  │   TOPIC API   │
                                  └───────────────┘

CreateTopic()                     #Req: TOPIC
                                  #  - no TopicArn
                                  #  - Attributes: no Owner, EffectiveDeliveryPolicy, Subscriptions*,
                                  #    BeginningArchiveTime, *Feedback*
                                  #Res: TOPIC
                                  #  - only TopicArn
SetTopicAttributes()              #Req: TOPIC
                                  #  - only TopicArn, Attributes -> AttributeName 'TOPIC_ATTR', AttributeValue STR
                                  #  - Attributes: no Owner, EffectiveDeliveryPolicy, Subscriptions*,
                                  #    BeginningArchiveTime, FifoTopic
                                  #Res: empty
ListTopics()                      #Req: empty
                                  #Res: Topic TOPIC_ARR
                                  #  - only TopicArn
GetTopicAttributes()              #Req: TOPIC
                                  #  - only TopicArn
                                  #Res:
                                  #  - only Attributes: no *Feedback*
                                  #  - only TopicArn -> Attributes.TopicArn
DeleteTopic()                     #Req: TOPIC
                                  #  - only TopicArn
                                  #Res: empty

                                  ┌───────────────┐
                                  │   TOPIC IAC   │
                                  └───────────────┘

AWS::SNS::Topic                   #RESPROPs: TopicName, TracingConfig
                                  #RESATTRs: TopicArn, TopicName

                                  ┌───────────────────┐
                                  │   TOPIC METRICS   │
                                  └───────────────────┘

DVAR TopicName                    #'TOPIC', sent with all METRICs except AWS/SNS/SMS*
                                  #QUEUE is also sent as a METRIC_ENTITY

                                  ┌────────────────┐
                                  │   TOPIC TAGS   │
                                  └────────────────┘

TOPIC_TAGS.ResourceArn            #'TOPIC_ARN'
TOPIC[_TAGS].Tags                 #TAG_PAIRS

                                  ┌────────────────────┐
                                  │   TOPIC TAGS API   │
                                  └────────────────────┘

TagResource()                     #Req: TOPIC_TAGS
                                  #Res: empty
ListTagsForResource()             #Req: TOPIC_TAGS
                                  #  - only ResourceArn
                                  #Res: TOPIC_TAGS
                                  #  - only Tags
UntagResource()                   #Req: TOPIC_TAGS
                                  #  - Tags OBJ -> TagKeys STR_ARR
                                  #Res: empty

                                  ┌────────────────────┐
                                  │   TOPIC TAGS IAC   │
                                  └────────────────────┘

AWS::SNS::Topic                   #Includes RESPROPs: Tags TAG_PAIRS

                                  ┌──────────┐
                                  │   FIFO   │
                                  └──────────┘

TOPIC_ATTRS.FifoTopic             #BOOL (def: false). Whether is FIFO TOPIC
                                  #'TOPIC' must end with '.fifo'
                                  #Everything in this section is only for FIFO

ORDER ==>                         #Ensures that receiving order is same as sending order

MESSAGE.MessageGroupId            #'MESSAGE_GROUP_ID'. FIFO ordering applies per-MESSAGE_GROUP
                                  #I.e. MESSAGE_GROUPs are interleaved
                                  #High NUM of MESSAGE_GROUPs has better performance
                                  #Required
                                  #Max 128 chars, [:graph:]
                                  #No limits on NUM of MESSAGE_GROUPs
MESSAGE_RES.SequenceNumber        #'NUM'. Increases monotonically (but not consecutively) per MESSAGE within a given MESSAGE_GROUP
                                  #Always 16 chars

MESSAGE.MessageDeduplicationId    #'MESSAGE_DID'. If 2 Publish() with the same MESSAGE_DID are sent:
                                  #  - within 5m
                                  #  - then only the first successful one is used
                                  #I.e. avoid double sending
                                  #Required
                                  #Max 128 chars, [:graph:]
TOPIC_ATTRS
 .ContentBasedDeduplication       #BOOL (def: false). Make MESSAGE_DID default to SHA-256 of 'MESSAGE_BODY'

                                  ┌──────────────┐
                                  │   FIFO IAC   │
                                  └──────────────┘

AWS::SNS::Topic                   #Includes RESPROPs: FifoTopic, ContentBasedDeduplication

                                  ┌─────────────────┐
                                  │   FIFO REPLAY   │
                                  └─────────────────┘

TOPIC_ATTRS.ArchivePolicy         #NUM (in days, min|def 0, max 1y).
 .MessageRetentionPeriod          #Stores MESSAGEs, in order to replay them
TOPIC_ATTRS.BeginningArchiveTime  #DATE_NUM. Earliest time to replay from, based on MessageRetentionPeriod

SUB_ATTRS.ReplayPolicy            #'REPLAY_JSON'. Re-send MESSAGEs stored in TOPIC
REPLAY.PointType                  #Always 'Timestamp'
REPLAY.StartingPoint              #'DATE'
REPLAY.EndingPoint                #'DATE' (def: now)

SUB_ATTRS.ReplayStatus            #'Pending', 'In progress', 'Completed' or 'Failed'

                                  ┌─────────────────────┐
                                  │   FIFO REPLAY IAC   │
                                  └─────────────────────┘

AWS::SNS::Topic                   #Includes RESPROPs: ArchivePolicy, ReplayPolicy OBJ

                                  ┌──────────────────┐
                                  │   SUBSCRIPTION   │
                                  └──────────────────┘

SUB                               #Forwards MESSAGEs to a PROTOCOL-specific destination
                                  #Max 12.5e6 (soft) per non-FIFO TOPIC, 100 (soft) per FIFO TOPIC
SUB.SubscriptionArn               #'SUBSCRIPTION_ARN'. 'TOPIC_ARN:SUBSCRIPTION_MID'
SUB.TopicArn                      #'TOPIC_ARN'
SUB.Attributes                    #SUB_ATTRS

SUB.Protocol                      #'PROTOCOL'. All valid values are documented below
SUB.Endpoint                      #Destination. PROTOCOL-specific, defined below

SUB_ATTRS.FilterPolicy            #'FILTER_JSON'. Filter which MESSAGEs to receive???
                                  #Max 200 per TOPIC, 1e4 per ACCOUNT
SUB_ATTRS.FilterPolicyScope       #Whether FILTER is applied on 'MessageAttributes' (def) or 'MessageBody'

SUB_ATTRS.RedrivePolicy           #'REDRIVE_POLICY_JSON'. Sends failed MESSAGEs to SQS DLQ???

TOPIC_ATTRS.SubscriptionsDeleted  #NUM of Unsubscribe()

                                  ┌───────────────────────┐
                                  │   SUBSCRIPTION AUTH   │
                                  └───────────────────────┘

COND_KEY sns:Protocol
COND_KEY sns:Endpoint             #SUB.*. Only with Subscribe()

                                  ┌──────────────────────┐
                                  │   SUBSCRIPTION API   │
                                  └──────────────────────┘

Subscribe()                       #Req: SUB
                                  #  - no SubscriptionArn, Owner
                                  #  - Attributes: no *Confirmation*, EffectiveDeliveryPolicy
                                  #Res: SUB
                                  #  - only SubscriptionArn
SetSubscriptionAttributes()       #Req: SUB
                                  #  - only SubscriptionArn, Attributes -> AttributeName 'SUB_ATTR', AttributeValue STR
                                  #  - Attributes: no *Confirmation*, EffectiveDeliveryPolicy, Replay*
                                  #Res: empty
ListSubscriptions()               #Req: empty
                                  #Res: Subscriptions SUB_ARR
                                  #  - no Attributes, ReturnSubscriptionArn
ListSubscriptionsByTopic()        #Req: SUB
                                  #  - only TopicArn
                                  #Res: Subscriptions SUB_ARR
                                  #  - no Attributes, ReturnSubscriptionArn
GetSubscriptionAttributes()       #Req: SUB
                                  #  - only SubscriptionArn
                                  #Res: SUB
                                  #  - only Attributes: no Replay*
                                  #  - only Owner|*Arn -> Attributes.Owner|*Arn
Unsubscribe()                     #Req: SUB
                                  #  - only SubscriptionArn
                                  #Res: empty

                                  ┌──────────────────────┐
                                  │   SUBSCRIPTION IAC   │
                                  └──────────────────────┘

AWS::SNS::Subscription            #RESPROPs:
                                  #  - TopicArn, Protocol, Endpoint, FilterPolicy OBJ, FilterDeliveryScope, RedrivePolicy OBJ
                                  #  - Region 'REGION' (def: current)
                                  #RESATTRs: Arn

AWS::SNS::Topic                   #Includes RESPROPs: Subscription OBJ_ARR: Protocol, Endpoint
                                  #Creates SUB but does not delete it, i.e. meant for SUBs created in other STACKs

                                  ┌─────────────┐
                                  │   CONFIRM   │
                                  └─────────────┘

SUB_CONFIRM                       #Confirms SUBSCRIPTION creation
                                  #Required if both:
                                  #  - HTTP|email
                                  #  - TOPIC and endpoint are in different ACCOUNTs
                                  #Max 5e3 (soft) pending SUBs per ACCOUNT
SUB_CONFIRM.TopicArn              #'TOPIC_ARN'

SUB_CONFIRM.Token                 #STR. Authentication token. How to get???
                                  #Expires after 2d

SUB_ATTRS.PendingConfirmation     #BOOL. Whether SUB_CONFIRM done
SUB_ATTRS
 .ConfirmationWasAuthenticated    #BOOL. Whether SUB_CONFIRM is authenticated???

SUB.ReturnSubscriptionArn         #BOOL. If false (def), SUB.SubscriptionArn is 'pending confirmation' if SUB_CONFIRM needed

SUB_CONFIRM                       #'BOOL'. If 'true', only TOPIC|SUB.Owner can Unsubscribe()
 .AuthenticateOnUnsubscribe       #If 'false' (def), allow anonymous Unsubscribe()
                                  #  - if anonymous, a cancellation MESSAGE is also sent, with a link to re-subscribe

TOPIC_ATTRS.SubscriptionsPending  #NUM of pending SUB_CONFIRMs
TOPIC_ATTRS.SubscriptionsConfirmed#NUM of ConfirmSubscription()

                                  ┌─────────────────┐
                                  │   CONFIRM API   │
                                  └─────────────────┘

ConfirmSubscription()             #Req: SUB_CONFIRM
                                  #Res: SUB
                                  #  - only SubscriptionArn

                                  ┌─────────────┐
                                  │   MESSAGE   │
                                  └─────────────┘

MESSAGE                           #Max 256KB
                                  #Max header 16KB???

MESSAGE_RES.MessageId             #'MESSAGE_MID'
MESSAGE.TopicArn                  #'TOPIC_ARN'

MESSAGE.Message                   #'MESSAGE_BODY'
MESSAGE.MessageStructure          #If 'json' (def: undefined), MESSAGE_BODY is 'OBJ_JSON' of {PROTOCOL|default: 'MESSAGE_BODY', ...}
                                  #I.e. PROTOCOL-specific MESSAGE_BODY
                                  #One `default` is required

MESSAGE
 .MessageAttributes.MESSAGE_ATTR  #ATTR_VALUE. Custom metadata
ATTR_VALUE.DataType               #Value's type among 'String', 'String.Array', 'Number' or 'Binary'
                                  #Can append with any '.DESCRIPTION', e.g. 'Number.float', max 256 chars
ATTR_VALUE.StringValue            #STR. Value, when DataType 'String[.Array]|Number'
                                  #'NUM' must be single-precision float
                                  #Must be [:print:]
ATTR_VALUE.BinaryValue            #STR. Value, when DataType 'Binary'
                                  #Must be base64'd

                                  ┌─────────────────┐
                                  │   MESSAGE API   │
                                  └─────────────────┘

Publish()                         #Req: MESSAGE
                                  #Res: MESSAGE_RES

                                  ┌───────────┐
                                  │   BATCH   │
                                  └───────────┘

BATCH                             #Multiple MESSAGEs in a single API call
                                  #Max 10 entries
                                  #Max 256KB

BATCH.TopicArn                    #'TOPIC_ARN'
BATCH.PublishBatchRequestEntries  #BATCH_ENTRY_ARR
BATCH_ENTRY.Id                    #'BATCH_ENTRY_MID'. Required
                                  #Max 80 chars, [:alnum:]_-
BATCH_ENTRY.*                     #MESSAGE.* except no TopicArn, TargetArn, PhoneNumber

BATCH_RES.Successful              #BATCH_SUCCESS_ARR
BATCH_SUCCESS.Id                  #'BATCH_ENTRY_MID'
BATCH_SUCCESS.*                   #MESSAGE_RES

BATCH_RES.Failed                  #BATCH_ERROR_ARR
BATCH_ERROR.Id                    #'BATCH_ENTRY_MID'
BATCH_ERROR.Code                  #'CODE'
BATCH_ERROR.Message               #'MESSAGE'
BATCH_ERROR.SenderFault           #BOOL. Whether caused by user or by API

                                  ┌────────────────┐
                                  │   BATCH AUTH   │
                                  └────────────────┘

PACTION sqs:Publish               #Includes sns:PublishBatch, which does not have its own PACTION

                                  ┌───────────────┐
                                  │   BATCH API   │
                                  └───────────────┘

PublishBatch()                    #Req: BATCH
                                  #Res: BATCH_RES

                                  ┌────────────────┐
                                  │   ENCRYPTION   │
                                  └────────────────┘

TOPIC_ATTRS.KmsMasterKeyId        #KMS_ID (def: none). "SSE". Encrypts MESSAGE_BODY at rest
                                  #Does not encrypt other parts of MESSAGE.* (e.g. MESSAGE_ATTRS)

TOPIC_ATTRS.SignatureVersion      #Algorithm used for the encryption signature. Either:
                                  #  - 1 (def): RSA with SHA1
                                  #  - 2 (recommended): RSA with SHA256

                                  ┌────────────────────┐
                                  │   ENCRYPTION IAC   │
                                  └────────────────────┘

AWS::SNS::Topic                   #Includes RESPROPs: KmsMasterKeyId, SignatureVersion

                                  ┌─────────────┐
                                  │   LOGGING   │
                                  └─────────────┘

TOPIC_ATTRS                       #ROLE_ARN used to send to CloudWatch Logs, logging successful MESSAGEs
 .PROTOCOLSuccessFeedbackRoleArn  #PROTOCOL is HTTP, Lambda, SQS, Firehose or Application
                                  #Not for email
TOPIC_ATTRS
 .PROTOCOLFailureFeedbackRoleArn  #Same for failed MESSAGEs
TOPIC_ATTRS                       #0-100. Percentage of successful MESSAGEs to log
.PROTOCOLSuccessFeedbackSampleRate#Failed MESSAGEs are always logged

APP_PLATFORM_ATTRS
 .SuccessFeedbackRoleArn
 |SuccessFeedbackSampleRate
 |FailureFeedbackRoleArn          #Same as TOPIC_ATTRS.Application*???

SMS_ATTRS.DeliveryStatusIAMRole
SMS_ATTRS
.DeliveryStatusSuccessSamplingRate#Same for SMS???

                                  ┌──────────────────┐
                                  │   LOGGING AUTH   │
                                  └──────────────────┘

PACTION iam:PassRole              #Required with TOPIC_ATTRS.*FeedbackRoleArn???

service-role/AmazonSNSRole        #AWS managed POLICY that allows PACTIONs:
                                  #  - logs:CreateLogGroup|PutMetricFilter|PutRetentionPolicy on any LOG_GROUP
                                  #  - logs:CreateLogStream|PutLogEvents on any LOG_STREAM

                                  ┌─────────────────┐
                                  │   LOGGING IAC   │
                                  └─────────────────┘

AWS::SNS::Topic                   #Includes RESPROPs: DeliveryStatusLogging OBJ_ARR:
                                  #  - Protocol 'PROTOCOL'
                                  #  - SuccessFeedbackRoleArn, FailureFeedbackRoleArn, SuccessFeedbackSampleRate

                                  ┌────────────┐
                                  │   POLICY   │
                                  └────────────┘

TOPIC_ATTRS.Policy                #IAM 'POLICY_DOC'. TOPIC_POLICY
                                  #Resource-level on a TOPIC, i.e. Resource is TOPIC_ARN
                                  #Principal must be 'ACCOUNT_ID'
                                  #  - this can worked around using either:
                                  #     - COND_KEY aws:PrincipalArn or aws:SourceArn|SourceAccount
                                  #     - identity-level POLICY instead
                                  #Def: empty

PERMISSION                        #Sets TOPIC_ATTRS.Policy
                                  #POLICY_DOC.Id is 'arn:aws:sqs:REGION:ACCOUNT_ID/TOPIC/SNSDefaultPolicy'
PERMISSION.Label                  #STATEMENT.Sid
PERMISSION.TopicArn               #'TOPIC_ARN'. STATEMENT.Resource
PERMISSION.ActionName             #'PACTION|*'_ARR. STATEMENT.Actions
PERMISSION.AWSAccountIds          #'ACCOUNT_ID'_ARR. STATEMENT.Principal.AWS
                                  #Required

TOPIC_ATTRS|SUB.Owner             #'ACCOUNT_ID'

                                  ┌─────────────────┐
                                  │   POLICY AUTH   │
                                  └─────────────────┘

PACTION sns:AddPermission
 |RemovePermission                #Do not require PACTION sns:SetTopicAttributes, even though they set TOPIC_ATTRS.Policy

ANONYMOUS REQUESTS ==>            #Allowed by using Principal '*', in TOPIC_POLICY

                                  ┌────────────────┐
                                  │   POLICY API   │
                                  └────────────────┘

AddPermission()                   #Req: PERMISSION
                                  #Res: empty
RemovePermission()                #Req: PERMISSION
                                  #  - only TopicArn, Label
                                  #Res: empty

                                  ┌────────────────┐
                                  │   POLICY IAC   │
                                  └────────────────┘

AWS::SNS::TopicInlinePolicy       #RESPROPs: PolicyDocument POLICY_DOC_OBJ, TopicArn 'TOPIC_ARN'
                                  #Is TOPIC_ATTRS.Policy, i.e. resource-level
                                  #With Cloud Control, cannot list

AWS::SNS::TopicPolicy             #RESPROPs: PolicyDocument POLICY_DOC_OBJ, Topics 'TOPIC_ARN'_ARR
                                  #RESATTR: Id POLICY_MID
                                  #Is a MPOLICY, i.e. identity-level
                                  #With Cloud Control, cannot read|list

                                  ┌─────────────────────┐
                                  │   DATA PROTECTION   │
                                  └─────────────────────┘

TOPIC.DataProtectionPolicy        #'DPOLICY_JSON'
                                  #Max 30KB

DPOLICY.Version                   #Always '2021-06-01'
DPOLICY.Name                      #'DPOLICY'
DPOLICY.Description               #STR

DPOLICY.Statement                 #DSTATEMENT_ARR
DSTATEMENT.Sid                    #'DSTATEMENT'
DSTATEMENT.Principal              #STR_ARR, including '*'
DSTATEMENT.Operation.Deny         #OBJ
DSTATEMENT.DataIdentifier         #'DATAID'_ARR (see CloudWatch logs docs)
DSTATEMENT.DataDirection          #STR among 'Inbound', ???

                                  ┌─────────────────────────┐
                                  │   DATA PROTECTION API   │
                                  └─────────────────────────┘

PutDataProtectionPolicy()         #Req: TOPIC
                                  #  - only DataProtectionPolicy, TopicArn -> ResourceArn
                                  #Res: empty
GetDataProtectionPolicy()         #Req: TOPIC
                                  #  - only TopicArn -> ResourceArn
                                  #Res: TOPIC
                                  #  - only DataProtectionPolicy

                                  ┌─────────────────────────┐
                                  │   DATA PROTECTION IAC   │
                                  └─────────────────────────┘

AWS::SNS::Topic                   #Includes RESPROPs: DataProtectionPolicy DPOLICY_OBJ

                                  ┌──────────┐
                                  │   HTTP   │
                                  └──────────┘

SUB.Protocol                      #'http[s]'. Send using HTTP request, with POST
SUB.Endpoint                      #'URL' to send to

TOPIC_ATTRS|SUB_ATTRS
 .DeliveryPolicy                  #'DELIVERY_POLICY_JSON'. How to retry on failure???
TOPIC_ATTRS|SUB_ATTRS
 .EffectiveDeliveryPolicy         #Same but adds default values???

DELIVERY_POLICY
 .requestPolicy.headerContentType #'MIME' among 'text/plain', 'application/json', 'application/xml'
DELIVERY_POLICY.throttlePolicy
 .maxReceivesPerSecond            #NUM
DELIVERY_POLICY.healthyRetryPolicy#RETRY_POLICY
RETRY_POLICY.minDelayTarget       #NUM
RETRY_POLICY.maxDelayTarget       #NUM
RETRY_POLICY.numRetries           #NUM
RETRY_POLICY.numMaxDelayRetries   #NUM
RETRY_POLICY.backoffFunction      #One of 'linear', 'arithmetic', 'geometric', 'exponential'

SUB_ATTRS.RawMessageDelivery      #BOOL (def: false). No need to process JSON???

                                  ┌──────────────┐
                                  │   HTTP IAC   │
                                  └──────────────┘

AWS::SNS::Subscription            #Includes RESPROPs: DeliveryPolicy DELIVERY_POLICY_OBJ, RawMessageDelivery

                                  ┌────────────┐
                                  │   LAMBDA   │
                                  └────────────┘

SUB.Protocol                      #'lambda'. Send to a Lambda FUNCTION
SUB.Endpoint                      #'FUNC_ARN'

                                  ┌─────────┐
                                  │   SQS   │
                                  └─────────┘

SUB.Protocol                      #'sqs'. Send to a SQS QUEUE
SUB.Endpoint                      #'QUEUE_ARN'

SUB_ATTRS.RawMessageDelivery      #Like above

                                  ┌─────────────┐
                                  │   KINESIS   │
                                  └─────────────┘

SUB.Protocol                      #'firehose'. Send to Kinesis Firehose delivery stream
                                  #Max 5 per DELIVERY_STREAM's ACCOUNT + TOPIC
SUB.Endpoint                      #'DELIVERY_STREAM_ARN'

SUB_ATTRS.SubscriptionRoleArn     #ROLE_ARN used to write to Firehose delivery stream
                                  #Must be assumable by sns.amazonaws.com
                                  #Current principal must have iam:PassRole

                                  ┌─────────────────┐
                                  │   KINESIS IAC   │
                                  └─────────────────┘

AWS::SNS::Subscription            #Includes RESPROPs: SubscriptionRoleArn

                                  ┌───────────┐
                                  │   EMAIL   │
                                  └───────────┘

SUB.Protocol                      #'email[-json]'. Send as email
SUB.Endpoint                      #'EMAIL_ADDRESS'

TOPIC_ATTRS.DisplayName           #'From' email field
MESSAGE.Subject                   #'Subject' email field
                                  #Max 100 chars, no control characters nor newlines

                                  ┌───────────────┐
                                  │   EMAIL IAC   │
                                  └───────────────┘

AWS::SNS::Topic                   #Includes RESPROPs: DisplayName

                                  ┌──────────────────┐
                                  │   SMS SETTINGS   │
                                  └──────────────────┘

SUB.Protocol                      #'sms'. Send an SMS
SUB.Endpoint                      #'PHONE_NUMBER'
                                  #E.164 format, i.e. use + followed by multiple digits
MESSAGE.PhoneNumber               #'PHONE_NUMBER', specified instead of MESSAGE.TopicArn
                                  #I.e. send a MESSAGE without using a TOPIC

SMS_UI_SETTINGS                   #Submitted via UI when exiting the sandbox
                                  #SMS_UI_SETTINGS keys are only for documentation, since it is done via UI
SMS_UI_SETTINGS.SenderRegion      #'REGION'
SMS_UI_SETTINGS.ReceiverRegions   #'REGION'_ARR
SMS_UI_SETTINGS.ReceiverCountries #'COUNTRY'_ARR
SMS_UI_SETTINGS.AppLocation       #STR. Website URL or app name

SMS_SETTINGS.attributes           #SMS_ATTRS
SMS_ATTRS.DefaultSenderID         #STR. Sender field
                                  #Max 11 chars, [:alnum:] (at least one letter)
TOPIC_ATTRS.DisplayName           #SMS title???
MESSAGE.Message                   #STR. SMS contents
                                  #Each 140 ASCII (or 70 UTF-16) chars (cut at whitespaces) create a separate part
                                  #Max 1600 chars
SMS_UI_SETTINGS.MessageTemplates  #???

SMS_ATTRS.DefaultSMSType          #Either:
                                  #  - 'Promotional' (def): marketing, cheaper
                                  #  - 'Transactional': application, more reliable
                                  #  - 'Premium'???
SMS_UI_SETTINGS.DefaultSMSType    #'Promotional', 'Transactional' or 'OneTimePassword'

SMS_ATTRS|SMS_UI_SETTINGS         #Max NUM of USD to spend
 .MonthlySpendLimit               #Def: undocumented??? Max 1 USD (soft) per ACCOUNT???

SMS_ATTRS.UsageReportS3Bucket     #'BUCKET'. Logs successful MESSAGEs as an OBJECT
                                  #Once per day
                                  #Is a CSV file with MESSAGE rows and SMS_USAGE columns
SMS_USAGE[0]                      #DATE_NUM
SMS_USAGE[1]                      #MESSAGE_MID
SMS_USAGE[2]                      #'PHONE_NUMBER'
SMS_USAGE[3]                      #SMS_ATTRS.DefaultSMSType
SMS_USAGE[4]                      #STR. Delivery status???
SMS_USAGE[5]                      #NUM. Price in USD
SMS_USAGE[6]                      #NUM. Part number
SMS_USAGE[7]                      #NUM. Total number of parts

                                  ┌───────────────────────┐
                                  │   SMS SETTINGS AUTH   │
                                  └───────────────────────┘

PACTION s3:ListBucket             #For SMS_ATTRS.UsageReportS3Bucket, must be allowed:
 |GetBucketLocation|PutObject     #  - on Resource BUCKET_ARN
                                  #  - for Principal.Service sns.amazonaws.com

                                  ┌──────────────────────┐
                                  │   SMS SETTINGS API   │
                                  └──────────────────────┘

SetSMSAttributes()                #Req: SMS_SETTINGS
                                  #Res: empty
GetSMSAttributes()                #Req: SMS_SETTINGS
                                  #  - attributes OBJ -> 'SMS_ATTR'_ARR
                                  #Res: SMS_SETTINGS

                                  ┌──────────────────────┐
                                  │   SMS SETTINGS IAC   │
                                  └──────────────────────┘

AWS::SNS::Topic                   #Includes RESPROPs: DisplayName

                                  ┌────────────────┐
                                  │   SMS SENDER   │
                                  └────────────────┘

SMS_SENDER                        #Phone number used when sending SMS
SMS_SENDER.CreatedAt              #DATE_NUM
SMS_SENDER.PhoneNumber            #'PHONE_NUMBER'

SMS_SENDER.Iso2CountryCode        #'COUNTRY_CODE' (2 chars, ISO 3166-1 alpha-2)
SMS_SENDER.NumberCapabilities     #STR_ARR among 'SMS', 'MMS', 'VOICE'
SMS_SENDER.RouteType              #SMS_ATTRS.DefaultSMSType
SMS_SENDER.Status                 #'ACTIVE' or 'INACTIVE'

                                  ┌────────────────────┐
                                  │   SMS SENDER API   │
                                  └────────────────────┘

ListOriginationNumbers()          #Req: empty
                                  #Res: PhoneNumbers SMS_SENDER_ARR

                                  ┌───────────────┐
                                  │   SMS ALLOW   │
                                  └───────────────┘

SMS_UI_SETTINGS.OptInMethod       #How receivers opt in to SMSs???

SMS_BLOCK.phoneNumber             #'PHONE_NUMBER'
SMS_BLOCK.isOptedOut              #BOOL. Whether PHONE_NUMBER blocked our number
                                  #Can be set from false to true, but only once per PHONE_NUMER per 30 days

                                  ┌───────────────────┐
                                  │   SMS ALLOW API   │
                                  └───────────────────┘

OptInPhoneNumber()                #Req: SMS_BLOCK
                                  #  - no isOptedOut
                                  #Res: empty
ListPhoneNumbersOptedOut()        #Req: empty
                                  #Res: phoneNumbers 'PHONE_NUMBER'_ARR
CheckIfPhoneNumberIsOptedOut()    #Req: SMS_BLOCK
                                  #  - no isOptedOut
                                  #Res: SMS_BLOCK
                                  #  - only isOptedOut

                                  ┌─────────────────┐
                                  │   SMS SANDBOX   │
                                  └─────────────────┘

SMS_SANDBOX.IsInSandbox           #BOOL. Wheter in sandbox
                                  #ACCOUNT is initially in sandbox
                                  #Per REGION

EXITING THE SANDBOX ==>           #Test at least one SMS_SANDBOX_RECEIVER
                                  #Then create a AWS Support case to exit the sandbox
                                  #  - under "Service quota increase" > "SNS Text Messaging"
                                  #Takes up to 24h

                                  ┌─────────────────────┐
                                  │   SMS SANDBOX API   │
                                  └─────────────────────┘

GetSMSSandboxAccountStatus()      #Req: empty
                                  #Res: SMS_SANDBOX

                                  ┌──────────────────────────┐
                                  │   SMS SANDBOX RECEIVER   │
                                  └──────────────────────────┘

SMS_SANDBOX_RECEIVER              #When in sandbox, can only send to SMS_SANDBOX_RECEIVERs
                                  #I.e. requires OTP confirmation from receivers
SMS_SANDBOX_RECEIVER.PhoneNumber  #'PHONE_NUMBER'

SMS_SANDBOX_RECEIVER              #STR. Token allowing receiving SMSs
 .OneTimePassword                 #Sent by CreateSMSSandboxPhoneNumber(), must be confirmed by VerifySMSSandboxPhoneNumber()
                                  #5-8 digits
SMS_SANDBOX_RECEIVER.LanguageCode #Language used with the token's SMS
                                  #Among "en-US|GB", "es-ES|419", "de-DE", "fr-CA|FR", "it-IT", "ja-JP", "pt-BR", "kr-KR", "zh-CN|TW"
SMS_SANDBOX_RECEIVER.Status       #'Pending' or 'Verified'. Whether confirmed with token

                                  ┌──────────────────────────────┐
                                  │   SMS SANDBOX RECEIVER API   │
                                  └──────────────────────────────┘

CreateSMSSandboxPhoneNumber()     #Req: SMS_SANDBOX_RECEIVER
                                  #  - no Status
                                  #Res: empty
VerifySMSSandboxPhoneNumber()     #Req: SMS_SANDBOX_RECEIVER
                                  #  - only PhoneNumber
                                  #  - only one with OneTimePassword
                                  #Res: empty
ListSMSSandboxPhoneNumbers()      #Req: empty
                                  #Res: PhoneNumbers SMS_SANDBOX_RECEIVER_ARR
                                  #  - no LanguageCode
DeleteSMSSandboxPhoneNumber()     #Req: SMS_SANDBOX_RECEIVER
                                  #  - only PhoneNumber
                                  #Res: empty

                                  ┌──────────────────┐
                                  │   APP ENDPOINT   │
                                  └──────────────────┘

SUB.Protocol                      #'application'. Send as a mobile|desktop push notification
SUB.Endpoint
APP_ENDPOINT.EndpointArn          #'APP_ENDPOINT_ARN'
MESSAGE.TargetArn                 #'APP_ENDPOINT_ARN', specified instead of MESSAGE.TopicArn
                                  #I.e. send a MESSAGE without using a TOPIC
APP_ENDPOINT.Attributes           #APP_ENDPOINT_ATTRS

APP_ENDPOINT                      #Mobile device
                                  #Creating is idempotent

APP_ENDPOINT_ATTRS.Enabled        #BOOL. False until 'APP_TOKEN' set
APP_ENDPOINT.Token                #'APP_TOKEN'

APP_ENDPOINT.CustomUserData       #STR. Arbitrary data???
                                  #Max 2KB

APP_PLATFORM_ATTRS
 .EventEndpointCreated            #'TOPIC_ARN'. Send MESSAGEs on CreatePlatformEndpoint()
APP_PLATFORM_ATTRS
 .EventEndpointUpdated            #'TOPIC_ARN'. Send MESSAGEs on SetEndpointAttributes()
APP_PLATFORM_ATTRS
 .EventEndpointDeleted            #'TOPIC_ARN'. Send MESSAGEs on DeleteEndpoint()
APP_PLATFORM_ATTRS
 .EventDeliveryFailure            #'TOPIC_ARN'. Send MESSAGEs on push failure

                                  ┌──────────────────────┐
                                  │   APP ENDPOINT API   │
                                  └──────────────────────┘

CreatePlatformEndpoint()          #Req: APP_ENDPOINT
                                  #  - no EndpointArn
                                  #Res: APP_ENDPOINT
                                  #  - only EndpointArn
SetEndpointAttributes()           #Req: APP_ENDPOINT
                                  #  - only EndpointArn, Attributes
                                  #  - CustomUserData|Token -> Attributes.*
                                  #Res: empty
ListEndpointsByPlatformApplication#Req: APP_ENDPOINT
 ()                               #  - only PlatformApplicationArn
                                  #Res: Endpoints APP_ENDPOINT_ARR
                                  #  - only EndpointArn, Attributes
GetEndpointAttributes()           #Req: APP_ENDPOINT
                                  #  - only Attributes
                                  #  - CustomUserData|Token -> Attributes.*
                                  #Res: empty
DeleteEndpoint()                  #Req: APP_ENDPOINT
                                  #  - only EndpointArn
                                  #Res: empty

                                  ┌──────────────────┐
                                  │   APP PLATFORM   │
                                  └──────────────────┘

APP_PLATFORM                      #Push notification settings
APP_ENDPOINT|APP_PLATFORM
 .PlatformApplicationArn          #'APP_PLATFORM_ARN'. 'arn:aws:sns:REGION:ACCOUNT_ID:app/APP_PLATFORM_TYPE/APP_PLATFORM'
APP_PLATFORM.Name                 #'APP_PLATFORM'
                                  #Max 256 chars, [:alnum:]_-.
APP_PLATFORM.Attributes           #APP_PLATFORM_ATTRS

APP_PLATFORM.Platform             #'APP_PLATFORM_TYPE'. Listed below
APP_PLATFORM_ATTRS
 .AuthenticationMethod            #Same???

APP_PLATFORM_ATTRS
 .PlatformPrincipal               #APP_PLATFORM_TYPE-specific developer ID
APP_PLATFORM_ATTRS
 .PlatformCredential              #APP_PLATFORM_TYPE-specific developer secret key

                                  ┌──────────────────────────┐
                                  │   APP PLATFORM ANDROID   │
                                  └──────────────────────────┘

APP_PLATFORM.Platform             #'GCM' (Firebase Cloud Messaging)
                                  #For Android|iOS or web app, using Google Cloud
APP_PLATFORM_ATTRS
 .PlatformPrincipal               #None
APP_PLATFORM_ATTRS                #Either:
 .PlatformCredential              #  - API key
                                  #  - JSON private key file

                                  ┌────────────────────────┐
                                  │   APP PLATFORM CHINA   │
                                  └────────────────────────┘

APP_PLATFORM.Platform             #'Baidu' (Baidu Cloud Push)
                                  #For Android in China
APP_PLATFORM_ATTRS
 .PlatformPrincipal               #Public API key
APP_PLATFORM_ATTRS
 .PlatformCredential              #Secret key

                                  ┌────────────────────────┐
                                  │   APP PLATFORM APPLE   │
                                  └────────────────────────┘

APP_PLATFORM.Platform             #'APNS[_SANDBOX]' (Apple Push Notification Service)
                                  #For iOS and Mac OS X
APP_PLATFORM_ATTRS                #Either:
 .PlatformPrincipal               #  - SSL certificate
                                  #  - signing key ID
APP_PLATFORM_ATTRS                #If using PlatformPrincipal:
 .PlatformCredential              #  - SSL certificate: private key
                                  #  - signing key ID: signing key

APP_PLATFORM_ATTRS
 .ApplePlatformTeamID             #STR. Apple developer account team ID
APP_PLATFORM_ATTRS
 .ApplePlatformBundleID           #STR. iOS app ID
APP_PLATFORM_ATTRS
 .AppleCertificateExpiryDate      #DATE_NUM of SSL certificate expiration

                                  ┌────────────────────────────────┐
                                  │   APP PLATFORM WINDOWS PHONE   │
                                  └────────────────────────────────┘

APP_PLATFORM.Platform             #'MPNS' (Microsoft Push Notification Service)
                                  #For Windows Phone
APP_PLATFORM_ATTRS
 .PlatformPrincipal               #TLS certificate
APP_PLATFORM_ATTRS
 .PlatformCredential              #Private key

                                  ┌──────────────────────────────────┐
                                  │   APP PLATFORM WINDOWS DESKTOP   │
                                  └──────────────────────────────────┘

APP_PLATFORM.Platform             #'WNS' (Windows Push Notification Services)
                                  #For Windows desktop
APP_PLATFORM_ATTRS
 .PlatformPrincipal               #Package Security Identifier
APP_PLATFORM_ATTRS
 .PlatformCredential              #Secret key

                                  ┌──────────────────────────┐
                                  │   APP PLATFORM FIRE OS   │
                                  └──────────────────────────┘

APP_PLATFORM.Platform             #'ADM' (Amazon Device Messaging)
                                  #For Fire OS
APP_PLATFORM_ATTRS
 .PlatformPrincipal               #Client ID
APP_PLATFORM_ATTRS
 .PlatformCredential              #Client secret

                                  ┌──────────────────────┐
                                  │   APP PLATFORM API   │
                                  └──────────────────────┘

CreatePlatformApplication()       #Req: APP_PLATFORM
                                  #  - no PlatformApplicationArn
                                  #  - Attributes: no AppleCertificateExpiryDate, AuthenticationMethod,
                                  #    *FeedbackRoleArn, SuccessFeedbackSampleRate
                                  #Res: APP_PLATFORM
                                  #  - only PlatformApplicationArn
SetPlatformApplicationAttributes()#Req: APP_PLATFORM
                                  #  - only PlatformApplicationArn, Attributes
                                  #  - Attributes: no AppleCertificateExpiryDate, AuthenticationMethod,
                                  #    *FeedbackRoleArn, SuccessFeedbackSampleRate
                                  #Res: empty
ListPlatformApplications()        #Req: empty
                                  #Res: PlatformApplications APP_PLATFORM_ARR
                                  #  - only PlatformApplicationArn, Attributes
GetPlatformApplicationAttributes()#Req: APP_PLATFORM
                                  #  - only PlatformApplicationArn
                                  #Res: APP_PLATFORM
                                  #  - only Attributes: no PlatformCredential, PlatformPrincipal
DeletePlatformApplication()       #Req: APP_PLATFORM
                                  #  - only PlatformApplicationArn
                                  #Res: empty
