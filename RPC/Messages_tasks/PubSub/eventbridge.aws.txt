
                                  ┏━━━━━━━━━━━━━━━━━━━━━━━┓
                                  ┃   EVENTBRIDGE RULES   ┃
                                  ┗━━━━━━━━━━━━━━━━━━━━━━━┛

VERSION ==>                       #2024-12-20

TODO:
  - already read:
     - Event Buses:
        - Events:
           - AWS service events:
              - Event metadata

                                  ┌─────────┐
                                  │   API   │
                                  └─────────┘

SERVICE_DOMAIN                    #'events.REGION.amazonaws.com'

FORMAT ==>                        #Uses X-Amz-Target: AWSEvents.ACTION [C]
                                  #JSON request|response body

REQ_ID                            #x-amzn-RequestId [S]

PAGINATION ==>                    #Uses REQ.Limit (def|max: 100) + REQ|RES.NextToken
                                  #ListEndpoints: named REQ.MaxResults instead
                                  #No pagination: ListTagsForResource()

EVENT CONSISTENCY ==>             #Writes take a short time to propagate

                                  ┌─────────┐
                                  │   BUS   │
                                  └─────────┘

BUS                               #Group that receives EVENTs and sends them to targets
                                  #Cannot delete if it has some RULEs
                                  #Types of BUSs|EVENTs:
                                  #  - default: AWS SERVICEs (see below)
                                  #  - custom
                                  #  - partner: AWS registered partner (below)

BUS.Arn                           #'BUS_ARN'. 'arn:aws:events:REGION:ACCOUNT_ID:event-bus/BUS'
BUS.Name                          #'BUS'.
                                  #Only [:alnum:]-_., max 256 chars
BUS.Description                   #STR. Max 512 chars
BUS.CreationTime                  #DATE_NUM
BUS.LastModifiedTime              #DATE_NUM

BUS.DeadLetterConfig.Arn          #'SQS_QUEUE_ARN' to send EVENT when it failed???
BUS.KmsKeyIdentifier              #'KMS_KEY_ARN|MID' (def: AWS managed). Encrypt EVENTs at rest

                                  ┌─────────────┐
                                  │   BUS API   │
                                  └─────────────┘

CreateEventBus()                  #Req: BUS
                                  #  - no Arn, *Time, Policy
                                  #  - only one with EventSourceName, Tags
                                  #Res: BUS
                                  #  - Arn -> EventBusArn
                                  #  - no Name, *Time, Policy
UpdateEventBus()                  #Req: BUS
                                  #  - no Arn, *Time, Policy
                                  #Res: BUS
                                  #  - no *Time, Policy
ListEventBuses()                  #Req: BUS
                                  #  - only Name -> NamePrefix
                                  #Res: EventBuses BUS_ARR
                                  #  - no DeadLetterConfig, KmsKeyIdentifier
DescribeEventBus()                #Req: BUS
                                  #  - only Arn + Name -> Name
                                  #Res: BUS
DeleteEventBus()                  #Req: BUS
                                  #  - only Name
                                  #Res: empty

                                  ┌─────────────┐
                                  │   DEFAULT   │
                                  └─────────────┘

DEFAULT BUS ==>                   #BUS with name 'default'
                                  #Already created, cannot be deleted
                                  #Receives EVENTs from AWS SERVICEs
                                  #  - from CloudTrail???
                                  #Def 'BUS' with DescribeEventBus()

CUSTOM BUS ==>                    #Other BUSs receiving EVENTs from PutEvents() calls

                                  ┌──────────────────┐
                                  │   DEFAULT AUTH   │
                                  └──────────────────┘

COND_KEY events:
 detail.userIdentity.principalId  #DETAIL.userIdentity.principalId. For PutRule()
COND_KEY
 events:detail.eventTypeCode      #DETAIL.eventTypeCode. For PutRule()
COND_KEY events:detail.service    #DETAIL.service. For PutRule()

                                  ┌────────────┐
                                  │   SOURCE   │
                                  └────────────┘

SOURCE                            #PARTNER sending EVENTs to a BUS
                                  #First, PARTNER's ACCOUNT:
                                  #  - creates|deletes the SOURCE
                                  #     - using *PartnerEventSource*()
                                  #Then, BUS's ACCOUNT:
                                  #  - activates the SOURCE by creating a "matching BUS"
                                  #     - i.e. CreateEventBus() with BUS.EventSourceName set to same 'SOURCE'
                                  #  - can enable|disable the SOURCE
                                  #     - using *EventSource*()
SOURCE.Arn                        #'SOURCE_ARN'. 'arn:aws:events:REGION::event-source/SOURCE'
SOURCE.CreationTime               #DATE_NUM

SOURCE.Name                       #'SOURCE'. Is 'aws.partner/PARTNER/EVENT_NAMESPACE/EVENT'
                                  #Must be [:alnum:]-. and max 256 chars
PARTNER                           #AWS registered partner, i.e. known identifier
EVENT_NAMESPACE                   #Meant only to namespace|categorize 'EVENT' name
EVENT                             #Name must be unique to this BUS
                                  #E.g. including its ACCOUNT_ID or PARTNER-specific user ID
                                  #That's because neither 'BUS' name nor ACCOUNT_ID is in 'SOURCE_ARN'

SOURCE.CreatedBy                  #'PARTNER'
SOURCE.Account                    #'ACCOUNT_ID' of BUS (not of PARTNER)

SOURCE.State                      #Can be:
                                  #  - 'PENDING': either:
                                  #     - no matching BUS yet
                                  #     - SOURCE disabled with DeactivateEventSource()
                                  #  - 'ACTIVE': matching BUS, and not disabled
                                  #  - 'DELETED': deleted by PARTNER, i.e. by DeletePartnerEventSource()
SOURCE.ExpirationTime             #DATE_NUM. If SOURCE.State PENDING for 2 weeks, SOURCE is deleted

BUS.EventSourceName               #'SOURCE'. Must be set for a partner BUS
                                  #'BUS' name must be same as 'SOURCE'

                                  ┌────────────────┐
                                  │   SOURCE API   │
                                  └────────────────┘

ActivateEventSource()             #Req: SOURCE
                                  #  - only Name
                                  #Res: empty
ListEventSources()                #Req: SOURCE
                                  #  - only Name -> NamePrefix
                                  #Res: EventSources SOURCE_ARR
                                  #  - no Account
DescribeEventSource()             #Req: SOURCE
                                  #  - only Name
                                  #Res: SOURCE
                                  #  - no Account
DeactivateEventSource()           #Req: SOURCE
                                  #  - only Name
                                  #Res: empty

CreatePartnerEventSource()        #Req: SOURCE
                                  #  - only Name, Account
                                  #Res: SOURCE
                                  #  - only Arn -> EventSourceArn
ListPartnerEventSources()         #Req: SOURCE
                                  #  - only Name -> NamePrefix
                                  #Res: PartnerEventSources SOURCE_ARR
                                  #  - only Arn, Name
ListPartnerEventSourceAccounts()  #Req: SOURCE
                                  #  - only Arn -> EventSourceArn
                                  #Res: PartnerEventSourceAccounts SOURCE_ARR
                                  #  - no Arn, Name, CreatedBy
DescribePartnerEventSource()      #Req: SOURCE
                                  #  - only Name
                                  #Res:SOURCE
                                  #  - only Arn, Name
DeletePartnerEventSource()        #Req: SOURCE
                                  #  - only Name, Account
                                  #Res: empty

                                  ┌───────────┐
                                  │   EVENT   │
                                  └───────────┘

EVENTS.Entries                    #EVENT_ARR
                                  #Max 10 items (20 if PARTNER)

EVENTS_RES.FailedEntryCount       #NUM of failed EVENT_RESs
EVENTS_RES.Entries                #EVENT_RES_ARR
                                  #Same length and order as EVENTS.Entries
EVENT_RES.EventId                 #'EVENT_MID', if successful
EVENT_RES.ErrorCode               #'CODE', if failed
EVENT_RES.ErrorMessage            #'MESSAGE', if failed

EVENT                             #Main information being exchanged
                                  #PutPartnerEvents() is used by PARTNERs, else PutEvents() is used
                                  #Max 256KB
EVENT.EventBusName                #'BUS[_ARN]' (def: 'default')
EVENT.Time                        #DATE_NUM (def: now)

EVENT.Detail                      #'DETAIL_JSON'. Main payload
                                  #Can be anything. Required, but can be '{}'
                                  #Max 1000 depth levels
EVENT.DetailType                  #'EVENT_TYPE'. Payload type
                                  #Can be anything. Required
EVENT.Source                      #'EVENT_SOURCE'. Who sent the payload
                                  #With AWS SERVICEs, this is 'aws.SERVICE'
                                  #With PARTNER, this is 'SOURCE'
                                  #Else, can be anything
                                  #  - recommended: dot-delimited list
                                  #  - e.g. 'com.COMPANY.APP'
                                  #Required
EVENT.Resources                   #'ARN'_ARR (def: none) of related RESOURCEs
                                  #Max 2e3 items

EVENT.TraceHeader                 #STR. X-Ray header

GEVENT                            #Internal representation of an EVENT
GEVENT.version                    #Always '0' (def)
GEVENT.account                    #'ACCOUNT_ID'
GEVENT.region                     #'REGION'
GEVENT.id                         #'EVENT_MID', generated by API
GEVENT.time                       #EVENT.Time but as 'DATE'
GEVENT.detail|detail-type|source
 |resources                       #EVENT.*

                                  ┌────────────────┐
                                  │   EVENT AUTH   │
                                  └────────────────┘

COND_KEY events:detail-type       #EVENT.DetailType. For PutEvents() and PutRule()
COND_KEY events:source            #EVENT.Source. For PutEvents() and PutRule()
COND_KEY events:eventBusInvocation#'BOOL'. Whether PutEvents() was called by a cross-ACCOUNT call from a TARGET???. For PutEvents()

                                  ┌───────────────┐
                                  │   EVENT API   │
                                  └───────────────┘

PutEvents()                       #Req: EVENTS
                                  #Res: EVENTS_RES
PutPartnerEvents()                #Req: EVENTS
                                  #  - no EndpointId, Entries[*].EventBusName|TraceHeader
                                  #Res: EVENTS_RES

                                  ┌──────────┐
                                  │   RULE   │
                                  └──────────┘

RULE                              #Filters, schedules and redirects EVENTs
                                  #Should be careful about infinite loops, for cost reasons
                                  #Cannot delete if there are some TARGETs
                                  #Delete is idempotent
RULE.Arn                          #'RULE_ARN'. 'arn:aws:events:REGION:ACCOUNT_ID:rule[/BUS]/RULE'
                                  #'/BUS' is omitted for default BUS
RULE.Name                         #'RULE'
                                  #Max 64 chars, [:alnum:].-
RULE.Description                  #STR. Max 512 chars

RULE.EventBusName                 #In input: 'BUS[_ARN]' (def: default BUS)
                                  #In output: 'BUS'

RULE.CreatedBy                    #'ACCOUNT_ID' which created the RULE
                                  #Might differ from RULE's ACCOUNT, if a cross-ACCOUNT PutRule() was done

RULE.ManagedBy                    #'SERVICE'. If RULE created by an AWS SERVICE (more info in DescribeRule())
RULE.Force                        #BOOL. If false (def), do not allow deleting SERVICE-managed RULE

RULE.State                        #One of:
                                  #  - 'DISABLED'
                                  #  - 'ENABLED[_WITH_ALL_CLOUDTRAIL_MANAGEMENT_EVENTS]'
                                  #     - [not] including management EVENTs from CloudTrail

RULE.ScheduleExpression           #STR. Trigger that EVENT regularly
                                  #Can be:
                                  #  - 'cron(...)'
                                  #  - 'rate(...)'
                                  #Max 256 chars
                                  #(more info in ListRules())

                                  ┌───────────────┐
                                  │   RULE AUTH   │
                                  └───────────────┘

RULE.RoleArn                      #'ROLE_ARN' assumed by the RULE
                                  #Def: use current PRINCIPAL

COND_KEY events:creatorAccount    #RULE.CreatedBy. For Put|Enable|Disable|Delete|DescribeRule(), Put|RemoveTargets|ListTargetsByRule(), *Tag*()
COND_KEY events:ManagedBy         #RULE.ManagedBy. For Put|Enable|Disable|DeleteRule() and Put|RemoveTargets()

                                  ┌──────────────┐
                                  │   RULE API   │
                                  └──────────────┘

PutRule()                         #Req: RULE
                                  #  - only one with Tags
                                  #  - no Arn, CreatedBy, ManagedBy
                                  #Res: RULE
                                  #  - only Arn -> RuleArn
                                  #Either creates or replaces (does not patch)
EnableRule()                      #Req: RULE
                                  #  - only Name, EventBusName
                                  #Res: empty
DisableRule()                     #Req:
                                  #  - only Name, EventBusName
                                  #Res: empty
ListRules()                       #Req: RULE
                                  #  - only Name -> NamePrefix
                                  #  - only EventBusName
                                  #Res: Rules RULE_ARR
                                  #  - no CreatedBy
DescribeRule()                    #Req: RULE
                                  #  - only Name, EventBusName
                                  #Res: RULE
DeleteRule()                      #Req: RULE
                                  #  - only Name, EventBusName
                                  #  - only one with Force
                                  #Res: empty

                                  ┌─────────────┐
                                  │   PATTERN   │
                                  └─────────────┘

RULE.EventPattern                 #'PATTERN_JSON'. Ignore EVENTs which do not match
                                  #Matched against GEVENT shape
                                  #Required unless RULE.ScheduleExpression is set (can both be set)
                                  #Max 4KB

                                  ┌──────────────────┐
                                  │   PATTERN TEST   │
                                  └──────────────────┘

TEST_EVENT_REQ.Event              #'GEVENT_JSON'
                                  #All GEVENT.* must be set, except GEVENT.version|detail which are optional
TEST_EVENT_REQ.EventPattern       #'PATTERN_JSON'

TEST_EVENT_RES.Result             #BOOL. Whether PATTERN matches DETAIL

                                  ┌──────────────────────┐
                                  │   PATTERN TEST API   │
                                  └──────────────────────┘

TestEventPattern()                #Req: TEST_EVENT_REQ
                                  #Res: TEST_EVENT_RES

                                  ┌────────────┐
                                  │   TARGET   │
                                  └────────────┘

TARGETS.Targets                   #TARGET_ARR (no Rule|EventBusNamee)
                                  #Max 10 entries
TARGETS.Rule|EventBusName         #TARGET.*
TARGETS_RES
 .FailedEntryCount|Entries        #Same as EVENTS_RES except EventId -> TargetId

TARGET                            #RESOURCEs triggered where EVENTs are emitted
                                  #EVENTs are not stored by EventBridge, they only trigger TARGETs
                                  #Max 5 per RULE
TARGET.Arn                        #'ARN', among:
                                  #  - 'arn:aws:events:REGION:ACCOUNT_ID:target/TARGET' with TARGET one of:
                                  #     - create-snapshot: EBS CreateSnapshot()
                                  #     - stop-instance: EC2 StopInstances()
                                  #     - terminate-instance: EC2 TerminateInstances()
                                  #     - reboot-instance: EC2 RebootInstances()
                                  #  - others???
TARGET.Id                         #STR (more info in ListTargetsByRule(), RemoveTargets())
TARGET.Rule                       #STR
TARGET.EventBusName               #STR
TARGET.DeadLetterConfig.Arn       #STR
TARGET.Input                      #STR
TARGET.InputPath                  #STR
TARGET.Force                      #BOOL

TARGET.InputTransformer           #INPUT_TRANSFORM
INPUT_TRANSFORM.InputPathsMap.STR #STR
INPUT_TRANSFORM.InputTemplate     #STR

TARGET.RetryPolicy                #RETRY_POLICY
RETRY_POLICY
 .MaximumEventAgeInSeconds        #NUM
RETRY_POLICY.MaximumRetryAttempts #NUM

TARGET.SqsParameters              #SQS_TARGET
SQS_TARGET.MessageGroupId         #STR

TARGET.HttpParameters             #HTTP_TARGET
HTTP_TARGET.PathParameterValues   #STR_ARR
HTTP_TARGET
 .QueryStringParameters.PARAM     #STR
HTTP_TARGET
 .HeaderParameters.HEADER         #STR

TARGET.AppSyncParameters          #
TARGET.BatchParameters            #
TARGET.EcsParameters              #
TARGET.KinesisParameters          #
TARGET.RedshiftDataParameters     #
TARGET.RunCommandParameters       #
TARGET.SageMakerPipelineParameters#

                                  ┌─────────────────┐
                                  │   TARGET AUTH   │
                                  └─────────────────┘

TARGET.RoleArn                    #'ROLE_ARN'. Must be used instead of RULE.RoleArn if both:
                                  #  - cross-ACCOUNT
                                  #  - access granted to ORG, not ACCOUNT

COND_KEY events:TargetArn         #TARGET.Arn

                                  ┌────────────────┐
                                  │   TARGET API   │
                                  └────────────────┘

PutTargets()                      #Req: TARGETS
                                  #Res: TARGETS_RES
ListTargetsByRule()               #Req: TARGET
                                  #  - only Rule, only EventBusName
                                  #Res: Targets TARGET_ARR
                                  #  - no Rule, EventBusName
ListRuleNamesByTarget()           #Req: TARGET
                                  #  - only Arn -> TargetArn
                                  #  - only EventBusName
                                  #Res: TARGET
                                  # - Rule STR -> RuleNames STR_ARR
RemoveTargets()                   #Req: TARGET
                                  #  - only EventBusName, Rule
                                  #  - only Id STR -> Id STR_ARR
                                  #  - only one with Force
                                  #Res: TARGETS_RES

                                  ┌─────────────────┐
                                  │   DESTINATION   │
                                  └─────────────────┘

DESTINATION.ApiDestinationArn     #'DESTINATION_ARN'. 'arn:aws:events:REGION:ACCOUNT_ID:api-destination/DESTINATION'
DESTINATION.ApiDestinationState   #'DESTINATION'
DESTINATION.ConnectionArn         #STR (more info with CreateApiDestination())
DESTINATION.CreationTime          #DATE_NUM
DESTINATION.Description           #STR
DESTINATION.HttpMethod            #STR
DESTINATION.InvocationEndpoint    #STR
DESTINATION
 .InvocationRateLimitPerSecond    #NUM (more info with DescribeApiDestination())
DESTINATION.LastModifiedTime      #DATE_NUM
DESTINATION.Name                  #STR

                                  ┌──────────────────────┐
                                  │   DESTINATION AUTH   │
                                  └──────────────────────┘

PACTION
 events:InvokeApiDestination      #Allows calling DESTINATION

                                  ┌─────────────────────┐
                                  │   DESTINATION API   │
                                  └─────────────────────┘

CreateApiDestination()            #Req: DESTINATION
                                  #  - no ApiDestination*, *Time
                                  #Res: DESTINATION
                                  #  - only ApiDestination*, *Time
UpdateApiDestination()            #Req: DESTINATION
                                  #  - no ApiDestination*, *Time
                                  #Res: DESTINATION
                                  #  - only ApiDestination*, *Time
ListApiDestinations()             #Req: DESTINATION
                                  #  - only Name -> NamePrefix
                                  #  - only ConnectionArn
                                  #Res: ApiDestinations DESTINATION_ARR
DescribeApiDestination()          #Req: DESTINATION
                                  #  - only Name
                                  #Res: DESTINATION
DeleteApiDestination()            #Req: DESTINATION
                                  #  - only Name
                                  #Res: empty

                                  ┌──────────────┐
                                  │   ENDPOINT   │
                                  └──────────────┘

ENDPOINT                          #See "EventBusName" in https://docs.aws.amazon.com/eventbridge/latest/APIReference/API_PutEventsRequestEntry.html???
ENDPOINT.Arn                      #'ENDPOINT_ARN'. 'arn:aws:events:REGION:ACCOUNT_ID:endpoint/ENDPOINT'
ENDPOINT.Name                     #'ENDPOINT' (more info with CreateEndpoint())
ENDPOINT.Description              #STR
ENDPOINT.CreationTime             #DATE_NUM
ENDPOINT.LastModifiedTime         #DATE_NUM

ENDPOINT.EndpointId               #'ENDPOINT_SUBDOMAIN'
                                  #Only [:alnum:]-, max 50 chars
                                  #Must include exactly one dot
ENDPOINT.EndpointUrl              #'https://ENDPOINT_SUBDOMAIN.endpoints.event.amazonaws.com' (more info with ListEndpoints())

ENDPOINT.EventBuses[*].EventBusArn#STR (more info with CreateEndpoint())
ENDPOINT.ReplicationConfig.State  #STR (more info with CreateEndpoint())
ENDPOINT.RoleArn                  #STR
ENDPOINT.State                    #STR
ENDPOINT.StateReason              #STR
ENDPOINT.HomeRegion               #'REGION'

ENDPOINT.RoutingConfig
 .FailoverConfig                  #FAILOVER_CONF
FAILOVER_CONF.Primary.HealthCheck #STR
FAILOVER_CONF.Secondary.Route     #STR

EVENTS.EndpointId                 #'ENDPOINT_SUBDOMAIN'

                                  ┌───────────────────┐
                                  │   ENDPOINT AUTH   │
                                  └───────────────────┘

COND_KEY events:EventBusArn       #'BUS_ARN'. With CreateEndpoint|UpdateEndpoint()

                                  ┌──────────────────┐
                                  │   ENDPOINT API   │
                                  └──────────────────┘

CreateEndpoint()                  #Req: ENDPOINT
                                  #  - no *Time, StateReason
                                  #  - no EndpointId, EndpointUrl
                                  #  - no State
                                  #  - no Arn
                                  #Res: ENDPOINT
                                  #  - no *Time, StateReason
                                  #  - no Description
                                  #  - no EndpointId, EndpointUrl
UpdateEndpoint()                  #Req: ENDPOINT
                                  #  - no *Time, StateReason
                                  #  - no EndpointId, EndpointUrl
                                  #  - no State
                                  #  - no Arn
                                  #Res: ENDPOINT
                                  #  - no *Time, StateReason
                                  #  - no Description
ListEndpoints()                   #Req: ENDPOINT
                                  #  - only Name -> NamePrefix
                                  #  - only HomeRegion
                                  #Res: Endpoints ENDPOINT_ARR
                                  #  - no HomeRegion
DescribeEndpoint()                #Req: ENDPOINT
                                  #  - only Name, HomeRegion
                                  #Res: ENDPOINT
                                  #  - no HomeRegion
DeleteEndpoint()                  #Req: ENDPOINT
                                  #  - only Name
                                  #Res: empty

                                  ┌────────────────┐
                                  │   CONNECTION   │
                                  └────────────────┘

CONN.ConnectionArn                #'CONN_ARN'. 'arn:aws:events:REGION:ACCOUNT_ID:connection/CONN'
CONN.Name                         #'CONN'
CONN.AuthorizationType            #STR (more info with CreateConnection())
CONN.ConnectionState              #STR
CONN.CreationTime                 #DATE_NUM
CONN.Description                  #STR
CONN.LastAuthorizedTime           #DATE_NUM
CONN.LastModifiedTime             #DATE_NUM
CONN.SecretArn                    #STR
CONN.StateReason                  #STR

CONN
 .InvocationConnectivityParameters
 .ResourceParameters              #PRIVATE_CONN
CONN_AUTH.ConnectivityParameters
 .ResourceParameters              #PRIVATE_CONN
PRIVATE_CONN
 .ResourceAssociationArn          #STR
PRIVATE_CONN
 .ResourceConfigurationArn        #STR (more info with CreateConnection())

CONN.AuthParameters               #CONN_AUTH

CONN_AUTH.ApiKeyAuthParameters    #CONN_APIKEY
CONN_APIKEY.ApiKeyName            #STR
CONN_APIKEY.ApiKeyValue           #STR

CONN_AUTH.BasicAuthParameters     #CONN_BASIC
CONN_BASIC.Username               #STR
CONN_BASIC.Password               #STR

CONN_AUTH.InvocationHttpParameters#CONN_PARAMS (more info with CreateConnection())

CONN_AUTH.OAuthParameters         #CONN_OAUTH
CONN_OAUTH.AuthorizationEndpoint  #STR
CONN_OAUTH.ClientParameters       #CLIENT_OAUTH
CLIENT_OAUTH.ClientID             #STR
CLIENT_OAUTH.ClientSecret         #STR
CONN_OAUTH.HttpMethod             #STR
CONN_OAUTH.OAuthHttpParameters    #CONN_PARAMS

CONN_PARAMS.BodyParameters        #CONN_PARAM_ARR (different validation than 2 others)
CONN_PARAMS.HeaderParameters      #CONN_PARAM_ARR (different validation than 2 others)
CONN_PARAMS.QueryStringParameters #CONN_PARAM_ARR (different validation than 2 others)
CONN_PARAM.Key                    #STR
CONN_PARAM.Value                  #STR
CONN_PARAM.IsValueSecret          #BOOL

                                  ┌─────────────────────┐
                                  │   CONNECTION AUTH   │
                                  └─────────────────────┘

PACTION actions
 :RetrieveConnectionCredentials   #Allow reading CONN.SecretArn???

                                  ┌────────────────────┐
                                  │   CONNECTION API   │
                                  └────────────────────┘

CreateConnection()                #Req: CONN
                                  #  - no Connection*, *Time, SecretArn, StateReason
                                  #  - no PRIVATE_CONN.ResourceAssociationArn
                                  #Res: CONN
                                  #  - only Connection*, CreationTime, LastModifiedTime
UpdateConnection()                #Req: CONN
                                  #  - no Connection*, *Time, SecretArn, StateReason
                                  #  - no PRIVATE_CONN.ResourceAssociationArn
                                  #Res: CONN
                                  #  - only Connection*, *Time
ListConnections()                 #Req: CONN
                                  #  - only Name -> NamePrefix
                                  #  - only ConnectionState
                                  #Res: CONN
                                  #  - no *Parameters, Description, SecretArn
DescribeConnection()              #Req: CONN
                                  #  - only Name
                                  #Res: CONN
                                  #  - no CONN_APIKEY.ApiKeyValue, CONN_BASIC.Password, CLIENT_OAUTH.ClientSecret
DeauthorizeConnection()           #Req: CONN
                                  #  - only Name
                                  #Res: CONN
                                  #  - only Connection*, *Time
DeleteConnection()                #Req: CONN
                                  #  - only Name
                                  #Res: CONN
                                  #  - only Connection*, *Time

                                  ┌────────────┐
                                  │   REPLAY   │
                                  └────────────┘

REPLAY.ReplayArn                  #'REPLAY_ARN'. 'arn:aws:events:REGION:ACCOUNT_ID:replay/REPLAY'
REPLAY.ReplayName                 #'REPLAY'
REPLAY.Description                #STR
REPLAY.EventEndTime               #DATE_NUM (more info with StartReplay())
REPLAY.EventLastReplayedTime      #DATE_NUM
REPLAY.EventStartTime             #DATE_NUM (more info with StartReplay(), ListReplays())
REPLAY.ReplayEndTime              #DATE_NUM
REPLAY.ReplayStartTime            #DATE_NUM
REPLAY.EventSourceArn             #STR
REPLAY.State                      #STR
REPLAY.StateReason                #STR

REPLAY.Destination                #REPLAY_DESTINATION
REPLAY_DESTINATION.Arn            #STR
REPLAY_DESTINATION.FilterArns     #STR_ARR

                                  ┌────────────────┐
                                  │   REPLAY API   │
                                  └────────────────┘

StartReplay()                     #Req: REPLAY
                                  #  - no ReplayArn
                                  #  - no EventLastReplayedTime, Replay*Time, State*
                                  #Res: REPLAY
                                  #  - only ReplayArn, ReplayStartTime, State*
ListReplays()                     #Req: REPLAY
                                  #  - only ReplayName -> NamePrefix
                                  #  - only EventSourceArn, State
                                  #Res: Replays REPLAY_ARR
                                  #  - no ReplayArn
                                  #  - no Description, Destination
DescribeReplay()                  #Req: REPLAY
                                  #  - only ReplayName
                                  #Res: REPLAY
CancelReplay()                    #Req: REPLAY
                                  #  - only ReplayName
                                  #Res: REPLAY
                                  #  - only ReplayArn, State*

                                  ┌─────────────┐
                                  │   ARCHIVE   │
                                  └─────────────┘

ARCHIVE                           #
                                  #Not if BUS.KmsKeyIdentifier set
ARCHIVE.ArchiveArn                #'ARCHIVE_ARN'. 'arn:aws:events:REGION:ACCOUNT_ID:archive/ARCHIVE'
ARCHIVE.ArchiveName               #'ARCHIVE'
ARCHIVE.CreationTime              #DATE_NUM
ARCHIVE.Description               #STR
ARCHIVE.EventCount                #NUM
ARCHIVE.EventPattern              #STR
ARCHIVE.EventSourceArn            #STR (more info with ListArchives())
ARCHIVE.RetentionDays             #NUM (more info with CreateArchive(), ListArchives())
ARCHIVE.SizeBytes                 #NUM
ARCHIVE.State                     #STR
ARCHIVE.StateReason               #STR

                                  ┌─────────────────┐
                                  │   ARCHIVE API   │
                                  └─────────────────┘

CreateArchive()                   #Req: ARCHIVE
                                  #  - no ArchiveArn, CreationTime, State*
                                  #  - no EventCount, SizeBytes
                                  #Res: ARCHIVE
                                  #  - only ArchiveArn, CreationTime, State*
UpdateArchive()                   #Req: ARCHIVE
                                  #  - no ArchiveArn, CreationTime, State*
                                  #  - no EventCount, SizeBytes
                                  #  - no EventSourceArn
                                  #Res: ARCHIVE
                                  #  - only ArchiveArn, CreationTime, State*
ListArchives()                    #Req: ARCHIVE
                                  #  - only ArchiveName -> NamePrefix
                                  #  - only EventSourceArn, State
                                  #Res: Archives ARCHIVE_ARR
                                  #  - no ArchiveArn, Description, EventPattern
DescribeArchive()                 #Req: ARCHIVE
                                  #  - only ArchiveName
                                  #Res: ARCHIVE
DeleteArchive()                   #Req: ARCHIVE
                                  #  - only ArchiveName
                                  #Res: empty

                                  ┌────────────────┐
                                  │   PERMISSION   │
                                  └────────────────┘

BUS.Policy                        #IAM 'POLICY'
                                  #Resource-level POLICY on BUS
                                  #Possible PACTIONs: PutEvents() (others???)
                                  #Can only use Principal.AWS 'ACCOUNT_ID'

PERMISSION.Action                 #STR
PERMISSION.EventBusName           #STR
PERMISSION.Policy                 #STR
PERMISSION.Principal              #STR
PERMISSION.StatementId            #STR (more info with PutPermission())

PERMISSION.RemoveAllPermissions   #BOOL

PERMISSION.Condition              #PERMISSION_COND_KEY
PERMISSION_COND_KEY.Key           #STR
PERMISSION_COND_KEY.Type          #STR
PERMISSION_COND_KEY.Value         #STR

                                  ┌────────────────────┐
                                  │   PERMISSION API   │
                                  └────────────────────┘

PutPermission()                   #Req: PERMISSION
                                  #Res: empty
RemovePermission()                #Req: PERMISSION
                                  #  - only EventBusName, StatementId
                                  #  - only one with RemoveAllPermissions
                                  #Res: empty

                                  ┌──────────┐
                                  │   TAGS   │
                                  └──────────┘

RESOURCE_TAGS.ResourceARN         #'ARN'
RESOURCE_TAGS.Tags
BUS|RULE.Tags                     #TAG_PAIRS

                                  ┌──────────────┐
                                  │   TAGS API   │
                                  └──────────────┘

TagResource()                     #Req: RESOURCE_TAGS
                                  #Res: empty
ListTagsForResource()             #Req: RESOURCE_TAGS
                                  #  - only ResourceARN
                                  #Res: RESOURCE_TAGS
                                  #  - only Tags
UntagResource()                   #Req: RESOURCE_TAGS
                                  #  - Tags OBJ -> TagKeys 'TAG'_ARR
                                  #Res: empty

                                  ┏━━━━━━━━━━━━━━━━━━━━━━━┓
                                  ┃   EVENTBRIDGE PIPES   ┃
                                  ┗━━━━━━━━━━━━━━━━━━━━━━━┛

VERSION ==>                       #2024-12-20

                                  ┌─────────┐
                                  │   API   │
                                  └─────────┘

SERVICE_DOMAIN                    #'pipes.REGION.amazonaws.com'

FORMAT ==>                        #REST API
                                  #Request:
                                  #  - POST|PUT: path parameters + JSON
                                  #  - GET|DELETE: path parameters + query parameters (camelCase'd)
                                  #Response: JSON

PAGINATION ==>                    #Uses REQ.Limit (def|max: 100) + REQ|RES.NextToken
                                  #No pagination: ListTagsForResource()

                                  ┌──────────┐
                                  │   PIPE   │
                                  └──────────┘

PIPE.Arn                          #'PIPE_ARN'. 'arn:aws:pipes:REGION:ACCOUNT_ID:pipe/PIPE'
PIPE.Name                         #'PIPE'
PIPE.CreationTime                 #DATE_NUM
PIPE.CurrentState                 #STR
PIPE.Description                  #STR
PIPE.DesiredState                 #STR (more info with DescribePipe())
PIPE.KmsKeyIdentifier             #STR (more info with CreatePipe(), UpdatePipe())
PIPE.LastModifiedTime             #DATE_NUM
PIPE.Source                       #STR
PIPE.StateReason                  #STR
PIPE.Target                       #STR

PIPE.Enrichment                   #STR
PIPE.EnrichmentParameters         #ENRICH
ENRICH.InputTemplate              #STR
ENRICH.HttpParameters             #HTTP_TARGET (same as EventBridge Rules???)

PIPE.LogConfiguration             #LOGGING
LOGGING.Level                     #STR
LOGGING.IncludeExecutionData      #STR_ARR (more info with CreatePipe())
LOGGING
 .CloudwatchLogsLogDestination
 .LogGroupArn                     #STR
LOGGING.FirehoseLogDestination
 .DeliveryStreamArn               #STR

LOGGING.S3LogDestination          #S3_LOGGING
S3_LOGGING.BucketName             #STR
S3_LOGGING.BucketOwner            #STR
S3_LOGGING.OutputFormat           #STR
S3_LOGGING.Prefix                 #STR

PIPE.SourceParameters             #PIPE_SRC
PIPE_SRC.FilterCriteria
 .Filters[*].Pattern              #STR

PIPE_SRC.SqsQueueParameters       #PIPE_SRC_SQS
PIPE_SRC_SQS.BatchSize            #NUM
PIPE_SRC_SQS
 .MaximumBatchingWindowInSeconds  #NUM

PIPE_SRC.ActiveMQBrokerParameters #
PIPE_SRC.DynamoDBStreamParameters #
PIPE_SRC.KinesisStreamParameters  #
PIPE_SRC
 .ManagedStreamingKafkaParameters #
PIPE_SRC.RabbitMQBrokerParameters #
PIPE_SRC
 .SelfManagedKafkaParameters      #

PIPE.TargetParameters             #PIPE_DEST
PIPE_DEST.InputTemplate           #STR

PIPE_DEST.LambdaFunctionParameters
 .InvocationType                  #STR

PIPE_DEST.CloudWatchLogsParameters#PIPE_DEST_LOGS
PIPE_DEST_LOGS.LogStreamName      #STR
PIPE_DEST_LOGS.Timestamp          #STR

PIPE_DEST.SqsQueueParameters      #PIPE_DEST_SQS
PIPE_DEST_SQS
 .MessageDeduplicationId          #STR
PIPE_DEST_SQS.MessageGroupId      #STR

PIPE_DEST.StepFunctionStateMachine
 Parameters.InvocationType        #STR

PIPE_DEST
 .EventBridgeEventBusParameters   #PIPE_DEST_BUS
PIPE_DEST_BUS.DetailType          #STR
PIPE_DEST_BUS.EndpointId          #STR
PIPE_DEST_BUS.Resources           #STR_ARR
PIPE_DEST_BUS.Source              #STR
PIPE_DEST_BUS.Time                #STR

PIPE_DEST.HttpParameters          #HTTP_TARGET
HTTP_TARGET.PathParameterValues   #STR_ARR
HTTP_TARGET
 .QueryStringParameters.PARAM     #STR
HTTP_TARGET
 .HeaderParameters.HEADER         #STR

PIPE_DEST.BatchJobParameters      #
PIPE_DEST.EcsTaskParameters       #
PIPE_DEST.KinesisStreamParameters #
PIPE_DEST.RedshiftDataParameters  #
PIPE_DEST
 .SageMakerPipelineParameters     #
PIPE_DEST.TimestreamParameters    #

                                  ┌───────────────┐
                                  │   PIPE AUTH   │
                                  └───────────────┘

PIPE.RoleArn                      #STR

PACTION iam:PassRole              #Required on current PRINCIPAL

                                  ┌──────────────┐
                                  │   PIPE API   │
                                  └──────────────┘

POST /v1/pipes/PIPE               #Req:
CreatePipe()                      #  - no Arn, Name, *Time, CurrentState, StateReason
                                  #Res: PIPE
                                  #  - no Description, *Parameters, KmsKeyIdentifier, LogConfiguration, RoleArn
                                  #  - no Enrichment, Source, StateReason, Target
                                  #  - no Tags
PUT /v1/pipes/PIPE                #Req:
UpdatePipe()                      #  - no Arn, Name, *Time, CurrentState, StateReason
                                  #  - no Source
                                  #  - no SourceParameters:
                                  #     - *Parameters.StartingPosition*
                                  #     - *MQBrokerParameters.QueueName
                                  #     - RabbitMQBrokerParameters.VirtualHost
                                  #     - *KafkaParameters.TopicName|ConsumerGroupID
                                  #     - SelfManagedKafkaParameters.AdditionalBootstrapServers|
                                  #  - no Tags
                                  #Res: PIPE
                                  #  - no Description, *Parameters, KmsKeyIdentifier, LogConfiguration, RoleArn
                                  #  - no Enrichment, Source, StateReason, Target
                                  #  - no Tags
POST /v1/pipes/PIPE/start         #Req: PIPE
StartPipe()                       #  - only Name
                                  #Res: PIPE
                                  #  - no Description, *Parameters, KmsKeyIdentifier, LogConfiguration, RoleArn
                                  #  - no Enrichment, Source, StateReason, Target
                                  #  - no Tags
POST /v1/pipes/PIPE/stop          #Req: PIPE
StopPipe()                        #  - only Name
                                  #Res: PIPE
                                  #  - no Description, *Parameters, KmsKeyIdentifier, LogConfiguration, RoleArn
                                  #  - no Enrichment, Source, StateReason, Target
                                  #  - no Tags
GET /v1/pipes                     #Req: PIPE
ListPipes()                       #  - only CurrentState, DesiredState
                                  #  - only Name|Source|Target -> NamePrefix|SourcePrefix|TargetPrefix
                                  #Res: Pipes PIPE_ARR
                                  #  - no Description, *Parameters, KmsKeyIdentifier, LogConfiguration, RoleArn
                                  #  - no Tags
GET /v1/pipes/PIPE                #Req: PIPE
DescribePipe()                    #  - only Name
                                  #Res: PIPE
DELETE /v1/pipes/PIPE             #Req: PIPE
DeletePipe()                      #  - only Name
                                  #Res: PIPE
                                  #  - no Description, *Parameters, KmsKeyIdentifier, LogConfiguration, RoleArn
                                  #  - no Enrichment, Source, StateReason, Target
                                  #  - no Tags

                                  ┌──────────┐
                                  │   TAGS   │
                                  └──────────┘

RESOURCE_TAGS.resourceArn         #'PIPE_ARN'
RESOURCE_TAGS.tags
PIPE.Tags                         #TAGS_OBJ

                                  ┌──────────────┐
                                  │   TAGS API   │
                                  └──────────────┘

POST /tags/PIPE_ARN               #Req: RESOURCE_TAGS
TagResource()                     #Res: empty
GET /tags/PIPE_ARN                #Req: RESOURCE_TAGS
ListTagsForResource()             #  - only resourceArn
                                  #Res: RESOURCE_TAGS
                                  #  - only tags
DELETE /tags/PIPE_ARN             #Req: RESOURCE_TAGS
UntagResource()                   #  - tags OBJ -> tagKeys 'TAG'_ARR
                                  #Res: empty

                                  ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
                                  ┃   EVENTBRIDGE SCHEDULER   ┃
                                  ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━┛

VERSION ==>                       #2024-12-20

                                  ┌─────────┐
                                  │   API   │
                                  └─────────┘

SERVICE_DOMAIN                    #'scheduler.REGION.amazonaws.com'

FORMAT ==>                        #REST API
                                  #Request:
                                  #  - POST|PUT: path parameters + JSON
                                  #  - GET|DELETE: path parameters + query parameters (camelCase'd)
                                  #Response: JSON

PAGINATION ==>                    #Uses REQ.MaxResults (def|max: 100) + REQ|RES.NextToken
                                  #No pagination: ListTagsForResource()

                                  ┌───────────┐
                                  │   GROUP   │
                                  └───────────┘

GROUP                             #Deleting also deletes the SCHEDULEs
GROUP.Arn                         #'GROUP_ARN'. 'arn:aws:scheduler:REGION:ACCOUNT_ID:schedule-group/GROUP'
GROUP.Name                        #'GROUP'
GROUP.CreationDate                #DATE_NUM
GROUP.LastModificationDate        #DATE_NUM
GROUP.State                       #STR
GROUP.ClientToken                 #STR

                                  ┌────────────────┐
                                  │   GROUP AUTH   │
                                  └────────────────┘

PACTION scheduler:DeleteSchedule  #Required to delete GROUP, if it has any SCHEDULE

                                  ┌───────────────┐
                                  │   GROUP API   │
                                  └───────────────┘

POST /schedule-groups/GROUP       #Req: GROUP
CreateScheduleGroup()             #  - only ClientToken
                                  #  - only one with Tags
                                  #Res: GROUP
                                  #  - only Arn -> ScheduleGroupArn
GET /schedule-groups              #Req: GROUP
ListScheduleGroups()              #  - only Name -> NamePrefix
                                  #Res: ScheduleGroups GROUP_ARR
                                  #  - no ClientToken
GET /schedule-groups/GROUP        #Req: GROUP
GetScheduleGroup()                #  - only Name
                                  #Res: GROUP
                                  #  - no ClientToken
DELETE /schedule-groups/GROUP     #Req: GROUP
DeleteScheduleGroup()             #  - only Name, ClientToken
                                  #Res: empty

                                  ┌──────────────┐
                                  │   SCHEDULE   │
                                  └──────────────┘

SCHEDULE.Arn                      #'SCHEDULE_ARN'. 'arn:aws:scheduler:REGION:ACCOUNT_ID:schedule/GROUP/SCHEDULE'
SCHEDULE.Name                     #'SCHEDULE'
SCHEDULE.Description              #STR
SCHEDULE.CreationDate             #DATE_NUM
SCHEDULE.LastModificationDate     #DATE_NUM
SCHEDULE.GroupName                #'GROUP' (more info with GetSchedule())
SCHEDULE.StartDate                #DATE_NUM
SCHEDULE.EndDate                  #DATE_NUM
SCHEDULE.State                    #STR
SCHEDULE.ActionAfterCompletion    #STR
SCHEDULE.KmsKeyArn                #STR
SCHEDULE.ScheduleExpression       #STR
SCHEDULE
 .ScheduleExpressionTimezone      #STR
SCHEDULE.ClientToken              #STR

SCHEDULE.FlexibleTimeWindow       #SCHEDULE_FLEX
SCHEDULE_FLEX.Mode                #STR
SCHEDULE_FLEX
 .MaximumWindowInMinutes          #NUM

SCHEDULE.Target                   #TARGET
TARGET.Arn                        #STR
TARGET.DeadLetterConfig.Arn       #STR
TARGET.Input                      #STR

TARGET.RetryPolicy                #RETRY_POLICY (same as EventBridge Rules???)
RETRY_POLICY
 .MaximumEventAgeInSeconds        #NUM
RETRY_POLICY.MaximumRetryAttempts #NUM

TARGET.EventBridgeParameters      #TARGET_EVENT_BRIDGE
TARGET_EVENT_BRIDGE.DetailType    #STR
TARGET_EVENT_BRIDGE.Source        #STR

TARGET.SqsParameters
 .MessageGroupId                  #STR

TARGET.KinesisParameters          #
TARGET.SageMakerPipelineParameters#
TARGET.EcsParameters              #

                                  ┌───────────────────┐
                                  │   SCHEDULE AUTH   │
                                  └───────────────────┘

TARGET.RoleArn                    #STR

PACTION iam:PassRole              #Required on current PRINCIPAL

                                  ┌──────────────────┐
                                  │   SCHEDULE API   │
                                  └──────────────────┘

POST /schedules/SCHEDULE          #Req: SCHEDULE
CreateSchedule()                  #  - no Arn, CreationDate, LastModificationDate
                                  #Res: SCHEDULE
                                  #  - only Arn -> ScheduleArn
PUT /schedules/SCHEDULE           #Req: SCHEDULE
UpdateSchedule()                  #  - no Arn, CreationDate, LastModificationDate
                                  #Res: SCHEDULE
                                  #  - only Arn -> ScheduleArn
GET /schedules                    #Req: SCHEDULE
ListSchedules()                   #  - only Name -> NamePrefix
                                  #  - only GroupName, State
                                  #Res: Schedules SCHEDULE_ARR
                                  #  - no ActionAfterCompletion, Description, StartDate|EndDate,
                                  #    FlexibleTimeWindow, KmsKeyArn, ScheduleExpression*
                                  #  - no ClientToken
                                  #  - Target: only Arn
GET /schedules/SCHEDULE           #Req: SCHEDULE
GetSchedule()                     #  - only Name, GroupName
                                  #Res: SCHEDULE
                                  #  - no ClientToken
DELETE /schedules/SCHEDULE        #Req: SCHEDULE
DeleteSchedule()                  #  - only Name, GroupName
                                  #  - only ClientToken
                                  #Res: empty

                                  ┌──────────┐
                                  │   TAGS   │
                                  └──────────┘

RESOURCE_TAGS.ResourceARN         #'GROUP_ARN'
RESOURCE_TAGS.Tags
GROUP.Tags                        #TAG_PAIRS

                                  ┌──────────────┐
                                  │   TAGS API   │
                                  └──────────────┘

POST /tags/GROUP_ARN              #Req: RESOURCE_TAGS
TagResource()                     #Res: empty
GET /tags/GROUP_ARN               #Req: RESOURCE_TAGS
ListTagsForResource()             #  - only ResourceARN
                                  #Res: RESOURCE_TAGS
                                  #  - only Tags
DELETE /tags/GROUP_ARN            #Req: RESOURCE_TAGS
UntagResource()                   #  - Tags OBJ -> TagKeys 'TAG'_ARR
                                  #Res: empty

                                  ┏━━━━━━━━━━━━━━━━━━━━━━━━━┓
                                  ┃   EVENTBRIDGE SCHEMAS   ┃
                                  ┗━━━━━━━━━━━━━━━━━━━━━━━━━┛

VERSION ==>                       #2024-12-20

                                  ┌─────────┐
                                  │   API   │
                                  └─────────┘

SERVICE_DOMAIN                    #'schemas.REGION.amazonaws.com'

FORMAT ==>                        #REST API
                                  #Request:
                                  #  - POST|PUT: path parameters + JSON
                                  #  - GET|DELETE: path parameters + query parameters (camelCase'd)
                                  #Response: JSON

PAGINATION ==>                    #Uses REQ.limit (def|max: 100) + REQ|RES.nextToken
                                  #No pagination: ListTagsForResource()

                                  ┌──────────────┐
                                  │   REGISTRY   │
                                  └──────────────┘

REGISTRY.RegistryArn              #'REGISTRY_ARN'. 'arn:aws:schemas:REGION:ACCOUNT_ID:registry/REGISTRY'
REGISTRY.RegistryName             #'REGISTRY'
REGISTRY.Description              #STR
REGISTRY.Scope                    #'Local' or 'AWS'

                                  ┌──────────────────┐
                                  │   REGISTRY API   │
                                  └──────────────────┘

POST /v1/registries/name/REGISTRY #Req: REGISTRY
CreateRegistry()                  #  - no RegistryArn
                                  #Res: REGISTRY
PUT /v1/registries/name/REGISTRY  #Req: REGISTRY
UpdateRegistry()                  #  - no RegistryArn
                                  #  - no tags
                                  #Res: REGISTRY
GET /v1/registries                #Req: REGISTRY
ListRegistries()                  #  - only one with Scope
                                  #  - only RegistryName -> RegistryNamePrefix
                                  #Res: Registries REGISTRY_ARR
                                  #  - no Description
GET /v1/registries/name/REGISTRY  #Req: REGISTRY
DescribeRegistry()                #  - only RegistryName
                                  #Res: REGISTRY
DELETE                            #Req: REGISTRY
 /v1/registries/name/REGISTRY     #  - only RegistryName
DeleteRegistry()                  #Res: empty

                                  ┌────────────┐
                                  │   SCHEMA   │
                                  └────────────┘

SCHEMA.SchemaArn                  #'SCHEMA_ARN'. 'arn:aws:schemas:REGION:ACCOUNT_ID:schema/REGISTRY/SCHEMA'
SCHEMA.SchemaName                 #'SCHEMA'
SCHEMA.LastModified               #STR
SCHEMA.Type                       #STR
SCHEMA.Description                #STR
SCHEMA.Content                    #STR
SCHEMA.RegistryName               #STR
SCHEMA.ClientTokenId              #STR
SCHEMA.Keywords                   #STR

                                  ┌────────────────┐
                                  │   SCHEMA API   │
                                  └────────────────┘

POST /v1/registries/name          #Req: SCHEMA
 /REGISTRY/schema/name/SCHEMA     #  - no SchemaArn, LastModified, *Version*
CreateSchema()                    #  - no SchemaName
                                  #Res: SCHEMA
                                  #  - no RegistryName
                                  #  - no Content
PUT /v1/registries/name           #Req: SCHEMA
 /REGISTRY/schema/name/SCHEMA     #  - only one with ClientTokenId
UpdateSchema()                    #  - no SchemaArn, LastModified, *Version*
                                  #  - no tags
                                  #Res: SCHEMA
                                  #  - no RegistryName
                                  #  - no Content
GET /v1/registries/name           #Req: SCHEMA
 /REGISTRY/schema                 #  - only RegistryName
ListSchemas()                     #  - only SchemaName -> SchemaNamePrefix
                                  #Res: Schemas SCHEMA_ARR
                                  #  - no Type, Description, SchemaVersion, VersionCreatedDate, Content
                                  #  - no RegistryName
                                  #  - only one with VersionCount
GET /v1/registries/name           #Req: SCHEMA
 /REGISTRY/schemas/search         #  - only RegistryName
SearchSchemas()                   #  - only one with Keywords
                                  #Res: Schemas SCHEMA_ARR
                                  #  - only SchemaArn, SchemaName, RegistryName, Type
                                  #  - only SchemaVersion|VersionCreatedDate -> SchemaVersions[*].SchemaVersion|CreatedDate
GET /v1/registries/name           #Req: SCHEMA
 /REGISTRY/schema/name/SCHEMA     #  - only RegistryName, SchemaName, SchemaVersion
DescribeSchema()                  #Res: SCHEMA
                                  #  - no RegistryName
GET /v1/registries/name           #Req: SCHEMA
 /REGISTRY/schemas/name/SCHEMA    #  - only RegistryName, SchemaName, SchemaVersion
 /export                          #Res: SCHEMA
ExportSchema()                    #  - only RegistryName, SchemaName, SchemaVersion, Type
                                  #  - only Content
DELETE /v1/registries/name        #Req: SCHEMA
 /REGISTRY/schema/name/SCHEMA     #  - only RegistryName, SchemaName
DeleteSchema()                    #Res: empty

                                  ┌─────────────┐
                                  │   VERSION   │
                                  └─────────────┘

SCHEMA.SchemaVersion              #STR
SCHEMA.VersionCreatedDate         #'DATE'
SCHEMA.VersionCount               #NUM

                                  ┌─────────────────┐
                                  │   VERSION API   │
                                  └─────────────────┘

GET /v1/registries/name           #Req: SCHEMA
 /REGISTRY/schemas/name/SCHEMA    #  - only RegistryName, SchemaName
 /versions                        #Res: SchemaVersions SCHEMA_ARR
ListSchemaVersions()              #  - only SchemaArn, SchemaName, SchemaVersion, Type
DELETE /v1/registries/name
 /REGISTRY/schemas/name/SCHEMA    #Req: SCHEMA
 /version/VERSION_NUM             #  - only SchemaArn, SchemaName, SchemaVersion
DeleteSchemaVersion()             #Res: empty

                                  ┌────────────────┐
                                  │   DISCOVERER   │
                                  └────────────────┘

DISCOVERER                        #
                                  #Not if BUS.KmsKeyIdentifier set
DISCOVERER.DiscovererArn          #'DISCOVERER_ARN'. 'arn:aws:schemas:REGION:ACCOUNT_ID:discoverer/DISCOVERER_MID'
DISCOVERER.DiscovererId           #'DISCOVERER_MID'
DISCOVERER.CrossAccount           #BOOL
DISCOVERER.Description            #STR
DISCOVERER.SourceArn              #STR
DISCOVERER.State                  #STR

                                  ┌────────────────────┐
                                  │   DISCOVERER API   │
                                  └────────────────────┘

POST /v1/discoverers              #Req: DISCOVERER
CreateDiscoverer()                #  - no DiscovererId
                                  #  - no DiscovererArn, State
                                  #Res: DISCOVERER
PUT /v1/discoverers               #Req: DISCOVERER
 /id/DISCOVERER_MID               #  - no DiscovererArn, State
                                  #  - no SourceArn, tags
UpdateDiscoverer()                #Res: DISCOVERER
POST /v1/discoverers              #Req: DISCOVERER
 /id/DISCOVERER_MID/start         #  - only DiscovererId
StartDiscoverer()                 #Res: DISCOVERER
                                  #  - only DiscovererId, State
POST /v1/discoverers              #Req: DISCOVERER
 /id/DISCOVERER_MID/stop          #  - only DiscovererId
StopDiscoverer()                  #Res: DISCOVERER
                                  #  - only DiscovererId, State
GET /v1/discoverers               #Req: DISCOVERER
ListDiscoverers()                 #  - only DiscovererId|SourceArn -> DiscovererIdPrefix|SourceArnPrefix
                                  #Res: Discoverers DISCOVERER_ARR
                                  #  - no Description
GET /v1/discoverers               #Req: DISCOVERER
 /id/DISCOVERER_MID               #  - only DiscovererId
DescribeDiscoverer()              #Res: DISCOVERER
DELETE /v1/discoverers            #Req: DISCOVERER
 /id/DISCOVERER_MID               #  - only DiscovererId
DeleteDiscoverer()                #Res: empty

                                  ┌───────────────────────┐
                                  │   DISCOVERER SCHEMA   │
                                  └───────────────────────┘

SCHEMA_GET.Type                   #STR
SCHEMA_GET.Events                 #STR_ARR

                                  ┌───────────────────────────┐
                                  │   DISCOVERER SCHEMA API   │
                                  └───────────────────────────┘

POST /v1/discover                 #Req: SCHEMA_GET
GetDiscoveredSchema()             #Res: SCHEMA
                                  #  - only Content

                                  ┌────────────┐
                                  │   POLICY   │
                                  └────────────┘

RESOURCE_POLICY.RegistryName      #STR
RESOURCE_POLICY.Policy            #STR
RESOURCE_POLICY.RevisionId        #STR

                                  ┌────────────────┐
                                  │   POLICY API   │
                                  └────────────────┘

PUT /v1/policy                    #Req: RESOURCE_POLICY
PutResourcePolicy()               #  - RegistryName is in query parameters
                                  #Res: RESOURCE_POLICY
                                  #  - no RegistryName
GET /v1/policy                    #Req: RESOURCE_POLICY
GetResourcePolicy()               #  - only RegistryName
                                  #Res: RESOURCE_POLICY
                                  #  - no RegistryName
DELETE /v1/policy                 #Req: RESOURCE_POLICY
DeleteResourcePolicy()            #  - only RegistryName
                                  #Res: empty

                                  ┌──────────┐
                                  │   CODE   │
                                  └──────────┘

SCHEMA_CODE.RegistryName          #STR
SCHEMA_CODE.SchemaName            #STR
SCHEMA_CODE.SchemaVersion         #'VERSION_NUM'
SCHEMA_CODE.CreationDate          #'DATE'
SCHEMA_CODE.LastModified          #'DATE'
SCHEMA_CODE.Language              #STR
SCHEMA_CODE.Status                #STR
SCHEMA_CODE_RAW                   #

                                  ┌──────────────┐
                                  │   CODE API   │
                                  └──────────────┘

POST /v1/registries/name          #Req: SCHEMA_CODE
 /REGISTRY/schemas/name/SCHEMA    #  - only RegistryName, SchemaName, Language
 /language/LANG                   #  - only SchemaVersion
                                  #Res: SCHEMA_CODE
PutCodeBinding()                  #  - no RegistryName, SchemaName, Language
GET /v1/registries/name           #Req: SCHEMA_CODE
 /REGISTRY/schemas/name/SCHEMA    #  - only RegistryName, SchemaName, Language
 /language/LANG                   #  - only SchemaVersion
                                  #Res: SCHEMA_CODE
DescribeCodeBinding()             #  - no RegistryName, SchemaName, Language
GET /v1/registries/name           #Req: SCHEMA_CODE
 /REGISTRY/schemas/name/SCHEMA    #  - only RegistryName, SchemaName, Language
 /language/LANG/source            #  - only SchemaVersion
GetCodeBindingSource()            #Res: SCHEMA_CODE_RAW

                                  ┌──────────┐
                                  │   TAGS   │
                                  └──────────┘

RESOURCE_TAGS.resourceArn         #'ARN'
RESOURCE_TAGS.tags
REGISTRY|SCHEMA|DISCOVERER.tags   #TAGS_OBJ

                                  ┌──────────────┐
                                  │   TAGS API   │
                                  └──────────────┘

POST /tags/ARN                    #Req: RESOURCE_TAGS
TagResource()                     #Res: empty
GET /tags/ARN                     #Req: RESOURCE_TAGS
ListTagsForResource()             #  - only resourceArn
                                  #Res: RESOURCE_TAGS
                                  #  - only tags
DELETE /tags/ARN                  #Req: RESOURCE_TAGS
UntagResource()                   #  - tags OBJ -> tagKeys 'TAG'_ARR
                                  #Res: empty
