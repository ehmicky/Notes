
                                  ┏━━━━━━━━━━━━━━━━━━━━━━━┓
                                  ┃   EVENTBRIDGE RULES   ┃
                                  ┗━━━━━━━━━━━━━━━━━━━━━━━┛

VERSION ==>                       #2024-12-20

TODO all:
  - go through new_service doc
     - stopped at: CLI

SAM:
  - section in new_service doc
  - EventBridge Rules:
     - https://docs.aws.amazon.com/eventbridge/latest/userguide/eb-use-sam.html
     - move documentation about AWS::Serverless::Connector
     - see example of how to document this with AWS::Serverless::Function documentation in CloudWatch Logs
     - test locally using sam-translate binary
     - move POLICY_TEMPLATE doc from SAM transform doc
  - Lambda:
     - EventBridge Rules:
        - https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-property-function-eventbridgerule.html
        - https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-specification-generated-resources-function.html#sam-specification-generated-resources-function-eventbridge
        - https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-property-function-cloudwatchevent.html
     - EventBridge Scheduler:
        - https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/using-eventbridge-scheduler.html
        - https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-property-function-schedule.html
        - https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-property-function-schedulev2.html
  - Step Functions:
     - EventBridge Rules:
        - https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-property-statemachine-statemachineeventbridgerule.html
        - https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-property-statemachine-statemachinecloudwatchevent.html
        - https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-specification-generated-resources-statemachine.html#sam-specification-generated-resources-statemachine-eventbridge
     - EventBridge Scheduler:
        - https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-property-statemachine-statemachineschedule.html
        - https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-property-statemachine-statemachineschedulev2.html

CDK:
  - section in new_service doc
  - EventBridge Rules:
     - https://github.com/aws/aws-cdk/blob/main/docs/DESIGN_GUIDELINES.md#events
     - https://github.com/awslabs/aws-break-glass-role
     - CloudTrail: Trail.onEvent():
        - https://github.com/aws/aws-cdk/blob/main/packages/aws-cdk-lib/aws-cloudtrail/lib/cloudtrail.ts#L204
        - https://github.com/aws/aws-cdk/blob/main/packages/aws-cdk-lib/aws-cloudtrail/README.md#amazon-eventbridge
     - S3 Bucket: Bucket.onCloudTrail*()
        - https://github.com/aws/aws-cdk/blob/751a922de30e88a1faa7a20fb7b29cb43856d522/packages/aws-cdk-lib/aws-s3/lib/bucket.ts#L557
        - https://github.com/aws/aws-cdk/blob/751a922de30e88a1faa7a20fb7b29cb43856d522/packages/aws-cdk-lib/aws-s3/lib/bucket.ts#L586
        - https://github.com/aws/aws-cdk/blob/751a922de30e88a1faa7a20fb7b29cb43856d522/packages/aws-cdk-lib/aws-s3/lib/bucket.ts#L611

TODO all:
  - move SERVICE-specific docs in their respective docs (at the bottom)
  - break down this doc into 4: rules, pipes, scheduler, schemas
     - put in the right places in my Notes directories

CLOUDWATCH EVENTS ==>             #Name of former major version of EventBridge Rules
                                  #Compatible but no more new features anymore

                                  ┌─────────┐
                                  │   API   │
                                  └─────────┘

SERVICE_DOMAIN                    #'events.REGION.amazonaws.com'

FORMAT ==>                        #Uses X-Amz-Target: AWSEvents.ACTION [C]
                                  #JSON request|response body

REQ_ID                            #x-amzn-RequestId [S]

PAGINATION ==>                    #Uses REQ.Limit (def|max: 100) + REQ|RES.NextToken
                                  #ListEndpoints: named REQ.MaxResults instead
                                  #No pagination: ListTagsForResource()

THROTTLING ==>                    #2e4/s (REGION-specific) (soft): RULE calling its TARGETs
                                  #1e4/s (REGION-specific) (soft): PutEvents()
                                  #300/s (soft): API_DEST call
                                  #50/s (soft): other API calls
                                  #5/s: Create|Update|DeleteEndpoint()

PRICING ==>                       #1$ per 1e6 EVENTs received
                                  #  - only ones matching FILTERS
                                  #  - multiplied by NUM of 64KB chunks
                                  #  - free: EVENTs sent by AWS SERVICEs
                                  #     - CloudTrail: management EVENTs only
                                  #1$ per 1e6 TARGET call
                                  #  - free: if same ACCOUNT
                                  #1$ per 5e6 API_DEST call
                                  #  - multiplied by NUM of 64KB chunks
                                  #1$ per 43GB stored in ARCHIVEs
                                  #  - i.e. same as S3
                                  #1$ per 10GB re-emitted in REPLAYs

                                  ┌──────────┐
                                  │   AUTH   │
                                  └──────────┘

AmazonEventBridgeFullAccess       #AWS managed POLICY. Grants all 'events|pipes|scheduler|schemas:*' PACTIONs
AmazonEventBridgeReadOnlyAccess   #AWS managed POLICY. Grants all readonly 'events|pipes|scheduler|schemas:*' PACTIONs

                                  ┌─────────┐
                                  │   BUS   │
                                  └─────────┘

BUS                               #Group that receives EVENTs and sends them to targets
                                  #Cannot delete if it has some RULEs
                                  #Max 100 (soft) per ACCOUNT

BUS.Arn                           #'BUS_ARN'. 'arn:aws:events:REGION:ACCOUNT_ID:event-bus/BUS'
BUS.Name                          #'BUS' (def: 'default' with DescribeEventBus())
                                  #Only [:alnum:]-_., max 256 chars
BUS.Description                   #STR. Max 512 chars
BUS.CreationTime                  #DATE_NUM
BUS.LastModifiedTime              #DATE_NUM

                                  ┌─────────────┐
                                  │   BUS API   │
                                  └─────────────┘

CreateEventBus()                  #Req: BUS
                                  #  - no Arn, *Time, Policy
                                  #  - only one with EventSourceName, Tags
                                  #Res: BUS
                                  #  - Arn -> EventBusArn
                                  #  - no Name, *Time, Policy
UpdateEventBus()                  #Req: BUS
                                  #  - no Arn, *Time, Policy
                                  #Res: BUS
                                  #  - no *Time, Policy
ListEventBuses()                  #Req: BUS
                                  #  - only Name -> NamePrefix
                                  #Res: EventBuses BUS_ARR
                                  #  - no DeadLetterConfig, KmsKeyIdentifier
DescribeEventBus()                #Req: BUS
                                  #  - only Arn + Name -> Name
                                  #Res: BUS
DeleteEventBus()                  #Req: BUS
                                  #  - only Name
                                  #Res: empty

                                  ┌─────────────┐
                                  │   BUS IAC   │
                                  └─────────────┘

AWS::Events::EventBus             #RESPROPs: Name, Description
                                  #RESATTRs: Arn, Name

GENERATE TEMPLATE ==>             #In UI, can generate CloudTemplate template from existing BUSs

                                  ┌─────────────────┐
                                  │   BUS METRICS   │
                                  └─────────────────┘

DVAR EventBusName                 #'BUS'
                                  #With AWS/Events/*InvocationAttempts|Ingestion*|*Rules|MatchedEvents

                                  ┌─────────────────┐
                                  │   BUS LOGGING   │
                                  └─────────────────┘

CLOUDTRAIL ==>                    #DescribeEventBus() is logged with CloudTrail as data EVENTs
                                  #BUS is LOG_RESOURCE

                                  ┌─────────────┐
                                  │   DEFAULT   │
                                  └─────────────┘

DEFAULT BUS ==>                   #BUS with name 'default'
                                  #Already created, cannot be deleted
                                  #Receives EVENTs from AWS SERVICEs
                                  #But can be used for any other purposes

CUSTOM BUS ==>                    #Other BUSs receiving EVENTs from PutEvents() calls

                                  ┌──────────────────┐
                                  │   DEFAULT AUTH   │
                                  └──────────────────┘

COND_KEY events:
 detail.userIdentity.principalId  #DETAIL.userIdentity.principalId. For PutRule()
COND_KEY
 events:detail.eventTypeCode      #DETAIL.eventTypeCode. For PutRule()
COND_KEY events:detail.service    #DETAIL.service. For PutRule()

                                  ┌─────────────────┐
                                  │   DEFAULT IAC   │
                                  └─────────────────┘

DEFAULT BUS ==>                   #No need to declare if keep default RESPROPs
                                  #Else must:
                                  #  - import with CHANGESET.ResourcesToImport
                                  #  - RESOURCE.DeletionPolicy 'Retain'
                                  #  - RESPROP Name 'default'

                                  ┌────────────┐
                                  │   SOURCE   │
                                  └────────────┘

SOURCE                            #PARTNER sending EVENTs to a BUS
                                  #First, PARTNER's ACCOUNT:
                                  #  - creates|deletes the SOURCE
                                  #     - using *PartnerEventSource*()
                                  #Then, BUS's ACCOUNT:
                                  #  - activates the SOURCE by creating a "matching BUS"
                                  #     - i.e. CreateEventBus() with BUS.EventSourceName set to same 'SOURCE'
                                  #     - PARTNER EVENTs can be sent before that, but they will be noop
                                  #  - can enable|disable the SOURCE
                                  #     - using *EventSource*()
SOURCE.Arn                        #'SOURCE_ARN'. 'arn:aws:events:REGION::event-source/SOURCE'
SOURCE.CreationTime               #DATE_NUM

SOURCE.Name                       #'SOURCE'. Is 'aws.partner/PARTNER/EVENT_NAMESPACE/EVENT'
                                  #Must be [:alnum:]-. and max 256 chars
PARTNER                           #AWS registered partner, i.e. known identifier
                                  #Must also be registered as a SOURCE
                                  #  - see process details at https://docs.aws.amazon.com/eventbridge/latest/onboarding/partner_terms.html
                                  #    and following pages
                                  #Currently ~45 SOURCE PARTNERs exist, mostly devtools products
EVENT_NAMESPACE                   #Meant only to namespace|categorize 'EVENT' name
EVENT                             #Name must be unique to this BUS
                                  #E.g. including its ACCOUNT_ID or PARTNER-specific user ID
                                  #That's because neither 'BUS' name nor ACCOUNT_ID is in 'SOURCE_ARN'

SOURCE.CreatedBy                  #'PARTNER'
SOURCE.Account                    #'ACCOUNT_ID' of BUS (not of PARTNER)

SOURCE.State                      #Can be:
                                  #  - 'PENDING': either:
                                  #     - no matching BUS yet
                                  #     - SOURCE disabled with DeactivateEventSource()
                                  #  - 'ACTIVE': matching BUS, and not disabled
                                  #  - 'DELETED': deleted by PARTNER, i.e. by DeletePartnerEventSource()
SOURCE.ExpirationTime             #DATE_NUM. If SOURCE.State PENDING for 7 days, SOURCE is deleted

BUS.EventSourceName               #'SOURCE'. Must be set for a partner BUS
                                  #'BUS' name must be same as 'SOURCE'

                                  ┌────────────────┐
                                  │   SOURCE API   │
                                  └────────────────┘

ActivateEventSource()             #Req: SOURCE
                                  #  - only Name
                                  #Res: empty
ListEventSources()                #Req: SOURCE
                                  #  - only Name -> NamePrefix
                                  #Res: EventSources SOURCE_ARR
                                  #  - no Account
DescribeEventSource()             #Req: SOURCE
                                  #  - only Name
                                  #Res: SOURCE
                                  #  - no Account
DeactivateEventSource()           #Req: SOURCE
                                  #  - only Name
                                  #Res: empty

CreatePartnerEventSource()        #Req: SOURCE
                                  #  - only Name, Account
                                  #Res: SOURCE
                                  #  - only Arn -> EventSourceArn
ListPartnerEventSources()         #Req: SOURCE
                                  #  - only Name -> NamePrefix
                                  #Res: PartnerEventSources SOURCE_ARR
                                  #  - only Arn, Name
ListPartnerEventSourceAccounts()  #Req: SOURCE
                                  #  - only Arn -> EventSourceArn
                                  #Res: PartnerEventSourceAccounts SOURCE_ARR
                                  #  - no Arn, Name, CreatedBy
DescribePartnerEventSource()      #Req: SOURCE
                                  #  - only Name
                                  #Res:SOURCE
                                  #  - only Arn, Name
DeletePartnerEventSource()        #Req: SOURCE
                                  #  - only Name, Account
                                  #Res: empty

                                  ┌────────────────┐
                                  │   SOURCE IAC   │
                                  └────────────────┘

AWS::Events::EventBus             #Includes RESPROPs: EventSourceName

                                  ┌────────────────────┐
                                  │   SOURCE METRICS   │
                                  └────────────────────┘

AWS/Events/Events                 #NUM of PARNER EVENTs

DVAR EventSourceName              #'SOURCE'
                                  #With AWS/Events/[Matched]Events

                                  ┌──────────────────┐
                                  │   AWS SERVICES   │
                                  └──────────────────┘

INTEGRATED SERVICES ==>           #Many SERVICEs automatically send EVENTs to EventBridge
                                  #Often done when the status of a RESOURCE (from specific RESTYPEs) changes
                                  #Documented in their respective SERVICEs
                                  #Received by default, just need to create a RULE for it
                                  #SOURCE is 'aws.SERVICE'
                                  #Not in PARTNER BUSs

DELIVERY ==>                      #For most SERVICEs, delivery sometimes fail ("best effort")
                                  #For a few SERVICEs, it never fails ("durable")
                                  #Either way, duplicate EVENTs can happen

CLOUDTRAIL ==>                    #CloudTrail is an integrated SERVICE itself
                                  #It can be used as an alternative to integrated SERVICEs:
                                  #  - more SERVICE and EVENTs
                                  #  - but EVENTs are more generic
                                  #See its doc

EVENTBRIDGE ==>                   #Itself emits a few EVENTs (e.g. when CONN.ConnectionState changes), with SOURCE 'aws.events'

                                  ┌───────────┐
                                  │   EVENT   │
                                  └───────────┘

EVENTS.Entries                    #EVENT_ARR
                                  #Max 10 items (20 if PARTNER)

EVENTS_RES.FailedEntryCount       #NUM of failed EVENT_RESs
EVENTS_RES.Entries                #EVENT_RES_ARR
                                  #Same length and order as EVENTS.Entries
EVENT_RES.EventId                 #'EVENT_MID', if successful
EVENT_RES.ErrorCode               #'CODE', if failed
EVENT_RES.ErrorMessage            #'MESSAGE', if failed

EVENT                             #Main information being exchanged
                                  #Types of EVENTs:
                                  #  - default: automatically done by AWS SERVICEs (see above)
                                  #  - custom: using PutEvents()
                                  #  - partner: using PutPartnerEvents(), by AWS registered partner (see above)
                                  #Max 256KB
EVENT.EventBusName                #'BUS[_ARN]' (def: 'default')
                                  #If unknown, EVENT is ignored, but does not fail
EVENT.Time                        #DATE_NUM (def: now)

EVENT.Detail                      #'DETAIL_JSON'. Main payload
                                  #Can be anything. Required, but can be '{}'
                                  #Max 1000 depth levels
EVENT.DetailType                  #'EVENT_TYPE'. Payload type
                                  #Can be anything. Required
EVENT.Source                      #'EVENT_SOURCE'. Who sent the payload
                                  #With AWS SERVICEs, this is 'aws.SERVICE'
                                  #With PARTNER, this is 'SOURCE'
                                  #Else, can be anything
                                  #  - recommended: dot-delimited list
                                  #  - e.g. 'com.COMPANY.APP'
                                  #Required
EVENT.Resources                   #'ARN'_ARR (def: none) of related RESOURCEs
                                  #Max 2e3 items

EVENT.TraceHeader                 #'HEADER' (def: 'X-Amzn-Trace-Id'). X-Ray header

GEVENT                            #Internal representation of an EVENT
GEVENT.version                    #Always '0' (def)
GEVENT.account                    #'ACCOUNT_ID'
GEVENT.region                     #'REGION'
GEVENT.id                         #'EVENT_MID', generated by API
GEVENT.time                       #EVENT.Time but as 'DATE'
GEVENT.detail|detail-type|source
 |resources                       #EVENT.*

                                  ┌────────────────┐
                                  │   EVENT AUTH   │
                                  └────────────────┘

COND_KEY events:detail-type       #EVENT.DetailType. For PutEvents() and PutRule()
COND_KEY events:source            #EVENT.Source. For PutEvents() and PutRule()
                                  #Can be 'false' to mean EVENT.Source undefined

                                  ┌───────────────┐
                                  │   EVENT API   │
                                  └───────────────┘

PutEvents()                       #Req: EVENTS
                                  #Res: EVENTS_RES
PutPartnerEvents()                #Req: EVENTS
                                  #  - no EndpointId, Entries[*].EventBusName|TraceHeader
                                  #Res: EVENTS_RES

                                  ┌───────────────────┐
                                  │   EVENT METRICS   │
                                  └───────────────────┘

AWS/Events/MatchedEvents          #NUM of EVENTs, excluding ones which did not match any RULE

AWS/Events/
 PutEventsApproximateCallCount    #Approximate NUM of PutEvents()
AWS/Events/
 PutEventsApproximateSuccessCount #Approximate NUM of PutEvents() that succeeded
AWS/Events/
 PutEventsApproximateFailedCount  #Approximate NUM of PutEvents() that failed
AWS/Events/
PutEventsApproximateThrottledCount#NUM of PutEvents() throttled
AWS/Events/PutEventsEntriesCount  #NUM of EVENTs per PutEvents()
AWS/Events/
 PutEventsFailedEntriesCount      #NUM of EVENTs per PutEvents() that failed

AWS/Events/PutEventsLatency       #Duration (in ms) of PutEvents()

AWS/Events/PutEventsRequestSize   #Size (in bytes) of PutEvents()

AWS/Events/PutPartnerEvents*      #Same as AWS/Events/PutEvents* (except PutEventsRquestSize) but for PutPartnerEvents() instead of PutEvents()

                                  ┌──────────────────────────┐
                                  │   EVENT STEP FUNCTIONS   │
                                  └──────────────────────────┘

events:putEvents                  #OPTIMIZED_SERVICE_TASK that calls PutEvents()
                                  #Can be ASYNC_TASK but not JOB_TASK

INPUT.*                           #EVENTS.*
OUTPUT.*                          #EVENTS_RES.*

EVENT.Resources                   #Automatically appends ['EXEC_ARN', 'MACHINE_ARN']

ERROR_OUTPUT.Code                 #'EventBridge.FailedEntry', when EVENTS_RES.FailedEntryCount > 0

                                  ┌───────────────────────────────┐
                                  │   EVENT STEP FUNCTIONS AUTH   │
                                  └───────────────────────────────┘

PACTION events:PutEvents          #Must be allowed for MACHINE.roleArn on the BUS

                                  ┌──────────────────────────────┐
                                  │   EVENT STEP FUNCTIONS IAC   │
                                  └──────────────────────────────┘

new EventBridgePutEvents          #CSTATE_TASK for events:putEvents OPTIMIZED_SERVICE_TASK
 (...CARGS, OPTS)->CEVENTS_TASK   #Automatically allows PACTIONs as described above
                                  #Cannot set EVENT.Time|TraceHeader

OPTS.*                            #CSTATE_TASK_OPTS.*

OPTS.entries                      #CEVENT_ARR
CEVENT.eventBus                   #ICBUS (def: 'default')
CEVENT.detailType|source          #EVENT.*
CEVENT.detail                     #CTASK_INPUT. EVENT.Detail

                                  ┌───────────────────────┐
                                  │   EVENT API GATEWAY   │
                                  └───────────────────────┘

INTEGRATION.integrationSubtype   -#Can be 'EventBridge-PutEvents'
                                  #PARAMs is EVENT.*, i.e. single EVENT
                                  #I.e. first-class INTEGRATION (see API Gateway doc)

                                  ┌────────────────────────────┐
                                  │   EVENT API GATEWAY AUTH   │
                                  └────────────────────────────┘

INTEGRATION.credentialsArn       -#See API Gateway doc

                                  ┌──────────┐
                                  │   RULE   │
                                  └──────────┘

RULE                              #Filters, schedules and redirects EVENTs
                                  #Should be careful about infinite loops, for cost reasons
                                  #Cannot delete if there are some TARGETs
                                  #Delete is idempotent
                                  #Max 300 (soft) per BUS
RULE.Arn                          #'RULE_ARN'. 'arn:aws:events:REGION:ACCOUNT_ID:rule[/BUS]/RULE'
                                  #'/BUS' is omitted for default BUS
RULE.Name                         #'RULE'
                                  #Max 64 chars, [:alnum:].-
RULE.Description                  #STR. Max 512 chars

RULE.EventBusName                 #In input: 'BUS[_ARN]' (def: default BUS)
                                  #In output: 'BUS'

RULE.CreatedBy                    #'ACCOUNT_ID' which created the RULE
                                  #Might differ from RULE's ACCOUNT, if a cross-ACCOUNT PutRule() was done

RULE.State                        #One of:
                                  #  - 'DISABLED'
                                  #  - 'ENABLED'
                                  #  - 'ENABLED_WITH_ALL_CLOUDTRAIL_MANAGEMENT_EVENTS': see CloudTrail doc

RULE.ScheduleExpression           #See EventBridge Scheduler doc

                                  ┌───────────────┐
                                  │   RULE AUTH   │
                                  └───────────────┘

RULE.RoleArn                      #'ROLE_ARN' assumed by the RULE
                                  #Def: use current PRINCIPAL

COND_KEY events:creatorAccount    #RULE.CreatedBy. For Put|Enable|Disable|Delete|DescribeRule(), Put|RemoveTargets|ListTargetsByRule(), *Tag*()

                                  ┌──────────────┐
                                  │   RULE API   │
                                  └──────────────┘

PutRule()                         #Req: RULE
                                  #  - only one with Tags
                                  #  - no Arn, CreatedBy, ManagedBy
                                  #Res: RULE
                                  #  - only Arn -> RuleArn
                                  #Either creates or replaces (does not patch)
EnableRule()                      #Req: RULE
                                  #  - only Name, EventBusName
                                  #Res: empty
DisableRule()                     #Req:
                                  #  - only Name, EventBusName
                                  #Res: empty
ListRules()                       #Req: RULE
                                  #  - only Name -> NamePrefix
                                  #  - only EventBusName
                                  #Res: Rules RULE_ARR
                                  #  - no CreatedBy
DescribeRule()                    #Req: RULE
                                  #  - only Name, EventBusName
                                  #Res: RULE
DeleteRule()                      #Req: RULE
                                  #  - only Name, EventBusName
                                  #  - only one with Force
                                  #Res: empty

                                  ┌──────────────┐
                                  │   RULE CLI   │
                                  └──────────────┘

CLI wizard 'new-rule'             #For CreateRule()

                                  ┌──────────────┐
                                  │   RULE IAC   │
                                  └──────────────┘

GENERATE TEMPLATE ==>             #In UI, can generate CloudTemplate template from existing RULEs

AWS::Events::Rule                 #RESPROPs: Name, Description, EventBusName, State, ScheduleExpression, RoleArn
                                  #RESATTRs: Arn

                                  ┌──────────────────┐
                                  │   RULE METRICS   │
                                  └──────────────────┘

AWS/Events/TriggeredRules         #NUM of RULE executions
AWS/Events/ThrottledRules         #NUM of RULE executions throttled

DVAR RuleName                     #'RULE'
                                  #With all AWS/Events/* except Put[Partner]Events*, Events, InvocationsCreated
                                  #Also sent as a metric TELEMETRY_ENTITY

                                  ┌──────────────────┐
                                  │   RULE LOGGING   │
                                  └──────────────────┘

CLOUDTRAIL ==>                    #*Rule*() are logged with CloudTrail as data EVENTs
                                  #RULE is LOG_RESOURCE

                                  ┌──────────────────┐
                                  │   RULE MANAGED   │
                                  └──────────────────┘

RULE.ManagedBy                    #'SERVICE'. If RULE created by an AWS SERVICE
                                  #Different from integrated RULEs
                                  #SERVICE automatically creates the POLICY to allow sending to EventBridge
RULE|TARGET.Force                 #BOOL. If false (def), do not allow deleting if RULE is SERVICE-managed

                                  ┌───────────────────────┐
                                  │   RULE MANAGED AUTH   │
                                  └───────────────────────┘

COND_KEY events:ManagedBy         #RULE.ManagedBy. For Put|Enable|Disable|DeleteRule() and Put|RemoveTargets()

                                  ┌─────────────┐
                                  │   PATTERN   │
                                  └─────────────┘

RULE.EventPattern                 #'FILTERS_JSON'. Required

FILTERS                           #Ignores EVENTs that do not match
                                  #Matched against GEVENT shape
                                  #Should be as precise as possible
                                  #  - including matching GEVENT.account|region
                                  #Max 4KB (soft)

FILTERS.*                         #And'd, i.e. must all match

FILTERS.$or                       #FILTERS_ARR
                                  #Max 1000 cartesian product of all $or ARRs
                                  #Can be combined with FILTERS.*, e.g. { PROP: ARR, $or: FILTERS_ARR }

FILTERS.VARR                      #ARR of either:
                                  #  - STR|NUM|BOOL|null: ARR.includes() (case-sensitive)
                                  #  - FILTER (ARR has a single item)
                                  #Does not alllow escaping dot in VAR
                                  #  - it always matches both a nested OBJ, and a VAR with a dot in its name

FILTER.anything-but               #VAL|ARR|FILTER2. Negation
FILTER.equals-ignore-case         #STR[_ARR]. ARR.includes() (case-insensitive)
FILTER.numeric                    #['OP', NUM[, 'OP2', NUM2]]
                                  #OP is = > >= < <=
                                  #Min|max NUM [-]5e9, 6 decimal points
                                  #Stringified, i.e. 1 != 1.0 != 1e1
FILTER.exists                     #BOOL. !==|=== undefined
FILTER.prefix|suffix
 [.equals-ignore-case]            #STR. startsWith|endsWith(STR) (case-[in]sensitive)
FILTER.wildcard                   #'GLOB'. Only GLOB character is *
                                  #Can \-escape * and \
                                  #Cannot be too complex, e.g. too many * (not documented how many)
FILTER.cidr                       #'CIDR'. Matches IP

                                  ┌─────────────────┐
                                  │   PATTERN IAC   │
                                  └─────────────────┘

AWS::Events::Rule                 #Includes RESPROPs: EventPattern STR

                                  ┌──────────────────┐
                                  │   PATTERN TEST   │
                                  └──────────────────┘

TEST_EVENT_REQ.Event              #'GEVENT_JSON'
                                  #All GEVENT.* must be set, except GEVENT.version|detail which are optional
TEST_EVENT_REQ.EventPattern       #'PATTERN_JSON'

TEST_EVENT_RES.Result             #BOOL. Whether PATTERN matches DETAIL

                                  ┌─────────────────────┐
                                  │   PATTERN TEST UI   │
                                  └─────────────────────┘

TESt PATTERN ==>                  #Can be done from UI ("sandbox")
                                  #Can select sample GEVENTs
                                  #  - including random data from SCHEMAs

                                  ┌──────────────────────┐
                                  │   PATTERN TEST API   │
                                  └──────────────────────┘

TestEventPattern()                #Req: TEST_EVENT_REQ
                                  #Res: TEST_EVENT_RES

                                  ┌──────────────────────────┐
                                  │   PATTERN TEST LOGGING   │
                                  └──────────────────────────┘

CLOUDTRAIL ==>                    #TestEventPattern() is logged with CloudTrail as data EVENTs
                                  #RULE is LOG_RESOURCE

                                  ┌────────────┐
                                  │   TARGET   │
                                  └────────────┘

TARGETS.Targets                   #TARGET_ARR (no Rule|EventBusNamee)
                                  #Max 10 entries
TARGETS.Rule|EventBusName         #TARGET.*
TARGETS_RES
 .FailedEntryCount|Entries        #Same as EVENTS_RES.* except EventId -> TargetId

TARGET                            #RESOURCEs triggered where EVENTs are emitted
                                  #EVENTs are not stored by EventBridge, they only trigger TARGETs
                                  #Run at least once: rarely can run twice (i.e. should be idempotent)
                                  #Max 5 per RULE
TARGET.Id                         #'TARGET'
                                  #Only [:alnum:]-.

TARGET.Arn                        #'ARN'. TARGET_TYPE-specific.
                                  #Each SERVICE documented it in its respective docs
TARGET.*Parameters                #OBJ. TARGET_TYPE-specific options
                                  #Some TARGET_TYPEs do not have any
                                  #Each SERVICE documented it in its respective docs
                                  #Some values can be 'JSONPATH'
                                  #  - only specific ones, documented as such
                                  #  - only STRs, and not enums
                                  #  - references input (before any transformation)

TARGET.Rule                       #'RULE'
TARGET.EventBusName               #'BUS' (def: default BUS) of the RULE
                                  #If in another ACCOUNT, cannot use TARGET.Input*

TARGET.Input                      #'INPUT_JSON'. Input used when calling TARGET's RESOURCE
                                  #Def: 'GEVENT_JSON'
                                  #Max 8KB
TARGET.InputPath                  #'JSONPATH' (see its doc). Alternative to TARGET.Input
                                  #Input becomes GEVENT_JSON after evaluating JSONPATH
TARGET.InputTransformer           #INPUT_TRANSFORM. Alternative to TARGET.Input
INPUT_TRANSFORM.InputTemplate     #STR used as input
                                  #Can be newline-separated "...", which are then joined by newlines
                                  #Max 8KB
INPUT_TRANSFORM.InputPathsMap.VAR #'JSONPATH'. Replaces:
                                  #  - any '<VAR>' in InputTemplate
                                  #  - by evaluation of JSONPATH on GEVENT_JSON
                                  #Evaluation result is in JSON
                                  #  - i.e. if InputTemplate is 'OBJ_JSON', should be used as a whole value
                                  #    (no concatenation, to avoid injection)
                                  #Max 100 VARs
                                  #VAR must be [:alnum:]_-, max 256 chars

                                  ┌─────────────────┐
                                  │   TARGET AUTH   │
                                  └─────────────────┘

TARGET.RoleArn                    #'ROLE_ARN' used to call TARGET
                                  #Must be assumable by Principal.Service 'events.amazonaws.com'
                                  #Should use COND_KEY aws:SourceArn RULE_ARN, aws:SourceAccount ACCOUNT_ID
                                  #Must be used instead of RULE.RoleArn if both:
                                  #  - cross-ACCOUNT
                                  #  - access granted to ORG, not ACCOUNT
                                  #Def: Principal.Service 'events.amazonaws.com' calls directly
                                  #Which permission is required is TARGET_TYPE-specific

COND_KEY events:TargetArn         #TARGET.Arn, as 'ARN'_ARR. For PutTargets()

PACTION iam:PassRole              #Required on current PRINCIPAL
                                  #Should use COND_KEY iam:PassedToService 'events.amazonaws.com'

AmazonEventBridgeFullAccess       #Also allow PACTION iam:PassRole, as described above

                                  ┌────────────────┐
                                  │   TARGET API   │
                                  └────────────────┘

PutTargets()                      #Req: TARGETS
                                  #Res: TARGETS_RES
ListTargetsByRule()               #Req: TARGET
                                  #  - only Rule, only EventBusName
                                  #Res: Targets TARGET_ARR
                                  #  - no Rule, EventBusName
ListRuleNamesByTarget()           #Req: TARGET
                                  #  - only Arn -> TargetArn
                                  #  - only EventBusName
                                  #Res: TARGET
                                  # - Rule STR -> RuleNames STR_ARR
RemoveTargets()                   #Req: TARGET
                                  #  - only EventBusName, Rule
                                  #  - only Id STR -> Ids STR_ARR (max 10 items)
                                  #  - only one with Force
                                  #Res: TARGETS_RES

                                  ┌────────────────┐
                                  │   TARGET IAC   │
                                  └────────────────┘

AWS::Events::Rule                 #Includes RESPROPs: Targets TARGET_ARR: Id, Arn, *Parameters, Input*, RoleArn

                                  ┌────────────────────┐
                                  │   TARGET METRICS   │
                                  └────────────────────┘

AWS/Events/InvocationAttempts     #NUM of TARGET calls
AWS/Events/InvocationsCreated     #NUM of TARGET calls per EVENT

AWS/Events/IngestiontoInvocation
 StartLatency                     #Duration (in ms) from EVENT start to TARGET call start
AWS/Events/IngestiontoInvocation
 CompleteLatency                  #Duration (in ms) from EVENT start to TARGET call end, excluding retries
AWS/Events/IngestionToInvocation
 SuccessLatency                   #Duration (in ms) from EVENT start to TARGET call success, including retries

                                  ┌────────────────────┐
                                  │   TARGET LOGGING   │
                                  └────────────────────┘

CLOUDTRAIL ==>                    #*Target*() are logged with CloudTrail as data EVENTs
                                  #RULE is LOG_RESOURCE

                                  ┌──────────────┐
                                  │   JSONPATH   │
                                  └──────────────┘

JSONPATH                          #Only .VAR [NUM] .* and [*]
                                  #If path not matching: undefined, but no error
                                  #Max 256 chars

aws.events.*                      #Can be used as:
                                  #  - 'JSONPATH'
                                  #  - <aws.events.*> in INPUT_TRANSFORM.InputTemplate
aws.events.rule-arn               #'RULE_ARN'
aws.events.rule-name              #'RULE'
aws.events.event.json             #GEVENT
aws.events.event                  #GEVENT, without GEVENT.detail
aws.events.event.ingestion-time   #GEVENT.time

                                  ┌────────────────┐
                                  │   TARGET BUS   │
                                  └────────────────┘

TARGET.Arn                        #EventBridge 'BUS_ARN'. Calls PutEvents()
                                  #I.e. pass EVENT from one BUS to another
                                  #Input is 'GEVENT_JSON'
                                  #Cannot chain|forward to a third BUS

                                  ┌─────────────────────┐
                                  │   TARGET BUS AUTH   │
                                  └─────────────────────┘

PACTION events:PutEvents          #Must be allowed for TARGET.Arn on target BUS2
                                  #Must use COND_KEY aws:SourceArn BUS_ARN
                                  #Usually only needed if cross-REGION|ACCOUNT, thanks to default BUS.Policy

COND_KEY events:eventBusInvocation#'BOOL'. Whether PutEvents() was called by a TARGET with Arn 'BUS_ARN'
                                  #For PutEvents()

                                  ┌────────────────────┐
                                  │   TARGET BUS IAC   │
                                  └────────────────────┘

AWS::Events::Rule                 #Includes RESPROPs: Targets[*]: Arn

                                  ┌───────────┐
                                  │   RETRY   │
                                  └───────────┘

TARGET.RetryPolicy                #RETRY_POLICY
                                  #Retries uses exponential backoff
                                  #Only for retriable ERROR CODEs
                                  #  - server errors (like 5**), throttling|concurrency (like 409|429), authentication (like 401|407)
                                  #  - not for authorization issues

RETRY_POLICY                      #Max NUM (in secs) of time to keep retrying on failed EVENTs
 .MaximumEventAgeInSeconds        #Min: 1m, def|max: 1d

RETRY_POLICY.MaximumRetryAttempts #NUM of retries on failed EVENTs
                                  #Min: 0, def|max: 185

                                  ┌───────────────┐
                                  │   RETRY IAC   │
                                  └───────────────┘

AWS::Events::Rule                 #Includes RESPROPs: Targets[*]: RetryPolicy

                                  ┌───────────────────┐
                                  │   RETRY METRICS   │
                                  └───────────────────┘

AWS/Events/Invocations            #NUM of TARGET calls, excluding retries and throttling
AWS/Events/
 SuccessfulInvocationAttempts     #NUM of TARGET calls that succeeded
AWS/Events/FailedInvocations      #NUM of TARGET calls that failed (after retries)
AWS/Events/RetryInvocationAttempts#NUM of TARGET calls that are retries
AWS/Events/DeadLetterInvocations  #NUM of TARGET calls which are skipped due to things like infinite loop prevention

                                  ┌─────────┐
                                  │   DLQ   │
                                  └─────────┘

BUS.DeadLetterConfig.Arn          #'SQS_QUEUE_ARN' to send EVENTs when encrypting failed
                                  #  - e.g. KMS_KEY disabled or missing
                                  #If encryption failure happens while sending to TARGET
                                  #  - as opposed to while receiving EVENT in BUS
                                  #  - then uses TARGET.DeadLetterConfig instead
                                  #Only if BUS.KmsKeyIdentifier set
                                  #  - recommended then

TARGET.DeadLetterConfig.Arn       #'SQS_QUEUE_ARN' to send failed EVENTs when could not send to TARGET
                                  #Also when request waited 24h due to throttling
                                  #  - including through API_DEST.InvocationRateLimitPerSecond
                                  #Recommended

BUG|TARGET.DeadLetterConfig.Arn   #Retries are done first
                                  #QUEUE must be in same REGION
                                  #QUEUE cannot be FIFO
                                  #Sets the following QUEUE MESSAGE_ATTRs
MESSAGE_ATTRS.RULE_ARN            #'RULE_ARN'
MESSAGE_ATTRS.TARGET_ARN          #'TARGET_ARN'
MESSAGE_ATTRS.ERROR_CODE          #'CODE'
MESSAGE_ATTRS.ERROR_MESSAGE       #'MESSAGE'
MESSAGE_ATTRS
 .EXHAUSTED_RETRY_CONDITION       #'MaximumEventAgeInSeconds' or 'MaximumRetryAttempts'
MESSAGE_ATTRS.RETRY_ATTEMPTS      #NUM
MESSAGE_ATTRS.IS_PAYLOAD_TRUNCATED#'BOOL'

                                  ┌──────────────┐
                                  │   DLQ AUTH   │
                                  └──────────────┘

PACTION sqs:SendMessage           #Must be allowed on QUEUE
                                  #  - Principal.Service 'events.amazonaws.com'
                                  #  - COND_KEY aws:SourceArn BUS_ARN|RULE_ARN

PACTION kms:*                     #Also when SQS-KMS (see SQS doc)

                                  ┌─────────────┐
                                  │   DLQ IAC   │
                                  └─────────────┘

AWS::Events::EventBus             #Includes RESPROPs: DeadLetterConfig

AWS::Events::Rule                 #Includes RESPROPs: Targets[*]: DeadLetterConfig

                                  ┌─────────────────┐
                                  │   DLQ METRICS   │
                                  └─────────────────┘

AWS/Events/InvocationsSentToDlq   #NUM of TARGET calls moved to DLQ
AWS/Events/
 InvocationsFailedToBeSentToDlq   #NUM of TARGET calls that failed to be moved to DLQ

                                  ┌──────────────┐
                                  │   DLQ LINT   │
                                  └──────────────┘

cfn-lint-serverless
aws_cloudwatch_event_target_no_dlq
ES4000                            #TARGET.DeadLetterConfig must be set

                                  ┌──────────────────────┐
                                  │   HTTP DESTINATION   │
                                  └──────────────────────┘

API_DEST                          #TARGET that makes a HTTP request
                                  #Timeout 5s
                                  #Max 3e3 (soft) per REGION|ACCOUNT
API_DEST.ApiDestinationArn        #'API_DEST_ARN'. 'arn:aws:events:REGION:ACCOUNT_ID:api-destination/API_DEST'
API_DEST.Name                     #'API_DEST'
                                  #Must be [:alnum:].-, max 64 chars
API_DEST.Description              #STR. Max 512 chars
API_DEST.CreationTime             #DATE_NUM
API_DEST.LastModifiedTime         #DATE_NUM

API_DEST.ApiDestinationState      #'ACTIVE' or 'INACTIVE'

API_DEST.HttpMethod               #'HTTP_METHOD', uppercased
API_DEST.InvocationEndpoint       #'https://...'
                                  #Max 2KB

API_DEST
 .InvocationRateLimitPerSecond    #NUM (def|max: 300). Max NUM requests per second.

TARGET.Arn                        #'API_DEST_ARN'
TARGET.HttpParameters             #HTTP_TARGET. Request parameters
                                  #Keys|values can be 'JSONPATH' (except HEADER names)
HTTP_TARGET.PathParameterValues   #'VAL'_ARR
                                  #Must use * in API_DEST.InvocationEndpoint
HTTP_TARGET
 .QueryStringParameters.PARAM     #'VAL'
HTTP_TARGET                       #'VAL'
 .HeaderParameters.HEADER         #Cannot specify most standard headers

Content-Type [C]                  #Def: 'application/json; charset=utf-8'
Retry-After [S]                   #Can be used to increase retry delay
                                  #Can be -1 to stop retrying

                                  ┌───────────────────────────┐
                                  │   HTTP DESTINATION AUTH   │
                                  └───────────────────────────┘

PACTION                           #Must be allowed on TARGET.RoleArn, in order to call API_DEST
 events:InvokeApiDestination      #Resource is API_DEST_ARN

                                  ┌──────────────────────────┐
                                  │   HTTP DESTINATION API   │
                                  └──────────────────────────┘

CreateApiDestination()            #Req: API_DEST
                                  #  - no ApiDestination*, *Time
                                  #Res: API_DEST
                                  #  - only ApiDestination*, *Time
UpdateApiDestination()            #Req: API_DEST
                                  #  - no ApiDestination*, *Time
                                  #Res: API_DEST
                                  #  - only ApiDestination*, *Time
ListApiDestinations()             #Req: API_DEST
                                  #  - only Name -> NamePrefix
                                  #  - only ConnectionArn
                                  #Res: ApiDestinations API_DEST_ARR
DescribeApiDestination()          #Req: API_DEST
                                  #  - only Name
                                  #Res: API_DEST
DeleteApiDestination()            #Req: API_DEST
                                  #  - only Name
                                  #Res: empty

                                  ┌──────────────────────────┐
                                  │   HTTP DESTINATION IAC   │
                                  └──────────────────────────┘

AWS::Events::ApiDestination       #RESPROPs: Name, Description, HttpMethod, InvocationEndpoint, InvocationRateLimitPerSecond
                                  #RESATTRs: Arn

AWS::Events::Rule                 #Includes RESPROPs: Targets[*]: Arn, HttpParameters

                                  ┌────────────────────────────────────────┐
                                  │   HTTP DESTINATION EVENTBRIDGE EVENT   │
                                  └────────────────────────────────────────┘

EVENT_TYPE                        #EventBridge EVENT emitted when API_DEST.Status changes
 'API Destination STATUS'         #STATUS is API_DEST.ApiDestinationState but renamed to 'Activated|Deactivated'
SOURCE                            #'aws.events'
DETAIL.Timestamp                  #'DATE'
DETAIL.ApiDestinationName         #'API_DEST'

                                  ┌────────────────┐
                                  │   CONNECTION   │
                                  └────────────────┘

CONN                              #Sets of secret (e.g. auth-related) HTTP requests parameters, used by an API_DEST
                                  #Max 3e3 (soft) per REGION|ACCOUNT
CONN.ConnectionArn                #'CONN_ARN'. 'arn:aws:events:REGION:ACCOUNT_ID:connection/CONN'
CONN.Name                         #'CONN'
                                  #Must be [:alnum:]-. and max 64 chars
CONN.Description                  #STR. Max 512 chars
CONN.CreationTime                 #DATE_NUM
CONN.LastModifiedTime             #DATE_NUM
CONN.LastAuthorizedTime           #DATE_NUM. Last time CONN.ConnectionState became AUTHORIZED

CONN.ConnectionState              #One of:
                                  #  - CREATING
                                  #  - UPDATING
                                  #  - AUTHORIZING: with OAuth or PRIVATE_CONN
                                  #  - AUTHORIZED: active
                                  #  - ACTIVE: same but with PRIVATE_CONN
                                  #  - DEAUTHORIZING, DEAUTHORIZED:
                                  #     - authorization error or DeauthorizeConnection()
                                  #     - cannot re-authorize
                                  #     - removes CONN's SECRET
                                  #  - FAILED_CONNECTIVITY
                                  #  - DELETING
CONN.StateReason                  #STR

API_DEST.ConnectionArn            #'CONN_ARN'. Required

                                  ┌────────────────────┐
                                  │   CONNECTION API   │
                                  └────────────────────┘

CreateConnection()                #Req: CONN
                                  #  - no Connection*, *Time, SecretArn, StateReason
                                  #  - no PRIVATE_CONN.ResourceAssociationArn
                                  #Res: CONN
                                  #  - only Connection*, CreationTime, LastModifiedTime
UpdateConnection()                #Req: CONN
                                  #  - no Connection*, *Time, SecretArn, StateReason
                                  #  - no PRIVATE_CONN.ResourceAssociationArn
                                  #Res: CONN
                                  #  - only Connection*, *Time
ListConnections()                 #Req: CONN
                                  #  - only Name -> NamePrefix
                                  #  - only ConnectionState
                                  #Res: CONN
                                  #  - no *Parameters, Description, SecretArn
DescribeConnection()              #Req: CONN
                                  #  - only Name
                                  #Res: CONN
                                  #  - no CONN_APIKEY.ApiKeyValue, CONN_BASIC.Password, CLIENT_OAUTH.ClientSecret
DeauthorizeConnection()           #Req: CONN
                                  #  - only Name
                                  #Res: CONN
                                  #  - only Connection*, *Time
                                  #Unsets CONN_AUTH.*
DeleteConnection()                #Req: CONN
                                  #  - only Name
                                  #Res: CONN
                                  #  - only Connection*, *Time

                                  ┌────────────────────┐
                                  │   CONNECTION IAC   │
                                  └────────────────────┘

AWS::Events::Connection           #RESPROPs: Name, Description
                                  #RESATTRs: Arn

AWS::Events::ApiDestination       #RESPROPs: ConnectionArn

                                  ┌──────────────────────────────────┐
                                  │   CONNECTION EVENTBRIDGE EVENT   │
                                  └──────────────────────────────────┘

EVENT_TYPE 'Connection STATUS'    #EventBridge EVENT emitted when CONN.ConnectionStatus changes
                                  #STATUS is CONN.ConnectionStatus but renamed to:
                                  #  - 'Creation Started'
                                  #  - 'Update Started'
                                  #  - 'Authorization Started', 'Authorized
                                  #  - 'Deauthorization Started', 'Deauthorized'
                                  #  - 'Activated'
                                  #  - 'Failed Connectivity'
                                  #  - 'Deletion Started'
SOURCE                            #'aws.events'
DETAIL.Timestamp                  #'DATE'
DETAIL.ConnectionName|StateReason #CONN.*

                                  ┌────────────────────────────┐
                                  │   CONNECTION AUTH PARAMS   │
                                  └────────────────────────────┘

CONN.AuthParameters               #CONN_AUTH. Auth-related HTTP request parameters

CONN_AUTH.InvocationHttpParameters#CONN_PARAMS
                                  #Merged with TARGET|PIPE_DEST|ENRICH.HttpParameters (if any), with higher priority
CONN_PARAMS.HeaderParameters
 |QueryStringParameters           #CONN_PARAM_ARR
 |BodyParameters                  #Max 100 items
CONN_PARAM.Key                    #'VAR'. Max 512 chars
CONN_PARAM.Value                  #'VAL'. Max 512 chars

CONN.AuthorizationType            #'BASIC'. HTTP Basic auth
CONN_AUTH.BasicAuthParameters     #CONN_BASIC
CONN_BASIC.Username               #'USERNAME'. Max 512 chars
CONN_BASIC.Password               #'PASSWORD'. Max 512 chars

CONN.AuthorizationType            #'API_KEY'. HTTP Digest auth
CONN_AUTH.ApiKeyAuthParameters    #CONN_APIKEY
CONN_APIKEY.ApiKeyName            #'VAR'. Max 512 chars
CONN_APIKEY.ApiKeyValue           #'VAL'. Max 512 chars

CONN.AuthorizationType            #'OAUTH_CLIENT_CREDENTIALS'. OAuth
                                  #OAuth token automatically refreshed on either:
                                  #  - 401|407
                                  #  - token expiration time getting close
CONN_AUTH.OAuthParameters         #CONN_OAUTH
CONN_OAUTH.HttpMethod             #'POST|PUT|GET'
CONN_OAUTH.AuthorizationEndpoint  #'AUTH_URL'
CONN_OAUTH.ClientParameters
 .ClientID                        #'CLIENT_ID'
CONN_OAUTH.ClientParameters
 .ClientSecret                    #'CLIENT_SECRET'
CONN_OAUTH.OAuthHttpParameters    #CONN_PARAMS

CONN.SecretArn                    #Secrets Manager 'SECRET_ARN' encrypting CONN.* at rest
                                  #Named 'events!connection/...'
CONN_PARAM.IsValueSecret          #BOOL (def: false). Encrypt using CONN.SecretArn

                                  ┌─────────────────────────────────┐
                                  │   CONNECTION AUTH PARAMS AUTH   │
                                  └─────────────────────────────────┘

PACTION actions
 :RetrieveConnectionCredentials   #Allow reading CONN.SecretArn

aws-service-role/                 #SERVICE_LINKED_ROLE used by API_DEST to allow it writing|reading SECRET referenced by CONN.SecretArn
 AWSServiceRoleForAmazon          #Automatically created when using a CONN
 EventBridgeApiDestinations       #  - providing has PACTIONs iam:CreateServiceLinkedRole for that ROLE
                                  #     - COND_KEY iam:AWSServiceName 'apidestinations.events.amazonaws.com'

AmazonEventBridgeApiDestinations  #AWS managed POLICY used by AWSServiceRoleForAmazonEventBridgeApiDestinations. Allows:
 ServiceRolePolicy                #  - secretsmanager:Create|Update|Describe|DeleteSecret(), Put|GetSecretValue()
                                  #  - on SECRET 'events!connection/*'

AmazonEventBridgeFullAccess       #Includes same permissions as above
                                  #Also includes iam:CreateServiceLinkedRole on above ROLE

                                  ┌────────────────────────────────┐
                                  │   CONNECTION AUTH PARAMS IAC   │
                                  └────────────────────────────────┘

AWS::Events::Connection           #Includes RESPROPs: AuthorizationType, AuthParameters
                                  #Includes RESATTRs: SecretArn
                                  #Should avoid secrets in templates, i.e. for secret values, should:
                                  #  - use own Secrets Manager SECRET
                                  #  - use '{{resolve:secretsmanager:...}}'

                                  ┌────────────────────────┐
                                  │   CONNECTION PRIVATE   │
                                  └────────────────────────┘

CONN
 .InvocationConnectivityParameters
 .ResourceParameters              #PRIVATE_CONN. CONN to VPC
CONN_AUTH.ConnectivityParameters
 .ResourceParameters              #PRIVATE_CONN. OAuth to VPC

PRIVATE_CONN                      #'VPC_LATTICE_CONF_ARN'
 .ResourceConfigurationArn        #Must be in same REGION, but can be in different ACCOUNT
PRIVATE_CONN                      #'VPC_LATTICE_RESOURCE_ASSOC_ARN'
 .ResourceAssociationArn          #Also sets TAG ManagedByServiceAWSEventBridge 'ACCOUNT_ID:CONN'

                                  ┌─────────────────────────────┐
                                  │   CONNECTION PRIVATE AUTH   │
                                  └─────────────────────────────┘

PACTION vpc-lattice:CreateService
 NetworkResourceAssociation
 |GetResourceConfiguration
 |AssociateViaAWSService-
 EventsAndStates                  #Must be allowed for Service.Principal 'events.amazonaws.com'

                                  ┌────────────────────────────┐
                                  │   CONNECTION PRIVATE IAC   │
                                  └────────────────────────────┘

AWS::Events::Connection           #Includes RESPROPs: InvocationConnectivityParameters, AuthParameters.ConnectivityParameters
                                  #Includes RESATTRs: ResourceParameters.ResourceAssociationArn from the above two

                                  ┌────────────────┐
                                  │   ENCRYPTION   │
                                  └────────────────┘

BUS.KmsKeyIdentifier              #'KMS_KEY_ARN|MID' (def: AWS managed). Encrypt EVENTs at rest
                                  #Only AWS managed key encrypts the following: AWS SERVICE EVENTs, API_DEST, ARCHIVE, FILTERS, INPUT_TRANSFORM
                                  #I.e. above is not encrypted if using a custom KEY

                                  ┌─────────────────────┐
                                  │   ENCRYPTION AUTH   │
                                  └─────────────────────┘

PACTION kms:Decrypt               #If BUS.KmsKeyIdentifier set, must be allowed for Principal.Service 'events.amazonaws.com'
 |GenerateDataKey|DescribeKey     #COND_KEY kms:EncryptionContext:aws:events:event-bus:arn BUS_ARN
                                  #COND_KEY aws:SourceArn BUS_ARN
                                  #COND_KEY aws:SourceAccount ACCOUNT_ID

                                  ┌────────────────────┐
                                  │   ENCRYPTION IAC   │
                                  └────────────────────┘

AWS::Events::EventBus             #Includes RESPROPs: KmsKeyIdentifier

                                  ┌──────────────┐
                                  │   ENDPOINT   │
                                  └──────────────┘

ENDPOINT                          #Redirects PutEvents() to a failover REGION2 when the primary REGION is unavailable
                                  #Failover and recovery happen in up to 5 mins
                                  #Optional
                                  #Max 100 (soft) per REGION|ACCOUNT
ENDPOINT.Arn                      #'ENDPOINT_ARN'. 'arn:aws:events:REGION:ACCOUNT_ID:endpoint/ENDPOINT'
ENDPOINT.Name                     #'ENDPOINT'
                                  #Must be globally unique, e.g. include 'REGION' in its name
                                  #Must be [:alnum:]-. and 64 chars
ENDPOINT.Description              #STR. Max 512 chars
ENDPOINT.CreationTime             #DATE_NUM
ENDPOINT.LastModifiedTime         #DATE_NUM

ENDPOINT.EndpointId               #'ENDPOINT_SUBDOMAIN', automatically created
EVENTS.EndpointId                 #'ENDPOINT_SUBDOMAIN'. Must be set to use ENDPOINT
                                  #Requires signature 4a (see AWS signature doc)
ENDPOINT.EndpointUrl              #'https://ENDPOINT_SUBDOMAIN.endpoints.event.amazonaws.com'

ENDPOINT.State                    #Can be:
                                  #  - CREATING, CREATE_FAILED
                                  #  - UPDATING, UPDATE_FAILED
                                  #  - ACTIVE
                                  #  - DELETING, DELETE_FAILED
ENDPOINT.StateReason              #STR

ENDPOINT.HomeRegion               #Primary 'REGION'
ENDPOINT.EventBuses[0].EventBusArn#'BUS_ARN' in primary REGION
ENDPOINT.RoutingConfig
 .FailoverConfig
 .Primary.HealthCheck             #'ROUTE53_HEALTHCHECK_ARN' in primary REGION. Required

ENDPOINT.RoutingConfig
 .FailoverConfig.Secondary.Route  #Failover 'REGION2'
ENDPOINT.EventBuses[1].EventBusArn#'BUS_ARN' in failover|secondary REGION
                                  #Must have same 'BUS' name + ACCOUNT as primary

ENDPOINT.ReplicationConfig.State  #'ENABLED' (def) or 'DISABLED'
                                  #Replicate EVENTs from primary REGION to secondary REGION2
                                  #For inverse (during recovery), must use REPLAY instead

                                  ┌───────────────────┐
                                  │   ENDPOINT AUTH   │
                                  └───────────────────┘

ENDPOINT.RoleArn                  #'ROLE_ARN' used to replicate EVENTs to REGION2

COND_KEY events:EventBusArn       #'BUS_ARN'. With CreateEndpoint|UpdateEndpoint()

                                  ┌──────────────────┐
                                  │   ENDPOINT API   │
                                  └──────────────────┘

CreateEndpoint()                  #Req: ENDPOINT
                                  #  - no *Time, StateReason
                                  #  - no EndpointId, EndpointUrl
                                  #  - no State
                                  #  - no Arn
                                  #Res: ENDPOINT
                                  #  - no *Time, StateReason
                                  #  - no Description
                                  #  - no EndpointId, EndpointUrl
UpdateEndpoint()                  #Req: ENDPOINT
                                  #  - no *Time, StateReason
                                  #  - no EndpointId, EndpointUrl
                                  #  - no State
                                  #  - no Arn
                                  #Res: ENDPOINT
                                  #  - no *Time, StateReason
                                  #  - no Description
ListEndpoints()                   #Req: ENDPOINT
                                  #  - only Name -> NamePrefix
                                  #  - only HomeRegion
                                  #Res: Endpoints ENDPOINT_ARR
                                  #  - no HomeRegion
DescribeEndpoint()                #Req: ENDPOINT
                                  #  - only Name, HomeRegion
                                  #Res: ENDPOINT
                                  #  - no HomeRegion
DeleteEndpoint()                  #Req: ENDPOINT
                                  #  - only Name
                                  #Res: empty

                                  ┌──────────────────┐
                                  │   ENDPOINT IAC   │
                                  └──────────────────┘

AWS::Events::Endpoint             #RESPROPs: Name, Description, EventBuses, RoutingConfig, ReplicationConfig, RoleArn
                                  #RESATTRs: Arn, EndpointId, EndpointUrl, State, StateReason

                                  ┌─────────────┐
                                  │   ARCHIVE   │
                                  └─────────────┘

ARCHIVE                           #Stores EVENTs
                                  #Not if BUS.KmsKeyIdentifier set
ARCHIVE.ArchiveArn                #'ARCHIVE_ARN'. 'arn:aws:events:REGION:ACCOUNT_ID:archive/ARCHIVE'
ARCHIVE.ArchiveName               #'ARCHIVE'
                                  #Must be [:alnum:]-._ and max 48 chars
ARCHIVE.Description               #STR. Max 512 chars
ARCHIVE.CreationTime              #DATE_NUM

ARCHIVE.State                     #One of:
                                  #  - CREATING, CREATE_FAILED
                                  #  - UPDATING, UPDATE_FAILED
                                  #  - ENABLED
                                  #  - DISABLED: when deleting
ARCHIVE.StateReason               #STR

ARCHIVE.EventSourceArn            #'BUS_ARN'
ARCHIVE.EventPattern              #'FILTERS_JSON' (see above)
                                  #Def: none, i.e. any EVENT

ARCHIVE.RetentionDays             #NUM of days to keep EVENTs
                                  #Def: 0, i.e. forever until ARCHIVE deleted

ARCHIVE.EventCount                #Approximate NUM of stored EVENTs
ARCHIVE.SizeBytes                 #Approximate NUM of bytes of stored EVENTs

                                  ┌─────────────────┐
                                  │   ARCHIVE API   │
                                  └─────────────────┘

CreateArchive()                   #Req: ARCHIVE
                                  #  - no ArchiveArn, CreationTime, State*
                                  #  - no EventCount, SizeBytes
                                  #Res: ARCHIVE
                                  #  - only ArchiveArn, CreationTime, State*
UpdateArchive()                   #Req: ARCHIVE
                                  #  - no ArchiveArn, CreationTime, State*
                                  #  - no EventCount, SizeBytes
                                  #  - no EventSourceArn
                                  #Res: ARCHIVE
                                  #  - only ArchiveArn, CreationTime, State*
ListArchives()                    #Req: ARCHIVE
                                  #  - only ArchiveName -> NamePrefix
                                  #  - only EventSourceArn, State
                                  #Res: Archives ARCHIVE_ARR
                                  #  - no ArchiveArn, Description, EventPattern
DescribeArchive()                 #Req: ARCHIVE
                                  #  - only ArchiveName
                                  #Res: ARCHIVE
DeleteArchive()                   #Req: ARCHIVE
                                  #  - only ArchiveName
                                  #Res: empty

                                  ┌─────────────────┐
                                  │   ARCHIVE IAC   │
                                  └─────────────────┘

AWS::Events::Archive              #RESPROPs: ArchiveName, Description, SourceArn, EventPattern STR, RetentionDays
                                  #RESATTRs: Arn

                                  ┌────────────┐
                                  │   REPLAY   │
                                  └────────────┘

REPLAY                            #Re-emit stored EVENTs
                                  #Replayed EVENTs are not stored themselves (since already stored)
                                  #EVENTs are emitted in-order per-minute, all at once within each minute
                                  #Max 10 at once per REGION|ACCOUNT
REPLAY.ReplayArn                  #'REPLAY_ARN'. 'arn:aws:events:REGION:ACCOUNT_ID:replay/REPLAY'
REPLAY.ReplayName                 #'REPLAY'
                                  #Must be [:alnum:].-_ and max 64 chars
REPLAY.Description                #STR. Max 512 chars

REPLAY.State                      #Can be:
                                  #  - STARTING
                                  #  - RUNNING
                                  #  - CANCELLING, CANCELLED
                                  #  - COMPLETED, FAILED
REPLAY.StateReason                #STR

REPLAY.EventSourceArn             #'ARCHIVE_ARN' where EVENTs are stored
REPLAY.Destination.Arn            #'BUS_ARN' where to re-emit EVENTs
REPLAY.Destination.FilterArns     #'RULE_ARN'_ARR (def: any) which can be used, in that BUS

REPLAY.EventStartTime             #DATE_NUM of first EVENT to re-emit. Required
REPLAY.EventEndTime               #DATE_NUM of last EVENT to re-emit. Required
REPLAY.EventLastReplayedTime      #DATE_NUM of current EVENT being emitted
REPLAY.ReplayStartTime            #DATE_NUM when REPLAY started
REPLAY.ReplayEndTime              #DATE_NUM when REPLAY ended. Not set if did not end

                                  ┌────────────────┐
                                  │   REPLAY API   │
                                  └────────────────┘

StartReplay()                     #Req: REPLAY
                                  #  - no ReplayArn
                                  #  - no EventLastReplayedTime, Replay*Time, State*
                                  #Res: REPLAY
                                  #  - only ReplayArn, ReplayStartTime, State*
ListReplays()                     #Req: REPLAY
                                  #  - only ReplayName -> NamePrefix
                                  #  - only EventSourceArn, State
                                  #Res: Replays REPLAY_ARR
                                  #  - no ReplayArn
                                  #  - no Description, Destination
DescribeReplay()                  #Req: REPLAY
                                  #  - only ReplayName
                                  #Res: REPLAY
CancelReplay()                    #Req: REPLAY
                                  #  - only ReplayName
                                  #Res: REPLAY
                                  #  - only ReplayArn, State*

                                  ┌────────────┐
                                  │   POLICY   │
                                  └────────────┘

BUS.Policy                        #IAM 'POLICY_DOC'. BUS_POLICY
                                  #Resource-level POLICY on a BUS, i.e. Resource is BUS_ARN
                                  #Principal must be 'ACCOUNT_ID'
                                  #  - this can be worked around using either:
                                  #     - COND_KEY aws:PrincipalArn or aws:SourceArn|SourceAccount
                                  #     - identity-level POLICY instead
                                  #PACTIONs are only cross-REGION|ACCOUNT ones (see below)
                                  #Max 10KB (soft)
                                  #Def: allows nothing

PERMISSION                        #Sets a STATEMENT in BUS.Policy
PERMISSION.StatementId            #STATEMENT.Sid
PERMISSION.EventBusName           #'BUS' (def: 'default'). STATEMENT.Resource
PERMISSION.Action                 #'PACTION'. STATEMENT.Action
                                  #Can only be 'events:PutEvents'. For other PACTIONs, must use PERMISSION.Policy
PERMISSION.Principal              #'ACCOUNT_ID|*'. STATEMENT.Principal

PERMISSION.Condition              #PERMISSION_COND_KEY. STATEMENT.Conditions.CONDITION_OP.COND_KEY 'VAL'
PERMISSION_COND_KEY.Type          #'CONDITION_OP'. Can only be 'StringEquals'
PERMISSION_COND_KEY.Key           #'COND_KEY'. Can only be 'aws:PrincipalOrgID'
PERMISSION_COND_KEY.Value         #'VAL'. Can only be 'ORG_ID'

PERMISSION.Policy                 #IAM 'POLICY_DOC_JSON'. Alternative to PERMISSION.StatementId|Action|Principal|Condition
                                  #Sets all STATEMENTs in BUS.Policy

PERMISSION.RemoveAllPermissions   #BOOL (def: false). Remove all PERMISSIONs instead of specifying one with PERMISSION.StatementId

                                  ┌─────────────────┐
                                  │   POLICY AUTH   │
                                  └─────────────────┘

CROSS-REGION|ACCOUNT REQUESTS ==> #Allowed by using Pricipal with another ACCOUNT, in BUS_POLICY
                                  #Only for PACTIONs: events:PutEvents(), events:*Rule*(), events:*Target*(), events:*Tag*(), events:DescribeEventBus()
                                  #Can also be '*' for all the above PACTIONs

ANONYMOUS REQUESTS ==>            #Allowed by using Principal '*', in BUS_POLICY
                                  #Not recommended, except to target an ORG by using COND_KEY aws:PrincipalOrgId

PACTION events:AddPermission
 |RemovePermission                #Do not require PACTION events:UpdateEventBus, even though they set BUS.Policy

                                  ┌────────────────┐
                                  │   POLICY API   │
                                  └────────────────┘

PutPermission()                   #Req: PERMISSION
                                  #Res: empty
RemovePermission()                #Req: PERMISSION
                                  #  - only EventBusName, StatementId
                                  #  - only one with RemoveAllPermissions
                                  #Res: empty

                                  ┌────────────────┐
                                  │   POLICY IAC   │
                                  └────────────────┘

AWS::Events::EventBus             #Includes RESPROPs: Policy

AWS::Events::EventBusPolicy       #RESPROPs:
                                  #  - StatementId, EventBusName, Action, Principal, Condition
                                  #  - Statement STATEMENT_OBJ (which sets PERMISSION.Policy)
                                  #Not with Cloud Control (as of now)

                                  ┌─────────────────┐
                                  │   POLICY LINT   │
                                  └─────────────────┘

cdk-nag EventBusOpenAccess        #BUS_POLICY must not allow anonymous requests

                                  ┌──────────┐
                                  │   TAGS   │
                                  └──────────┘

RESOURCE_TAGS.ResourceARN         #'ARN'
RESOURCE_TAGS.Tags
BUS|RULE.Tags                     #TAG_PAIRS

                                  ┌──────────────┐
                                  │   TAGS API   │
                                  └──────────────┘

TagResource()                     #Req: RESOURCE_TAGS
                                  #Res: empty
ListTagsForResource()             #Req: RESOURCE_TAGS
                                  #  - only ResourceARN
                                  #Res: RESOURCE_TAGS
                                  #  - only Tags
UntagResource()                   #Req: RESOURCE_TAGS
                                  #  - Tags OBJ -> TagKeys 'TAG'_ARR
                                  #Res: empty

                                  ┌──────────────┐
                                  │   TAGS IAC   │
                                  └──────────────┘

AWS::Events::EventBus             #Includes RESPROPs: Tags

                                  ┏━━━━━━━━━━━━━━━━━━━━━━━┓
                                  ┃   EVENTBRIDGE PIPES   ┃
                                  ┗━━━━━━━━━━━━━━━━━━━━━━━┛

VERSION ==>                       #2024-12-20

                                  ┌─────────┐
                                  │   API   │
                                  └─────────┘

SERVICE_DOMAIN                    #'pipes.REGION.amazonaws.com'

FORMAT ==>                        #REST API
                                  #Request:
                                  #  - POST|PUT: path parameters + JSON
                                  #  - GET|DELETE: path parameters + query parameters (camelCase'd)
                                  #Response: JSON

PAGINATION ==>                    #Uses REQ.Limit (def|max: 100) + REQ|RES.NextToken
                                  #No pagination: ListTagsForResource()

PRICING ==>                       #1$ per 2.5e6 PEVENTs
                                  #  - only ones matching FILTERS
                                  #  - multiplied by NUM of 64KB chunks

                                  ┌──────────┐
                                  │   AUTH   │
                                  └──────────┘

AmazonEventBridgePipesFullAccess  #AWS managed POLICY. Grants all 'pipes:*' PACTIONs
AmazonEventBridgePipes
 OperatorAccess                   #AWS managed POLICY. Grants Start|Stop|List|DescribePipe() + ListTagsForResource()
AmazonEventBridgePipes
 ReadOnlyAccess                   #AWS managed POLICY. Grants all readonly 'pipes:*' PACTIONs

                                  ┌──────────┐
                                  │   PIPE   │
                                  └──────────┘

PIPE                              #Like:
                                  #  - Lambda EVENT_SOURCE
                                  #  - EventBridge BUS
                                  #  - single RULE
                                  #  - single TARGET
                                  #But:
                                  #  - cheaper
                                  #  - simpler
                                  #  - more advanced transformation logic
                                  #  - more options for TARGET
                                  #Max 1e3 (soft) per ACCOUNT

PIPE_EXEC                         #Single batch from PIPE.Source being processed
                                  #Max 3e3 (REGION-specific) (soft) PIPE_EXECs at once per ACCOUNT

PIPE.Arn                          #'PIPE_ARN'. 'arn:aws:pipes:REGION:ACCOUNT_ID:pipe/PIPE'
PIPE.Name                         #'PIPE'
                                  #Must be [:alnum:].-_ and max 64 chars
PIPE.Description                  #STR. Max 512 chars
PIPE.CreationTime                 #DATE_NUM
PIPE.LastModifiedTime             #DATE_NUM

PIPE.CurrentState                 #One of:
                                  #  - CREATING, CREATE[_ROLLBACK]_FAILED
                                  #  - UPDATING, UPDATE[_ROLLBACK]_FAILED
                                  #  - STARTING, RUNNING, START_FAILED
                                  #  - STOPPING, STOPPED, STOP_FAILED
                                  #  - DELETING, DELETE[_ROLLBACK]_FAILED
PIPE.StateReason                  #STR
PIPE.DesiredState                 #Updating whether 'RUNNING' or 'STOPPED'
                                  #By default, 'RUNNING' (more info with DescribePipe())

                                  ┌───────────────┐
                                  │   PIPE AUTH   │
                                  └───────────────┘

PIPE.RoleArn                      #'ROLE_ARN' used to interact with PIPE.Source|Enrichment|Target
                                  #Which permission is required is SERVICE-specific
                                  #Must be assumable by Principal.Service 'pipes.amazonaws.com'
                                  #Should use COND_KEY aws:SourceArn PIPE_ARN, aws:SourceAccount ACCOUNT_ID

PACTION iam:PassRole              #Required on current PRINCIPAL
                                  #Should use COND_KEY iam:PassedToService 'pipes.amazonaws.com'

AmazonEventBridgePipesFullAccess
AmazonEventBridgeFullAccess       #Also allow PACTION iam:PassRole, as described above

                                  ┌──────────────┐
                                  │   PIPE API   │
                                  └──────────────┘

POST /v1/pipes/PIPE               #Req:
CreatePipe()                      #  - no Arn, Name, *Time, CurrentState, StateReason
                                  #Res: PIPE
                                  #  - no Description, *Parameters, KmsKeyIdentifier, LogConfiguration, RoleArn
                                  #  - no Enrichment, Source, StateReason, Target
                                  #  - no Tags
PUT /v1/pipes/PIPE                #Req:
UpdatePipe()                      #  - no Arn, Name, *Time, CurrentState, StateReason
                                  #  - no Source
                                  #  - no SourceParameters:
                                  #     - *Parameters.StartingPosition*
                                  #     - *MQBrokerParameters.QueueName
                                  #     - RabbitMQBrokerParameters.VirtualHost
                                  #     - *KafkaParameters.TopicName|ConsumerGroupID
                                  #     - SelfManagedKafkaParameters.AdditionalBootstrapServers|
                                  #  - no Tags
                                  #Res: PIPE
                                  #  - no Description, *Parameters, KmsKeyIdentifier, LogConfiguration, RoleArn
                                  #  - no Enrichment, Source, StateReason, Target
                                  #  - no Tags
POST /v1/pipes/PIPE/start         #Req: PIPE
StartPipe()                       #  - only Name
                                  #Res: PIPE
                                  #  - no Description, *Parameters, KmsKeyIdentifier, LogConfiguration, RoleArn
                                  #  - no Enrichment, Source, StateReason, Target
                                  #  - no Tags
POST /v1/pipes/PIPE/stop          #Req: PIPE
StopPipe()                        #  - only Name
                                  #Res: PIPE
                                  #  - no Description, *Parameters, KmsKeyIdentifier, LogConfiguration, RoleArn
                                  #  - no Enrichment, Source, StateReason, Target
                                  #  - no Tags
GET /v1/pipes                     #Req: PIPE
ListPipes()                       #  - only CurrentState, DesiredState
                                  #  - only Name|Source|Target -> NamePrefix|SourcePrefix|TargetPrefix
                                  #Res: Pipes PIPE_ARR
                                  #  - no Description, *Parameters, KmsKeyIdentifier, LogConfiguration, RoleArn
                                  #  - no Tags
GET /v1/pipes/PIPE                #Req: PIPE
DescribePipe()                    #  - only Name
                                  #Res: PIPE
DELETE /v1/pipes/PIPE             #Req: PIPE
DeletePipe()                      #  - only Name
                                  #Res: PIPE
                                  #  - no Description, *Parameters, KmsKeyIdentifier, LogConfiguration, RoleArn
                                  #  - no Enrichment, Source, StateReason, Target
                                  #  - no Tags

                                  ┌──────────────┐
                                  │   PIPE IAC   │
                                  └──────────────┘

AWS::Pipes::Pipe                  #RESPROPs: Name, Description, DesiredState, RoleArn
                                  #RESATTRs: Arn, CreationTime, LastModifiedTime, CurrentState, StateReason

GENERATE TEMPLATE ==>             #In UI, can generate CloudTemplate template from existing PIPEs
                                  #  - also its related API_DEST|BUS (if used as a TARGET) and ROLE

                                  ┌──────────────────┐
                                  │   PIPE METRICS   │
                                  └──────────────────┘

AWS/Pipes/Concurrency             #NUM of PIPE_EXECs
                                  #DVAR AwsAccountId 'ACCOUNT_ID'
AWS/Pipes/ExecutionThrottled      #NUM of PIPE_EXECs throttled
                                  #DVAR AwsAccountId 'ACCOUNT_ID'
AWS/Pipes/ExecutionTimeout        #NUM of PIPE_EXECs timed out
AWS/Pipes/ExecutionFailed         #NUM of PIPE_EXECs failed
AWS/Pipes/ExecutionPartiallyFailed#NUM of PIPE_EXECs partially failed

AWS/Pipes/Duration                #Duration (in ms) of PIPE_EXECs

DVAR PipeName                     #'PIPE'
                                  #With all AWS/Pipes/* METRICs except Concurrency
                                  #Also sent as a metric TELEMETRY_ENTITY

                                  ┌──────────────────┐
                                  │   PIPE LOGGING   │
                                  └──────────────────┘

CLOUDTRAIL ==>                    #*Pipe*() are logged with CloudTrail as data EVENTs
                                  #PIPE is LOG_RESOURCE

                                  ┌────────────┐
                                  │   SOURCE   │
                                  └────────────┘

PIPE.Source                       #'ARN' where PEVENTs are pulled from. SERVICE-specific.
                                  #Each SERVICE documented it in its respective docs
                                  #Use same infrastructure as Lambda EVENT_SOURCE under-the-hood

PIPE.SourceParameters             #PIPE_SRC
PIPE_SRC.*Parameters              #OBJ. SERVICE-specific options
                                  #Each SERVICE documented it in its respective docs

BATCHING ==>                      #Most sources produce ARRs of messages
                                  #  - i.e. an ARR is sent to TARGET
                                  #ARR cannot be larger than TARGET's max length for inputs
                                  #  - e.g. 10 with SQS, 1e4 with CloudWatch Logs, etc.
                                  #  - if target does not support ARR of messages as input, source but produce use batch size 1

                                  ┌────────────────┐
                                  │   SOURCE IAC   │
                                  └────────────────┘

AWS::Pipes::Pipe                  #RESPROPs: Source, SourceParameters: *Parameters

                                  ┌───────────┐
                                  │   EVENT   │
                                  └───────────┘

PEVENT                            #Input received from PIPE.Source

PEVENT.*                          #SERVICE-specific

PEVENT.DATA                       #Value is SERVICE-specific
                                  #Key name is also SERVICE-specific
                                  #Usually JSON stringified (if valid JSON) or base64'd
                                  #Can use data.VARR in both FILTERS and ENRICH|PIPE_DEST.InputTemplate

PEVENT.eventSource                #'aws:SERVICE'
PEVENT.eventSourceArn             #'ARN'. SERVICE-specific

PEVENT.awsRegion                  #'REGION'. Only with Kinesis, SQS, DynamoDB
PEVENT.eventSourceKey             #Only with MQ|Kafka
PEVENT.eventVersion
PEVENT.eventID
PEVENT.eventName                  #Only with Kinesis, DynamoDB
PEVENT.invokeIdentityArn          #Only with Kinesis

                                  ┌───────────────────┐
                                  │   EVENT METRICS   │
                                  └───────────────────┘

AWS/Pipes/EventCount              #NUM of PEVENTs
AWS/Pipes/EventSize               #Size (in bytes) of PEVENTs

                                  ┌────────────────┐
                                  │   ENRICHMENT   │
                                  └────────────────┘

PIPE.Enrichment                   #'ARN'. SERVICE-specific, documented in their respective docs
                                  #Sets PEVENT using the result of an AWS SERVICE call
                                  #Source batch size must be 1, if ARN is using API Gateway or API_DEST
                                  #Can return a batch ARR of items
                                  #Can return empty ARR to skip
                                  #Max response 6MB

PIPE.EnrichmentParameters         #ENRICH
ENRICH.InputTemplate              #Like PIPE_DEST.InputTemplate but for the input passed to PIPE.Enrichment
ENRICH.HttpParameters             #HTTP_TARGET (see EventBridge Rules doc) used when calling PIPE.Enrichment

                                  ┌────────────────────┐
                                  │   ENRICHMENT IAC   │
                                  └────────────────────┘

AWS::Pipes::Pipe                  #RESPROPs: Enrichment, EnrichmentParameters

                                  ┌────────────────────────┐
                                  │   ENRICHMENT METRICS   │
                                  └────────────────────────┘

AWS/Pipes/EnrichmentStageDuration #Duration (in ms) of ENRICH
AWS/Pipes/EnrichmentStageFailed   #NUM of ENRICH failed

                                  ┌────────────┐
                                  │   FILTER   │
                                  └────────────┘

PIPE_SRC.FilterCriteria           #'FILTERS_JSON' (see EventBridge Rules doc)
 .Filters[*].Pattern              #Def: none, i.e. matches any PEVENT
                                  #Max 5 items
                                  #Done after PIPE.Enrichment
                                  #Cannot use:
                                  #  - FILTER.anything-but FILTER2
                                  #  - FILTER.wildcard
                                  #  - PEVENT: eventSource*, eventVersion, eventID, eventName, awsRegion, invokeIdentityArn

                                  ┌────────────────┐
                                  │   FILTER IAC   │
                                  └────────────────┘

AWS::Pipes::Pipe                  #RESPROPs: SourceParameters: FilterCriteria

                                  ┌────────────┐
                                  │   TARGET   │
                                  └────────────┘

PIPE.Target                       #'ARN' where PEVENTs are sent to. TARGET_TYPE-specific.
                                  #Each SERVICE documented it in its respective docs
                                  #Run at least once: rarely can run twice (i.e. should be idempotent)

PIPE.TargetParameters             #PIPE_DEST
PIPE_DEST.*Parameters             #OBJ. TARGET_TYPE-specific options
                                  #Some TARGET_TYPEs do not have any
                                  #Each SERVICE documented it in its respective docs
                                  #Most values can be 'JSONPATH'
                                  #  - unless documented as not
                                  #  - only STRs, and not enums
                                  #  - references PEVENT (before any transformation)

PIPE_DEST.InputTemplate           #STR used as input
                                  #Can be ''
                                  #Can include <JSONPATH> anywhere
                                  #Max 8KB

RETRY ==>                         #On ENRICH|TARGET failure, retries with exponential backoff
                                  #Retries on partial batch failures (e.g. with SQS)
                                  #On TARGET retry, ENRICH is re-performed
                                  #Retries until PEVENT expires (which is source-specific)
                                  #For client-side errors, also takes into account source-specific retry configuration
                                  #Does not retry if TARGET call is done async (e.g. Lambda InvocationType 'Event')

                                  ┌────────────────┐
                                  │   TARGET IAC   │
                                  └────────────────┘

AWS::Pipes::Pipe                  #RESPROPs: Target, TargetParameters: InputTemplate, *Parameters

                                  ┌────────────────────┐
                                  │   TARGET METRICS   │
                                  └────────────────────┘

AWS/Pipes/Invocations             #NUM of TARGET calls
                                  #DVAR AwsAccountId 'ACCOUNT_ID'
AWS/Pipes/TargetStageFailed       #NUM of TARGET calls failed
AWS/Pipes/
 TargetStagePartiallyFailed       #NUM of TARGET calls partially failed
AWS/Pipes/TargetStageSkipped      #NUM of TARGET calls were skipped, e.g. due to ENRICH returning empty ARR

AWS/Pipes/TargetStageDuration     #Duration (in ms) of TARGETs

                                  ┌──────────────┐
                                  │   JSONPATH   │
                                  └──────────────┘

JSONPATH                          #Like EventBridge Rules (see its doc) but targetting PEVENT

aws.pipes.*                       #Can be used as:
                                  #  - 'JSONPATH'
                                  #  - <aws.pipes.*> in PIPE_DEST|ENRICH.InputTemplate
aws.pipes.pipe-arn                #'PIPE_ARN'
aws.pipes.pipe-name               #'PIPE'
aws.pipes.source-arn              #PIPE.Source
aws.pipes.target-arn              #PIPE.Target
aws.pipes.enrichment-arn          #PIPE.Enrichment
aws.pipes.event                   #PEVENT
aws.pipes.event.json              #Same but undefined if not JSON
aws.pipes.event.ingestion-time    #Time when being processed

                                  ┌──────────────┐
                                  │   PIPE BUS   │
                                  └──────────────┘

PIPE.Target                       #EventBridge 'BUS_ARN'. Calls PutEvents() (see EventBridge Rules doc)
                                  #Must be in same REGION|ACCOUNT
                                  #Input is 'GEVENT_JSON'
                                  #Cannot chain|forward to a third BUS
                                  #Max batch size: 10 (PutEvents()'s limit)

PIPE_DEST
 .EventBridgeEventBusParameters
 .Time|Source|DetailType|Resources#EVENT.*
PIPE_DEST
 .EventBridgeEventBusParameters   #EVENTS.EndpointId
 .EndpointId                      #Cannot be 'JSONPATH'

                                  ┌──────────────────┐
                                  │   PIPE BUS IAC   │
                                  └──────────────────┘

AWS::Pipes::Pipe                  #Includes RESPROPs: Target, TargetParameters: EventBridgeEventBusParameters

                                  ┌──────────────────────┐
                                  │   PIPE HTTP SOURCE   │
                                  └──────────────────────┘

PIPE.Enrichment                   #'API_DEST_ARN' (see EventBridge Rules doc)

                                  ┌──────────────────────┐
                                  │   PIPE HTTP TARGET   │
                                  └──────────────────────┘

PIPE.Target                       #'API_DEST_ARN' (see EventBridge Rules doc)
PIPE_DEST.HttpParameters          #HTTP_TARGET (see EventBridge Rules doc). Request parameters

                                  ┌──────────────────────────┐
                                  │   PIPE HTTP TARGET IAC   │
                                  └──────────────────────────┘

AWS::Pipes::Pipe                  #Includes RESPROPs: Target, TargetParameters: HttpParameters

                                  ┌────────────────┐
                                  │   ENCRYPTION   │
                                  └────────────────┘

PIPE.KmsKeyIdentifier             #'KMS_KEY_ARN|MID' (def: '', i.e. AWS managed). Encrypt PEVENTs at rest

                                  ┌─────────────────────┐
                                  │   ENCRYPTION AUTH   │
                                  └─────────────────────┘

PACTION kms:Decrypt               #If PIPE.KmsKeyIdentifier set, must be allowed for PIPE.Target
 |GenerateDataKey|DescribeKey     #COND_KEY kms:EncryptionContext:aws:pipe:arn PIPE_ARN
                                  #Condition['ForAnyValues:StringEquals']['kms:EncryptionContextKeys'] ['aws:pipe:arn']

                                  ┌────────────────────┐
                                  │   ENCRYPTION IAC   │
                                  └────────────────────┘

AWS::Pipes::Pipe                  #Includes RESPROPs: KmsKeyIdentifier

                                  ┌─────────────┐
                                  │   LOGGING   │
                                  └─────────────┘

PIPE.LogConfiguration             #LOGGING
                                  #Logs PIPE-related lifecycle to CloudWatch logs, Firehose, or S3
                                  #'PIPE' is also sent as a logging TELEMETRY_ENTITY

LOGGING.Level                     #One of:
                                  #  - 'OFF' (def)
                                  #  - 'ERROR': STATE '[PARTIALLY_]FAILED', 'THROTTLED', 'TIMEOUT'
                                  #  - 'INFO': also:
                                  #     - STATE 'STARTED|SUCCEEDED' for STEP 'EXECUTION' and 'ENRICHMENT|TARGET_STAGE'
                                  #     - STATE 'SKIPPED' for STEP 'ENRICHMENT_INVOCATION'
                                  #  - 'TRACE': all

LOGGING.IncludeExecutionData      #Either:
                                  #  - undefined (def): omit LOG_PAYLOAD.payload|awsRequest|awsResponse
                                  #     - reason: bigger, and might contain secret values
                                  #  - ['ALL']: inverse

LOGGING
 .CloudwatchLogsLogDestinationa
 .LogGroupArn                     #'LOG_GROUP_ARN'

LOGGING.FirehoseLogDestination
 .DeliveryStreamArn               #'DELIVERY_STREAM_ARN'

LOGGING.S3LogDestination          #S3_LOGGING
S3_LOGGING.BucketName             #'BUCKET'
S3_LOGGING.Prefix                 #STR (def: none) prefixed to 'OBJECT'
S3_LOGGING.BucketOwner            #'ACCOUNT_ID'. Required
S3_LOGGING.OutputFormat           #Always 'json'

                                  ┌──────────────────┐
                                  │   LOGGING AUTH   │
                                  └──────────────────┘

PACTION                           #If LOGGING.IncludeExecutionData ['ALL'] + PIPE.KmsKeyIdentifier set,
 kms:Decrypt|GenerateDataKey      #must be allowed to both:
                                  #  - Principal.Service 'delivery.logs.amazonaws.com'
                                  #  - PIPE.RoleArn (kms:GenerateDataKey only)
                                  #Condition.StringLike['kms:EncryptionContext:SourceArn'] 'arn:aws:logs:REGION:ACCOUNT_ID:*'

                                  ┌─────────────────┐
                                  │   LOGGING IAC   │
                                  └─────────────────┘

AWS::Pipes::Pipe                  #Includes RESPROPs: LogConfiguration

                                  ┌───────────────────┐
                                  │   LOGGING STEPS   │
                                  └───────────────────┘

STEP + STATE                      #When LOG_PAYLOAD is produced

STEP 'EXECUTION'                  #ENRICH + TARGET
STEP 'ENRICHMENT_STAGE'           #ENRICH.InputTemplate + ENRICH call
STEP 'ENRICHMENT_TRANSFORMATION'  #ENRICH.InputTemplate
STEP 'ENRICHMENT_INVOCATION'      #ENRICH call
STEP 'TARGET_STAGE'               #PIPE_DEST.InputTemplate + TARGET call
STEP 'TARGET_TRANSFORMATION'      #PIPE_DEST.InputTemplate
STEP 'TARGET_INVOCATION'          #TARGET call

STATE 'STARTED'                   #Called 'ENTERED' with 'ENRICHMENT|TARGET_STAGE'
STATE 'SUCCEEDED'                 #
STATE 'FAILED'                    #
STATE 'PARTIALLY FAILED'          #Only with 'EXECUTION' and 'TARGET_STAGE|INVOCATION'
STATE 'SKIPPED'                   #Only with 'ENRICHMENT_INVOCATION' and 'TARGET_STAGE|INVOCATION'
STATE 'THROTTLED'                 #Only with 'EXECUTION'
STATE 'TIMEOUT'                   #Only with 'EXECUTION'

                                  ┌─────────────────────┐
                                  │   LOGGING PAYLOAD   │
                                  └─────────────────────┘

LOG_PAYLOAD                       #One per PEVENT batch
                                  #Max 256KB if sending to LOG_GROUP
LOG_PAYLOAD.executionId           #'UUID'
LOG_PAYLOAD.timestamp             #'DATE'
LOG_PAYLOAD.resourceArn           #'PIPE_ARN'
LOG_PAYLOAD.logLevel              #LOGGING.Level
LOG_PAYLOAD.messageType           #'STEP_STATE'
LOG_PAYLOAD.payload               #'JSON'. PEVENT batch
                                  #Only in:
                                  #  - STATE 'STARTED' for STEP 'EXECUTION'
                                  #  - STATE 'SUCCEEDED' for STEP 'ENRICHMENT|TARGET_STAGE|TRANSFORMATION'
LOG_PAYLOAD.awsRequest            #'JSON'. Request to ENRICH|TARGET
                                  #Only in:
                                  #  - STATE 'SUCCEEDED|FAILED' for STEP 'ENRICHMENT_INVOCATION'
                                  #  - STATE 'SUCCEEDED|[PARTIALLY_]FAILED' for STEP 'TARGET_INVOCATION'
LOG_PAYLOAD.awsResponse           #Same but for response
LOG_PAYLOAD.truncatedFields       #'VAR'_ARR from LOG_PAYLOAD.VAR that have been truncated to keep LOG_PAYLOAD < 256 KB
                                  #Done on LOG_PAYLOAD.payload|awsRequest|awsResponse

LOG_PAYLOAD.error                 #LOG_ERROR
                                  #Only in STATE '[PARTIALLY_]FAILED', 'THROTTLED', 'TIMEOUT'
LOG_ERROR.httpStatusCode          #STATUS_NUM
LOG_ERROR.message                 #'MESSAGE'
LOG_ERROR.details                 #STR
LOG_ERROR.awsService              #'SERVICE'
LOG_ERROR.requestId               #'REQ_ID'

                                  ┌──────────┐
                                  │   TAGS   │
                                  └──────────┘

RESOURCE_TAGS.resourceArn         #'PIPE_ARN'
RESOURCE_TAGS.tags
PIPE.Tags                         #TAGS_OBJ

                                  ┌──────────────┐
                                  │   TAGS API   │
                                  └──────────────┘

POST /tags/PIPE_ARN               #Req: RESOURCE_TAGS
TagResource()                     #Res: empty
GET /tags/PIPE_ARN                #Req: RESOURCE_TAGS
ListTagsForResource()             #  - only resourceArn
                                  #Res: RESOURCE_TAGS
                                  #  - only tags
DELETE /tags/PIPE_ARN             #Req: RESOURCE_TAGS
UntagResource()                   #  - tags OBJ -> tagKeys 'TAG'_ARR
                                  #Res: empty

                                  ┌──────────────┐
                                  │   TAGS IAC   │
                                  └──────────────┘

AWS::Pipes::Pipe                  #Includes RESPROPs: Tags

                                  ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
                                  ┃   EVENTBRIDGE SCHEDULER   ┃
                                  ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━┛

VERSION ==>                       #2024-12-20

PRICING ==>                       #1$ per 1e6 SCHEDULE invocations
                                  #  - free: 1.4e7/month

                                  ┌─────────┐
                                  │   API   │
                                  └─────────┘

SERVICE_DOMAIN                    #'scheduler.REGION.amazonaws.com'

FORMAT ==>                        #REST API
                                  #Request:
                                  #  - POST|PUT: path parameters + JSON
                                  #  - GET|DELETE: path parameters + query parameters (camelCase'd)
                                  #Response: JSON

PAGINATION ==>                    #Uses REQ.MaxResults (def|max: 100) + REQ|RES.NextToken
                                  #No pagination: ListTagsForResource()

THROTTLING ==>                    #1e3/s (REGION-specific) (soft): TARGET calls
                                  #1e3/s (REGION-specific) (soft): Create|Update|Get|DeleteSchedule()
                                  #50/s (soft): ListSchedules()
                                  #10/s (soft): Create|List|Get|DeleteScheduleGroup(), ListTagsForResource()
                                  #1/s (soft): [Un]tagResource()

                                  ┌─────────────────┐
                                  │   API METRICS   │
                                  └─────────────────┘

AWS/Usage/CallCount               #NUM of API calls
                                  #Uses DVARs: Service 'Scheduler', Type 'API', Resource 'ACTION'

                                  ┌──────────┐
                                  │   AUTH   │
                                  └──────────┘

AmazonEventBridgeScheduler
 FullAccess                       #AWS managed POLICY. Grants all 'scheduler:*' PACTIONs
AmazonEventBridgeScheduler
 ReadOnlyAccess                   #AWS managed POLICY. Grants all readonly 'scheduler:*' PACTIONs

                                  ┌───────────┐
                                  │   GROUP   │
                                  └───────────┘

GROUP                             #Group of SCHEDULEs
                                  #A 'default' GROUP already exists, and cannot be deleted
                                  #Deleting also deletes the SCHEDULEs
                                  #Max 500 (soft) per REGION|ACCOUNT
GROUP.Arn                         #'GROUP_ARN'. 'arn:aws:scheduler:REGION:ACCOUNT_ID:schedule-group/GROUP'
GROUP.Name                        #'GROUP'
                                  #Must be [:alnum:]-_. and max 64 chars
GROUP.CreationDate                #DATE_NUM
GROUP.LastModificationDate        #DATE_NUM

GROUP.State                       #'ACTIVE' or 'DELETING'

GROUP.ClientToken                 #STR. Idempotency token (see aws_network doc)
                                  #Must be [:alnum:]-_ and max 64 chars

                                  ┌────────────────┐
                                  │   GROUP AUTH   │
                                  └────────────────┘

PACTION scheduler:DeleteSchedule  #Required to delete GROUP, if it has any SCHEDULE

                                  ┌───────────────┐
                                  │   GROUP API   │
                                  └───────────────┘

POST /schedule-groups/GROUP       #Req: GROUP
CreateScheduleGroup()             #  - only ClientToken
                                  #  - only one with Tags
                                  #Res: GROUP
                                  #  - only Arn -> ScheduleGroupArn
GET /schedule-groups              #Req: GROUP
ListScheduleGroups()              #  - only Name -> NamePrefix
                                  #Res: ScheduleGroups GROUP_ARR
                                  #  - no ClientToken
GET /schedule-groups/GROUP        #Req: GROUP
GetScheduleGroup()                #  - only Name
                                  #Res: GROUP
                                  #  - no ClientToken
DELETE /schedule-groups/GROUP     #Req: GROUP
DeleteScheduleGroup()             #  - only Name, ClientToken
                                  #Res: empty

                                  ┌───────────────┐
                                  │   GROUP IAC   │
                                  └───────────────┘

AWS::Scheduler::ScheduleGroup     #RESPROPs: Name
                                  #RESATTRs: Arn, CreationDate, LastModificationDate, State

                                  ┌───────────────────┐
                                  │   GROUP METRICS   │
                                  └───────────────────┘

DVAR ScheduleGroup                #'GROUP'. With all AWS/Scheduler/* METRICs

                                  ┌──────────────┐
                                  │   SCHEDULE   │
                                  └──────────────┘

SCHEDULE                          #Calls a SCHEDULE_TARGET at specific times
                                  #Max 1e7 (soft) per REGION|ACCOUNT
SCHEDULE.Arn                      #'SCHEDULE_ARN'. 'arn:aws:scheduler:REGION:ACCOUNT_ID:schedule/GROUP/SCHEDULE'
SCHEDULE.Name                     #'SCHEDULE'
                                  #Must be [:alnum:]-_. and max 64 chars
SCHEDULE.Description              #STR. Max 512 chars
SCHEDULE.CreationDate             #DATE_NUM
SCHEDULE.LastModificationDate     #DATE_NUM

SCHEDULE.State                    #'ENABLED' (def) or 'DISABLED'

SCHEDULE.ClientToken              #Like GROUP.ClientToken

SCHEDULE.GroupName                #'GROUP' (def: 'default')

SCHEDULE.ScheduleExpression       #When to run. Can be:
                                  #  - 'at(YYYY-MM-DDTHH:MM:SS)': once
                                  #  - 'rate(NUM minute[s]|hour[s]|day[s])': regular intervals
                                  #  - 'cron(...)'
CRON FORMAT ==>                   #See crontab format doc for ... syntax
                                  #Uses 1-7 for Sunday to Saturday
                                  #Day of month field:
                                  #  - ?: like *
                                  #     - if day of month|week field is *, the other must be ?
                                  #  - L: last
                                  #  - W: weekday
                                  #  - 3W: once per month, on the weekday closest to third day of month
                                  #Day of week field:
                                  #  - ?: same
                                  #  - L: same
                                  #  - NUM#NUM2: NUM2th of the month
                                  #     - NUM if day of week, with 1 for Sunday
                                  #     - cannot use ,
                                  #Daylight savings time, when moving:
                                  #  - forwards: skips scheduled time
                                  #  - backwards: does not repeat scheduled time
SCHEDULE
 .ScheduleExpressionTimezone      #'TZ' (def: UTC)

SCHEDULE.StartDate|EndDate        #DATE_NUM (def: none). Do not call SCHEDULE_TARGET before|after DATE
                                  #Not with SCHEDULE.ScheduleExpression 'at(...)'

SCHEDULE.FlexibleTimeWindow       #SCHEDULE_FLEX
                                  #Allows SCHEDULE to run between 0-NUM mins after scheduled time
                                  #Goals:
                                  #  - reliability: if there is a short outage, wait for it to resolve instead of failing
                                  #  - availability: spread load, to avoid TARGET being called by many SCHEDULEs on the same minute
                                  #Required (including to keep disabled)
SCHEDULE_FLEX.Mode                #Whether enabled ('OFF') or not ('FLEXIBLE')
SCHEDULE_FLEX
 .MaximumWindowInMinutes          #NUM (in mins, max 1d)

SCHEDULE.ActionAfterCompletion    #Can be:
                                  #  - 'NONE' (def)
                                  #  - 'DELETE' (recommended): deletes SCHEDULE after SCHEDULE_TARGET:
                                  #      - 'at(...)': first|only call
                                  #      - 'rate|cron(...)': last call, using SCHEDULE.EndDate

                                  ┌─────────────────────────────────┐
                                  │   SCHEDULE STEP FUNCTIONS IAC   │
                                  └─────────────────────────────────┘

new EventBridgeSchedulerCreate    #CSTATE_TASK for scheduler:createSchedule GENERIC_SERVICE_TASK
 ScheduleTask(...CARGS, OPTS)     #Automatically allows PACTION:
 ->CSCHEDULE_TASK                 #  - scheduler:createSchedule on SCHEDULE
                                  #  - iam:PassRole on SCHEDULE_TARGET.RoleArn
                                  #     - no COND_KEY aws:SourceArn|SourceAccount
                                  #  - kms:* if needed
                                  #Cannot set SCHEDULE_TARGET.*Parameters

OPTS.*                            #CSTATE_TASK_OPTS.*

OPTS.scheduleName
OPTS.description
OPTS.clientToken
OPTS.groupName
OPTS.timezone
OPTS.actionAfterCompletion        #SCHEDULE.*
OPTS.enabled                      #BOOL (def: true). SCHEDULE.State
OPTS.startDate|endDate            #DATE. SCHEDULE.*
OPTS.flexibleTimeWindow           #undefined (def) or DURATION. SCHEDULE.*
OPTS.kmsKey                       #ICKEY. SCHEDULE.*

OPTS.schedule                     #SCHEDULE.*. Can be:
                                  #  - Schedule.oneTime(DATE)
                                  #  - Schedule.rate(DURATION)
                                  #  - Schedule.cron(OPTS), with OPTS.minute|hour|day|month|weekDay|year (def: '*' or '?')

OPTS.target                       #Must be new EventBridgeSchedulerTarget(OOPTS)
OOPTS.arn|input                   #SCHEDULE_TARGET.*
OOPTS.role                        #ICROLE. SCHEDULE_TARGET.*
OOPTS.retryPolicy
 .maximumRetryAttempts            #SCHEDULE_TARGET.*
OOPTS.retryPolicy.maximumEventAge #DURATION. SCHEDULE_TARGET.*
OOPTS.deadLetterQueue             #ICQUEUE. SCHEDULE_TARGET.*

                                  ┌──────────────────┐
                                  │   SCHEDULE API   │
                                  └──────────────────┘

POST /schedules/SCHEDULE          #Req: SCHEDULE
CreateSchedule()                  #  - no Arn, CreationDate, LastModificationDate
                                  #Res: SCHEDULE
                                  #  - only Arn -> ScheduleArn
PUT /schedules/SCHEDULE           #Req: SCHEDULE
UpdateSchedule()                  #  - no Arn, CreationDate, LastModificationDate
                                  #Res: SCHEDULE
                                  #  - only Arn -> ScheduleArn
GET /schedules                    #Req: SCHEDULE
ListSchedules()                   #  - only Name -> NamePrefix
                                  #  - only GroupName, State
                                  #Res: Schedules SCHEDULE_ARR
                                  #  - no ActionAfterCompletion, Description, StartDate|EndDate,
                                  #    FlexibleTimeWindow, KmsKeyArn, ScheduleExpression*
                                  #  - no ClientToken
                                  #  - Target: only Arn
GET /schedules/SCHEDULE           #Req: SCHEDULE
GetSchedule()                     #  - only Name, GroupName
                                  #Res: SCHEDULE
                                  #  - no ClientToken
DELETE /schedules/SCHEDULE        #Req: SCHEDULE
DeleteSchedule()                  #  - only Name, GroupName
                                  #  - only ClientToken
                                  #Res: empty

                                  ┌──────────────────┐
                                  │   SCHEDULE IAC   │
                                  └──────────────────┘

AWS::Scheduler::Schedule          #RESPROPs: Name, Description, State, GroupName, ScheduleExpression,
                                  #ScheduleExpressionTimezone, StartDate, EndDate, FlexibleTimeWindow
                                  #RESATTRs: Arn

                                  ┌────────────┐
                                  │   TARGET   │
                                  └────────────┘

SCHEDULE.Target                   #SCHEDULE_TARGET. RESOURCE being called
SCHEDULE_TARGET.Arn               #'ARN'. SCHEDULE_TARGET_TYPE-specific.
                                  #Each SERVICE documented it in its respective docs
                                  #Run at least once: rarely can run twice (i.e. should be idempotent)
SCHEDULE_TARGET.*Parameters       #OBJ. SCHEDULE_TARGET_TYPE-specific options
                                  #Some SCHEDULE_TARGET_TYPEs do not have any
                                  #Each SERVICE documented it in its respective docs

SCHEDULE_TARGET.Input             #STR (def: empty). Input used when calling SCHEDULE_TARGET's RESOURCE
aws.scheduler.*                   #Can be used inside SCHEDULE_TARGET.Input, as <aws.scheduler.*>
aws.scheduler.schedule-arn        #'SCHEDULE_ARN'
aws.scheduler.scheduled-time      #'DATE'
aws.scheduler.execution-id        #'SCHEDULE_EXEC_ID', unique per execution
aws.scheduler.attempt-number      #NUM + 1 of retries

                                  ┌─────────────────┐
                                  │   TARGET AUTH   │
                                  └─────────────────┘

SCHEDULE_TARGET.RoleArn           #'ROLE_ARN' used to call SCHEDULE_TARGET's RESOURCE
                                  #Must be assumable by Principal.Service 'scheduler.amazonaws.com'
                                  #Should use COND_KEY aws:SourceArn SCHEDULE_ARN, aws:SourceAccount ACCOUNT_ID

PACTION iam:PassRole              #Required on current PRINCIPAL
                                  #Should use COND_KEY iam:PassedToService 'scheduler.amazonaws.com'

AmazonEventBridgeScheduler
 FullAccess
AmazonEventBridgeFullAccess       #Also allow PACTION iam:PassRole, as described above

                                  ┌────────────────┐
                                  │   TARGET IAC   │
                                  └────────────────┘

AWS::Scheduler::Schedule          #Includes RESPROPs: Target: Arn, *Parameters, Input, RoleArn

                                  ┌────────────────────┐
                                  │   TARGET METRICS   │
                                  └────────────────────┘

AWS/Scheduler/
 InvocationAttemptCount           #NUM of TARGET calls, including retries

AWS/Scheduler/TargetErrorCount    #NUM of TARGET calls that failed, including retries
AWS/Scheduler/
 InvocationDroppedCount           #NUM of TARGET calls that failed, after retries

AWS/Scheduler/
 TargetErrorThrottledCount        #NUM of TARGET calls throttled by TARGET
AWS/Scheduler/
 InvocationThrottleCount          #NUM of TARGET calls throttled by EventBridge Scheduler

                                  ┌──────────────────────────────┐
                                  │   TARGET EVENTBRIDGE EVENT   │
                                  └──────────────────────────────┘

EVENT_TYPE 'Scheduled Event'      #EventBridge EVENT emitted on scheduled event
SOURCE                            #'aws.events'
DETAIL                            #SCHEDULE_TARGET.Input

                                  ┌─────────┐
                                  │   DLQ   │
                                  └─────────┘

SCHEDULE_TARGET.RetryPolicy       #RETRY_POLICY. Same as EventBridge Rules (see its doc)
                                  #Truncates SCHEDULE_TARGET.Input if > 256KB

SCHEDULE_TARGET
 .DeadLetterConfig.Arn            #'SQS_QUEUE_ARN'. Same as EventBridge Rules (see its doc)

MESSAGE_ATTRS.*                   #Like EventBridge Rules (see its doc) except no RULE_ARN
                                  #Also has following additional fields
MESSAGE_ATTRS.SCHEDULE_ARN        #'SCHEDULE_ARN'
MESSAGE_ATTRS.EXECUTION_ID        #'SCHEDULE_EXEC_ID'
MESSAGE_ATTRS.SCHEDULED_TIME      #'DATE'

                                  ┌──────────────┐
                                  │   DLQ AUTH   │
                                  └──────────────┘

PACTION sqs:SendMessage
PACTION kms:*                     #Like EventBridge Rules (see its doc) but with Principal.Service 'scheduler.amazonaws.com'

                                  ┌─────────────┐
                                  │   DLQ IAC   │
                                  └─────────────┘

AWS::Scheduler::Schedule          #Includes RESPROPs: Target: RetryPolicy, DeadLetterConfig

                                  ┌─────────────────┐
                                  │   DLQ METRICS   │
                                  └─────────────────┘

AWS/Scheduler/
 InvocationsSentToDeadLetterCount #NUM of EVENTs sent to DLQ

AWS/Scheduler/InvocationsFailed
 ToBeSentToDeadLetterCount        #NUM of EVENTs failed to be sent to DLQ
AWS/Scheduler/InvocationsFailed
 ToBeSentToDeadLetterCount_CODE   #Same but only for specific ERROR 'CODE', e.g. 'AWS.SimpleQueueService.NonExistentQueue'

AWS/Scheduler/
 InvocationsSentToDeadLetterCount
 _Truncated_MessageSizeExceeded   #NUM of EVENTs truncated due to SQS max size

                                  ┌──────────────────────┐
                                  │   TARGET UNIVERSAL   │
                                  └──────────────────────┘

SCHEDULE_TARGET.Arn               #'arn:aws:scheduler:::aws-sdk:SERVICE:ACTION'
                                  #ACTION:
                                  #  - camelCase
                                  #  - only write ACTION
                                  #Input is PARAMS
                                  #  - same names as with API
                                  #  - request body, query params, URI params
                                  #Is "universal", unlike other SCHEDULE_TARGETs ("templated"):
                                  #  - can call any SERVICE ACTION
                                  #  - but in a more generic way

                                  ┌────────────────┐
                                  │   TARGET BUS   │
                                  └────────────────┘

SCHEDULE_TARGET.Arn               #EventBridge 'BUS_ARN'. Calls PutEvents()
                                  #Input is 'GEVENT_JSON'

SCHEDULE_TARGET
 .EventBridgeParameters
 .Source|DetailType               #EVENT.*

                                  ┌────────────────────┐
                                  │   TARGET BUS IAC   │
                                  └────────────────────┘

AWS::Scheduler::Schedule          #Includes RESPROPs: Target: Arn, EventBridgeParameters

                                  ┌────────────────┐
                                  │   ENCRYPTION   │
                                  └────────────────┘

SCHEDULE.KmsKeyArn                #'KMS_KEY_ARN' (def: AWS managed). Encrypt EVENTs at rest
                                  #If using default, also encrypts SCHEDULE.*

                                  ┌─────────────────────┐
                                  │   ENCRYPTION AUTH   │
                                  └─────────────────────┘

PACTION kms:Decrypt               #If SCHEDULE.KmsKeyArn set, must be allowed to current PRINCIPAL
 |GenerateDataKey|DescribeKey     #COND_KEY kms:EncryptionContext:aws:events:schedule:arn SCHEDULE_ARN
                                  #COND_KEY kms:ViaService 'scheduler.amazonaws.com'

PACTION kms:Decrypt               #If SCHEDULE.KmsKeyArn set, must be allowed to SCHEDULE_TARGET.RoleArn

                                  ┌────────────────────┐
                                  │   ENCRYPTION IAC   │
                                  └────────────────────┘

AWS::Scheduler::Schedule          #Includes RESPROPs: KmsKeyArn

                                  ┌───────────┐
                                  │   BASIC   │
                                  └───────────┘

RULE.ScheduleExpression           #STR. Part of EventBridge Rules (see its doc), not Scheduler
                                  #Has fewer features
                                  #Similar pricing
                                  #Syntax is like above except no 'at(...)'
                                  #Calls TARGET at specific times, using TARGET.Input (def: empty)
                                  #If set, RULE.EventPattern defaults to matching any GEVENT
                                  #  - but can also set both
                                  #Must be on default BUS
                                  #Max 256 chars

                                  ┌───────────────┐
                                  │   BASIC IAC   │
                                  └───────────────┘

AWS::Events::Rule                 #Includes RESPROPs: ScheduleExpression

                                  ┌────────────────┐
                                  │   BASIC LINT   │
                                  └────────────────┘

cfn-lint E3027                    #Valid EventBridge Rule.ScheduleExpression

                                  ┌──────────┐
                                  │   TAGS   │
                                  └──────────┘

RESOURCE_TAGS.ResourceARN         #'GROUP_ARN'
RESOURCE_TAGS.Tags
GROUP.Tags                        #TAG_PAIRS

                                  ┌──────────────┐
                                  │   TAGS API   │
                                  └──────────────┘

POST /tags/GROUP_ARN              #Req: RESOURCE_TAGS
TagResource()                     #Res: empty
GET /tags/GROUP_ARN               #Req: RESOURCE_TAGS
ListTagsForResource()             #  - only ResourceARN
                                  #Res: RESOURCE_TAGS
                                  #  - only Tags
DELETE /tags/GROUP_ARN            #Req: RESOURCE_TAGS
UntagResource()                   #  - Tags OBJ -> TagKeys 'TAG'_ARR
                                  #Res: empty

                                  ┌──────────────┐
                                  │   TAGS IAC   │
                                  └──────────────┘

AWS::Scheduler::ScheduleGroup     #Includes RESPROPs: Tags

                                  ┏━━━━━━━━━━━━━━━━━━━━━━━━━┓
                                  ┃   EVENTBRIDGE SCHEMAS   ┃
                                  ┗━━━━━━━━━━━━━━━━━━━━━━━━━┛

VERSION ==>                       #2024-12-20

                                  ┌─────────┐
                                  │   API   │
                                  └─────────┘

SERVICE_DOMAIN                    #'schemas.REGION.amazonaws.com'

FORMAT ==>                        #REST API
                                  #Request:
                                  #  - POST|PUT: path parameters + JSON
                                  #  - GET|DELETE: path parameters + query parameters (camelCase'd)
                                  #Response: JSON

PAGINATION ==>                    #Uses REQ.limit (def|max: 100) + REQ|RES.nextToken
                                  #No pagination: ListTagsForResource()

PRICING ==>                       #REGISTRYs|SCHEMAs: free
                                  #1$ per 1e7 EVENTs analyzed by DISCOVERER
                                  #  - multiplied by NUM of 8KB chunks
                                  #  - free: 5e6/month

                                  ┌──────────┐
                                  │   AUTH   │
                                  └──────────┘

AmazonEventBridgeSchemas
 FullAccess                       #AWS managed POLICY. Grants all 'schemas:*' PACTIONs
AmazonEventBridgeSchemas
 ReadOnlyAccess                   #AWS managed POLICY. Grants all readonly 'schemas:*' PACTIONs

                                  ┌──────────────┐
                                  │   REGISTRY   │
                                  └──────────────┘

REGISTRY                          #Group of SCHEMAs
                                  #Max 10 (soft) per REGION|ACCOUNT
REGISTRY.RegistryArn              #'REGISTRY_ARN'. 'arn:aws:schemas:REGION:ACCOUNT_ID:registry/REGISTRY'
REGISTRY.RegistryName             #'REGISTRY'
REGISTRY.Description              #STR. Max 256 chars

REGISTRY.Scope                    #Either:
                                  #  - 'AWS': managed by AWS
                                  #     - 'REGISTRY' name is 'aws.SERVICE'
                                  #  - 'Local'

                                  ┌──────────────────┐
                                  │   REGISTRY API   │
                                  └──────────────────┘

POST /v1/registries/name/REGISTRY #Req: REGISTRY
CreateRegistry()                  #  - no RegistryArn
                                  #Res: REGISTRY
PUT /v1/registries/name/REGISTRY  #Req: REGISTRY
UpdateRegistry()                  #  - no RegistryArn
                                  #  - no tags
                                  #Res: REGISTRY
GET /v1/registries                #Req: REGISTRY
ListRegistries()                  #  - only one with Scope
                                  #  - only RegistryName -> RegistryNamePrefix
                                  #Res: Registries REGISTRY_ARR
                                  #  - no Description
GET /v1/registries/name/REGISTRY  #Req: REGISTRY
DescribeRegistry()                #  - only RegistryName
                                  #Res: REGISTRY
DELETE                            #Req: REGISTRY
 /v1/registries/name/REGISTRY     #  - only RegistryName
DeleteRegistry()                  #Res: empty

                                  ┌──────────────────┐
                                  │   REGISTRY IAC   │
                                  └──────────────────┘

AWS::EventSchemas::Registry       #RESPROPs: RegistryName, Description
                                  #RESATTRs: RegistryArn, RegistryName

                                  ┌──────────────────────────┐
                                  │   EVENTBRIDGE REGISTRY   │
                                  └──────────────────────────┘

aws.events                        #REGISTRY managed by AWS
                                  #Contains SCHEMAs for all EventBridge integration EVENTs

aws.SERVICE@EVENT_TYPE            #SCHEMA
                                  #EVENT_TYPE is Titleize'd, no spaces
                                  #  - e.g. AWS API Call via CloudTrail -> AWSAPICallViaCloudTrail
SCHEMA.components.schemas.AWSEvent#AWS_EVENT. Contains the actual EVENT definition
AWS_EVENT.x-amazon-events-source  #'SOURCE', i.e. 'aws.SERVICE'
AWS_EVENT
 .x-amazon-events-detail-type     #'EVENT_TYPE'

                                  ┌────────────┐
                                  │   SCHEMA   │
                                  └────────────┘

SCHEMA                            #JSON schema, and metadata
                                  #Automatically deleted after 2 years if no API calls
                                  #Max 100 (soft) per SCHEMAs
                                  #  - 200 if using a DISCOVERER
SCHEMA.SchemaArn                  #'SCHEMA_ARN'. 'arn:aws:schemas:REGION:ACCOUNT_ID:schema/REGISTRY/SCHEMA'
SCHEMA.SchemaName                 #'SCHEMA'
SCHEMA.Description                #STR. Max 256 chars
SCHEMA.LastModified               #'DATE'

SCHEMA.RegistryName               #'REGISTRY'

SCHEMA.ClientTokenId              #STR. Idempotency token (see aws_network doc)
                                  #Max 36 chars

SCHEMA.Type                       #Either:
                                  #  - 'OpenApi3' (see its doc): JSON schema used by OpenAPI
                                  #  - 'JSONSchemaDraft4'
                                  #Can convert from one to the other using ExportSchema()
SCHEMA.Content                    #'JSON_SCHEMA' as JSON
                                  #Max 100KB

SCHEMA.Keywords                   #STR. Search by keyword, using SearchSchemas()

                                  ┌────────────────┐
                                  │   SCHEMA API   │
                                  └────────────────┘

POST /v1/registries/name          #Req: SCHEMA
 /REGISTRY/schema/name/SCHEMA     #  - no SchemaArn, LastModified, *Version*
CreateSchema()                    #  - no SchemaName
                                  #Res: SCHEMA
                                  #  - no RegistryName
                                  #  - no Content
PUT /v1/registries/name           #Req: SCHEMA
 /REGISTRY/schema/name/SCHEMA     #  - only one with ClientTokenId
UpdateSchema()                    #  - no SchemaArn, LastModified, *Version*
                                  #  - no tags
                                  #Res: SCHEMA
                                  #  - no RegistryName
                                  #  - no Content
GET /v1/registries/name           #Req: SCHEMA
 /REGISTRY/schema                 #  - only RegistryName
ListSchemas()                     #  - only SchemaName -> SchemaNamePrefix
                                  #Res: Schemas SCHEMA_ARR
                                  #  - no Type, Description, SchemaVersion, VersionCreatedDate, Content
                                  #  - no RegistryName
                                  #  - only one with VersionCount
GET /v1/registries/name           #Req: SCHEMA
 /REGISTRY/schemas/search         #  - only RegistryName
SearchSchemas()                   #  - only one with Keywords
                                  #Res: Schemas SCHEMA_ARR
                                  #  - only SchemaArn, SchemaName, RegistryName, Type
                                  #  - only SchemaVersion|VersionCreatedDate -> SchemaVersions[*].SchemaVersion|CreatedDate
GET /v1/registries/name           #Req: SCHEMA
 /REGISTRY/schema/name/SCHEMA     #  - only RegistryName, SchemaName, SchemaVersion
DescribeSchema()                  #Res: SCHEMA
                                  #  - no RegistryName
GET /v1/registries/name           #Req: SCHEMA
 /REGISTRY/schemas/name/SCHEMA    #  - only RegistryName, SchemaName, SchemaVersion
 /export                          #Res: SCHEMA
ExportSchema()                    #  - only RegistryName, SchemaName, SchemaVersion, Type
                                  #  - only Content
DELETE /v1/registries/name        #Req: SCHEMA
 /REGISTRY/schema/name/SCHEMA     #  - only RegistryName, SchemaName
DeleteSchema()                    #Res: empty

                                  ┌────────────────┐
                                  │   SCHEMA IAC   │
                                  └────────────────┘

AWS::EventSchemas::Schema         #RESPROPs: SchemaName, Description, RegistryName, Type, Content
                                  #RESATTRs: SchemaArn, SchemaName, LastModified

                                  ┌──────────────────────────────┐
                                  │   SCHEMA EVENTBRIDGE EVENT   │
                                  └──────────────────────────────┘

EVENT_TYPE 'Schema Created'       #EventBridge EVENT emitted on SCHEMA creation
SOURCE                            #'aws.schemas'
DETAIL.SchemaName|RegistryName
 |SchemaType|Version|CreationDate #SCHEMA.*

                                  ┌─────────────┐
                                  │   VERSION   │
                                  └─────────────┘

SCHEMA.SchemaVersion              #'VERSION_NUM', automatically incremented on create|update, starting at '1'
                                  #Max 100 (soft) per SCHEMAs
SCHEMA.VersionCreatedDate         #'DATE'

SCHEMA.VersionCount               #NUM of VERSIONs

                                  ┌─────────────────┐
                                  │   VERSION API   │
                                  └─────────────────┘

GET /v1/registries/name           #Req: SCHEMA
 /REGISTRY/schemas/name/SCHEMA    #  - only RegistryName, SchemaName
 /versions                        #Res: SchemaVersions SCHEMA_ARR
ListSchemaVersions()              #  - only SchemaArn, SchemaName, SchemaVersion, Type
DELETE /v1/registries/name
 /REGISTRY/schemas/name/SCHEMA    #Req: SCHEMA
 /version/VERSION_NUM             #  - only SchemaArn, SchemaName, SchemaVersion
DeleteSchemaVersion()             #Res: empty

                                  ┌─────────────────┐
                                  │   VERSION IAC   │
                                  └─────────────────┘

AWS::EventSchemas::Schema         #RESATTRs: SchemaVersion, VersionCreatedDate

                                  ┌───────────────────────────────┐
                                  │   VERSION EVENTBRIDGE EVENT   │
                                  └───────────────────────────────┘

EVENT_TYPE
 'Schema Version Created'         #EventBridge EVENT emitted on VERSION creation
SOURCE                            #'aws.schemas'
DETAIL.SchemaName|RegistryName
 |SchemaType|Version|CreationDate #SCHEMA.*

                                  ┌────────────────┐
                                  │   DISCOVERER   │
                                  └────────────────┘

DISCOVERER                        #Infer SCHEMAs from a BUS's EVENTs
                                  #Under-the-hood, creates RULEs named '*Schemas-*'
                                  #Then creates SCHEMAs automatically
                                  #Not if BUS.KmsKeyIdentifier set
                                  #Max 10 (soft) per REGION|ACCOUNT
DISCOVERER.DiscovererArn          #'DISCOVERER_ARN'. 'arn:aws:schemas:REGION:ACCOUNT_ID:discoverer/DISCOVERER_MID'
DISCOVERER.DiscovererId           #'DISCOVERER_MID'
DISCOVERER.Description            #STR. Max 256 chars

DISCOVERER.State                  #'STARTED' (def) or 'STOPPED'

DISCOVERER.SourceArn              #'BUS_ARN'

DISCOVERER.CrossAccount           #BOOL (def: true)
                                  #If false, do not look for EVENTs sent to the BUS from another ACCOUNT

                                  ┌─────────────────────┐
                                  │   DISCOVERER AUTH   │
                                  └─────────────────────┘

aws-service-role/                 #SERVICE_LINKED_ROLE used by DISCOVERER
 schemas.amazonaws.com/           #Automatically created by DISCOVERER
 AWSServiceRoleForSchemas         #  - providing has PACTIONs iam:CreateServiceLinkedRole for that ROLE
                                  #     - COND_KEY iam:AWSServiceName 'schemas.amazonaws.com'

AmazonEventBridgeSchemas          #AWS managed POLICY used by AWSServiceRoleForSchemas. Allows:
 ServiceRolePolicy                #  - Put|Enable|Disable|DeleteRule(), Put|RemoveTargets() and ListTargetsByRule()
                                  #  - on RULEs '*Schemas-*'

AmazonEventBridgeSchemasFullAccess#Includes same permissions as above
                                  #Also includes iam:CreateServiceLinkedRole on above ROLE
AmazonEventBridgeFullAccess       #Same

                                  ┌────────────────────┐
                                  │   DISCOVERER API   │
                                  └────────────────────┘

POST /v1/discoverers              #Req: DISCOVERER
CreateDiscoverer()                #  - no DiscovererId
                                  #  - no DiscovererArn, State
                                  #Res: DISCOVERER
PUT /v1/discoverers               #Req: DISCOVERER
 /id/DISCOVERER_MID               #  - no DiscovererArn, State
                                  #  - no SourceArn, tags
UpdateDiscoverer()                #Res: DISCOVERER
POST /v1/discoverers              #Req: DISCOVERER
 /id/DISCOVERER_MID/start         #  - only DiscovererId
StartDiscoverer()                 #Res: DISCOVERER
                                  #  - only DiscovererId, State
POST /v1/discoverers              #Req: DISCOVERER
 /id/DISCOVERER_MID/stop          #  - only DiscovererId
StopDiscoverer()                  #Res: DISCOVERER
                                  #  - only DiscovererId, State
GET /v1/discoverers               #Req: DISCOVERER
ListDiscoverers()                 #  - only DiscovererId|SourceArn -> DiscovererIdPrefix|SourceArnPrefix
                                  #Res: Discoverers DISCOVERER_ARR
                                  #  - no Description
GET /v1/discoverers               #Req: DISCOVERER
 /id/DISCOVERER_MID               #  - only DiscovererId
DescribeDiscoverer()              #Res: DISCOVERER
DELETE /v1/discoverers            #Req: DISCOVERER
 /id/DISCOVERER_MID               #  - only DiscovererId
DeleteDiscoverer()                #Res: empty

                                  ┌────────────────────┐
                                  │   DISCOVERER IAC   │
                                  └────────────────────┘

AWS::EventSchemas::Discoverer     #RESPROPs: Description, SourceArn, CrossAccount
                                  #RESATTRs: DiscovererArn, DiscovererId, State

                                  ┌───────────┐
                                  │   INFER   │
                                  └───────────┘

SCHEMA_GET.Events                 #'GEVENT'_ARR. Infer a SCHEMA from those GEVENTs
                                  #As opposed to DISCOVERER, GEVENTs are passed directly
                                  #Max 10 items

SCHEMA_GET.Type                   #SCHEMA.Type

                                  ┌───────────────┐
                                  │   INFER API   │
                                  └───────────────┘

POST /v1/discover                 #Req: SCHEMA_GET
GetDiscoveredSchema()             #Res: SCHEMA
                                  #  - only Content

                                  ┌────────────┐
                                  │   POLICY   │
                                  └────────────┘

RESOURCE_POLICY.RegistryName      #'REGISTRY'

RESOURCE_POLICY.RevisionId        #'REVISION_ID' (see aws_network doc)

RESOURCE_POLICY.Policy            #IAM 'POLICY_DOC_JSON'
                                  #Resource-level policy on REGISTRY, i.e. Resource is REGISTRY_ARN
                                  #Principal must be 'ACCOUNT_ID'
                                  #  - this can be worked around using either:
                                  #     - COND_KEY aws:PrincipalArn or aws:SourceArn|SourceAccount
                                  #     - identity-level POLICY instead
                                  #PACTIONs are only cross-account ones (see below)

                                  ┌─────────────────┐
                                  │   POLICY AUTH   │
                                  └─────────────────┘

CROSS-ACCOUNT REQUESTS ==>        #Allowed by using Pricipal with another ACCOUNT, in RESOURCE_POLICY
                                  #Only for PACTIONs:
                                  #  - *Registry() except CreateRegistry()
                                  #  - *Schema*() except ExportSchema() and GetDiscoveredSchema()
                                  #  - *CodeBinding*()
                                  #Can also be 'schemas:*' for all the above PACTIONs

ANONYMOUS REQUESTS ==>            #Allowed by using Principal '*', in BUS_POLICY
                                  #Not recommended, except to target an ORG by using COND_KEY aws:PrincipalOrgId

                                  ┌────────────────┐
                                  │   POLICY API   │
                                  └────────────────┘

PUT /v1/policy                    #Req: RESOURCE_POLICY
PutResourcePolicy()               #  - RegistryName is in query parameters
                                  #Res: RESOURCE_POLICY
                                  #  - no RegistryName
GET /v1/policy                    #Req: RESOURCE_POLICY
GetResourcePolicy()               #  - only RegistryName
                                  #Res: RESOURCE_POLICY
                                  #  - no RegistryName
DELETE /v1/policy                 #Req: RESOURCE_POLICY
DeleteResourcePolicy()            #  - only RegistryName
                                  #Res: empty

                                  ┌────────────────┐
                                  │   POLICY IAC   │
                                  └────────────────┘

AWS::EventSchemas::RegistryPolicy #RESPROPs: RegistryName, RevisionId, Policy
                                  #RESATTRs: Id
                                  #With Cloud Control, cannot list

                                  ┌──────────┐
                                  │   CODE   │
                                  └──────────┘

SCHEMA_CODE                       #Typed getters|setters based on a SCHEMA
                                  #WAIT (DescribeBindingSource(), every 2s, timeout 1m) CodeBindingExists: when it exists

SCHEMA_CODE_RAW                   #'URI' to .zip file with SCHEMA_CODE result
SCHEMA_CODE.CreationDate          #'DATE'
SCHEMA_CODE.LastModified          #'DATE'

SCHEMA_CODE.RegistryName          #'REGISTRY'
SCHEMA_CODE.SchemaName            #'SCHEMA'
SCHEMA_CODE.SchemaVersion         #'VERSION_NUM'

SCHEMA_CODE.Language              #One of: 'TypeScript3', 'Python36', 'Go1', 'Java8'

SCHEMA_CODE.Status                #One of:
                                  #  - CREATE_IN_PROGRESS
                                  #  - CREATE_COMPLETE
                                  #  - CREATE_FAILED

                                  ┌──────────────┐
                                  │   CODE API   │
                                  └──────────────┘

POST /v1/registries/name          #Req: SCHEMA_CODE
 /REGISTRY/schemas/name/SCHEMA    #  - only RegistryName, SchemaName, Language
 /language/LANG                   #  - only SchemaVersion
PutCodeBinding()                  #Res: SCHEMA_CODE
                                  #  - no RegistryName, SchemaName, Language
GET /v1/registries/name           #Req: SCHEMA_CODE
 /REGISTRY/schemas/name/SCHEMA    #  - only RegistryName, SchemaName, Language
 /language/LANG                   #  - only SchemaVersion
                                  #Res: SCHEMA_CODE
DescribeCodeBinding()             #  - no RegistryName, SchemaName, Language
GET /v1/registries/name           #Req: SCHEMA_CODE
 /REGISTRY/schemas/name/SCHEMA    #  - only RegistryName, SchemaName, Language
 /language/LANG/source            #  - only SchemaVersion
GetCodeBindingSource()            #Res: SCHEMA_CODE_RAW

                                  ┌──────────┐
                                  │   TAGS   │
                                  └──────────┘

RESOURCE_TAGS.resourceArn         #'ARN'
RESOURCE_TAGS.tags
REGISTRY|SCHEMA|DISCOVERER.tags   #TAGS_OBJ

                                  ┌──────────────┐
                                  │   TAGS API   │
                                  └──────────────┘

POST /tags/ARN                    #Req: RESOURCE_TAGS
TagResource()                     #Res: empty
GET /tags/ARN                     #Req: RESOURCE_TAGS
ListTagsForResource()             #  - only resourceArn
                                  #Res: RESOURCE_TAGS
                                  #  - only tags
DELETE /tags/ARN                  #Req: RESOURCE_TAGS
UntagResource()                   #  - tags OBJ -> tagKeys 'TAG'_ARR
                                  #Res: empty

                                  ┌──────────────┐
                                  │   TAGS IAC   │
                                  └──────────────┘

AWS::EventSchemas::
 Registry|Schema|Discoverer       #RESPROPs: Tags

                                  ┏━━━━━━━━━━━━━┓
                                  ┃   TO MOVE   ┃
                                  ┗━━━━━━━━━━━━━┛

                                  ┌──────────────────────────────────┐
                                  │   CLOUDTRAIL EVENTBRIDGE EVENT   │
                                  └──────────────────────────────────┘

EVENT_TYPE                        #EventBridge EVENT emitted on new CloudTrail management EVENT with eventType 'AwsApiCall'
 'AWS API Call via CloudTrail'    #DETAIL is CloudTrail EVENT
SOURCE                            #'aws.SERVICE'

EVENT_TYPE 'AWS Console Action
 via CloudTrail'                  #Same with eventType 'AwsConsoleAction'
SOURCE                            #'aws.SERVICE'

EVENT_TYPE 'AWS Console Sign In
 via CloudTrail'                  #Same with eventType 'AwsConsoleSignIn'
SOURCE                            #'aws.signin'

EVENT_TYPE 'AWS Service Event
 via CloudTrail'                  #Same with eventType 'AwsServiceEvent'
SOURCE                            #'aws.SERVICE'

EVENT_TYPE
 'AWS Insight via CloudTrail'     #Same with eventType 'AwsCloudTrailInsight'

READONLY EVENTS ==>               #Write EVENTs always sent
                                  #Readonly EVENTs sent only if EventBridge RULE.State
                                  #'ENABLED_WITH_ALL_CLOUDTRAIL_MANAGEMENT_EVENTS' (as opposed to just 'ENABLED')

                                  ┌───────────────────────────────┐
                                  │   LAMBDA EVENTBRIDGE SOURCE   │
                                  └───────────────────────────────┘

PIPE.Enrichment                   #'FUNC_ARN'. Calls Invoke()
                                  #Input is INVOCATION_REQ.Payload

                                  ┌───────────────────────────────┐
                                  │   LAMBDA EVENTBRIDGE TARGET   │
                                  └───────────────────────────────┘

TARGET.Arn                        #'FUNC_ARN'. Calls Invoke()
                                  #Input is REQ

PIPE.Target                       #Same
                                  #Max batch size: 6MB (like Invoke()'s limit)
PIPE_DEST.LambdaFunctionParameters#Either:
 .InvocationType                  #  - 'REQUEST_RESPONSE' (def): INVOCATION_REQ.InvocationType 'RequestResponse'
                                  #  - 'FIRE_AND_FORGET': INVOCATION_REQ.InvocationType 'Event'

SCHEDULE_TARGET.Arn               #Same

QUERY EVENTBRIDGE                 #JMESPath 'QUERY' (see its doc) for REQ.detail

                                  ┌─────────────────────────────┐
                                  │   LAMBDA EVENTBRIDGE AUTH   │
                                  └─────────────────────────────┘

PACTION lambda:InvokeFunction     #Must be allowed on FUNC_ARN for TARGET|PIPE.RoleArn
                                  #Principal.Service 'events|pipes|scheduler.amazonaws.com'
                                  #COND_KEY aws:SourceArn RULE_ARN|PIPE_ARN

                                  ┌────────────────────────────┐
                                  │   LAMBDA EVENTBRIDGE IAC   │
                                  └────────────────────────────┘

AWS::Pipes::Pipe                  #Includes RESPROPs: TargetParameters: LambdaFunctionParameters

                                  ┌──────────────────────────────────────┐
                                  │   STEP FUNCTIONS EVENTBRIDGE EVENT   │
                                  └──────────────────────────────────────┘

EVENT_TYPE 'Step Functions
 Execution Status Change'         #EventBridge EVENT emitted when EXEC created or EXEC.status changes
SOURCE                            #'aws.states'
EVENT.Resources                   #'EXEC_ARN'_ARR (single item)
DETAIL.executionArn|name|startDate
 |stopDate|stateMachineArn|status
 |input|output                    #EXEC.*
DETAIL.inputDetails|outputDetails
 .included                        #BOOL. Whether DETAIL.input|output excluded due to 248KB limit

                                  ┌───────────────────────────────────────┐
                                  │   STEP FUNCTIONS EVENTBRIDGE SOURCE   │
                                  └───────────────────────────────────────┘

PIPE.Enrichment                   #'MACHINE_ARN'. Calls StartSyncExecution()
                                  #Input is EXEC.input
                                  #Must be Express

                                  ┌───────────────────────────────────────┐
                                  │   STEP FUNCTIONS EVENTBRIDGE TARGET   │
                                  └───────────────────────────────────────┘

TARGET.Arn                        #'MACHINE_ARN'. Calls StartExecution()
                                  #Input is EXEC.input

PIPE.Target                       #Same, but calling Start[Sync]Execution()
                                  #Max batch size: 256KB (i.e. normal limit)
PIPE_DEST.StepFunctionStateMachine#Either:
 Parameters.InvocationType        #  - 'REQUEST_RESPONSE' (def): StartSyncExecution()
                                  #  - 'FIRE_AND_FORGET': StartExecution()

SCHEDULE_TARGET.Arn               #Same, calling StartExecution()
                                  #Cannot use Express

                                  ┌─────────────────────────────────────┐
                                  │   STEP FUNCTIONS EVENTBRIDGE AUTH   │
                                  └─────────────────────────────────────┘

PACTION                           #Must be allowed on MACHINE for TARGET|PIPE.RoleArn
 states:Start[Sync]Execution      #Principal.Service 'events|pipes|scheduler.amazonaws.com'
                                  #COND_KEY aws:SourceArn RULE_ARN|PIPE_ARN

                                  ┌────────────────────────────────────┐
                                  │   STEP FUNCTIONS EVENTBRIDGE IAC   │
                                  └────────────────────────────────────┘

AWS::Pipes::Pipe                  #Includes RESPROPs: TargetParameters: StepFunctionStateMachineParameters

                                  ┌────────────────────────────────────┐
                                  │   API GATEWAY EVENTBRIDGE SOURCE   │
                                  └────────────────────────────────────┘

PIPE.Enrichment                   #'CALL_ROUTE_ARN'. Invoke ROUTE
                                  #Input is request body

                                  ┌────────────────────────────────────┐
                                  │   API GATEWAY EVENTBRIDGE TARGET   │
                                  └────────────────────────────────────┘

TARGET.Arn                        #'CALL_ROUTE_ARN'. Invoke ROUTE
                                  #Input is request body
                                  #Cannot use private endpoint
                                  #Timeout 5s
PIPE.Target                       #Same except timeout 29s
                                  #Max batch size: 1

TARGET|PIPE_DEST.HttpParameters   #Same as when TARGET is EventBridge API_DEST (see its doc)

                                  ┌──────────────────────────────────┐
                                  │   API GATEWAY EVENTBRIDGE AUTH   │
                                  └──────────────────────────────────┘

PACTION execute-api:Invoke        #Must be allowed on CALL_ROUTE_ARN for TARGET|PIPE.RoleArn
                                  #Principal.Service 'events|pipes.amazonaws.com'
                                  #COND_KEY aws:SourceArn RULE_ARN|PIPE_ARN

                                  ┌─────────────────────────────────┐
                                  │   API GATEWAY EVENTBRIDGE IAC   │
                                  └─────────────────────────────────┘

AWS::Events::Rule                 #Includes RESPROPs: Targets[*]: HttpParameters

AWS::Pipes::Pipe                  #Includes RESPROPs: TargetParameters: HttpParameters

                                  ┌────────────────────────────┐
                                  │   SQS EVENTBRIDGE SOURCE   │
                                  └────────────────────────────┘

PIPE.Source                       #'QUEUE_ARN' to pull from
                                  #Similar behavior as Lambda
                                  #  - including can return partial batches
                                  #Filtered out MESSAGEs are considered consumed, i.e. deleted
                                  #Max 1250 ongoing consumers at once per PIPE
                                  #Max 1000 ReceiveMessage() at once per PIPE
PIPE_SRC.SqsQueueParameters
 .BatchSize
 |MaximumBatchingWindowInSeconds  #Like Lambda EVENT_SOURCE.*
QUEUE_ATTRS.VisibilityTimeout     #To allow for time for retries, recommended value is:
                                  #6 * (processing time + enrichment time)

INPUT ==>                         #MESSAGE_RCV_RES.* (camelCase'd)

DATA ==>                          #'MESSAGE_BODY', i.e. INPUT.body
                                  #If valid JSON:
                                  #  - JSON stringified
                                  #  - can use data.VARR in both FILTERS and ENRICH|PIPE_DEST.InputTemplate
                                  #     - filters out if MESSAGE.body valid JSON but not FILTERS, or vice-versa

INPUT.eventSource                 #Always 'aws:sqs'
INPUT.eventSourceArn              #Always QUEUE_ARN

RETRY ==>                         #On ENRICH|TARGET failure, retries up to either:
                                  #  - VisibilityTimeout
                                  #  - REDRIVE_POLICY.maxReceiveCount times
                                  #DLQ:
                                  #  - is used
                                  #  - cannot be FIFO

                                  ┌─────────────────────────────────┐
                                  │   SQS EVENTBRIDGE SOURCE AUTH   │
                                  └─────────────────────────────────┘

PACTION sqs:ReceiveMessage
 |DeleteMessage
 |GetQueueAttributes()            #Must be allowed on QUEUE for PIPE.Source

                                  ┌────────────────────────────────┐
                                  │   SQS EVENTBRIDGE SOURCE IAC   │
                                  └────────────────────────────────┘

AWS::Pipes::Pipe                  #Includes RESPROPs: SourceParameters: SqsQueueParameters

                                  ┌────────────────────────────┐
                                  │   SQS EVENTBRIDGE TARGET   │
                                  └────────────────────────────┘

TARGET.Arn                        #'QUEUE_ARN'. Calls SendMessage()
                                  #Input is MESSAGE.MessageBody
PIPE.Target                       #Same
                                  #Max batch size: 10
SCHEDULE_TARGET.Target            #Same

TARGET.SqsParameters
 .MessageGroupId
PIPE_DEST.SqsQueueParameters
 .MessageGroupId
SCHEDULE_TARGET.SqsParameters
 .MessageGroupId                  #MESSAGE.MessageGroupId
PIPE_DEST.SqsQueueParameters
 .MessageDeduplicationId          #MESSAGE.DeduplicationId

                                  ┌─────────────────────────────────┐
                                  │   SQS EVENTBRIDGE TARGET AUTH   │
                                  └─────────────────────────────────┘

PACTION sqs:SendMessage           #Must be allowed on QUEUE for TARGET|PIPE|SCHEDULE.RoleArn
                                  #Principal.Service 'events|pipes|scheduler.amazonaws.com'
                                  #COND_KEY aws:SourceArn RULE_ARN|PIPE_ARN|SCHEDULE_ARN

                                  ┌────────────────────────────────┐
                                  │   SQS EVENTBRIDGE TARGET IAC   │
                                  └────────────────────────────────┘

AWS::Events::Rule                 #Includes RESPROPs: Targets[*]: SqsParameters
AWS::Pipes::Pipe                  #Includes RESPROPs: TargetParameters: SqsQueueParameters
AWS::Scheduler::Schedule          #Includes RESPROPs: Target: SqsParameters

                                  ┌────────────────────────────┐
                                  │   SNS EVENTBRIDGE TARGET   │
                                  └────────────────────────────┘

TARGET.Arn                        #'TOPIC_ARN'. Calls Publish()
                                  #Input is MESSAGE.Message
                                  #Not FIFO

PIPE.Target                       #Same
                                  #Max batch size: 10 (Publish()'s limit)

SCHEDULE_TARGET.Arn               #Same

                                  ┌─────────────────────────────────┐
                                  │   SNS EVENTBRIDGE TARGET AUTH   │
                                  └─────────────────────────────────┘

PACTION sns:Publish               #Must be allowed on TOPIC for TARGET.RoleArn
                                  #Principal.Service 'events|pipes|scheduler.amazonaws.com'
PACTION
 kms:Decrypt|GenerateDataKey      #Also required if TOPIC is using SSE

                                  ┌─────────────────────────────────────────┐
                                  │   CLOUDWATCH ALARMS EVENTBRIDGE EVENT   │
                                  └─────────────────────────────────────────┘

EVENT_TYPE
 'CloudWatch Alarm State Change'  #EventBridge EVENT emitted when ALARM.StateValue changes
SOURCE                            #'aws.cloudwatch'
EVENT.Resources                   #'ALARM_ARN'_ARR (single item)
DETAIL.*                          #Like REQ.alarmData.*

EVENT_TYPE 'CloudWatch Alarm
 Configuration Change'            #EventBridge EVENT emitted when ALARM created|updated|deleted
SOURCE                            #'aws.cloudwatch'
EVENT.Resources                   #'ALARM_ARN'_ARR (single item)
DETAIL.*                          #Like REQ.alarmData.* except:
                                  #  - no previousState
                                  #  - REQS -> REQC: alarmName, description, timestamp
                                  #  - following new properties
DETAIL.operation                  #'create|update|delete'
DETAIL.previousConfiguration      #REQC. Only if operation 'update'
REQC.actionsEnabled|okActions
 |alarmActions
 |insufficientDataActions         #ALARM.*
REQC.comparisonOperator|threshold
 |evaluationPeriods
 |treatMissingData                #METRIC_ALARM.*

                                  ┌────────────────────────────────────────┐
                                  │   CLOUDWATCH LOGS EVENTBRIDGE TARGET   │
                                  └────────────────────────────────────────┘

TARGET.Arn                        #'LOG_GROUP_ARN'. Calls PutLogEvents()
                                  #Input is:
                                  #  - STR (LLEVENT.message)
                                  #  - if using INPUT_TRANSFORM: OBJ (LLEVENT.message|timestamp)
                                  #Cannot use TARGET.Input[Path]

PIPE.Target                       #Same except input is always LLEVENT.message
                                  #Max batch size: 1e4 (PutLogEvents()'s limit)
PIPE_DEST.CloudWatchLogsParameters#'LOG_STREAM'. LLEVENTS.logStreamName
 .LogStreamName                   #Cannot be 'JSONPATH'
PIPE_DEST.CloudWatchLogsParameters
 .Timestamp                       #LLEVENT.timestamp (def: now)

                                  ┌─────────────────────────────────────────────┐
                                  │   CLOUDWATCH LOGS EVENTBRIDGE TARGET AUTH   │
                                  └─────────────────────────────────────────────┘

PACTION logs:PutLogEvents         #Must be allowed on LOG_STREAMs for TARGET|PIPE.RoleArn
 |CreateLogStream                 #Principal.Service 'events|pipes.amazonaws.com' + 'delivery.logs.amazonaws.com'

                                  ┌────────────────────────────────────────────┐
                                  │   CLOUDWATCH LOGS EVENTBRIDGE TARGET IAC   │
                                  └────────────────────────────────────────────┘

AWS::Pipes::Pipe                  #Includes RESPROPs: TargetParameters: CloudWatchLogsParameters

                                  ┌──────────────────────────┐
                                  │   S3 EVENTBRIDGE EVENT   │
                                  └──────────────────────────┘

Following is for PutBucketNotificationConfiguration()

EVENTBRIDGE ==>                   #Following is for all EventBridge EVENT_TYPEs
SOURCE                            #'aws.s3'
EVENT.Resources                   #'BUCKET_ARN'_ARR (single item)
DETAIL.version                    #Always '0'
DETAIL.bucket                     #NMESSAGE_S3.bucket, but only: name
DETAIL.object                     #NMESSAGE_S3.object but dash-erized
DETAIL.requester                  #NMESSAGE.userIdentity.principalId
DETAIL.source-ip-address          #NMESSAGE.requestParameters.sourceIPAddress
DETAIL.request-id                 #NMESSAGE.responseElements.x-amz-request-id

QUERY S3_EVENTBRIDGE_SQS          #JMESPath 'QUERY' (see its doc) for DETAIL when NOTIFICATIONS
                                  #sent to EventBridge then to SQS then processed by Lambda EVENT_SOURCE
                                  #Gets GEVENT = JSON.parse(REQ.Records[*].body), then returns GEVENT.detail

EVENT_TYPE 'Object Created'       #EventBridge EVENT emitted on OBJECT creation
DETAIL.reason                     #'PutObject', 'POST Object', 'CopyObject' or 'CompleteMultipartUpload'

EVENT_TYPE 'Object Deleted'       #EventBridge EVENT emitted on OBJECT deletion
DETAIL.reason                     #'DeleteObject' or 'Lifecycle expiration'
DETAIL.deletion-type              #'Permanently Deleted' or 'Delete Marker Created'

EVENT_TYPE
 'Object Restore Initiated'       #EventBridge EVENT emitted on RESTORE start
DETAIL.source-storage-class       #'STORAGE_CLASS'

EVENT_TYPE
 'Object Restore Completed'       #EventBridge EVENT emitted on RESTORE end
DETAIL.source-storage-class       #'STORAGE_CLASS'
DETAIL.restore-expiry-time        #RESTORE_STATUS.RestoreExpiryDate

EVENT_TYPE
 'Object Restore Expired'         #EventBridge EVENT emitted on RESTORE expiration

EVENT_TYPE
 'Object Storage Class Changed'   #EventBridge EVENT emitted on STORAGE_CLASS change due to LIFECYCLE
DETAIL.destination-storage-class  #'STORAGE_CLASS'

EVENT_TYPE
 'Object Access Tier Changed'     #EventBridge EVENT emitted on STORAGE_CLASS change due to INTELLIGENT_TIERING
DETAIL.destination-access-tier    #'STORAGE_CLASS'

EVENT_TYPE 'Object ACL Updated'   #EventBridge EVENT emitted on OBJECT ACL created|updated

EVENT_TYPE
 'Object Tags Added|Deleted'      #EventBridge EVENT emitted on OBJECT TAGs added|removed

                                  ┌──────────────────────────────────────┐
                                  │   CLOUDFORMATION EVENTBRIDGE EVENT   │
                                  └──────────────────────────────────────┘

EVENT_TYPE 'CloudFormation
 Stack Status Change'             #EventBridge EVENT emitted on STACK.StackStatus change
SOURCE                            #'aws.cloudformation'
EVENT.Resources                   #'STACK_ARN'_ARR (single item)
DETAIL.stack-id
DETAIL.status-details.status
DETAIL.status-details
 .status-reason                   #STACK.*
DETAIL.client-request-token       #STR

EVENT_TYPE 'CloudFormation
 Resource Status Change'          #EventBridge EVENT emitted on STACK_RESOURCE.ResourceStatus change
SOURCE                            #'aws.cloudformation'
EVENT.Resources                   #'STACK_ARN'_ARR (single item)
DETAIL.logical-resource-id
DETAIL.physical-resource-id
DETAIL.resource-type
DETAIL.stack-id
DETAIL.status-details.status
DETAIL.status-details
 .status-reason                   #STACK_RESOURCE.*
DETAIL.client-request-token       #STR

EVENT_TYPE 'CloudFormation
 StackSet Status Change'          #EventBridge EVENT emitted on SET.Status change
SOURCE                            #'aws.cloudformation'
EVENT.Resources                   #'SET_ARN'_ARR (single item)
DETAIL.stack-set-arn
DETAIL.status-details.status      #SET.*

EVENT_TYPE 'CloudFormation
 StackSet StackInstance
 Status Change'                   #EventBridge EVENT emitted on INSTANCE.Status change
SOURCE                            #'aws.cloudformation'
EVENT.Resources                   #'INSTANCE_ARN'_ARR (single item)
DETAIL.stack-set-arn
DETAIL.stack-id
DETAIL.stack-details.status
DETAIL.stack-details.status-reason
DETAIL.stack-details
 .detailed-reason                 #INSTANCE.*

EVENT_TYPE 'CloudFormation
 StackSet Operation Change'       #EventBridge EVENT emitted on OP.Status change
SOURCE                            #'aws.cloudformation'
EVENT.Resources                   #'SET_ARN'_ARR (single item)
DETAIL.stack-set-operation-id
DETAIL.stack-set-arn
DETAIL.status-details.status      #OP.*

EVENT_TYPE 'CloudFormation
 Drift Detection Status Change'   #EventBridge EVENT emitted on STACK_DRIFT.StackDriftStatus change
SOURCE                            #'aws.cloudformation'
EVENT.Resources                   #'STACK_ARN'_ARR (single item)
DETAIL.status-details
 .stack-drift-status
DETAIL.drift-detection-details
 .drifted-stack-resource-count
DETAIL.stack-drift-detection-id
DETAIL.stack-id
DETAIL.status-details
 .detection-status                #STACK_DRIFT.*
DETAIL.client-request-token       #STR

EVENT_TYPE 'Git Sync
 Repository Sync Status Change'   #EventBridge EVENT emitted on Git Sync update of repo
SOURCE                            #'aws.codeconnections'
DETAIL.*                          #Not documented yet
                                  #See https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/event-detail-respository-sync-status-change.html

EVENT_TYPE 'Git Sync
 Resource Sync Status Change'     #EventBridge EVENT emitted on Git Sync update of commit
SOURCE                            #'aws.codeconnections'
DETAIL.*                          #Not documented yet
                                  #See https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/event-detail-resource-sync-status-change.html

                                  ┌─────────────────────────────────────────────────┐
                                  │   CLOUDFORMATION EXTENSIONS EVENTBRIDGE EVENT   │
                                  └─────────────────────────────────────────────────┘

EVENT_TYPE 'CloudFormation Hook
 Invocation Progress'             #EventBridge EVENT emitted on HOOK.Status change
SOURCE                            #'aws.cloudformation'
DETAIL.status
DETAIL.status-reason              #HOOK_RES.*
DETAIL.result.data                #ETYPE_CONF.Configuration
DETAIL.hook-detail.hook-type-arn
 |hook-type-name|hook-version
 |description|documentation-url
 |source-url                      #ETYPE.*
DETAIL.hook-detail.failure-mode   #HOOK_CONF.*
DETAIL.target-detail.target-id
 |target-name|target-type         #HREQH_DATA.*
DETAIL.target-detail.target-action
 |target-invocation-point         #TARGET_FILTERS.*
