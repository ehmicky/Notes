
                                  ┏━━━━━━━━━━━━━━━━━━━━━━━┓
                                  ┃   EVENTBRIDGE RULES   ┃
                                  ┗━━━━━━━━━━━━━━━━━━━━━━━┛

VERSION ==>                       #2024-12-20

TODO EventBridge Rule:
  - CloudWatch Events
  - CDK:
     - https://github.com/aws/aws-cdk/blob/main/docs/DESIGN_GUIDELINES.md#events
     - https://github.com/awslabs/aws-break-glass-role
     - CloudTrail: Trail.onEvent():
        - https://github.com/aws/aws-cdk/blob/main/packages/aws-cdk-lib/aws-cloudtrail/lib/cloudtrail.ts#L204
        - https://github.com/aws/aws-cdk/blob/main/packages/aws-cdk-lib/aws-cloudtrail/README.md#amazon-eventbridge
     - S3 Bucket: Bucket.onCloudTrail*()
        - https://github.com/aws/aws-cdk/blob/751a922de30e88a1faa7a20fb7b29cb43856d522/packages/aws-cdk-lib/aws-s3/lib/bucket.ts#L557
        - https://github.com/aws/aws-cdk/blob/751a922de30e88a1faa7a20fb7b29cb43856d522/packages/aws-cdk-lib/aws-s3/lib/bucket.ts#L586
        - https://github.com/aws/aws-cdk/blob/751a922de30e88a1faa7a20fb7b29cb43856d522/packages/aws-cdk-lib/aws-s3/lib/bucket.ts#L611
  - SAM:
     - Lambda:
        - https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-property-function-eventbridgerule.html
        - https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-specification-generated-resources-function.html#sam-specification-generated-resources-function-eventbridge
        - https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-property-function-cloudwatchevent.html
     - Step Functions:
        - https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-property-statemachine-statemachineeventbridgerule.html
        - https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-property-statemachine-statemachinecloudwatchevent.html
        - https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-specification-generated-resources-statemachine.html#sam-specification-generated-resources-statemachine-eventbridge
     - move documentation about AWS::Serverless::Connector
     - see example of how to document this with AWS::Serverless::Function documentation in CloudWatch Logs
     - test locally using sam-translate binary
     - move POLICY_TEMPLATE doc from SAM transform doc
  - integrations to EventBridge:
     - CloudFormation: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/eventbridge-integration.html
     - CloudWatch: https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/cloudwatch-and-eventbridge.html
     - EventBridge scheduled rules: https://docs.aws.amazon.com/eventbridge/latest/userguide/event-reference.html#event-reference-schedules
     - EventBridge schemas: https://docs.aws.amazon.com/eventbridge/latest/userguide/event-reference.html#event-reference-schemas
     - S3: https://docs.aws.amazon.com/AmazonS3/latest/userguide/EventBridge.html
     - Step Functions: https://docs.aws.amazon.com/step-functions/latest/dg/eventbridge-integration.html
        - https://docs.aws.amazon.com/step-functions/latest/dg/tutorial-cloudwatch-events-s3.html
     - CloudTrail
     - API Gateway: https://docs.aws.amazon.com/eventbridge/latest/userguide/eb-api-gateway-target.html
     - CloudWatch Logs
     - IAM
     - Lambda
     - STS
     - Glacier
     - SQS
     - SNS
     - Management console sign-in
  - https://docs.aws.amazon.com/eventbridge/latest/userguide/eb-event-bus.html
     - stopped at: Events > AWS service events > Events via CloudTrail > Management events
  - https://docs.aws.amazon.com/eventbridge/latest/userguide/eb-integrations.html
  - https://docs.aws.amazon.com/eventbridge/latest/userguide/eb-monitoring.html
  - https://docs.aws.amazon.com/eventbridge/latest/onboarding/amazon_eventbridge_partner_onboarding_guide.html

TODO EventBridge Pipes:
  - SQS: https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/eb-pipes-integration.html
  - https://docs.aws.amazon.com/eventbridge/latest/userguide/eb-pipes.html
  - targets:
     - use same logic as EventBridge Rules???
     - CloudWatch Logs: https://docs.aws.amazon.com/eventbridge/latest/userguide/eb-pipes-event-target.html#pipes-targets-specifics-cwl
     - Lambda: https://docs.aws.amazon.com/eventbridge/latest/userguide/eb-pipes-event-target.html#pipes-targets-specifics-lambda-stepfunctions
     - Step Functions: https://docs.aws.amazon.com/eventbridge/latest/userguide/eb-pipes-event-target.html#pipes-targets-specifics-lambda-stepfunctions

TODO EventBridge Scheduler:
  - Lambda:
     - https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-property-function-schedule.html
     - https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-property-function-schedulev2.html
     - https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/using-eventbridge-scheduler.html
  - SNS: https://docs.aws.amazon.com/sns/latest/dg/using-eventbridge-scheduler.html
  - Step Functions:
     - https://docs.aws.amazon.com/step-functions/latest/dg/using-eventbridge-scheduler.html
     - SAM:
        - https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-property-statemachine-statemachineschedule.html
        - https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-property-statemachine-statemachineschedulev2.html
  - https://docs.aws.amazon.com/scheduler/latest/UserGuide/what-is-scheduler.html
  - https://docs.aws.amazon.com/eventbridge/latest/userguide/using-eventbridge-scheduler.html

TODO EventBridge Schemas:
  - https://docs.aws.amazon.com/eventbridge/latest/userguide/eb-schema.html

TODO all:
  - move SERVICE-specific docs in their respective docs
     - e.g. SQS|Lambda|API Gateway TARGETs, etc.
  - break down this doc into 4: rules, pipes, scheduler, schemas
  - https://docs.aws.amazon.com/eventbridge/latest/userguide/eb-what-is.html
     - already read:
        - Event patterns
        - Working with AWS SDKs

                                  ┌─────────┐
                                  │   API   │
                                  └─────────┘

SERVICE_DOMAIN                    #'events.REGION.amazonaws.com'

FORMAT ==>                        #Uses X-Amz-Target: AWSEvents.ACTION [C]
                                  #JSON request|response body

REQ_ID                            #x-amzn-RequestId [S]

PAGINATION ==>                    #Uses REQ.Limit (def|max: 100) + REQ|RES.NextToken
                                  #ListEndpoints: named REQ.MaxResults instead
                                  #No pagination: ListTagsForResource()

EVENT CONSISTENCY ==>             #Writes take a short time to propagate

                                  ┌─────────┐
                                  │   BUS   │
                                  └─────────┘

BUS                               #Group that receives EVENTs and sends them to targets
                                  #Cannot delete if it has some RULEs
                                  #Types of BUSs|EVENTs:
                                  #  - default: AWS SERVICEs (see below)
                                  #  - custom
                                  #  - partner: AWS registered partner (below)

BUS.Arn                           #'BUS_ARN'. 'arn:aws:events:REGION:ACCOUNT_ID:event-bus/BUS'
BUS.Name                          #'BUS' (def: 'default' with DescribeEventBus())
                                  #Only [:alnum:]-_., max 256 chars
BUS.Description                   #STR. Max 512 chars
BUS.CreationTime                  #DATE_NUM
BUS.LastModifiedTime              #DATE_NUM

BUS.KmsKeyIdentifier              #'KMS_KEY_ARN|MID' (def: AWS managed). Encrypt EVENTs at rest

                                  ┌─────────────┐
                                  │   BUS API   │
                                  └─────────────┘

CreateEventBus()                  #Req: BUS
                                  #  - no Arn, *Time, Policy
                                  #  - only one with EventSourceName, Tags
                                  #Res: BUS
                                  #  - Arn -> EventBusArn
                                  #  - no Name, *Time, Policy
UpdateEventBus()                  #Req: BUS
                                  #  - no Arn, *Time, Policy
                                  #Res: BUS
                                  #  - no *Time, Policy
ListEventBuses()                  #Req: BUS
                                  #  - only Name -> NamePrefix
                                  #Res: EventBuses BUS_ARR
                                  #  - no DeadLetterConfig, KmsKeyIdentifier
DescribeEventBus()                #Req: BUS
                                  #  - only Arn + Name -> Name
                                  #Res: BUS
DeleteEventBus()                  #Req: BUS
                                  #  - only Name
                                  #Res: empty

                                  ┌─────────────┐
                                  │   BUS IAC   │
                                  └─────────────┘

GENERATE TEMPLATE ==>             #In UI, can generate CloudTemplate template from existing BUSs

                                  ┌─────────────┐
                                  │   DEFAULT   │
                                  └─────────────┘

DEFAULT BUS ==>                   #BUS with name 'default'
                                  #Already created, cannot be deleted
                                  #Receives EVENTs from AWS SERVICEs
                                  #But can be used for any other purposes

CUSTOM BUS ==>                    #Other BUSs receiving EVENTs from PutEvents() calls

                                  ┌──────────────────┐
                                  │   DEFAULT AUTH   │
                                  └──────────────────┘

COND_KEY events:
 detail.userIdentity.principalId  #DETAIL.userIdentity.principalId. For PutRule()
COND_KEY
 events:detail.eventTypeCode      #DETAIL.eventTypeCode. For PutRule()
COND_KEY events:detail.service    #DETAIL.service. For PutRule()

                                  ┌─────────────────┐
                                  │   DEFAULT IAC   │
                                  └─────────────────┘

DEFAULT BUS ==>                   #No need to declare if keep default RESPROPs
                                  #Else must:
                                  #  - import with CHANGESET.ResourcesToImport
                                  #  - RESOURCE.DeletionPolicy 'Retain'
                                  #  - RESPROP Name 'default'

                                  ┌────────────┐
                                  │   SOURCE   │
                                  └────────────┘

SOURCE                            #PARTNER sending EVENTs to a BUS
                                  #First, PARTNER's ACCOUNT:
                                  #  - creates|deletes the SOURCE
                                  #     - using *PartnerEventSource*()
                                  #Then, BUS's ACCOUNT:
                                  #  - activates the SOURCE by creating a "matching BUS"
                                  #     - i.e. CreateEventBus() with BUS.EventSourceName set to same 'SOURCE'
                                  #  - can enable|disable the SOURCE
                                  #     - using *EventSource*()
SOURCE.Arn                        #'SOURCE_ARN'. 'arn:aws:events:REGION::event-source/SOURCE'
SOURCE.CreationTime               #DATE_NUM

SOURCE.Name                       #'SOURCE'. Is 'aws.partner/PARTNER/EVENT_NAMESPACE/EVENT'
                                  #Must be [:alnum:]-. and max 256 chars
PARTNER                           #AWS registered partner, i.e. known identifier
EVENT_NAMESPACE                   #Meant only to namespace|categorize 'EVENT' name
EVENT                             #Name must be unique to this BUS
                                  #E.g. including its ACCOUNT_ID or PARTNER-specific user ID
                                  #That's because neither 'BUS' name nor ACCOUNT_ID is in 'SOURCE_ARN'

SOURCE.CreatedBy                  #'PARTNER'
SOURCE.Account                    #'ACCOUNT_ID' of BUS (not of PARTNER)

SOURCE.State                      #Can be:
                                  #  - 'PENDING': either:
                                  #     - no matching BUS yet
                                  #     - SOURCE disabled with DeactivateEventSource()
                                  #  - 'ACTIVE': matching BUS, and not disabled
                                  #  - 'DELETED': deleted by PARTNER, i.e. by DeletePartnerEventSource()
SOURCE.ExpirationTime             #DATE_NUM. If SOURCE.State PENDING for 2 weeks, SOURCE is deleted

BUS.EventSourceName               #'SOURCE'. Must be set for a partner BUS
                                  #'BUS' name must be same as 'SOURCE'

                                  ┌────────────────┐
                                  │   SOURCE API   │
                                  └────────────────┘

ActivateEventSource()             #Req: SOURCE
                                  #  - only Name
                                  #Res: empty
ListEventSources()                #Req: SOURCE
                                  #  - only Name -> NamePrefix
                                  #Res: EventSources SOURCE_ARR
                                  #  - no Account
DescribeEventSource()             #Req: SOURCE
                                  #  - only Name
                                  #Res: SOURCE
                                  #  - no Account
DeactivateEventSource()           #Req: SOURCE
                                  #  - only Name
                                  #Res: empty

CreatePartnerEventSource()        #Req: SOURCE
                                  #  - only Name, Account
                                  #Res: SOURCE
                                  #  - only Arn -> EventSourceArn
ListPartnerEventSources()         #Req: SOURCE
                                  #  - only Name -> NamePrefix
                                  #Res: PartnerEventSources SOURCE_ARR
                                  #  - only Arn, Name
ListPartnerEventSourceAccounts()  #Req: SOURCE
                                  #  - only Arn -> EventSourceArn
                                  #Res: PartnerEventSourceAccounts SOURCE_ARR
                                  #  - no Arn, Name, CreatedBy
DescribePartnerEventSource()      #Req: SOURCE
                                  #  - only Name
                                  #Res:SOURCE
                                  #  - only Arn, Name
DeletePartnerEventSource()        #Req: SOURCE
                                  #  - only Name, Account
                                  #Res: empty

                                  ┌──────────────────┐
                                  │   AWS SERVICES   │
                                  └──────────────────┘

INTEGRATED SERVICES ==>           #Many SERVICEs automatically send EVENTs to EventBridge
                                  #Documented in their respective SERVICEs
                                  #For most SERVICEs, delivery sometimes fail ("best effort")
                                  #For a few SERVICEs, it never fails ("durable")
                                  #Either way, duplicate EVENTs can happen

CLOUDTRAIL ==>                    #CloudTrail is an integrated SERVICE itself
                                  #It can be used as substitute when another SERVICE is not integration
                                  #See its doc

                                  ┌───────────┐
                                  │   EVENT   │
                                  └───────────┘

EVENTS.Entries                    #EVENT_ARR
                                  #Max 10 items (20 if PARTNER)

EVENTS_RES.FailedEntryCount       #NUM of failed EVENT_RESs
EVENTS_RES.Entries                #EVENT_RES_ARR
                                  #Same length and order as EVENTS.Entries
EVENT_RES.EventId                 #'EVENT_MID', if successful
EVENT_RES.ErrorCode               #'CODE', if failed
EVENT_RES.ErrorMessage            #'MESSAGE', if failed

EVENT                             #Main information being exchanged
                                  #PutPartnerEvents() is used by PARTNERs, else PutEvents() is used
                                  #Max 256KB
EVENT.EventBusName                #'BUS[_ARN]' (def: 'default')
                                  #If unknown, EVENT is ignored, but does not fail
EVENT.Time                        #DATE_NUM (def: now)

EVENT.Detail                      #'DETAIL_JSON'. Main payload
                                  #Can be anything. Required, but can be '{}'
                                  #Max 1000 depth levels
EVENT.DetailType                  #'EVENT_TYPE'. Payload type
                                  #Can be anything. Required
EVENT.Source                      #'EVENT_SOURCE'. Who sent the payload
                                  #With AWS SERVICEs, this is 'aws.SERVICE'
                                  #With PARTNER, this is 'SOURCE'
                                  #Else, can be anything
                                  #  - recommended: dot-delimited list
                                  #  - e.g. 'com.COMPANY.APP'
                                  #Required
EVENT.Resources                   #'ARN'_ARR (def: none) of related RESOURCEs
                                  #Max 2e3 items

EVENT.TraceHeader                 #STR. X-Ray header

GEVENT                            #Internal representation of an EVENT
GEVENT.version                    #Always '0' (def)
GEVENT.account                    #'ACCOUNT_ID'
GEVENT.region                     #'REGION'
GEVENT.id                         #'EVENT_MID', generated by API
GEVENT.time                       #EVENT.Time but as 'DATE'
GEVENT.detail|detail-type|source
 |resources                       #EVENT.*

                                  ┌────────────────┐
                                  │   EVENT AUTH   │
                                  └────────────────┘

COND_KEY events:detail-type       #EVENT.DetailType. For PutEvents() and PutRule()
COND_KEY events:source            #EVENT.Source. For PutEvents() and PutRule()

                                  ┌───────────────┐
                                  │   EVENT API   │
                                  └───────────────┘

PutEvents()                       #Req: EVENTS
                                  #Res: EVENTS_RES
PutPartnerEvents()                #Req: EVENTS
                                  #  - no EndpointId, Entries[*].EventBusName|TraceHeader
                                  #Res: EVENTS_RES

                                  ┌──────────┐
                                  │   RULE   │
                                  └──────────┘

RULE                              #Filters, schedules and redirects EVENTs
                                  #Should be careful about infinite loops, for cost reasons
                                  #Cannot delete if there are some TARGETs
                                  #Delete is idempotent
                                  #Max 300 (soft) per BUS
RULE.Arn                          #'RULE_ARN'. 'arn:aws:events:REGION:ACCOUNT_ID:rule[/BUS]/RULE'
                                  #'/BUS' is omitted for default BUS
RULE.Name                         #'RULE'
                                  #Max 64 chars, [:alnum:].-
RULE.Description                  #STR. Max 512 chars

RULE.EventBusName                 #In input: 'BUS[_ARN]' (def: default BUS)
                                  #In output: 'BUS'

RULE.CreatedBy                    #'ACCOUNT_ID' which created the RULE
                                  #Might differ from RULE's ACCOUNT, if a cross-ACCOUNT PutRule() was done

RULE.ManagedBy                    #'SERVICE'. If RULE created by an AWS SERVICE
RULE|TARGET.Force                 #BOOL. If false (def), do not allow deleting if RULE is SERVICE-managed

RULE.State                        #One of:
                                  #  - 'DISABLED'
                                  #  - 'ENABLED[_WITH_ALL_CLOUDTRAIL_MANAGEMENT_EVENTS]'
                                  #     - [not] including management EVENTs from CloudTrail

RULE.ScheduleExpression           #See EventBridge Scheduler doc

                                  ┌───────────────┐
                                  │   RULE AUTH   │
                                  └───────────────┘

RULE.RoleArn                      #'ROLE_ARN' assumed by the RULE
                                  #Def: use current PRINCIPAL

COND_KEY events:creatorAccount    #RULE.CreatedBy. For Put|Enable|Disable|Delete|DescribeRule(), Put|RemoveTargets|ListTargetsByRule(), *Tag*()
COND_KEY events:ManagedBy         #RULE.ManagedBy. For Put|Enable|Disable|DeleteRule() and Put|RemoveTargets()

                                  ┌──────────────┐
                                  │   RULE API   │
                                  └──────────────┘

PutRule()                         #Req: RULE
                                  #  - only one with Tags
                                  #  - no Arn, CreatedBy, ManagedBy
                                  #Res: RULE
                                  #  - only Arn -> RuleArn
                                  #Either creates or replaces (does not patch)
EnableRule()                      #Req: RULE
                                  #  - only Name, EventBusName
                                  #Res: empty
DisableRule()                     #Req:
                                  #  - only Name, EventBusName
                                  #Res: empty
ListRules()                       #Req: RULE
                                  #  - only Name -> NamePrefix
                                  #  - only EventBusName
                                  #Res: Rules RULE_ARR
                                  #  - no CreatedBy
DescribeRule()                    #Req: RULE
                                  #  - only Name, EventBusName
                                  #Res: RULE
DeleteRule()                      #Req: RULE
                                  #  - only Name, EventBusName
                                  #  - only one with Force
                                  #Res: empty

                                  ┌──────────────┐
                                  │   RULE IAC   │
                                  └──────────────┘

GENERATE TEMPLATE ==>             #In UI, can generate CloudTemplate template from existing RULEs

                                  ┌─────────────┐
                                  │   PATTERN   │
                                  └─────────────┘

RULE.EventPattern                 #'FILTERS_JSON'. Required

FILTERS                           #Ignores EVENTs that do not match
                                  #Matched against GEVENT shape
                                  #Should be as precise as possible
                                  #  - including matching GEVENT.account|region
                                  #Max 4KB

FILTERS.*                         #And'd, i.e. must all match

FILTERS.$or                       #FILTERS_ARR
                                  #Max 1000 cartesian product of all $or ARRs
                                  #Can be combined with FILTERS.*, e.g. { PROP: ARR, $or: FILTERS_ARR }

FILTERS.VARR                      #ARR of either:
                                  #  - STR|NUM|BOOL|null: ARR.includes() (case-sensitive)
                                  #  - FILTER (ARR has a single item)
                                  #Does not alllow escaping dot in VAR
                                  #  - it always matches both a nested OBJ, and a VAR with a dot in its name

FILTER.anything-but               #VAL|ARR|FILTER2. Negation
FILTER.equals-ignore-case         #STR[_ARR]. ARR.includes() (case-insensitive)
FILTER.numeric                    #['OP', NUM[, 'OP2', NUM2]]
                                  #OP is = > >= < <=
                                  #Min|max NUM [-]5e9, 6 decimal points
                                  #Stringified, i.e. 1 != 1.0 != 1e1
FILTER.exists                     #BOOL. !==|=== undefined
FILTER.prefix|suffix
 [.equals-ignore-case]            #STR. startsWith|endsWith(STR) (case-[in]sensitive)
FILTER.wildcard                   #'GLOB'. Only GLOB character is *
                                  #Can \-escape * and \
                                  #Cannot be too complex, e.g. too many * (not documented how many)
FILTER.cidr                       #'CIDR'. Matches IP

                                  ┌──────────────────┐
                                  │   PATTERN TEST   │
                                  └──────────────────┘

TEST_EVENT_REQ.Event              #'GEVENT_JSON'
                                  #All GEVENT.* must be set, except GEVENT.version|detail which are optional
TEST_EVENT_REQ.EventPattern       #'PATTERN_JSON'

TEST_EVENT_RES.Result             #BOOL. Whether PATTERN matches DETAIL

                                  ┌─────────────────────┐
                                  │   PATTERN TEST UI   │
                                  └─────────────────────┘

TESt PATTERN ==>                  #Can be done from UI ("sandbox")
                                  #Can select sample GEVENTs
                                  #  - including random data from SCHEMAs

                                  ┌──────────────────────┐
                                  │   PATTERN TEST API   │
                                  └──────────────────────┘

TestEventPattern()                #Req: TEST_EVENT_REQ
                                  #Res: TEST_EVENT_RES

                                  ┌────────────┐
                                  │   TARGET   │
                                  └────────────┘

TARGETS.Targets                   #TARGET_ARR (no Rule|EventBusNamee)
                                  #Max 10 entries
TARGETS.Rule|EventBusName         #TARGET.*
TARGETS_RES
 .FailedEntryCount|Entries        #Same as EVENTS_RES.* except EventId -> TargetId

TARGET                            #RESOURCEs triggered where EVENTs are emitted
                                  #EVENTs are not stored by EventBridge, they only trigger TARGETs
                                  #Max 5 per RULE
TARGET.Id                         #'TARGET'
                                  #Only [:alnum:]-.

TARGET.Arn                        #'ARN'. TARGET_TYPE-specific.
                                  #Each SERVICE documented it in its respective docs
TARGET.*Parameters                #OBJ. TARGET_TYPE-specific options
                                  #Some TARGET_TYPEs do not have any
                                  #Each SERVICE documented it in its respective docs

TARGET.Rule                       #'RULE'
TARGET.EventBusName               #'BUS' (def: default BUS) of the RULE
                                  #If in another ACCOUNT, cannot use TARGET.Input*

TARGET.Input                      #'INPUT_JSON'. Input used when calling TARGET's RESOURCE
                                  #Def: 'GEVENT_JSON'
                                  #Max 8KB
TARGET.InputPath                  #'JSONPATH' (see its doc). Alternative to TARGET.Input
                                  #Input is GEVENT_JSON after evaluating JSONPATH
                                  #Max 256 chars
TARGET.InputTransformer           #INPUT_TRANSFORM. Alternative to TARGET.Input
INPUT_TRANSFORM.InputTemplate     #STR used as input
                                  #Max 8KB
INPUT_TRANSFORM.InputPathsMap.VAR #'JSONPATH'. Replaces:
                                  #  - any '<VAR>' in InputTemplate
                                  #  - by evaluation of JSONPATH on GEVENT_JSON
                                  #Evaluation result is in JSON
                                  #  - i.e. if InputTemplate is 'OBJ_JSON', should be used as a whole value
                                  #    (no concatenation, to avoid injection)
                                  #Max 100 VARs
                                  #VAR must be [:alnum:]_-, max 256 chars
                                  #'JSONPATH' max 256 chars

                                  ┌─────────────────┐
                                  │   TARGET AUTH   │
                                  └─────────────────┘

TARGET.RoleArn                    #'ROLE_ARN' used to call TARGET
                                  #Must be used instead of RULE.RoleArn if both:
                                  #  - cross-ACCOUNT
                                  #  - access granted to ORG, not ACCOUNT
                                  #Which permission is required is TARGET_TYPE-specific

COND_KEY events:TargetArn         #TARGET.Arn, as 'ARN'_ARR. For PutTargets()

                                  ┌────────────────┐
                                  │   TARGET API   │
                                  └────────────────┘

PutTargets()                      #Req: TARGETS
                                  #Res: TARGETS_RES
ListTargetsByRule()               #Req: TARGET
                                  #  - only Rule, only EventBusName
                                  #Res: Targets TARGET_ARR
                                  #  - no Rule, EventBusName
ListRuleNamesByTarget()           #Req: TARGET
                                  #  - only Arn -> TargetArn
                                  #  - only EventBusName
                                  #Res: TARGET
                                  # - Rule STR -> RuleNames STR_ARR
RemoveTargets()                   #Req: TARGET
                                  #  - only EventBusName, Rule
                                  #  - only Id STR -> Ids STR_ARR (max 10 items)
                                  #  - only one with Force
                                  #Res: TARGETS_RES

                                  ┌────────────────┐
                                  │   TARGET BUS   │
                                  └────────────────┘

TARGET.Arn                        #EventBridge 'BUS_ARN'. Calls PutEvents()
                                  #I.e. pass EVENT from one BUS to another
                                  #Input is 'GEVENT_JSON'

                                  ┌─────────────────────┐
                                  │   TARGET BUS AUTH   │
                                  └─────────────────────┘

PACTION events:PutEvents          #Must be allowed for TARGET.Arn on target BUS2
                                  #Must use COND_KEY aws:SourceArn BUS_ARN
                                  #Usually only needed if cross-REGION|ACCOUNT, thanks to default BUS.Policy

COND_KEY events:eventBusInvocation#'BOOL'. Whether PutEvents() was called by a TARGET with Arn 'BUS_ARN'
                                  #For PutEvents()

                                  ┌───────────────────┐
                                  │   TARGET LAMBDA   │
                                  └───────────────────┘

TARGET.Arn                        #Lambda 'FUNC_ARN'. Calls Invoke()
                                  #Input is INVOCATION_REQ.Payload

                                  ┌───────────────────────────┐
                                  │   TARGET STEP FUNCTIONS   │
                                  └───────────────────────────┘

TARGET.Arn                        #Step Functions 'MACHINE_ARN'. StartExecution()
                                  #Input is EXEC.input

                                  ┌────────────────────────┐
                                  │   TARGET API GATEWAY   │
                                  └────────────────────────┘

TARGET.Arn                        #API Gateway 'CALL_ROUTE_ARN'. Invoke ROUTE
                                  #Input is request payload
TARGET.HttpParameters             #Same as when TARGET is EventBridge API_DEST (see its doc)

                                  ┌────────────────┐
                                  │   TARGET SQS   │
                                  └────────────────┘

TARGET.Arn                        #SQS 'QUEUE_ARN'. Calls SendMessage()
                                  #Input is MESSAGE.MessageBody
TARGET
 .SqsParameters.MessageGroupId    #MESSAGE.MessageGroupId

                                  ┌──────────┐
                                  │   FAIL   │
                                  └──────────┘

TARGET.RetryPolicy                #RETRY_POLICY
RETRY_POLICY                      #Max NUM (in secs) of time to keep retrying on failed EVENTs
 .MaximumEventAgeInSeconds        #Min: 1m, def|max: 1d
                                  #Retries uses exponential backoff
RETRY_POLICY.MaximumRetryAttempts #NUM of retries on failed EVENTs
                                  #Min|def: 0, max: 185

BUS|TARGET.DeadLetterConfig.Arn   #'SQS_QUEUE_ARN' to send failed EVENTs, including:
                                  #  - could not send to TARGET
                                  #  - request waited 24h due to API_DEST.InvocationRateLimitPerSecond
                                  #  - encrypting failed

                                  ┌─────────────────┐
                                  │   DESTINATION   │
                                  └─────────────────┘

API_DEST                          #TARGET that makes a HTTP request
API_DEST.ApiDestinationArn        #'API_DEST_ARN'. 'arn:aws:events:REGION:ACCOUNT_ID:api-destination/API_DEST'
API_DEST.Name                     #'API_DEST'
                                  #Must be [:alnum:].-, max 64 chars
API_DEST.Description              #STR. Max 512 chars
API_DEST.CreationTime             #DATE_NUM
API_DEST.LastModifiedTime         #DATE_NUM

API_DEST.ApiDestinationState      #'ACTIVE' or 'INACTIVE'

API_DEST.HttpMethod               #'HTTP_METHOD', uppercased
API_DEST.InvocationEndpoint       #'URL'
                                  #Max 2KB

API_DEST                          #NUM. Max NUM requests per second.
 .InvocationRateLimitPerSecond    #Throttled requests automatically wait up to 24h

TARGET.Arn                        #'API_DEST_ARN'
TARGET.HttpParameters             #HTTP_TARGET. Request parameters
HTTP_TARGET.PathParameterValues   #'VAL'_ARR
                                  #Must use * in API_DEST.InvocationEndpoint
HTTP_TARGET
 .QueryStringParameters.PARAM     #'VAL'
HTTP_TARGET
 .HeaderParameters.HEADER         #'VAL'

                                  ┌──────────────────────┐
                                  │   DESTINATION AUTH   │
                                  └──────────────────────┘

PACTION
 events:InvokeApiDestination      #Allows calling API_DEST

                                  ┌─────────────────────┐
                                  │   DESTINATION API   │
                                  └─────────────────────┘

CreateApiDestination()            #Req: API_DEST
                                  #  - no ApiDestination*, *Time
                                  #Res: API_DEST
                                  #  - only ApiDestination*, *Time
UpdateApiDestination()            #Req: API_DEST
                                  #  - no ApiDestination*, *Time
                                  #Res: API_DEST
                                  #  - only ApiDestination*, *Time
ListApiDestinations()             #Req: API_DEST
                                  #  - only Name -> NamePrefix
                                  #  - only ConnectionArn
                                  #Res: ApiDestinations API_DEST_ARR
DescribeApiDestination()          #Req: API_DEST
                                  #  - only Name
                                  #Res: API_DEST
DeleteApiDestination()            #Req: API_DEST
                                  #  - only Name
                                  #Res: empty

                                  ┌────────────────┐
                                  │   CONNECTION   │
                                  └────────────────┘

CONN                              #Sets of secret (e.g. auth-related) HTTP requests parameters, used by an API_DEST
CONN.ConnectionArn                #'CONN_ARN'. 'arn:aws:events:REGION:ACCOUNT_ID:connection/CONN'
CONN.Name                         #'CONN'
                                  #Must be [:alnum:]-. and max 64 chars
CONN.Description                  #STR. Max 512 chars
CONN.CreationTime                 #DATE_NUM
CONN.LastModifiedTime             #DATE_NUM
CONN.LastAuthorizedTime           #DATE_NUM. Last time CONN.ConnectionState became AUTHORIZED

CONN.ConnectionState              #One of:
                                  #  - CREATING
                                  #  - AUTHORIZING
                                  #  - DEAUTHORIZING
                                  #  - AUTHORIZED
                                  #  - DEAUTHORIZED
                                  #  - UPDATING
                                  #  - ACTIVE
                                  #  - FAILED_CONNECTIVITY
                                  #  - DELETING
CONN.StateReason                  #STR

API_DEST.ConnectionArn            #'CONN_ARN'. Required

                                  ┌────────────────────┐
                                  │   CONNECTION API   │
                                  └────────────────────┘

CreateConnection()                #Req: CONN
                                  #  - no Connection*, *Time, SecretArn, StateReason
                                  #  - no PRIVATE_CONN.ResourceAssociationArn
                                  #Res: CONN
                                  #  - only Connection*, CreationTime, LastModifiedTime
UpdateConnection()                #Req: CONN
                                  #  - no Connection*, *Time, SecretArn, StateReason
                                  #  - no PRIVATE_CONN.ResourceAssociationArn
                                  #Res: CONN
                                  #  - only Connection*, *Time
ListConnections()                 #Req: CONN
                                  #  - only Name -> NamePrefix
                                  #  - only ConnectionState
                                  #Res: CONN
                                  #  - no *Parameters, Description, SecretArn
DescribeConnection()              #Req: CONN
                                  #  - only Name
                                  #Res: CONN
                                  #  - no CONN_APIKEY.ApiKeyValue, CONN_BASIC.Password, CLIENT_OAUTH.ClientSecret
DeauthorizeConnection()           #Req: CONN
                                  #  - only Name
                                  #Res: CONN
                                  #  - only Connection*, *Time
                                  #Unsets CONN_AUTH.*
DeleteConnection()                #Req: CONN
                                  #  - only Name
                                  #Res: CONN
                                  #  - only Connection*, *Time

                                  ┌────────────────────────────┐
                                  │   CONNECTION AUTH PARAMS   │
                                  └────────────────────────────┘

CONN.AuthParameters               #CONN_AUTH. Auth-related HTTP request parameters

CONN_AUTH.InvocationHttpParameters#CONN_PARAMS
                                  #Merged with TARGET|PIPE_DEST|ENRICH.HttpParameters (if any), with higher priority
CONN_PARAMS.HeaderParameters
 |QueryStringParameters           #CONN_PARAM_ARR
 |BodyParameters                  #Max 100 items
CONN_PARAM.Key                    #'VAR'. Max 512 chars
CONN_PARAM.Value                  #'VAL'. Max 512 chars

CONN.AuthorizationType            #'BASIC'. HTTP Basic auth
CONN_AUTH.BasicAuthParameters     #CONN_BASIC
CONN_BASIC.Username               #'USERNAME'. Max 512 chars
CONN_BASIC.Password               #'PASSWORD'. Max 512 chars

CONN.AuthorizationType            #'API_KEY'. HTTP Digest auth
CONN_AUTH.ApiKeyAuthParameters    #CONN_APIKEY
CONN_APIKEY.ApiKeyName            #'VAR'. Max 512 chars
CONN_APIKEY.ApiKeyValue           #'VAL'. Max 512 chars

CONN.AuthorizationType            #'OAUTH_CLIENT_CREDENTIALS'. OAuth
                                  #OAuth token automatically refreshed on 401|407
CONN_AUTH.OAuthParameters         #CONN_OAUTH
CONN_OAUTH.HttpMethod             #'POST|PUT|GET'
CONN_OAUTH.AuthorizationEndpoint  #'AUTH_URL'
CONN_OAUTH.ClientParameters
 .ClientID                        #'CLIENT_ID'
CONN_OAUTH.ClientParameters
 .ClientSecret                    #'CLIENT_SECRET'
CONN_OAUTH.OAuthHttpParameters    #CONN_PARAMS

CONN.SecretArn                    #Secrets Manager 'SECRET_ARN' encrypting CONN.* at rest
CONN_PARAM.IsValueSecret          #BOOL (def: false). Encrypt using CONN.SecretArn

                                  ┌─────────────────────────────────┐
                                  │   CONNECTION AUTH PARAMS AUTH   │
                                  └─────────────────────────────────┘

PACTION actions
 :RetrieveConnectionCredentials   #Allow reading CONN.SecretArn

                                  ┌────────────────────────┐
                                  │   CONNECTION PRIVATE   │
                                  └────────────────────────┘

CONN
 .InvocationConnectivityParameters
 .ResourceParameters              #PRIVATE_CONN. CONN to VPC
CONN_AUTH.ConnectivityParameters
 .ResourceParameters              #PRIVATE_CONN. OAuth to VPC
PRIVATE_CONN                      #Cannot be used by API_DEST???

PRIVATE_CONN
 .ResourceConfigurationArn        #'VPC_LATTICE_CONF_ARN'
PRIVATE_CONN
 .ResourceAssociationArn          #'VPC_LATTICE_RESOURCE_ASSOC_ARN'

                                  ┌──────────────┐
                                  │   ENDPOINT   │
                                  └──────────────┘

ENDPOINT                          #Redirects PutEvents() to a failover REGION2 when the primary REGION is unavailable
                                  #Optional
ENDPOINT.Arn                      #'ENDPOINT_ARN'. 'arn:aws:events:REGION:ACCOUNT_ID:endpoint/ENDPOINT'
ENDPOINT.Name                     #'ENDPOINT'
                                  #Must be globally unique, e.g. include 'REGION' in its name
                                  #Must be [:alnum:]-. and 64 chars
ENDPOINT.Description              #STR. Max 512 chars
ENDPOINT.CreationTime             #DATE_NUM
ENDPOINT.LastModifiedTime         #DATE_NUM

ENDPOINT.EndpointId               #'ENDPOINT_SUBDOMAIN', automatically created
EVENTS.EndpointId                 #'ENDPOINT_SUBDOMAIN'. Must be set to use ENDPOINT
ENDPOINT.EndpointUrl              #'https://ENDPOINT_SUBDOMAIN.endpoints.event.amazonaws.com'

ENDPOINT.State                    #Can be:
                                  #  - CREATING, CREATE_FAILED
                                  #  - UPDATING, UPDATE_FAILED
                                  #  - ACTIVE
                                  #  - DELETING, DELETE_FAILED
ENDPOINT.StateReason              #STR

ENDPOINT.HomeRegion               #Primary 'REGION'
ENDPOINT.EventBuses[0].EventBusArn#'BUS_ARN' in primary REGION
ENDPOINT.RoutingConfig
 .FailoverConfig
 .Primary.HealthCheck             #'ROUTE53_HEALTHCHECK_ARN' in primary REGION. Required

ENDPOINT.RoutingConfig
 .FailoverConfig.Secondary.Route  #Failover 'REGION2'
ENDPOINT.EventBuses[1].EventBusArn#'BUS_ARN' in failover|secondary REGION
                                  #Must have same 'BUS' name as primary

ENDPOINT.ReplicationConfig.State  #'ENABLED' (def) or 'DISABLED'
                                  #Replicate EVENTs from REGION to REGION2

                                  ┌───────────────────┐
                                  │   ENDPOINT AUTH   │
                                  └───────────────────┘

ENDPOINT.RoleArn                  #'ROLE_ARN' used to replicate EVENTs to REGION2

COND_KEY events:EventBusArn       #'BUS_ARN'. With CreateEndpoint|UpdateEndpoint()

                                  ┌──────────────────┐
                                  │   ENDPOINT API   │
                                  └──────────────────┘

CreateEndpoint()                  #Req: ENDPOINT
                                  #  - no *Time, StateReason
                                  #  - no EndpointId, EndpointUrl
                                  #  - no State
                                  #  - no Arn
                                  #Res: ENDPOINT
                                  #  - no *Time, StateReason
                                  #  - no Description
                                  #  - no EndpointId, EndpointUrl
UpdateEndpoint()                  #Req: ENDPOINT
                                  #  - no *Time, StateReason
                                  #  - no EndpointId, EndpointUrl
                                  #  - no State
                                  #  - no Arn
                                  #Res: ENDPOINT
                                  #  - no *Time, StateReason
                                  #  - no Description
ListEndpoints()                   #Req: ENDPOINT
                                  #  - only Name -> NamePrefix
                                  #  - only HomeRegion
                                  #Res: Endpoints ENDPOINT_ARR
                                  #  - no HomeRegion
DescribeEndpoint()                #Req: ENDPOINT
                                  #  - only Name, HomeRegion
                                  #Res: ENDPOINT
                                  #  - no HomeRegion
DeleteEndpoint()                  #Req: ENDPOINT
                                  #  - only Name
                                  #Res: empty

                                  ┌─────────────┐
                                  │   ARCHIVE   │
                                  └─────────────┘

ARCHIVE                           #Stores EVENTs
                                  #Not if BUS.KmsKeyIdentifier set
ARCHIVE.ArchiveArn                #'ARCHIVE_ARN'. 'arn:aws:events:REGION:ACCOUNT_ID:archive/ARCHIVE'
ARCHIVE.ArchiveName               #'ARCHIVE'
                                  #Must be [:alnum:]-._ and max 48 chars
ARCHIVE.Description               #STR. Max 512 chars
ARCHIVE.CreationTime              #DATE_NUM

ARCHIVE.State                     #One of:
                                  #  - CREATING, CREATE_FAILED
                                  #  - UPDATING, UPDATE_FAILED
                                  #  - ENABLED
                                  #  - DISABLED: when deleting
ARCHIVE.StateReason               #STR

ARCHIVE.EventSourceArn            #'BUS_ARN'
ARCHIVE.EventPattern              #'FILTERS_JSON' (see above)
                                  #Def: none, i.e. any EVENT

ARCHIVE.RetentionDays             #NUM of days to keep EVENTs
                                  #Def: 0, i.e. forever until ARCHIVE deleted

ARCHIVE.EventCount                #NUM of stored EVENTs
ARCHIVE.SizeBytes                 #NUM of bytes of stored EVENTs

                                  ┌─────────────────┐
                                  │   ARCHIVE API   │
                                  └─────────────────┘

CreateArchive()                   #Req: ARCHIVE
                                  #  - no ArchiveArn, CreationTime, State*
                                  #  - no EventCount, SizeBytes
                                  #Res: ARCHIVE
                                  #  - only ArchiveArn, CreationTime, State*
UpdateArchive()                   #Req: ARCHIVE
                                  #  - no ArchiveArn, CreationTime, State*
                                  #  - no EventCount, SizeBytes
                                  #  - no EventSourceArn
                                  #Res: ARCHIVE
                                  #  - only ArchiveArn, CreationTime, State*
ListArchives()                    #Req: ARCHIVE
                                  #  - only ArchiveName -> NamePrefix
                                  #  - only EventSourceArn, State
                                  #Res: Archives ARCHIVE_ARR
                                  #  - no ArchiveArn, Description, EventPattern
DescribeArchive()                 #Req: ARCHIVE
                                  #  - only ArchiveName
                                  #Res: ARCHIVE
DeleteArchive()                   #Req: ARCHIVE
                                  #  - only ArchiveName
                                  #Res: empty

                                  ┌────────────┐
                                  │   REPLAY   │
                                  └────────────┘

REPLAY                            #Re-emit stored EVENTs
                                  #Replayed EVENTs are not stored themselves (since already stored)
                                  #EVENTs are emitted in-order per-minute, all at once within each minute
REPLAY.ReplayArn                  #'REPLAY_ARN'. 'arn:aws:events:REGION:ACCOUNT_ID:replay/REPLAY'
REPLAY.ReplayName                 #'REPLAY'
                                  #Must be [:alnum:].-_ and max 64 chars
REPLAY.Description                #STR. Max 512 chars

REPLAY.State                      #Can be:
                                  #  - STARTING
                                  #  - RUNNING
                                  #  - CANCELLING, CANCELLED
                                  #  - COMPLETED, FAILED
REPLAY.StateReason                #STR

REPLAY.EventSourceArn             #'ARCHIVE_ARN' where EVENTs are stored
REPLAY.Destination.Arn            #'BUS_ARN' where to re-emit EVENTs
REPLAY.Destination.FilterArns     #'RULE_ARN'_ARR (def: any) which can be used, in that BUS

REPLAY.EventStartTime             #DATE_NUM of first EVENT to re-emit. Required
REPLAY.EventEndTime               #DATE_NUM of last EVENT to re-emit. Required
REPLAY.EventLastReplayedTime      #DATE_NUM of current EVENT being emitted
REPLAY.ReplayStartTime            #DATE_NUM when REPLAY started
REPLAY.ReplayEndTime              #DATE_NUM when REPLAY ended. Not set if did not end

                                  ┌────────────────┐
                                  │   REPLAY API   │
                                  └────────────────┘

StartReplay()                     #Req: REPLAY
                                  #  - no ReplayArn
                                  #  - no EventLastReplayedTime, Replay*Time, State*
                                  #Res: REPLAY
                                  #  - only ReplayArn, ReplayStartTime, State*
ListReplays()                     #Req: REPLAY
                                  #  - only ReplayName -> NamePrefix
                                  #  - only EventSourceArn, State
                                  #Res: Replays REPLAY_ARR
                                  #  - no ReplayArn
                                  #  - no Description, Destination
DescribeReplay()                  #Req: REPLAY
                                  #  - only ReplayName
                                  #Res: REPLAY
CancelReplay()                    #Req: REPLAY
                                  #  - only ReplayName
                                  #Res: REPLAY
                                  #  - only ReplayArn, State*

                                  ┌────────────┐
                                  │   POLICY   │
                                  └────────────┘

BUS.Policy                        #IAM 'POLICY_DOC'. BUS_POLICY
                                  #Resource-level POLICY on a BUS, i.e. Resource is BUS_ARN
                                  #Principal must be 'ACCOUNT_ID'
                                  #  - this can be worked around using either:
                                  #     - COND_KEY aws:PrincipalArn or aws:SourceArn|SourceAccount
                                  #     - identity-level POLICY instead
                                  #PACTIONs are only cross-account ones (see below)
                                  #Max 10KB
                                  #Def: none
                                  #  - i.e. allows any PACTION in same ACCOUNT + REGION

PERMISSION                        #Sets a STATEMENT in BUS.Policy
PERMISSION.StatementId            #STATEMENT.Sid
PERMISSION.EventBusName           #'BUS' (def: 'default'). STATEMENT.Resource
PERMISSION.Action                 #'PACTION'. STATEMENT.Action
                                  #Can only be 'events:PutEvents'. For other PACTIONs, must use PERMISSION.Policy
PERMISSION.Principal              #'ACCOUNT_ID|*'. STATEMENT.Principal

PERMISSION.Condition              #PERMISSION_COND_KEY. STATEMENT.Conditions.CONDITION_OP.COND_KEY 'VAL'
PERMISSION_COND_KEY.Type          #'CONDITION_OP'. Can only be 'StringEquals'
PERMISSION_COND_KEY.Key           #'COND_KEY'. Can only be 'aws:PrincipalOrgID'
PERMISSION_COND_KEY.Value         #'VAL'. Can only be 'ORG_ID'

PERMISSION.Policy                 #IAM 'POLICY_DOC_JSON'. Alternative to PERMISSION.StatementId|Action|Principal|Condition
                                  #Sets all STATEMENTs in BUS.Policy

PERMISSION.RemoveAllPermissions   #BOOL (def: false). Remove all PERMISSIONs instead of specifying one with PERMISSION.StatementId

                                  ┌─────────────────┐
                                  │   POLICY AUTH   │
                                  └─────────────────┘

CROSS-REGION|ACCOUNT REQUESTS ==> #Allowed by using Pricipal with another ACCOUNT, in BUS_POLICY
                                  #Only for PACTIONs: events:PutEvents(), events:*Rule*(), events:*Target*(), events:*Tag*(), events:DescribeEventBus()
                                  #Can also be '*' for all the above PACTIONs

ANONYMOUS REQUESTS ==>            #Allowed by using Principal '*', in BUS_POLICY
                                  #Not recommended, except to target an ORG by using COND_KEY aws:PrincipalOrgId

PACTION events:AddPermission
 |RemovePermission                #Do not require PACTION events:UpdateEventBus, even though they set BUS.Policy

                                  ┌────────────────┐
                                  │   POLICY API   │
                                  └────────────────┘

PutPermission()                   #Req: PERMISSION
                                  #Res: empty
RemovePermission()                #Req: PERMISSION
                                  #  - only EventBusName, StatementId
                                  #  - only one with RemoveAllPermissions
                                  #Res: empty

                                  ┌──────────┐
                                  │   TAGS   │
                                  └──────────┘

RESOURCE_TAGS.ResourceARN         #'ARN'
RESOURCE_TAGS.Tags
BUS|RULE.Tags                     #TAG_PAIRS

                                  ┌──────────────┐
                                  │   TAGS API   │
                                  └──────────────┘

TagResource()                     #Req: RESOURCE_TAGS
                                  #Res: empty
ListTagsForResource()             #Req: RESOURCE_TAGS
                                  #  - only ResourceARN
                                  #Res: RESOURCE_TAGS
                                  #  - only Tags
UntagResource()                   #Req: RESOURCE_TAGS
                                  #  - Tags OBJ -> TagKeys 'TAG'_ARR
                                  #Res: empty

                                  ┏━━━━━━━━━━━━━━━━━━━━━━━┓
                                  ┃   EVENTBRIDGE PIPES   ┃
                                  ┗━━━━━━━━━━━━━━━━━━━━━━━┛

VERSION ==>                       #2024-12-20

                                  ┌─────────┐
                                  │   API   │
                                  └─────────┘

SERVICE_DOMAIN                    #'pipes.REGION.amazonaws.com'

FORMAT ==>                        #REST API
                                  #Request:
                                  #  - POST|PUT: path parameters + JSON
                                  #  - GET|DELETE: path parameters + query parameters (camelCase'd)
                                  #Response: JSON

PAGINATION ==>                    #Uses REQ.Limit (def|max: 100) + REQ|RES.NextToken
                                  #No pagination: ListTagsForResource()

                                  ┌──────────┐
                                  │   PIPE   │
                                  └──────────┘

PIPE                              #Like an EventBridge BUS + single RULE + single TARGET but with:
                                  #  - more advanced input logic
                                  #  - more options for TARGET
PIPE.Arn                          #'PIPE_ARN'. 'arn:aws:pipes:REGION:ACCOUNT_ID:pipe/PIPE'
PIPE.Name                         #'PIPE'
                                  #Must be [:alnum:].-_ and max 64 chars
PIPE.Description                  #STR. Max 512 chars
PIPE.CreationTime                 #DATE_NUM
PIPE.LastModifiedTime             #DATE_NUM

PIPE.CurrentState                 #One of:
                                  #  - CREATING, CREATE[_ROLLBACK]_FAILED
                                  #  - UPDATING, UPDATE[_ROLLBACK]_FAILED
                                  #  - STARTING, RUNNING, START_FAILED
                                  #  - STOPPING, STOPPED, STOP_FAILED
                                  #  - DELETING, DELETE[_ROLLBACK]_FAILED
PIPE.StateReason                  #STR
PIPE.DesiredState                 #Updating whether 'RUNNING' or 'STOPPED'
                                  #By default, 'RUNNING' (more info with DescribePipe())

PIPE.Source                       #'ARN' where EVENTs are pulled from. TARGET_TYPE-specific.
                                  #Each SERVICE documented it in its respective docs
PIPE.SourceParameters             #PIPE_SRC
PIPE_SRC.*Parameters              #OBJ. TARGET_TYPE-specific options
                                  #Each SERVICE documented it in its respective docs
PIPE_SRC.FilterCriteria           #'FILTERS_JSON' (see EventBridge Rules doc)
 .Filters[*].Pattern              #Def: none, i.e. matches any EVENT
                                  #Max 5 items
                                  #Cannot use:
                                  #  - FILTER.anything-but FILTER2
                                  #  - FILTER.wildcard

PIPE.Target                       #'ARN' where EVENTs are sent to. TARGET_TYPE-specific.
                                  #Each SERVICE documented it in its respective docs
PIPE.TargetParameters             #PIPE_DEST
PIPE_DEST.*Parameters             #OBJ. TARGET_TYPE-specific options
                                  #Some TARGET_TYPEs do not have any
                                  #Each SERVICE documented it in its respective docs
PIPE_DEST.InputTemplate           #STR

PIPE.Enrichment                   #'ARN'???
PIPE.EnrichmentParameters         #ENRICH
ENRICH.InputTemplate              #'OBJ_JSON' used as input
                                  #Can be ''
                                  #Max 8KB
ENRICH.HttpParameters             #HTTP_TARGET (see EventBridge Rules doc)
                                  #How is it used???

PIPE.KmsKeyIdentifier             #'KMS_KEY_ARN|MID' (def: '', i.e. AWS managed). Encrypt EVENTs at rest

                                  ┌───────────────┐
                                  │   PIPE AUTH   │
                                  └───────────────┘

PIPE.RoleArn                      #'ROLE_ARN' used to interact with both PIPE.Source|Target
                                  #Which permission is required is TARGET_TYPE-specific

PACTION iam:PassRole              #Required on current PRINCIPAL

                                  ┌──────────────┐
                                  │   PIPE API   │
                                  └──────────────┘

POST /v1/pipes/PIPE               #Req:
CreatePipe()                      #  - no Arn, Name, *Time, CurrentState, StateReason
                                  #Res: PIPE
                                  #  - no Description, *Parameters, KmsKeyIdentifier, LogConfiguration, RoleArn
                                  #  - no Enrichment, Source, StateReason, Target
                                  #  - no Tags
PUT /v1/pipes/PIPE                #Req:
UpdatePipe()                      #  - no Arn, Name, *Time, CurrentState, StateReason
                                  #  - no Source
                                  #  - no SourceParameters:
                                  #     - *Parameters.StartingPosition*
                                  #     - *MQBrokerParameters.QueueName
                                  #     - RabbitMQBrokerParameters.VirtualHost
                                  #     - *KafkaParameters.TopicName|ConsumerGroupID
                                  #     - SelfManagedKafkaParameters.AdditionalBootstrapServers|
                                  #  - no Tags
                                  #Res: PIPE
                                  #  - no Description, *Parameters, KmsKeyIdentifier, LogConfiguration, RoleArn
                                  #  - no Enrichment, Source, StateReason, Target
                                  #  - no Tags
POST /v1/pipes/PIPE/start         #Req: PIPE
StartPipe()                       #  - only Name
                                  #Res: PIPE
                                  #  - no Description, *Parameters, KmsKeyIdentifier, LogConfiguration, RoleArn
                                  #  - no Enrichment, Source, StateReason, Target
                                  #  - no Tags
POST /v1/pipes/PIPE/stop          #Req: PIPE
StopPipe()                        #  - only Name
                                  #Res: PIPE
                                  #  - no Description, *Parameters, KmsKeyIdentifier, LogConfiguration, RoleArn
                                  #  - no Enrichment, Source, StateReason, Target
                                  #  - no Tags
GET /v1/pipes                     #Req: PIPE
ListPipes()                       #  - only CurrentState, DesiredState
                                  #  - only Name|Source|Target -> NamePrefix|SourcePrefix|TargetPrefix
                                  #Res: Pipes PIPE_ARR
                                  #  - no Description, *Parameters, KmsKeyIdentifier, LogConfiguration, RoleArn
                                  #  - no Tags
GET /v1/pipes/PIPE                #Req: PIPE
DescribePipe()                    #  - only Name
                                  #Res: PIPE
DELETE /v1/pipes/PIPE             #Req: PIPE
DeletePipe()                      #  - only Name
                                  #Res: PIPE
                                  #  - no Description, *Parameters, KmsKeyIdentifier, LogConfiguration, RoleArn
                                  #  - no Enrichment, Source, StateReason, Target
                                  #  - no Tags

                                  ┌──────────────┐
                                  │   PIPE BUS   │
                                  └──────────────┘

PIPE.Target                       #'BUS_ARN' (see EventBridge Rules doc)
                                  #Must be in same REGION|ACCOUNT
PIPE_DEST
 .EventBridgeEventBusParameters   #PIPE_DEST_BUS
PIPE_DEST_BUS.DetailType          #STR
PIPE_DEST_BUS.EndpointId          #STR
PIPE_DEST_BUS.Resources           #STR_ARR
PIPE_DEST_BUS.Source              #STR
PIPE_DEST_BUS.Time                #STR

                                  ┌───────────────┐
                                  │   PIPE HTTP   │
                                  └───────────────┘

PIPE.Target                       #'HTTP_DEST_ARN' (see EventBridge Rules doc)
PIPE_DEST.HttpParameters          #HTTP_TARGET

HTTP_TARGET.PathParameterValues   #STR_ARR
HTTP_TARGET
 .QueryStringParameters.PARAM     #STR
HTTP_TARGET
 .HeaderParameters.HEADER         #STR

PIPE_DEST.HttpParameters          #HTTP_TARGET. Request parameters
HTTP_TARGET.PathParameterValues   #'VAL'_ARR
HTTP_TARGET
 .QueryStringParameters.PARAM     #'VAL'
HTTP_TARGET
 .HeaderParameters.HEADER         #'VAL'

                                  ┌──────────────────────┐
                                  │   PIPE API GATEWAY   │
                                  └──────────────────────┘

PIPE_DEST.HttpParameters          #Same as when TARGET is EventBridge API_DEST (see its doc)

                                  ┌──────────────┐
                                  │   PIPE SQS   │
                                  └──────────────┘

PIPE.Source                       #'QUEUE_ARN'
PIPE_SRC.SqsQueueParameters       #PIPE_SRC_SQS
PIPE_SRC_SQS.BatchSize            #NUM
PIPE_SRC_SQS
 .MaximumBatchingWindowInSeconds  #NUM

PIPE.Target                       #'QUEUE_ARN'
PIPE_DEST.SqsQueueParameters      #PIPE_DEST_SQS
PIPE_DEST_SQS
 .MessageDeduplicationId          #STR
PIPE_DEST_SQS.MessageGroupId      #STR

                                  ┌─────────────────┐
                                  │   PIPE LAMBDA   │
                                  └─────────────────┘

PIPE.Target                       #'FUNC_ARN'
PIPE_DEST.LambdaFunctionParameters
 .InvocationType                  #STR

                                  ┌──────────────────────────┐
                                  │   PIPE CLOUDWATCH LOGS   │
                                  └──────────────────────────┘

PIPE.Target                       #'LOG_GROUP_ARN'
PIPE_DEST.CloudWatchLogsParameters#PIPE_DEST_LOGS
PIPE_DEST_LOGS.LogStreamName      #STR
PIPE_DEST_LOGS.Timestamp          #STR

                                  ┌─────────────────────────┐
                                  │   PIPE STEP FUNCTIONS   │
                                  └─────────────────────────┘

PIPE.Target                       #'MACHINE_ARN'
PIPE_DEST.StepFunctionStateMachine
 Parameters.InvocationType        #STR

                                  ┌─────────────┐
                                  │   LOGGING   │
                                  └─────────────┘

PIPE.LogConfiguration             #LOGGING
LOGGING.Level                     #STR
LOGGING.IncludeExecutionData      #STR_ARR (more info with CreatePipe())
LOGGING
 .CloudwatchLogsLogDestination
 .LogGroupArn                     #STR
LOGGING.FirehoseLogDestination
 .DeliveryStreamArn               #STR

LOGGING.S3LogDestination          #S3_LOGGING
S3_LOGGING.BucketName             #STR
S3_LOGGING.BucketOwner            #STR
S3_LOGGING.OutputFormat           #STR
S3_LOGGING.Prefix                 #STR

                                  ┌──────────┐
                                  │   TAGS   │
                                  └──────────┘

RESOURCE_TAGS.resourceArn         #'PIPE_ARN'
RESOURCE_TAGS.tags
PIPE.Tags                         #TAGS_OBJ

                                  ┌──────────────┐
                                  │   TAGS API   │
                                  └──────────────┘

POST /tags/PIPE_ARN               #Req: RESOURCE_TAGS
TagResource()                     #Res: empty
GET /tags/PIPE_ARN                #Req: RESOURCE_TAGS
ListTagsForResource()             #  - only resourceArn
                                  #Res: RESOURCE_TAGS
                                  #  - only tags
DELETE /tags/PIPE_ARN             #Req: RESOURCE_TAGS
UntagResource()                   #  - tags OBJ -> tagKeys 'TAG'_ARR
                                  #Res: empty

                                  ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
                                  ┃   EVENTBRIDGE SCHEDULER   ┃
                                  ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━┛

VERSION ==>                       #2024-12-20

                                  ┌─────────┐
                                  │   API   │
                                  └─────────┘

SERVICE_DOMAIN                    #'scheduler.REGION.amazonaws.com'

FORMAT ==>                        #REST API
                                  #Request:
                                  #  - POST|PUT: path parameters + JSON
                                  #  - GET|DELETE: path parameters + query parameters (camelCase'd)
                                  #Response: JSON

PAGINATION ==>                    #Uses REQ.MaxResults (def|max: 100) + REQ|RES.NextToken
                                  #No pagination: ListTagsForResource()

                                  ┌───────────┐
                                  │   GROUP   │
                                  └───────────┘

GROUP                             #Deleting also deletes the SCHEDULEs
GROUP.Arn                         #'GROUP_ARN'. 'arn:aws:scheduler:REGION:ACCOUNT_ID:schedule-group/GROUP'
GROUP.Name                        #'GROUP'
GROUP.CreationDate                #DATE_NUM
GROUP.LastModificationDate        #DATE_NUM
GROUP.State                       #STR
GROUP.ClientToken                 #STR

                                  ┌────────────────┐
                                  │   GROUP AUTH   │
                                  └────────────────┘

PACTION scheduler:DeleteSchedule  #Required to delete GROUP, if it has any SCHEDULE

                                  ┌───────────────┐
                                  │   GROUP API   │
                                  └───────────────┘

POST /schedule-groups/GROUP       #Req: GROUP
CreateScheduleGroup()             #  - only ClientToken
                                  #  - only one with Tags
                                  #Res: GROUP
                                  #  - only Arn -> ScheduleGroupArn
GET /schedule-groups              #Req: GROUP
ListScheduleGroups()              #  - only Name -> NamePrefix
                                  #Res: ScheduleGroups GROUP_ARR
                                  #  - no ClientToken
GET /schedule-groups/GROUP        #Req: GROUP
GetScheduleGroup()                #  - only Name
                                  #Res: GROUP
                                  #  - no ClientToken
DELETE /schedule-groups/GROUP     #Req: GROUP
DeleteScheduleGroup()             #  - only Name, ClientToken
                                  #Res: empty

                                  ┌──────────────┐
                                  │   SCHEDULE   │
                                  └──────────────┘

SCHEDULE.Arn                      #'SCHEDULE_ARN'. 'arn:aws:scheduler:REGION:ACCOUNT_ID:schedule/GROUP/SCHEDULE'
SCHEDULE.Name                     #'SCHEDULE'
SCHEDULE.Description              #STR
SCHEDULE.CreationDate             #DATE_NUM
SCHEDULE.LastModificationDate     #DATE_NUM
SCHEDULE.GroupName                #'GROUP' (more info with GetSchedule())
SCHEDULE.StartDate                #DATE_NUM
SCHEDULE.EndDate                  #DATE_NUM
SCHEDULE.State                    #STR
SCHEDULE.ActionAfterCompletion    #STR
SCHEDULE.KmsKeyArn                #STR
SCHEDULE.ScheduleExpression       #STR
SCHEDULE
 .ScheduleExpressionTimezone      #STR
SCHEDULE.ClientToken              #STR

SCHEDULE.FlexibleTimeWindow       #SCHEDULE_FLEX
SCHEDULE_FLEX.Mode                #STR
SCHEDULE_FLEX
 .MaximumWindowInMinutes          #NUM

SCHEDULE.Target                   #TARGET
TARGET.Arn                        #STR
TARGET.DeadLetterConfig.Arn       #STR
TARGET.Input                      #STR

TARGET.RetryPolicy                #RETRY_POLICY (same as EventBridge Rules???)
RETRY_POLICY
 .MaximumEventAgeInSeconds        #NUM
RETRY_POLICY.MaximumRetryAttempts #NUM

TARGET.EventBridgeParameters      #TARGET_EVENT_BRIDGE
TARGET_EVENT_BRIDGE.DetailType    #STR
TARGET_EVENT_BRIDGE.Source        #STR

TARGET.SqsParameters
 .MessageGroupId                  #STR

TARGET.KinesisParameters          #
TARGET.SageMakerPipelineParameters#
TARGET.EcsParameters              #

                                  ┌───────────────────┐
                                  │   SCHEDULE AUTH   │
                                  └───────────────────┘

TARGET.RoleArn                    #STR

PACTION iam:PassRole              #Required on current PRINCIPAL

                                  ┌──────────────────┐
                                  │   SCHEDULE API   │
                                  └──────────────────┘

POST /schedules/SCHEDULE          #Req: SCHEDULE
CreateSchedule()                  #  - no Arn, CreationDate, LastModificationDate
                                  #Res: SCHEDULE
                                  #  - only Arn -> ScheduleArn
PUT /schedules/SCHEDULE           #Req: SCHEDULE
UpdateSchedule()                  #  - no Arn, CreationDate, LastModificationDate
                                  #Res: SCHEDULE
                                  #  - only Arn -> ScheduleArn
GET /schedules                    #Req: SCHEDULE
ListSchedules()                   #  - only Name -> NamePrefix
                                  #  - only GroupName, State
                                  #Res: Schedules SCHEDULE_ARR
                                  #  - no ActionAfterCompletion, Description, StartDate|EndDate,
                                  #    FlexibleTimeWindow, KmsKeyArn, ScheduleExpression*
                                  #  - no ClientToken
                                  #  - Target: only Arn
GET /schedules/SCHEDULE           #Req: SCHEDULE
GetSchedule()                     #  - only Name, GroupName
                                  #Res: SCHEDULE
                                  #  - no ClientToken
DELETE /schedules/SCHEDULE        #Req: SCHEDULE
DeleteSchedule()                  #  - only Name, GroupName
                                  #  - only ClientToken
                                  #Res: empty

                                  ┌───────────┐
                                  │   BASIC   │
                                  └───────────┘

RULE.ScheduleExpression           #STR. Part of EventBridge Rules (see its doc), not Scheduler
                                  #Has fewer features
                                  #Calls TARGET at specific times, with empty GEVENT
                                  #Can be:
                                  #  - 'cron(...)'
                                  #  - 'rate(...)'
                                  #If set, RULE.EventPattern defauts to matching any GEVENT
                                  #  - how does it make sense, if empty GEVENT is used???
                                  #  - but can also set both
                                  #Max 256 chars

                                  ┌──────────┐
                                  │   TAGS   │
                                  └──────────┘

RESOURCE_TAGS.ResourceARN         #'GROUP_ARN'
RESOURCE_TAGS.Tags
GROUP.Tags                        #TAG_PAIRS

                                  ┌──────────────┐
                                  │   TAGS API   │
                                  └──────────────┘

POST /tags/GROUP_ARN              #Req: RESOURCE_TAGS
TagResource()                     #Res: empty
GET /tags/GROUP_ARN               #Req: RESOURCE_TAGS
ListTagsForResource()             #  - only ResourceARN
                                  #Res: RESOURCE_TAGS
                                  #  - only Tags
DELETE /tags/GROUP_ARN            #Req: RESOURCE_TAGS
UntagResource()                   #  - Tags OBJ -> TagKeys 'TAG'_ARR
                                  #Res: empty

                                  ┏━━━━━━━━━━━━━━━━━━━━━━━━━┓
                                  ┃   EVENTBRIDGE SCHEMAS   ┃
                                  ┗━━━━━━━━━━━━━━━━━━━━━━━━━┛

VERSION ==>                       #2024-12-20

                                  ┌─────────┐
                                  │   API   │
                                  └─────────┘

SERVICE_DOMAIN                    #'schemas.REGION.amazonaws.com'

FORMAT ==>                        #REST API
                                  #Request:
                                  #  - POST|PUT: path parameters + JSON
                                  #  - GET|DELETE: path parameters + query parameters (camelCase'd)
                                  #Response: JSON

PAGINATION ==>                    #Uses REQ.limit (def|max: 100) + REQ|RES.nextToken
                                  #No pagination: ListTagsForResource()

                                  ┌──────────────┐
                                  │   REGISTRY   │
                                  └──────────────┘

REGISTRY.RegistryArn              #'REGISTRY_ARN'. 'arn:aws:schemas:REGION:ACCOUNT_ID:registry/REGISTRY'
REGISTRY.RegistryName             #'REGISTRY'
REGISTRY.Description              #STR
REGISTRY.Scope                    #'Local' or 'AWS'

                                  ┌──────────────────┐
                                  │   REGISTRY API   │
                                  └──────────────────┘

POST /v1/registries/name/REGISTRY #Req: REGISTRY
CreateRegistry()                  #  - no RegistryArn
                                  #Res: REGISTRY
PUT /v1/registries/name/REGISTRY  #Req: REGISTRY
UpdateRegistry()                  #  - no RegistryArn
                                  #  - no tags
                                  #Res: REGISTRY
GET /v1/registries                #Req: REGISTRY
ListRegistries()                  #  - only one with Scope
                                  #  - only RegistryName -> RegistryNamePrefix
                                  #Res: Registries REGISTRY_ARR
                                  #  - no Description
GET /v1/registries/name/REGISTRY  #Req: REGISTRY
DescribeRegistry()                #  - only RegistryName
                                  #Res: REGISTRY
DELETE                            #Req: REGISTRY
 /v1/registries/name/REGISTRY     #  - only RegistryName
DeleteRegistry()                  #Res: empty

                                  ┌────────────┐
                                  │   SCHEMA   │
                                  └────────────┘

SCHEMA.SchemaArn                  #'SCHEMA_ARN'. 'arn:aws:schemas:REGION:ACCOUNT_ID:schema/REGISTRY/SCHEMA'
SCHEMA.SchemaName                 #'SCHEMA'
SCHEMA.LastModified               #STR
SCHEMA.Type                       #STR
SCHEMA.Description                #STR
SCHEMA.Content                    #STR
SCHEMA.RegistryName               #STR
SCHEMA.ClientTokenId              #STR
SCHEMA.Keywords                   #STR

                                  ┌────────────────┐
                                  │   SCHEMA API   │
                                  └────────────────┘

POST /v1/registries/name          #Req: SCHEMA
 /REGISTRY/schema/name/SCHEMA     #  - no SchemaArn, LastModified, *Version*
CreateSchema()                    #  - no SchemaName
                                  #Res: SCHEMA
                                  #  - no RegistryName
                                  #  - no Content
PUT /v1/registries/name           #Req: SCHEMA
 /REGISTRY/schema/name/SCHEMA     #  - only one with ClientTokenId
UpdateSchema()                    #  - no SchemaArn, LastModified, *Version*
                                  #  - no tags
                                  #Res: SCHEMA
                                  #  - no RegistryName
                                  #  - no Content
GET /v1/registries/name           #Req: SCHEMA
 /REGISTRY/schema                 #  - only RegistryName
ListSchemas()                     #  - only SchemaName -> SchemaNamePrefix
                                  #Res: Schemas SCHEMA_ARR
                                  #  - no Type, Description, SchemaVersion, VersionCreatedDate, Content
                                  #  - no RegistryName
                                  #  - only one with VersionCount
GET /v1/registries/name           #Req: SCHEMA
 /REGISTRY/schemas/search         #  - only RegistryName
SearchSchemas()                   #  - only one with Keywords
                                  #Res: Schemas SCHEMA_ARR
                                  #  - only SchemaArn, SchemaName, RegistryName, Type
                                  #  - only SchemaVersion|VersionCreatedDate -> SchemaVersions[*].SchemaVersion|CreatedDate
GET /v1/registries/name           #Req: SCHEMA
 /REGISTRY/schema/name/SCHEMA     #  - only RegistryName, SchemaName, SchemaVersion
DescribeSchema()                  #Res: SCHEMA
                                  #  - no RegistryName
GET /v1/registries/name           #Req: SCHEMA
 /REGISTRY/schemas/name/SCHEMA    #  - only RegistryName, SchemaName, SchemaVersion
 /export                          #Res: SCHEMA
ExportSchema()                    #  - only RegistryName, SchemaName, SchemaVersion, Type
                                  #  - only Content
DELETE /v1/registries/name        #Req: SCHEMA
 /REGISTRY/schema/name/SCHEMA     #  - only RegistryName, SchemaName
DeleteSchema()                    #Res: empty

                                  ┌─────────────┐
                                  │   VERSION   │
                                  └─────────────┘

SCHEMA.SchemaVersion              #STR
SCHEMA.VersionCreatedDate         #'DATE'
SCHEMA.VersionCount               #NUM

                                  ┌─────────────────┐
                                  │   VERSION API   │
                                  └─────────────────┘

GET /v1/registries/name           #Req: SCHEMA
 /REGISTRY/schemas/name/SCHEMA    #  - only RegistryName, SchemaName
 /versions                        #Res: SchemaVersions SCHEMA_ARR
ListSchemaVersions()              #  - only SchemaArn, SchemaName, SchemaVersion, Type
DELETE /v1/registries/name
 /REGISTRY/schemas/name/SCHEMA    #Req: SCHEMA
 /version/VERSION_NUM             #  - only SchemaArn, SchemaName, SchemaVersion
DeleteSchemaVersion()             #Res: empty

                                  ┌────────────────┐
                                  │   DISCOVERER   │
                                  └────────────────┘

DISCOVERER                        #Create|infer SCHEMAs from EVENTs
                                  #Not if BUS.KmsKeyIdentifier set
DISCOVERER.DiscovererArn          #'DISCOVERER_ARN'. 'arn:aws:schemas:REGION:ACCOUNT_ID:discoverer/DISCOVERER_MID'
DISCOVERER.DiscovererId           #'DISCOVERER_MID'
DISCOVERER.Description            #STR

DISCOVERER.State                  #STR

DISCOVERER.SourceArn              #STR
DISCOVERER.CrossAccount           #BOOL

                                  ┌────────────────────┐
                                  │   DISCOVERER API   │
                                  └────────────────────┘

POST /v1/discoverers              #Req: DISCOVERER
CreateDiscoverer()                #  - no DiscovererId
                                  #  - no DiscovererArn, State
                                  #Res: DISCOVERER
PUT /v1/discoverers               #Req: DISCOVERER
 /id/DISCOVERER_MID               #  - no DiscovererArn, State
                                  #  - no SourceArn, tags
UpdateDiscoverer()                #Res: DISCOVERER
POST /v1/discoverers              #Req: DISCOVERER
 /id/DISCOVERER_MID/start         #  - only DiscovererId
StartDiscoverer()                 #Res: DISCOVERER
                                  #  - only DiscovererId, State
POST /v1/discoverers              #Req: DISCOVERER
 /id/DISCOVERER_MID/stop          #  - only DiscovererId
StopDiscoverer()                  #Res: DISCOVERER
                                  #  - only DiscovererId, State
GET /v1/discoverers               #Req: DISCOVERER
ListDiscoverers()                 #  - only DiscovererId|SourceArn -> DiscovererIdPrefix|SourceArnPrefix
                                  #Res: Discoverers DISCOVERER_ARR
                                  #  - no Description
GET /v1/discoverers               #Req: DISCOVERER
 /id/DISCOVERER_MID               #  - only DiscovererId
DescribeDiscoverer()              #Res: DISCOVERER
DELETE /v1/discoverers            #Req: DISCOVERER
 /id/DISCOVERER_MID               #  - only DiscovererId
DeleteDiscoverer()                #Res: empty

                                  ┌───────────────────────┐
                                  │   DISCOVERER SCHEMA   │
                                  └───────────────────────┘

SCHEMA_GET.Type                   #STR
SCHEMA_GET.Events                 #STR_ARR

                                  ┌───────────────────────────┐
                                  │   DISCOVERER SCHEMA API   │
                                  └───────────────────────────┘

POST /v1/discover                 #Req: SCHEMA_GET
GetDiscoveredSchema()             #Res: SCHEMA
                                  #  - only Content

                                  ┌────────────┐
                                  │   POLICY   │
                                  └────────────┘

RESOURCE_POLICY.RegistryName      #STR
RESOURCE_POLICY.Policy            #STR
RESOURCE_POLICY.RevisionId        #STR

                                  ┌────────────────┐
                                  │   POLICY API   │
                                  └────────────────┘

PUT /v1/policy                    #Req: RESOURCE_POLICY
PutResourcePolicy()               #  - RegistryName is in query parameters
                                  #Res: RESOURCE_POLICY
                                  #  - no RegistryName
GET /v1/policy                    #Req: RESOURCE_POLICY
GetResourcePolicy()               #  - only RegistryName
                                  #Res: RESOURCE_POLICY
                                  #  - no RegistryName
DELETE /v1/policy                 #Req: RESOURCE_POLICY
DeleteResourcePolicy()            #  - only RegistryName
                                  #Res: empty

                                  ┌──────────┐
                                  │   CODE   │
                                  └──────────┘

SCHEMA_CODE.RegistryName          #STR
SCHEMA_CODE.SchemaName            #STR
SCHEMA_CODE.SchemaVersion         #'VERSION_NUM'
SCHEMA_CODE.CreationDate          #'DATE'
SCHEMA_CODE.LastModified          #'DATE'
SCHEMA_CODE.Language              #STR
SCHEMA_CODE.Status                #STR
SCHEMA_CODE_RAW                   #

                                  ┌──────────────┐
                                  │   CODE API   │
                                  └──────────────┘

POST /v1/registries/name          #Req: SCHEMA_CODE
 /REGISTRY/schemas/name/SCHEMA    #  - only RegistryName, SchemaName, Language
 /language/LANG                   #  - only SchemaVersion
                                  #Res: SCHEMA_CODE
PutCodeBinding()                  #  - no RegistryName, SchemaName, Language
GET /v1/registries/name           #Req: SCHEMA_CODE
 /REGISTRY/schemas/name/SCHEMA    #  - only RegistryName, SchemaName, Language
 /language/LANG                   #  - only SchemaVersion
                                  #Res: SCHEMA_CODE
DescribeCodeBinding()             #  - no RegistryName, SchemaName, Language
GET /v1/registries/name           #Req: SCHEMA_CODE
 /REGISTRY/schemas/name/SCHEMA    #  - only RegistryName, SchemaName, Language
 /language/LANG/source            #  - only SchemaVersion
GetCodeBindingSource()            #Res: SCHEMA_CODE_RAW

                                  ┌──────────┐
                                  │   TAGS   │
                                  └──────────┘

RESOURCE_TAGS.resourceArn         #'ARN'
RESOURCE_TAGS.tags
REGISTRY|SCHEMA|DISCOVERER.tags   #TAGS_OBJ

                                  ┌──────────────┐
                                  │   TAGS API   │
                                  └──────────────┘

POST /tags/ARN                    #Req: RESOURCE_TAGS
TagResource()                     #Res: empty
GET /tags/ARN                     #Req: RESOURCE_TAGS
ListTagsForResource()             #  - only resourceArn
                                  #Res: RESOURCE_TAGS
                                  #  - only tags
DELETE /tags/ARN                  #Req: RESOURCE_TAGS
UntagResource()                   #  - tags OBJ -> tagKeys 'TAG'_ARR
                                  #Res: empty
