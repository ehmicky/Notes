
                                  ┏━━━━━━━━━━━┓
                                  ┃   GOAWS   ┃
                                  ┗━━━━━━━━━━━┛

ALTERNATIVES ==>                  #  - ElasticMQ (see SQS doc)
                                  #  - goaws

VERSION ==>                       #0.5.1

                                  ┌──────────────────────┐
                                  │   MISSING FEATURES   │
                                  └──────────────────────┘

SQS MISSING FEATURES ==>          #ListDeadLetterSourceQueues(), MOVE, QUEUE_ATTRS.RedriveAllowPolicy
                                  #QUEUE_POLICY, PERMISSION
                                  #Encryption
                                  #TAGs
                                  #ChangeMessageVisibilityBatch()
                                  #MESSAGE.DelaySeconds, QUEUE_ATTRS.ApproximateNumberOfMessagesDelayed
                                  #QUEUE_ATTRS.*Timestamp: always '0000000000'
                                  #QUEUE_ATTRS.MessageRetentionPeriod
                                  #QUEUE_ATTRS.ContentBasedDeduplication|DeduplicationScope
                                  #QUEUE_ATTRS.FifoThroughputLimit
                                  #QUEUE.QueueOwnerAWSAccountId
                                  #MESSAGE.MessageSystemAttributes
                                  #Pagination

SNS MISSING FEATURES ==>          #Other PROTOCOLs than HTTP|SQS
                                  #TOPIC_POLICY, PERMISSION
                                  #Encryption
                                  #MASK_POLICY
                                  #TAGs
                                  #FIFO
                                  #REPLAY
                                  #DELIVERY_POLICY
                                  #Integrity
                                  #Logging
                                  #TracingConfig
                                  #SUB_CONFIRM.AuthenticateOnUnsubscribe
                                  #SUB_ATTRS.FilterPolicyScope
                                  #DLQ
                                  #Pagination

                                  ┌─────────┐
                                  │   CLI   │
                                  └─────────┘

goaws [PROFILE]                   #Local emulation of SQS|SNS
                                  #Run as Docker IMAGE pafortin/goaws
                                  #  - must set -p 4100:4100
                                  #Can also run as executable by building with Go
                                  #Def PROFILE: 'Local'

-debug                            #

                                  ┌────────────┐
                                  │   CONFIG   │
                                  └────────────┘

-config=CONFIG.yaml               #Def: ./goaws-config.yaml
                                  #With Docker, must map -v PATH_IN_HOST:PATH_IN_CONTAINER
CONF.PROFILE                      #PCONF

PCONF.Host                        #'HOST' (def: 'goaws.com'). Can be 'localhost'
PCONF.Region                      #'REGION'
PCONF.AccountID                   #'ACCOUNT_ID'

PCONF.LogToFile                   #BOOL (def: false)
PCONF.LogFile                     #'PATH' to logs

PCONF.RandomLatency.Min|Max       #Random latency. Can be both 0

                                  ┌─────────┐
                                  │   SQS   │
                                  └─────────┘

PCONF.[Sqs]Port                   #PORT_NUM (def: 4100)

PCONF.Queues                      #QUEUE_ATTRS_ARR, with also: Name 'QUEUE'
PCONF.QueueAttributeDefaults      #Default QUEUE_ATTRS

PCONF.EnableDuplicates            #BOOL (def: false). Enables MESSAGE_DID

                                  ┌─────────┐
                                  │   SNS   │
                                  └─────────┘

PCONF.[Sns]Port                   #PORT_NUM (def: 4100)

PCONF.Topics                      #SNS TOPICs. OBJ_ARR: Name 'TOPIC', Subscriptions PSUB_ARR

PSUB.Protocol                     #SUB.Protocol (def: 'sqs')
PSUB.QueueName                    #SUB.Endpoint, with SQS
PSUB.EndPoint                     #SUB.Endpoint, else
PSUB.Raw                          #SUB_ATTRS.RawMessageDelivery
PSUB.TopicArn                     #SUB.TopicArn
PSUB.FilterPolicy                 #SUB_ATTRS.FilterPolicy, as 'JSON'
