
           
   PG_CRON  
           



VERSION ==>                       #1.6.2

pg_cron                           #Postgres EXTENSION + C addon

cron                              #SCHEMA


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:           FUNCTIONS           :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


cron.schedule                     #Run 'SQL' at regular interval 'WHEN'
 (['JOB', ]'WHEN', 'SQL')->JOBID  #A given job is run only once at a time
                                  #'WHEN' can be:
                                  #  - cron syntax
                                  #     - including $ for last day of month
                                  #  - 1-59 seconds

cron.schedule_in_database(...,
 'DATABASE'[, 'ROLE'[, BOOL]])
 ->JOBID                          #BOOL is whether active

cron.alter_job(JOBID[, 'WHEN',
 ['SQL', ['DATABASE', ['ROLE'
 [, BOOL]]]]])                    #Alter a JOB

cron.unschedule('JOB'|JOBID)
 ->BOOL                           #


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:            CONFIG             :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


SCONF.cron.database_name          #'DATABASE' (def: 'postgrs')

SCONF.cron.host                   #LIBPQ.host (def: 'localhost')

SCONF.cron.use_background_workers #BOOL (def: false). Use backword workers instead of SCONF.cron.host
SCONF.cron.max_running_jobs       #NUM (def: 32).
                                  #Max number of JOBs running in parallel
                                  #If use_background_works true, must be <= PCONF.max_worker_processes

SCONF.cron.timezone               #STR (def: 'GMT')

SCONF.cron.launch_active_jobs     #BOOL (def: true). If false, must restart server to launch JOBs

SCONF.cron.enable_superuser_jobs  #BOOL (def: true). Allow superuser ROLE to create JOBs

SCONF.cron.log_run                #BOOL (def: true). Whether to use cron.job_run_details

SCONF.cron.log_statement          #BOOL (def: true). Log 'SQL' before running it
SCONF.cron.log_min_messages       #STR (def: 'warning')


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:            TABLES             :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


cron.job                          #TABLE with all JOBs
cron.job.jobid                    #JOBID
cron.job.jobname                  #'JOB'
cron.job.schedule                 #'WHEN'
cron.job.command                  #'SQL'
cron.job.nodename                 #'HOST' (def: 'localhost')
cron.job.nodeport                 #INT4 (def: inet_server_port())
cron.job.database                 #'DATABASE'
cron.job.username                 #'ROLE'
                                  #Used as POLICY, i.e. current_user must match
cron.job.active                   #BOOL

cron.job_run_details              #TABLE with all JOB runs
cron.job_run_details.runid        #OID
cron.job_run_details.jobid        #JOBID
cron.job_run_details.job_pid      #BPID
cron.job_run_details.database     #'DATABASE'
cron.job_run_details.username     #'ROLE'
                                  #Used as POLICY, i.e. current_user must match
cron.job_run_details.command      #'SQL'
cron.job_run_details.status       #'succeeded|failed'
cron.job_run_details
 .return_message                  #STR
cron.job_run_details
 .start_time|end_time             #TIMESTAMPTZ
