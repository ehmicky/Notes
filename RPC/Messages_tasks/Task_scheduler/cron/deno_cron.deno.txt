
             
   DENO_CRON  
             



VERSION ==>                       #Part of Deno

--unstable-cron                  !#
Deno.cron('NAME',
 'CRON_SCHEDULE'|CRON_SCHEDULE    #Runs FUNC() each time specified by CRON_SCHEDULE
 [, OPTS], FUNC()[->>])->>        #Max 100

OPTS.signal                       #ABORT_SIGNAL
OPTS.backoffSchedule              #NUM_ARR (def: [1e2, 1e3, 5e3, 3e4, 6e4])
                                  #If FUNC() throws, retries it ARR.length times (max 5), with each NUM being the delay (in ms, max 1h)

CRON_SCHEDULE.minute|hour|        #One of:
 dayOfMonth|month|dayOfWeek       #  - NUM
                                  #  - OBJ: exact NUM[_ARR]
                                  #  - OBJ: start|end NUM, every NUM
