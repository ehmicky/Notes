
             
   DENO_YAML  
             



ALTERNATIVES ==>                  #See js-yaml
                                  #Browser compatible

VERSION ==>                       #Part of Deno

@std/yaml/parse.ts
parse('YAML'[, OPTS])->VAL        #Parses YAML to JavaScript
                                  #Multi-documents files will throw error
parseAll('YAML'[, OPTS])->ARR     #Same but allows multi-documents file, and FUNC fired for each

OPTS.schema                       #Like js-yaml, but:
                                  #  - YAML.*_SCHEMA -> 'failsafe|json|core|default|extended'
                                  #  - EXTENDED_SCHEMA: !!js/undefined|regexp but not !!js/function
OPTS.allowDuplicateKeys           #Like js-yaml OPTS.json
OPTS.onWarning
ERROR HANDLING ==>                #Like js-yaml but using TypeError|SyntaxError instead

@std/yaml/stringify.ts
stringify(VAL[, OPTS])->'YAML'    #Serializes JavaScript to YAML
OPTS.schema                       #VAL. Like parse()
OPTS.styles.!!TYPE                #Like js-yaml but only allows STYLE 'lowercase|uppercase|camelcase|decimal'
OPTS.skipInvalid
OPTS.indent
OPTS.lineWidth
OPTS.flowLevel
OPTS.condenseFlow
OPTS.sortKeys                     #Like js-yaml
OPTS.useAnchors                   #Like js-yaml OPTS.noRefs !BOOL
OPTS.compatMode                   #Like js-yaml OPTS.noCompatMode !BOOL
OPTS.arrayIndent                  #Like js-yaml OPTS.noArrayIndent !BOOL
