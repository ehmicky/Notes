
                 
   COOKIE-PARSER  
                 



VERSION ==>                   #1.4.6

GOAL ==>                      #  - assign REQ.cookies|signedCookies = COOKIE_OBJ
                              #  - if RES.send(..., {signed: true}), REQ.signedCookies used instead
                              #     - authenticate, i.e. make sure cookie was set by server sharing 'SECRET' (i.e. current one)

COOKIE-PARSER                 #Express MIDWR parsing REQ.cookies and (if 'SECRET'[_ARR]) REQ.secret|signedCookies
(['SECRET'[_ARR]][, OPTS])    #OPTS: passed to COOKIE.parse()

REQ.[signedC|c]ookies         #COOKIE_OBJ, using Cookie [C]
                              #Uses JSONCookies(), i.e. values 'j:JSON' -> OBJ
                              #If 'signed', uses signedCookies(..., 'SECRET'[_ARR]), i.e. values 's:VAL.HASH' -> 'VAL' or (if invalid HASH) delete key
REQ.secret                    #'SECRET' (first one if ARR)
                              #Used by RES.cookie(..., {signed: true}) for Set-Cookie: 's:VAL.HASH' [S]

COOKIE-PARSER.JSONCookie
('j:JSON')->OBJ|undefined     #Returns JSON.parse('JSON'), or undefined if problem
COOKIE-PARSER.JSONCookies(OBJ)
->OBJ                         #Calls JSONCookie() on each OBJ value
COOKIE-PARSER.signedCookie
('s:VAL.HASH', 'SECRET'[_ARR])#Verifies HASH, using any 'SECRET', with COOKIE-SIGNATURE (see its doc)
->'VAL'|false                 #Returns 'VAL' if success, false otherwise
COOKIE-PARSER.signedCookies
(OBJ, 'SECRET'[_ARR])->OBJ    #Calls signedCookie() on each OBJ value. Only keeps values !== false
