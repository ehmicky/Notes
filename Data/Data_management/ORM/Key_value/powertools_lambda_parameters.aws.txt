
                                  ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
                                  ┃   POWERTOOLS_LAMBDA_PARAMETERS   ┃
                                  ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛

VERSION ==>                       #See AWS Lambda docs
                                  #Package '@aws-lambda-powertools/parameters'

GOAL ==>                          #Abstraction for AWS-specific read-only key-value stores
                                  #Provides with: memoization, JSON|base64 decoding, SERVICE-specific simplification

                                  ┌──────────┐
                                  │   INIT   │
                                  └──────────┘

new BaseProvider(OPTS)            #PM

FUNC_VERSION
 .Environment.Variables.ENVVAR
process.env.ENVVAR                #Can use either to set ENVVARs

                                  ┌─────────┐
                                  │   GET   │
                                  └─────────┘

PM.get('PKEY'[, GOPTS])[->>PVAL]  #Retrieve a value
                                  #PKEY is usually a name
                                  #PVAL can be anything

PM.getAll('PKEY'[, GOPTS])        #Same but retrieves multiple values
 [->>PVAL]                        #PKEY is usually a query or path
                                  #PVAL is OBJ

                                  ┌───────────┐
                                  │   CACHE   │
                                  └───────────┘

GOPTS.maxAge                      #NUM (in secs, def: 5). Memoize PM.get()
ENVVAR                            #Can be 0 to disable
 POWERTOOLS_PARAMETERS_MAX_AGE    #Cache key is 'PKEY' + GOPTS.transform
                                  #PVAL null|undefined is not cached

GOPTS.forceFetch                  #BOOL (def: false). Do not retrieve cache (but still set it)

PM.clearCache()                   #

clearCaches()                     #Like PM.clearCache() but when not instantiating PM directly
                                  #E.g. when using getParameter(...) instead of new SSMProvider(...).get(...)

                                  ┌────────────┐
                                  │   DECODE   │
                                  └────────────┘

GOPTS.transform                   #Maps PVAL
                                  #Only if PVAL is:
                                  #  - STR
                                  #  - UINT8ARR: converted to STR
                                  #One of:
                                  #  - undefined (def): nothing
                                  #  - 'auto': if PKEY ends with '.binary' or '.json', uses it, else do nothing
                                  #  - 'json': JSON.parse()
                                  #  - 'binary': base64 decode

GOPTS.throwOnTransformError       #BOOL. If false (def), when JSON|base64 decoding throws, silently ignored instead
                                  #Only with PM.getAll()

                                  ┌────────────┐
                                  │   CLIENT   │
                                  └────────────┘

OPTS.awsSdkV3Client               #AWS JavaScript CLIENT (def: automatically created)
                                  #SERVICE-specific, e.g. DynamoDBClient with DynamoDBProvider
                                  #Uses custom User-Agent: PT/parameters/X.Y.Z PTEnv/AWS_Lambda_RUNTIME [C]
                                  #Requires @aws-sdk/client-SERVICE
                                  #  - automatically included in Lambda
                                  #  - with DynamoDB, also @aws-sdk/util-dynamodb
                                  #Requires SERVICE-specific PACTIONs
OPTS.clientConfig                 #COPTS (def: {}). Alternative to OPTS.awsSdkV3Client

GOPTS.sdkOptions                  #PARAMS passed to underlying AWS JavaScript COMMAND
                                  #COMMAND is SERVICE-specific, e.g. GetItem() with DynamoDBProvider

                                  ┌────────────┐
                                  │   CUSTOM   │
                                  └────────────┘

CUSTOM PM ==>                     #Must extend from BaseProvider

OPTS.proto                        #AWS JavaScript SERVICEClient
                                  #Must be passed to super()

PM._get('PKEY'[, GOPTS])[->>PVAL] #Must be implemented
PM._getAll('PKEY'[, GOPTS])       #Must be implemented
 [->>PVAL]                        #However, can optionally just opt out by throwing

PM.client                         #CLIENT. Can be used

                                  ┌─────────────┐
                                  │   BUILTIN   │
                                  └─────────────┘

SERVICES TO DOCUMENT ==>          #Comes with following builtin PMs
                                  #Documented: none yet (see their docs)
                                  #Not documented yet: SSM, AppConfig, Secrets Manager, DynamoDB
                                  #When documenting new one, should document:
                                  #  - in the SERVICE-specific documentation, not this doc
                                  #  - behavior of _get() and _getAll()
                                  #  - which COMMAND is used, for GOPTS.sdkOptions
                                  #  - additional constructor OPTS, if any
                                  #  - additional GOPTS, if any
                                  #  - additional public methods, if any
                                  #  - behavior of shortcut methods like getParameter(...)
                                  #  - SERVICE-specific documentation in:
                                  #     - https://github.com/aws-powertools/powertools-lambda-typescript/blob/main/packages/parameters/README.md
                                  #     - https://docs.powertools.aws.dev/lambda/typescript/latest/utilities/parameters/#iam-permissions
                                  #     - https://docs.powertools.aws.dev/lambda/typescript/latest/utilities/parameters/#built-in-provider-class
                                  #     - https://docs.powertools.aws.dev/lambda/typescript/latest/utilities/parameters/#passing-additional-sdk-arguments
