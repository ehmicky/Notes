
               
   ELASTICACHE  
               



TODO:
  - CloudFormation: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-attribute-updatepolicy.html#cfn-attributes-updatepolicy-useonlineresharding

ELASTICACHE ==>               #Version from 2014-07-30

GOAL ==>                      #Using Redis|Memcached, with underlying EC2.
                              #More expensive than doing on EC2, but managed, so less time configuring.

MEMCACHED-SPECIFIC ==>        #See online doc:
                              #  - Auto-discovery of nodes
                              #  - some METRIC


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:            GENERAL            :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


CACHENODE ==>                 #  - CacheNode: single Redis|Memcached server
                              #  - CacheCluster: several CacheNodes (1-20 for Memcached, only 1 for Redis)
                              #  - actually an EC2 instance:
                              #     - has a private IP/DNS and port ("Endpoint")
                              #     - instance type (stats are written like if instance size was large):
                              #        - t2.micro-medium: 6GB storage (RAM)
                              #        - m3.medium-2xlarge: 6GB storage (RAM)
                              #        - r3.large-8xlarge: 14GB storage (RAM)
                              #     - t1.micro and t2.* don't support AOF nor RDB backups
                              #   - Redis is single threaded, so extra CPUs will not provide performance boost.
                              #   - Most performance will come from memory speed and network speed.
                              #     Of course memory amount is important.

CACHEPARAMETERGROUP ==>       #  - Redis|Memcached options (CacheParameter) for a given CacheCluster
                              #  - Redis: CONFVAR
                              #  - Differences from normal Redis CONFVAR:
                              #     - hidden:
                              #        - AOF: *aof-rewrite*, no-appendfsync-on-rewrite
                              #        - Connection: bind, port, unixsocket*, daemonize, pidfile, masterauth, requirepass,
                              #          tcp-backlog
                              #        - RDB backups: save, rdb*, dbfilename, dir
                              #        - Logging/monitoring: latency-monitor-threshold, log*
                              #        - Replication: slave*, repl-disable-tcp-nodelay, repl-ping-slave-period
                              #        - Redis 3.0: cluster-*
                              #        - hz
                              #     - Not modifiable:
                              #        - client-output-buffer-limit-slave-*
                              #        - databases, maxclients (65000), maxmemory (depends on instance type)
                              #        - lua-time-limit
                              #     - New:
                              #        - reserved-memory UINT (def: 0): memory to keep for underlying OS.
                              #          Good idea to give 200MB.
                              #          If no reserved-memory and use all memory, will not crash, but page a lot (performance)
                              #     - Unavailable commands: bgrewriteaof, [bg]save, config, debug, migrate, slaveof, shutdown

SECURITY ==>                  #  - Can only communicate to EC2 instances, and whitelisted by their Subnets (CacheSubnetGroups)
                              #  - Has a EC2 SecurityGroup:
                              #     - SecurityGroup must allow TCP on port 6379|11211
                              #     - def SecurityGroup allow all out, allow in only from same SecurityGroup

AVAILABILITY ZONES ==>        #  - Redis: can select PreferredAvailabilityZone ZONE
                              #  - Memcached: can also, if AZMode "cross-az", distribute accross
                              #    PreferredAvailabilityZones ZONE_ARR:
                              #    - NumCacheNodes must == number of ZONE (can specify each ZONE zero or many times)


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:          DURABILITY           :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


REPLICATION ==>               #CacheReplicaGroup (Redis only):
                              #  - master-slave replication, with read-only slaves (uses Redis native replication)
                              #  - master and slaves are CacheClusters
                              #  - failover:
                              #     - manual by updating PrimaryClusterId (takes few minutes)
                              #     - if master down, slaves still work

SNAPSHOTS ==>                 #  - Redis only, using RDB backups (bgsave)
                              #  - stored in S3, but can only access if:
                              #     - specifying SnapshotArns (automatic only)
                              #     - must give read permission to aws-scs-s3-readonly@amazon.com for snapshot OBJECT
                              #  - can be taken:
                              #     - automatic:
                              #        - daily snapshots, can specify SnapshotWindow (def: "05:00-09:00") (UTC time)
                              #          (min 1 hour)
                              #        - expires according to SnapshotRetentionLimit NUM (number of days)
                              #          (max 35, if 0 (def), disable automatic snapshots)
                              #     - manual:
                              #        - max 20 times a day
                              #  - can restore by specifying snapshot object name in CreateCacheCluster() SnapshotName
                              #     - restored database will have default SecurityGroup and CacheParameterGroup: should
                              #       assign them again
                              #     - so should keep a copy of SecurityGroup and CacheParameterGroup if changed
                              #  - can be good idea to turn AOF too, which will prevent from some crashes (reboots) but not
                              #    all (underlying hardware is dead), in which case only snapshots and replication will help
                              #  - good idea to do it on a slave if replication

MAINTENANCE WINDOW ==>        #  - specify PreferredMaintenanceWindow (def: "sun:05:00-sun:09:00") (UTC time)
                              #  - what it does:
                              #     - apply the ModifyCacheCluster(), unless ApplyImmediately true (def: false)
                              #       (in which case it will reboot if needed)
                              #     - Upgrade version:
                              #        - minor if AutoMinorVersionUpgrade true (def)
                              #        - major: must manually change the EngineVersion
                              #  - once every few months
                              #  - few mins of outage
                              #  - can also manually reboot


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:          MONITORING           :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


SNS NOTIFICATIONS ==>         #  - for a set of events (add|remove nodes, params changed, snapshots, reboots)
                              #  - can see events with DescribeEvents() too (retained for 2 weeks)

CLOUDWATCH ==>                #  - METRIC:
                              #     - all: CPUUtilization (will never be above 1/NUMBER_CORE since single-thread), SwapUsage,
                              #       FreeableMemory, NetworkBytesIn|Out
                              #     - Redis-only: all derived from "info" Redis command:
                              #        - CurrConnections (connections now), NewConnections (connections during full period)
                              #        - CurrItems (number of keys), Evictions, Reclaimed (Expired keys), CacheHits|Misses
                              #        - BytesUsedForCache, ReplicationLag
                              #        - Get|SetTypeCmds, Key|String|Hash|List|Set|SortedBasedCmds
                              #  - Dimensions: CacheClusterId, CacheNodeId


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:            OTHERS             :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


ARN ==>                       #None (must use "*")

PRICING ==>                   #Similar to EC2 but:
                              #  - EC2 instances: 30% more expensive
                              #     - for reserved instances: 30% extra is added to variable cost not upfront
                              #  - No spot instances
                              #  - Snapshots: 10% cheaper/GB, but not incremental
                              #  - Data transfer:
                              #     - only with EC2 instance
                              #     - free (only pays EC2 instance in|out from|to ElastiCache)
                              #  - no EBS costs

PAGINATION ==>                #  - Request parameters: Marker STR, MaxRecords NUM (def|max: 100, min: 20)
                              #  - Response body: Marker STR


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:            METHODS            :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


CreateCacheCluster()          #Takes few minutes.
                              #Request parameters CACHE_CLUSTER:
                              #  - CacheClusterId STR (max 20 chars, [[:alnum:]-])
                              #  - NumCacheNodes NUM
                              #  - CacheNodeType STR: instance type "cache.EC2_INSTANCE_TYPE"
                              #  - Port NUM: def 6379 for Redis, 11211 for Memcached
                              #  - Engine "memcached|redis"
                              #  - EngineVersion STR
                              #  - AZMode "single-az|cross-az"
                              #  - PreferredAvailabilityZone ZONE
                              #  - PreferredAvailabilityZones ZONE_ARR
                              #  - CacheParameterGroupName STR
                              #  - SecurityGroupIds STR_ARR
                              #  - CacheSubnetGroupName STR
                              #  - PreferredMaintenanceWindow STR
                              #  - AutoMinorVersionUpgrade BOOL
                              #  - SnapshotArns S3_OBJECT_ARN_ARR (ARR with one element)
                              #  - SnapshotName STR
                              #  - SnapshotRetentionLimit NUM: if 0 (def), disable snapshots
                              #  - SnapshotWindow STR
                              #  - ReplicationGroupId STR
                              #  - NotificationTopicArn SNS_TOPIC_ARN
                              #Response body CACHE_CLUSTER_RES:
                              #  - Same members as CACHE_CLUSTER except AZMode, CacheSecurityGroupNames, NotificationTopicArn,
                              #    SecurityGroupIds, SnapshotArns, CacheParameterGroupName, Port, SnapshotName
                              #  - CacheClusterCreateTime DATE
                              #  - CacheClusterStatus "available|creating|deleted|deleting|incompatible-network|modifying|
                              #    rebooting cache cluster nodes|restore-failed|snapshotting"
                              #  - CacheNodes OBJ_ARR:
                              #     - CacheNodeCreateTime DATE
                              #     - CacheNodeId STR
                              #     - CacheNodeStatus STR
                              #     - CustomerAvailabilityZone ZONE
                              #     - Endpoint ENDPOINT: Address STR, Port NUM
                              #     - ParameterGroupStatus STR
                              #     - SourceCacheNodeId STR (if slave node)
                              #  - CacheParameterGroup:
                              #     - CacheNodeIdsToReboot STR_ARR: nodes that need to be rebooted for CacheParamameterGroup
                              #       to be applied
                              #     - CacheParameterGroupName STR
                              #     - ParameterApplyStatus STR
                              #  - CacheSecurityGroups OBJ_ARR:
                              #     - CacheSecurityGroupName STR
                              #     - Status STR
                              #  - ClientDownloadLandingPage URL: of the ElasticCache client library
                              #  - ConfigurationEndpoint ENDPOINT
                              #  - NotificationConfiguration: TopicArn STR, TopicStatus STR
                              #  - PendingModifiedValues OBJ_ARR:
                              #     - CacheNodeIdsToRemove STR_ARR
                              #     - EngineVersion STR
                              #     - NumCacheNodes NUM
                              #  - SecurityGroups OBJ_ARR:
                              #     - SecurityGroupId STR
                              #     - Status STR
DeleteCacheCluster()          #Request parameters:
                              #  - CacheClusterId STR
                              #  - FinalSnapshotIdentifier STR
                              #Response body CACHE_CLUSTER_RES_ARR
ModifyCacheCluster()          #Request parameters CACHE_CLUSTER_MODIF:
                              #  - Same members as CACHE_CLUSTER except CacheSecurityGroupNames, ReplicationGroupId,
                              #    SnapshotArns, CacheNodeType, CacheSubnetGroupName, Engine, Port,
                              #    PreferredAvailabilityZone[s], SnapshotName
                              #  - ApplyImmediately BOOL
                              #  - CacheNodeIdsToRemove STR_ARR
                              #  - CacheSecurityGroupNames STR_ARR
                              #  - NewAvailabilityZones STR_ARR
                              #  - NotificationTopicStatus "active|inactive"
                              #Response body CACHE_CLUSTER_RES
RebootCacheCluster()          #Request parameters:
                              #  - CacheClusterId STR
                              #  - CacheNodeIdsToReboot STR_ARR
                              #Response body CACHE_CLUSTER_RES
DescribeCacheClusters()       #Request parameters:
                              #  - CacheClusterId STR
                              #  - ShowCacheNodeInfo BOOL: if true (def: false), show CacheNodes
                              #Response body: CacheClusters CACHE_CLUSTER_RES_ARR
                              #Paginates

CreateCacheParameterGroup()   #Request parameters CACHE_PARAM:
                              #  - CacheParameterGroupName STR
                              #  - Description STR
                              #  - CacheParameterGroupFamily "memcached1.4|redis2.6|redis2.8"
                              #Response body CACHE_PARAM
DeleteCacheParameterGroup()   #Request parameters: CacheParameterGroupName STR
ModifyCacheParameterGroup()   #Request parameters CACHE_PARAM_MODIF:
                              #  - CacheParameterGroupName STR
                              #  - ParameterNameValues OBJ_ARR:
                              #     - ParameterName STR
                              #     - ParameterValue STR
                              #Response body: CacheParameterGroupName STR
ResetCacheParameterGroup()    #Request parameters CACHE_PARAM_MODIF, plus:
                              #  - ResetAllParameters BOOL
                              #Response body: CacheParameterGroupName STR
DescribeCacheParameterGroups()#Request parameters: CacheParameterGroupName STR
                              #Response body: CacheParameterGroups CACHE_PARAM_ARR:
                              #Paginates

DescribeCacheParameters()     #Request parameters:
                              #  - CacheParameterGroupName STR
                              #  - Source "user|system|engine-default"
                              #Response body:
                              #  - Parameters NODETYPE_PARAM:
                              #     - ParameterName STR: for Redis, CONFVAR
                              #     - ParameterValue
                              #     - AllowedValues STR
                              #     - DataType STR
                              #     - Description STR
                              #     - IsModifiable BOOL
                              #     - MinimumEngineVersion STR
                              #     - Source STR
                              #  - CacheNodeTypeSpecificParameters NODETYPE_PARAM_ARR (specific to an instance type), but:
                              #     - ParameterValue -> CacheNodeTypeSpecificValues OBJ_ARR:
                              #        - CacheNodeType STR
                              #        - Value STR
                              #Paginates
DescribeEngine                #Request parameters: CacheParameterGroupFamily STR
DefaultParameters()           #Response body: Same as DescribeCacheParameters() response body, plus:
                              #  - CacheParameterGroupFamily STR
                              #Paginates

Create|ModifyCacheSubnetGroup #Request parameters:
                              #  - CacheSubnetGroupDescription STR
                              #  - CacheSubnetGroupName STR
                              #  - SubnetIds STR_ARR
                              #Response body CACHE_SUBNET:
                              #  - CacheSubnetGroupDescription STR
                              #  - CacheSubnetGroupName STR
                              #  - VpcId STR
                              #  - Subnets OBJ_ARR:
                              #     - SubnetAvailabilityZone: Name STR
                              #     - SubnetIdentifier STR
DeleteCacheSubnetGroup()      #Request parameters: CacheSubnetGroupName STR
DescribeCacheSubnetGroups()   #Request parameters: CacheSubnetGroupName STR
                              #Response body: CacheSubnetGroups CACHE_SUBNET_ARR
                              #Paginates

CreateSnapshot()              #Request parameters:
                              #  - CacheClusterId STR
                              #  - SnapshotName STR
                              #Response body SNAPSHOT:
                              #  - Same members as CACHE_CLUSTER except AZMode, CacheSecurityGroupNames, NotificationTopicArn,
                              #    PreferredAvailabilityZones, ReplicationGroupId, SecurityGroupIds, SnapshotArns
                              #  - CacheClusterCreateTime DATE
                              #  - NodeSnapshots OBJ_ARR:
                              #     - SnapshotCreateTime DATE
                              #     - CacheNodeCreateTime DATE
                              #     - CacheNodeId STR
                              #     - CacheSize NUM
                              #  - SnapshotSource "automated|manual"
                              #  - SnapshotStatus "creating|available|restoring|copying|deleting"
                              #  - TopicArn SNS_TOPIC_ARN
                              #  - VpcId STR
CopySnapshot()                #Request parameters:
                              #  - SourceSnapshotName STR
                              #  - TargetSnapshotName STR
                              #Response body SNAPSHOT
DeleteSnapshot()              #Request parameters: SnapshotName STR
                              #Response body SNAPSHOT
DescribeSnapshots()           #Request parameters:
                              #  - CacheClusterId STR
                              #  - SnapshotName STR
                              #  - SnapshotSource "|system|user"
                              #Response body: Snapshots SNAPSHOT_ARR
                              #Paginates

CreateReplicationGroup()      #Request parameters REP_GROUP_CREATE:
                              #  - PrimaryClusterId STR
                              #  - ReplicationGroupDescription STR
                              #  - ReplicationGroupId STR
                              #Response body REPLICATION_GROUP:
                              #  - ReplicationGroupId STR
                              #  - Description STR
                              #  - MemberClusters STR_ARR: CacheCluster names
                              #  - NodeGroups OBJ_ARR:
                              #     - NodeGroupId STR
                              #     - NodeGroupMembers OBJ_ARR:
                              #        - CacheClusterId STR
                              #        - CacheNodeId STR
                              #        - CurrentRole "primary|replica"
                              #        - PreferredAvailabilityZone ZONE
                              #        - ReadEndpoint ENDPOINT
                              #     - PrimaryEndpoint ENDPOINT (should be used instead of nodes ReadEndpoint)
                              #     - Status STR
                              #  - PendingModifiedValues OBJ_ARR: PrimaryClusterId STR
                              #  - SnapshottingClusterId STR: CacheCluster used for the automatic snapshotting
                              #  - Status "creating|available|restoring|copying|deleting"
DeleteReplicationGroup()      #Request parameters:
                              #  - FinalSnapshotIdentifier STR
                              #  - ReplicationGroupId STR
                              #  - RetainPrimaryCluster BOOL
                              #Response body REPLICATION_GROUP
ModifyReplicationGroup()      #Request parameters: like CACHE_CLUSTER_MODIF but:
                              #  - no CacheNodeIdsToRemove, NewAvailabilityZones, CacheClusterId, NumCacheNodes, AZMode
                              #  - REP_GROUP_CREATE members
                              #  - SnapshottingClusterId STR
                              #Response body REPLICATION_GROUP
DescribeReplicationGroups()   #Request parameters: ReplicationGroupId STR
                              #Response body: ReplicationGroups REPLICATION_GROUP_ARR
                              #Paginates

PurchaseReservedCacheNodes    #Request parameters:
Offering()                    #  - CacheNodeCount NUM
                              #  - ReservedCacheNodeId STR
                              #  - ReservedCacheNodesOfferingId STR
                              #Response body RESERVED_CACHE:
                              #  - Same members as request
                              #  - OfferingType "Light Utilization|Medium Utilization|Heavy Utilization"
                              #  - ProductDescription STR
                              #  - Duration "1|3"
                              #  - CacheNodeCount NUM
                              #  - StartTime DATE
                              #  - FixedPrice DOUBLE
                              #  - UsagePrice DOUBLE
                              #  - RecurringCharges OBJ_ARR:
                              #     - RecurringChargeAmount DOUBLE
                              #     - RecurringChargeFrequency STR
                              #  - State STR
DescribeReserved              #Request parameters:
CacheNodes[Offerings]()       #  - CacheNodeType STR
                              #  - Duration "1|3"
                              #  - OfferingType STR
                              #  - ProductDescription STR
                              #  - ReservedCacheNodeId STR (only if no "Offerings")
                              #  - ReservedCacheNodesOfferingId STR
                              #Response body: ReservedCacheNodes RESERVED_CACHE_ARR
                              #  - No State, StartTime nor CacheNodeCount NUM if no "Offerings"
                              #Paginates

DescribeCacheEngineVersions() #Request parameters:
                              #  - CacheParameterGroupFamily STR
                              #  - DefaultOnly BOOL
                              #  - Engine STR
                              #  - EngineVersion STR
                              #Response body: CacheEngineVersions OBJ_ARR:
                              #  - Same as request except DefaultOnly
                              #  - CacheEngineDescription STR
                              #  - CacheEngineVersionDescription STR
                              #Paginates

DescribeEvents()              #Request parameters:
                              #  - Duration NUM (in mins, def: 0)
                              #  - StartTime|EndTime DATE
                              #  - SourceIdentifier STR
                              #  - SourceType "cache-cluster|cache-parameter-group|cache-security-group|cache-subnet-group"
                              #Response body: Events OBJ_ARR:
                              #  - Date DATE
                              #  - Message STR
                              #  - SourceIdentifier STR
                              #  - SourceType STR
                              #Paginates
