
                                  ┏━━━━━━━━━━━┓
                                  ┃   LOWDB   ┃
                                  ┗━━━━━━━━━━━┛

VERSION ==>                       #7.0.1

SUMMARY ==>                       #Single-value store, with adapters (memory, file, localStorage|sessionStorage)

                                  ┌─────────────┐
                                  │   GENERAL   │
                                  └─────────────┘

require('lowdb')                  #For Low, Memory
require('lowdb/node')             #For JsonPreset, TextFile, JsonFile
require('lowdb/browser')          #For Local|Session*

UPATH                             #'PATH' or `data:` URI

new LowSync(...)
new MemorySync(...)
JsonFileSyncPreset(...)
new TextFileSync(...)
new JsonFileSync(...)
new DataFileSync(...)             #Same but sync

                                  ┌──────────────┐
                                  │   DATABASE   │
                                  └──────────────┘

new Low(ADAPTER, DATA)            #LOW
LOW.adapter                       #ADAPTER
LOW.data                          #DATA. Type is ADAPTER-specific
LOW.read()->>                     #ADAPTER -> LOW.data
LOW.write()->>                    #LOW.data -> ADAPTER
LOW.update(FUNC(DATA))->>         #Calls FUNC(LOW.read()) then LOW.write()

JsonFilePreset(UPATH, DATA)->>LOW #Uses ADAPTER:
                                  #  - Memory: if NODE_ENV 'test'
                                  #  - JsonFile: otherwise
                                  #Calls LOW.read() on construction

Local|SessionStoragePreset        #Uses Local|SessionStorage ADAPTER
 ('VAR', DATA)->>LOW              #Calls LOW.read() on construction

                                  ┌─────────────┐
                                  │   ADAPTER   │
                                  └─────────────┘

ADAPTERS ==>                      #All the following write whole DATA on each write

new Memory()                      #ADAPTER that keeps DATA in memory
                                  #DATA can be any VAL

new TextFile(UPATH)               #ADAPTER that writes DATA as is
                                  #DATA must be a STR
                                  #Uses steno (see its doc), i.e. concurrency-safe and crash-safe
new JsonFile(UPATH)               #Same but uses JSON.parse|stringify()
                                  #DATA can be any JSON-serializable VAL
new DataFile(UPATH[, OPTS])       #Same but uses OPTS.parse|stringify

new LocalStorage('VAR')           #ADAPTER that writes DATA to localStorage, using JSON.parse|serialize()
                                  #DATA can be any JSON-serializable VAL
new SessionStorage('VAR')         #Same with sessionStorage

ADAPTER.read()->>VAL              #To implement for custom ADAPTERs
ADAPTER.write(VAL)->>             #If sync, return no PROMISE
