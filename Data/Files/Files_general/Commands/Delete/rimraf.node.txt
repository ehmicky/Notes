
          
   RIMRAF  
          




ALTERNATIVES ==>                  #  - promisify(fs.rmdir)(..., { recursive:true }) (preferred if Node>=14 and no globbing)
                                  #  - rimraf (preferred with Node otherwise)
                                  #  - Deno.remove() and emptyDir() (preferred with Deno)

VERSION ==>                       #5.0.1

RIMRAF('PATH'[_ARR][, OPTS])      #Recursive delete files/directories
 ->PROMISE_BOOL                   #Noop if file does not exist
RIMRAF.sync('PATH'[_ARR][, OPTS]) #BOOL false if file was ignored due to OPTS.filter()
 ->BOOL                           #OPTS:
                                  #  - glob BOOL|OPTS (def: false): `node-glob` (see its doc) options
                                  #     - def: { nosort: true, silent: true }
                                  #  - preserveRoot BOOL (def: true): do not allow removing root directory
                                  #  - filter('PATH', FSSTAT|DIRENT)->[PROMISE_]BOOL: return false to not delete a file
                                  #  - maxRetries NUM (def: 10 on Windows, 0 otherwise):
                                  #     - retry on EBUSY|EACCES|EPERM NUM times
                                  #     - reason: some anti-virus software on Windows lock directories while running
                                  #  - backoff NUM (def: 1.2): exponential backoff for OPTS.maxRetries
                                  #  - maxBackoff NUM (def: 200, in ms): max backoff for OPTS.maxRetries
                                  #  - retryDelay NUM (def: 100): linear backoff for OPTS.maxRetries
                                  #  - tmp DIR (def: os.tmpdir()): used on Windows as part of the removal logic
                                  #  - signal ABORT_SIGNAL

rimraf FILE...                    #CLI
--[no-]interactive|i|I            #Ask for confirmation
--[no-]verbose|v|V                #
--[no-]glob|g|G                   #
--[no-]preserve-root              #
--max-retries=NUM                 #
--backoff=NUM                     #
--retry-delay=NUM                 #
--tmp=DIR                         #


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:              DEL              :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


VERSION ==>                       #7.1.0
                                  #Based on rimraf

deleteAsync|Sync                  #Globbing uses globby (based on fast-glob) instead of node-glob
 ('GLOB'[_ARR][, OPTS])           #OPTS:
 ->[PROMISE_]'PATH'_ARR           #  - force BOOL (def: false): do not allow removing $PWD or outside or $PWD
                                  #  - cwd 'DIR'
                                  #  - dryRun BOOL (def: false)
                                  #  - onProgress(OBJ): OBJ: totalFiles NUM, deletedFiles NUM, progress FLOAT, path STR
                                  #  - any globby options


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:            DEL-CLI            :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/



VERSION ==>                       #5.0.0

del GLOB...                       #CLI for del
--force|-f                        #
--dry-run|-d                      #
