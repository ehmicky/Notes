
           
   FIND-UP  
           



                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:            FIND-UP            :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


VERSION ==>                       #6.0.0

findUp[Sync](FILE[, OPTS])        #Looks for FILE in current directory, then up recursively.
 ->[PROMISE_]'PATH'               #Returns first matching 'PATH' or undefined if none.
                                  #FILE can be:
                                  #  - 'PATH'[_ARR]
                                  #  - FUNC('DIR')->[PROMISE_]'PATH' or undefined (no match) or findUpStop (stop iteration): fired on each 'DIR'
                                  #OPTS:
                                  #  - cwd (def: process.cwd())
                                  #  - any OPTS from LOCATE-PATH (see its doc)


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:            PKG-DIR            :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


VERSION ==>                       #5.0.0

PKG-DIR[.sync](['PWD'])
 [->[PROMISE_]'DIR']              #Uses FIND-UP for package.json, i.e. returns package root directory (LPREFIX)
