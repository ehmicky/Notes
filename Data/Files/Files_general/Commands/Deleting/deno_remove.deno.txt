
               
   DENO_REMOVE  
               



ALTERNATIVES ==>                  #See rimraf

VERSION ==>                       #Part of Deno

Deno.remove(UPATH[, OPTS])->>    W#Delete file|DIR.
Deno.removeSync(...)              #Throws if does not exist.
OPTS.recursive                    #BOOL (def: false)
                                  #When non-empty DIR, whether to delete recursively, or throw

std/fs/empty_dir.ts
emptyDir(DIR_UPATH)->>          WR#Delete DIR/**, but not DIR itself
emptyDirSync(...)                 #If DIR does not exist, create it
