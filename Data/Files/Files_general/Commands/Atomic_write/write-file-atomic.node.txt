
                     
   WRITE-FILE-ATOMIC  
                     



ALTERNATIVES ==>                  #  - write-file-atomic (preferred):
                                  #     - most features
                                  #     - sibling 'FILE.{PROCESS.pid}.{THREAD.id}.{COUNTER}'
                                  #     - handles process exit
                                  #  - write-files-atomic
                                  #     - can specify several files that must be atomic together as a group
                                  #     - use temporary directory
                                  #     - handles process exit
                                  #     - not maintained
                                  #  - fast-write-atomic:
                                  #     - not high profile
                                  #     - fastest
                                  #     - sibling 'FILE.{PROCESS.pid}.{COUNTER}'
                                  #  - fs-write-stream-atomic: not maintained

GOAL ==>                          #When writing a file, if write throws or if process exits, file will be partial, i.e. corrupted.
                                  #Instead write to a temporary file, then move at the end.

VERSION ==>                       #4.0.1

WRITE-FILE-ATOMIC                 #Write file atomically:
 (PATH_STR|BUFFER|URL,            #  - use sibling temporary file 'PATH.HASH' of HASH(PATH + PROCESS.pid + WORKER_THREADS.threadId + COUNTER)
 STR|BUFFER|TYPED_ARR[, OPTS])    #  - remove it once written or on process exit (using SIGNAL-EXIT, see its doc)
 ->PROMISE                        #OPTS:
                                  #  - encoding|mode: like FS.writeFile()
                                  #  - chown.uid|gid NUM
                                  #  - tmpfileCreated('PATH.HASH')->PROMISE: callback before temporary file is removed
                                  #  - fsync BOOL (def: true): call fsync after the write
WRITE-FILE-ATOMIC.sync(...)       #
