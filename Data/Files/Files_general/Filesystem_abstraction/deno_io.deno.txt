
           
   DENO_IO  
           



VERSION ==>                       #See deno doc
                                  #Browser compatible


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:             MAIN              :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


TextDecoder|Encoder[Stream]       #Like DOM

CLOSER|READER|WRITER|SEEKER       #Abstract class to implement
std/types.d.ts                    #Has Closer|Reader[Sync]|Writer[Sync] types

CLOSER.close()                    #Close underlying RESOURCE

READER.read(UINT8ARR)->>NUM|null  #Reads available bytes from underlying RESOURCE and writes them into UINT8ARR.
                                  #Usually does not wait i.e. might read:
                                  #  - 0 bytes
                                  #  - less than UINT8ARR.length
                                  #     - rest of UINT8ARR might be used for internal purposes though
                                  #Only read up to UINT8ARR.length bytes.
                                  #Returns NUM of bytes read, or null if EOF

WRITER.write(UINT8ARR)->>NUM      #Reads all of UINT8ARR and writes it to underlying RESOURCE.
                                  #Returns UINT8ARR.length

SEEKER.seek(NUM|BIGINT, ENUM)     #Changes position used by READER.read() and WRITER.write()
 ->>NUM2                          #NUM|BIGINT is relative offset in bytes
                                  #ENUM is reference position among Deno.Seeker.Start|Current|End
                                  #Before-start position is error. After-end position is implementation-dependent.
                                  #NUM2 is new position.
