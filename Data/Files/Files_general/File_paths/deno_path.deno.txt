
             
   DENO_PATH  
             



VERSION ==>                       #Part of Deno
                                  #Browser compatible

PATH vs URL ==>                   #URLs and 'file://...' are cross-OS
                                  #Unlike Node, PATHs are always OS-specific, i.e. should avoid

std/path/mod.ts                   #
normalize('PATH')->'PATH'
join('PATH',...)->'PATH2'
resolve('PATH',...)->'PATH2'
relative('PATH', 'PATH2')->'PATH3'
isAbsolute('PATH')->BOOL

std/path/dirname.ts
dirname('PATH')->'DIR'            #Like Node

std/path/basename.ts
basename('PATH'[, '.EXT'])
 ->'FILENAME'                     #Like Node


std/path/extname.ts
extname('PATH')->'.EXT'           #Like Node

parse('PATH')->PATH_OBJ

std/path/format.ts
format(PATH_OBJ)->'PATH'          #Like Node

toNamespacedPath('PATH')->'PATH'  #Like Node

SEP                               #Like Node sep
SEP_PATTERN                       #/\/+/ (Unix) or /[\\/]+/ (Windows)
delimiter                         #Like Node

std/path/from_file_url.ts
fromFileUrl(URI|'URI')->'PATH'    #Like Node fileURLToPath()

toFileUrl('PATH')->URI            #Like Node pathToFileURL()

posix|win32.*                     #Like Node
                                  #Also for fromFileUrl|toFileUrl

std/path/glob.ts
normalizeGlob('GLOB'[, OPTS])
 ->'GLOB'
joinGlobs('GLOB'_ARR[, OPTS])
 ->'GLOB'                         #Like normalize|join(), but keep ** if OPTS.globstar true (def: false)
