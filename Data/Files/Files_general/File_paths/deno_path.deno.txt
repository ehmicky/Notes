
             
   DENO_PATH  
             



VERSION ==>                       #Part of Deno
                                  #Browser compatible

PATH vs URL ==>                   #URLs and 'file://...' are cross-OS
                                  #Unlike Node, PATHs are always OS-specific, i.e. should avoid

std/path/normalize.ts
normalize('PATH')->'PATH'         #Like Node

std/path/join.ts
join('PATH',...)->'PATH2'         #Like Node

std/path/resolve.ts
resolve('PATH',...)->'PATH2'      #Like Node

std/path/relative.ts
relative('PATH', 'PATH2')->'PATH3'#Like Node

std/path/is_absolute.ts
isAbsolute('PATH')->BOOL          #Like Node

std/path/dirname.ts
dirname('PATH')->'DIR'            #Like Node

std/path/basename.ts
basename('PATH'[, '.EXT'])
 ->'FILENAME'                     #Like Node

std/path/extname.ts
extname('PATH')->'.EXT'           #Like Node

std/path/parse.ts
parse('PATH')->PATH_OBJ           #Like Node

std/path/format.ts
format(PATH_OBJ)->'PATH'          #Like Node

std/path/to_namespaced_path.ts
toNamespacedPath('PATH')->'PATH'  #Like Node

std/path/separator.ts
SEP                               #Like Node sep
SEP_PATTERN                       #/\/+/ (Unix) or /[\\/]+/ (Windows)

std/path/mod.ts
delimiter                         #Like Node

std/path/from_file_url.ts
fromFileUrl(URI|'URI')->'PATH'    #Like Node fileURLToPath()

std/path/to_file_url.ts
toFileUrl('PATH')->URI            #Like Node pathToFileURL()

std/path/posix|win32.ts           #Like Node
posix|win32.*                     #Also for fromFileUrl|toFileUrl

std/path/glob.ts
normalizeGlob('GLOB'[, OPTS])
 ->'GLOB'
joinGlobs('GLOB'_ARR[, OPTS])
 ->'GLOB'                         #Like normalize|join(), but keep ** if OPTS.globstar true (def: false)
