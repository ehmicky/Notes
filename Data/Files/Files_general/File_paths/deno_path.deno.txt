
                                  ┏━━━━━━━━━━━━━━━┓
                                  ┃   DENO_PATH   ┃
                                  ┗━━━━━━━━━━━━━━━┛

VERSION ==>                       #Part of Deno
                                  #Browser compatible

PATH vs URL ==>                   #URLs and 'file://...' are cross-OS
                                  #Unlike Node, PATHs are always OS-specific, i.e. should avoid

@std/path/posix|windows/...       #Same as @std/path/... but for a specific OS

@std/path/[unstable-]normalize
normalize('PATH'|URL)->'PATH'     #Like Node
                                 !#Can pass URL

@std/path/[unstable-]join
join('PATH'|URL[, 'PATH...'])     #Like Node
 ->'PATH2'                       !#Can pass URL

@std/path/resolve
resolve('PATH',...)->'PATH2'      #Like Node

@std/path/relative
relative('PATH', 'PATH2')->'PATH3'#Like Node

@std/path/is-absolute
isAbsolute('PATH')->BOOL          #Like Node

@std/path/[unstable-]dirname
dirname('PATH'|URL)->'DIR'        #Like Node
                                 !#Can pass URL

@std/path/[unstable-]basename
basename('PATH'|URL[, '.EXT'])
 ->'FILENAME'                     #Like Node
                                 !#Can pass URL

@std/path/[unstable-]extname
extname('PATH'|URL)->'.EXT'       #Like Node
                                 !#Can pass URL

@std/path/parse
parse('PATH')->PATH_OBJ           #Like Node

@std/path/format
format(PATH_OBJ)->'PATH'          #Like Node

@std/path/to-namespaced-path
toNamespacedPath('PATH')->'PATH'  #Like Node

@std/path/constants.ts
SEPARATOR                         #Like Node sep
SEPARATOR_PATTERN                 #/\/+/ (Unix) or /[\\/]+/ (Windows)
DELIMITER                         #Like Node

@std/path/from-file-url
fromFileUrl(URI|'URI')->'PATH'    #Like Node fileURLToPath()

@std/path/to-file-url
toFileUrl('PATH')->URI            #Like Node pathToFileURL()

@std/path/normalize-glob
normalizeGlob('GLOB'[, O])     #Like normalize(), but has OPTS:
 ->'GLOB'                         #  - globstar true (def: false): keep **

@std/path/join-globs
joinGlobs('GLOB'_ARR[, O])
 ->'GLOB'                         #Like join(). Same O as normalizeGlob()
