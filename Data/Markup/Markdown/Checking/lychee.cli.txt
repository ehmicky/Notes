
          
   LYCHEE  
          



VERSION ==>                       #0.15.1

INSTALLATION ==>                  #Written in Rust, very fast
                                  #Rust dependency, Docker, OS package, binaries in GitHub release, GitHub action

lychee SRC...                     #Check for dead links
                                  #SRC is DIR|FILE|URL
                                  #Allowed formats: Markdown, HTML, rst, text
                                  #Can use globbing
                                  #Can be - for stdin
                                  #Can use -- to separate CLI flags with arguments

EXIT CODE ==>                     #0 (success), 2 (link check), 1 (CLI flag error or bug), 3 (config file error)

--config|-c PATH                  #Def: ./lychee.toml
                                  #Use snake_case
                                  #Use ARR: --accept, --scheme, --headers, --remap, --include, --exclude, --exclude-path

--format|-f STR                   #Output format among:
                                  #  - compact (def): CLI output, only show success|fail|ignored, not timeouts|redirected|unknown
                                  #  - detailed: CLI output
                                  #  - markdown
                                  #  - json
--output|-o FILE                  #Def: stdout
--no-progress|-n                  #No progress bar
                                  #All --format are interactive by default
--quiet|-q                        #Can be specific multiple times
--verbose|-v                      #Can be specific multiple times

--dump                            #Dry run. Only print links
--dump-inputs                     #Dry run. Only print SRCs

--include-fragments               #Check URL fragments
                                  #Otherwise, not checked
--include-verbatim                #Include ``` blocks
                                  #Otherwise, not checked
--include-mail                    #Check email addresses
                                  #Otherwise, not checked

--include REGEXP                  #Allow links
--exclude REGEXP                  #Deny links
.lycheeignore                     #Same as --exclude but as a file: one REGEXP per line
--remap 'REGEXP REGEXP2'          #Remap links
                                  #Can use (...) and $NUM, or (?P<NAME>...) and $NAME

--exclude-path FILE|DIR[_GLOB]    #Deny SRCs
--skip-missing                    #Unless set, fails on missing SRC
--glob-ignore-case                #Case-insensitive globbing

--scheme|-s SCHEME                #Allowed protocols, among http, https, file, mailto
                                  #Def: all
--require-https                   #Only allow HTTPS, not HTTP
--offline                         #Only local requests
--exclude-private                 #Deny private IPs
--exclude-link-local              #Deny link-local IPs
--exclude-loopback                #Deny loopback|localhost IPs
--exclude-all-private|-E          #Same as --exclude-private --exclude-link-local --exclude-loopback
--insecure|-i                     #Allow invalid TLS requests
--base|-b DIR|URL                 #Base DIR|URL for relative links

--suggest                         #Suggest replacements for broken links
--archive STR                     #Website used with --suggest. Only possible value: wayback

--method|-X                       #HTTP method
                                  #Def: 'get'
                                  #E.g. 'head'
--header VAR=VAL                  #HTTP headers
--user-agent|-u STR               #Def: 'lychee/X.Y.Z'
--cookie-jar FILE                 #Store and re-use cookies
--github-token GITHUB_TOKEN       #GitHub API token to avoid rate limiting
                                  #Def: ENVVAR GITHUB_TOKEN
--basic-auth
 'URL USERNAME:PASSWORD'          #HTTP basic authentication

HTTP FEATURES ==>                 #Chunked encoding, gzip

--accept|-a STR                   #Successful HTTP status codes
                                  #STR is [START_NUM..]END_NUM,...
                                  #Def: 100..103,200..299

--threads|-T NUM                  #NUM of threads at once
                                  #Def: NUM of CPU cores
--max-concurrency NUM             #Max NUM of requests at once
                                  #Def: 128
--timeout|-t NUM                  #Request timeout (in secs)
                                  #Def: 20
--max-redirects|-m NUM            #Max NUM of redirects per request
                                  #Def: 5
--max-retries NUM                 #Max NUM of retries per request
                                  #Def: 3
--retry-wait-time|-r NUM          #Wait duration (in secs) between retries
                                  #Def: 1

--cache                           #HTTP cache at ./.lycheecache
                                  #With GitHub action, should combine with actions/cache and INPUTS:
                                  #  - path '.lycheecache'
                                  #  - key cache-lychee-${{github.sha}}
                                  #  - restore-keys cache-lychee-
                                  #With Docker, should `touch .lycheecache` then use `--volume DIR/.lycheecache:/.lycheecache`
--max-cache-age STR               #Ignore and delete cache older than STR
                                  #Def: '1d'

lycheeverse/lychee-action@v1      #GitHub action
                                  #Linux x86_64 only
                                  #Downloads binary from GitHub release, to ~/.local/bin/lychee, and add ~/.local/bin to GITHUB_PATH
INPUTS.lycheeVersion              #STR (def: latest)
INPUTS.args                       #STR. CLI args
                                  #Def: "--verbose --no-progress './**/*.md' './**/*.html' './**/*.rst'"
INPUTS.token                      #STR (def: github.token). --github-token
INPUTS.format                     #STR (def: 'markdown'). --format
INPUTS.output                     #STR (def: 'lychee/out.md'). --output
INPUTS.debug                      #BOOL (def: false). Bash set -x
INPUTS.fail                       #BOOL (def: false). Fail CI on error
INPUTS.failIfEmpty                #BOOL (def: true). Fail if no SRCs
INPUTS.jobSummary                 #BOOL (def: true). Show in GitHub action summary
OUTPUTS.exit_code                 #NUM
