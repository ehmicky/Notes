
                                  ┏━━━━━━━━━━━━━┓
                                  ┃   DENOIFY   ┃
                                  ┗━━━━━━━━━━━━━┛

VERSION ==>                       #1.6.17

denoify                           #Transform Node to Deno code

IMPORTS ==>                       #Are transformed:
                                  #  - omitted index.js or file extensions -> added
                                  #  - core Node -> node:* (polyfills)
                                  #  - 'NPM_MODULE' -> 'npm:NPM_MODULE@VERSION' or deno.land (if available)
                                  #  - others: GitHub
                                  #     - using package.json repository field

TRANSFORMS ==>                    #Also transforms some global variables:
                                  #  - process.env -> Deno.env

*.deno.ts                         #Copied to *.ts during transpilation
                                  #Should be ignored from tsconfig.json

// @denoify-ignore                #Ignore this file
// @denoify-line-ignore           #Ignore next line, i.e. do not include it

ENVVAR DRY_RUN=1                  #

LIMITATIONS ==>                   #Only for TypeScript+ESM source files
                                  #Ignore dynamic imports|reads

CONFIG                            #At ROOT/denoify.config.json|js

--project|-p                      #Root 'DIR', including package.json and tsconfig.json
--src                             #'DIR' of source files (def: src|lib)
--index|-i
CONFIG.index                      #'PATH' to main file (def: package.json main)
--out|-o
CONFIG.out                        #'DIR' of output (def: deno_DIR, with DIR being TSCONF.outDir)

CONFIG.includes                   #STR|INCLUDES_ARR (def: ['README.md', 'LICENSE']). Additional files to copy
INCLUDES.src                      #'GLOB' in source
INCLUDES.destDir                  #'DIR' in output
INCLUDES.destBasename             #'FILENAME' in output

tsconfig.json                     #TSCONF.exclude is used to exclude files from copying

CONFIG.ports.MODULE               #'URL' or 'GITHUB_USER/REPO' to replace with
CONFIG.replacer                   #'PATH' to a file to customize imports transformation
                                  #  - not documented yet
                                  #  - there is a makeThisModuleAnExecutableReplacer() module to simplify writing those
                                  #Built-in ones for react[-dom], rxjs, graphql, fast-xml-parser, ipaddr.js
                                  #  - e.g. to use URLs on other CDNs like jspm.io
