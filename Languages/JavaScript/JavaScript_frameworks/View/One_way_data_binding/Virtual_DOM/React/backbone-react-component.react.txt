
                                  ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
                                  ┃   BACKBONE-REACT-COMPONENT   ┃
                                  ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛

VERSION ==>                       #1.0.0
                                  #Update React component state on Backbone MODEL|COLL changes, and define few helpers.

BACKBONEREACT                     #React component mixin

BACKBONEREACT.on(RCOMP, OBJ)      #Same as using mixin but:
                                  #  - must manually do when mounting then do BACKBONEREACT.off(RCOMP) on unmounting
                                  #  - do not use props but OBJ.models|collections[.VAR] MODEL|COLL 
                                  #    (must not define if RCOMP.overrideModel|Collection() defined)
BACKBONEREACT.onModel|Collection
(RCOMP, VAL)                      #Same as BACKBONEREACT.on(RCOMP, { models|collections VAL })

                                  ┌──────────────────────┐
                                  │   MODEL COLLECTION   │
                                  └──────────────────────┘

RCOMP.state.model|collection|VAR  #MODEL.attributes[_ARR] based on:
                                  #  - RCOMP.props.model|collection[.VAR] MODEL|COLL
                                  #  - or (if defined) RCOMP.overrideModel|Collection()->MODEL|COLL
                                  #Updated:
                                  #  - when prop changed, i.e. on componentWillReceiveProps, with !== reference comparison
                                  #  - on MODEL change, COLL change|update|reset|sort
RCOMP.getModel|Collection()       #Current|parent MODEL|COLL

                                  ┌─────────────┐
                                  │   HELPERS   │
                                  └─────────────┘

AJAX LISTENERS ==>                #The following members listen to request|sync|error|invalid MODEL|COLL events 
                                  #(unless Backbone OBJ.silent true)
RCOMP.isRequesting                #BOOL: ongoing AJAX request
RCOMP.hasError                    #BOOL: if last request failed
RCOMP.error                       #ERROR: if last request failed
RCOMP.isInvalid                   #BOOL: reset at each request

RCOMP.$
RCOMP.el|$el                      #Like Backbone
