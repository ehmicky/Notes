
                                  ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
                                  ┃   BACKBONE.COLLECTIONSUBSET   ┃
                                  ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛

VERSION ==>                       #0.1.2. Not maintained anymore.

new Backbone.CollectionSubset(OBJ)#Returns COLLSUBSET, i.e. a set of two COLLs:
                                  #  - COLLSUBSET|OBJ.parent COLL
                                  #  - COLLSUBSET|OBJ.child COLL2 (def: new COLL_CTOR(), with same url|model as COLL):
                                  #     - copy of COLL, but filtered with OBJ.filter(MODEL)->BOOL (true to keep)
                                  #     - can set COLL2.model (after construction) with OBJ.model MODEL
                                  #     - COLL2.filterer COLLSUBSET, COLL2.superset COLL
                                  #     - can be a COLLSUBSET2, creating a tree
                                  #Syncing between COLL and COLL2:
                                  #  - at construction, unless OBJ.refresh false
                                  #  - automatic:
                                  #     - when MODEL added|removed|reset
                                  #     - when MODEL changed, unless OBJ.triggers "VAR ..." defined, and not changing any of
                                  #       MODEL.VAR (to improve performance only)
                                  #  - manually with COLLSUBSET.refresh()
                                  #Exception: removing a MODEL in COLL2 does not remove it in COLL, so MODEL must be removed 
                                  #on COLL.
new COLL.subcollection(OBJ)       #Returns new Backbone.CollectionSubset({ parent: COLL }).child
COLLSUBSET.dispose()              #Destroy (but does not destroy COLL[2])

COLLSUBSET.setParent(COLL)        #
COLLSUBSET.setChild(COLL2)        #
COLLSUBSET.setFilter(FUNC)        #
