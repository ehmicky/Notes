
           
   CSSLINT  
           



ALTERNATIVES ==>              #See stylelint
                              #Rules that should prefer another linter are indicated by:
                             C#  - csslint
                             T#  - stylelint
                             S#  - scss-lint

VERSION ==>                   #0.10.0 (2016-03-04)
                              #Lints CSS for errors


CONFIG ==>                    #Can be:
                              #  - ./.csslintrc:
                              #     - CLI options
                              #     - --VAR, one per line
                              #  - /* csslint RULE: BOOL[,RULE: BOOL] */ (true for error, false for ignore)
                              #  - /* csslint allow: RULE ... */
                              #  - /* csslint ignore:start */ to /* csslint ignore:end */
                              #  - csslint --errors|warnings|ignore=RULE,...

csslint FILE|DIR...           #CSS linting
                              #Exit code 1 if errors, 0 if warnings or nothing. Def: warnings all.
--exclude-list=FILE|DIR,...   #
--format=STR                  #Reporter, among: text (def), compact, lint-xml, csslint-xml, checkstyle-xml, junit-xml
--quiet                       #
--list-rules                  #


CSSLINT                       #As Node module or browser script
                              #RULE_OBJ is {'RULE': RULE ...}

CSSLINT.verify                #Returns OBJ: messages OBJ_ARR:
('CSS'[, RULE_OBJ])           #  - type 'error|warning'
                              #  - line|col NUM
                              #  - message STR
                              #  - evidence 'CSS'
                              #  - rule RULE

CSSLINT.addRule(RULE)         #RULE:
                              #  - id 'RULE'
                              #  - name|desc STR
                              #  - url 'URL'
                              #  - browsers STR, e.g. 'All' or 'IE6'
                              #  - init(PARSERLIB, REPORTER)
                              #     - PARSERLIB: see doc for parser-lib
                              #     - REPORTER: info|warn|error(STR, LINE_NUM, COL_NUM, RULE)
CSSLINT.clearRules()          #
CSSLINT.getRules()->RULE_ARR  #
CSSLINT.getRuleset()->RULE_OBJ#

CSSLINT.addFormatter(FORMATER)#FORMATTER (must inherit from CSSLINT.Reporter): id 'FORMATTER'
CSSLINT.getFormatter
('FORMATTER')->FORMATTER      #
CSSLINT.hasFormat('FORMATTER')#

                                  ┌─────────────┐
                                  │   PLUGINS   │
                                  └─────────────┘

GULP-CSSLINT([OBJ|FILE])      #Fills in VINYL.csslint:
                              #  - success BOOL: if errors or warnings
                              #  - errorCount NUM: warnings or errors
                              #  - results OBJ_ARR: file STR, error OBJ
                              #  - opt OBJ
                              #OBJ|FILE are configuration
                              #Version 0.1.5
GULP-CSSLINT.reporter
 (FUNC(VINYL))                #Only fires FUNC

                                  ┌────────────┐
                                  │   ERRORS   │
                                  └────────────┘

known-properties             S#CSS property does not exist
empty-rules                  T#Empty CSS rule
duplicate-properties         T#Same property in one CSS rule

box-model                     #width|height used together with border* or padding* and no box-sizing
display-property-grouping     #Any of:
                              #  - display: inline with width|height
                              #  - display: inline*|table-* with float
                              #  - display: inline|table-* with margin*
                              #  - display: block with vertical-align

                                  ┌──────────────────┐
                                  │   BAD PRACTICE   │
                                  └──────────────────┘

universal-selector           T#*
ids                          T# #ID
overqualified-elements       S#TAG.CLASS, unless TAG2.CLASS also exist
qualified-headings            #h1-h6 with another CSS selector
unique-headings               #same h1-h6 selector across rules, unless with different selectors following it

import                        #@import
text-indent                   #text-indent: -NUM
outline-none                  #outline: none

important                    T#!important

                                  ┌────────────┐
                                  │   MINIFY   │
                                  └────────────┘

zero-units                   T#unitless 0, for LENP
duplicate-background-images   #2 rules using background[-image] with same URL
shorthand                    T#Use shorthand properties if all properties used

                                  ┌─────────────────┐
                                  │   PERFORMANCE   │
                                  └─────────────────┘

regex-selectors              T#[ATTR~=VAL], [ATTR|=VAL], [ATTR^=VAL], [ATTR$=VAL], [ATTR*=VAL]
                             T#But [ATTR] and [ATTR=VAL] are ok
unqualified-attributes       T#[ATTR] or [ATTR=VAL] followed by no other selector

font-faces                    #More than 5 font-face

                                  ┌────────────────┐
                                  │   COMPLEXITY   │
                                  └────────────────┘

floats                        #More than 10 float (prefer CSS grid)
font-sizes                    #More than 10 font-size

                                  ┌───────────────────┐
                                  │   COMPATIBILITY   │
                                  └───────────────────┘

compatible-vendor-prefixes   T#Use all browser extensions with any property that requires it
vendor-prefix                T#Use non-browser extensions after browser extensions.
gradients                    T#Use all browser extensions with gradient()

IE<=9 ==>                     #
import-ie-limit               #Max 31 @import

IE<=8 ==>                     #
bulletproof-font-face         #@font-face { src: url(URL) }, first URL must append a dummy ?#iefix
fallback-colors               #If using rgba(), hsl() or hsla(), use fallback rgb(), #NNN or color name

IE<=7 ==>                     #
non-link-hover                #With DOCTYPE strict, :hover only on <a>
box-sizing                    #box-sizing
star-property-hack            #*VAR: VAL (make it work only on IE<=7)

IE<=6 ==>                     #
adjoining-class               #.CLASS.CLASS2
underscore-property-hack      #_VAR: VAL (make it work only on IE<=6)
