
                     
   TYPESCRIPT_ESLINT  
                     



VERSION ==>                       #5.45.1


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:            PARSING            :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


@typescript-eslint/eslint-plugin  #ESLint plugin to lint TypeScript

CONF.parser                       #Must be '@typescript-eslint/parser' (see its doc)
CONF.parserOptions                #@typescript-eslint/parser OPTS (see its doc)
                                  #Important ones:
                                  #  - project, tsconfigRootDir: needed for type information
                                  #  - sourceType, ecmaVersion, ecmaFeatures: like ESLint default parser

typescript                        #Must be installed


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:         CUSTOM PLUGIN         :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


@typescript-eslint/utils          #Utilities to write plugins
                                  #Not documented yet


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:            TSLINT             :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


TSLint                            #Previous form of @typescript-eslint, which was a fork of ESLint instead.
                                  #Deprecated.
@typescript-eslint/
 eslint-plugin-tslint             #Helps migrating from TSLint


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:       RECOMMENDED RULES       :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


plugin:@typescript-eslint/base    #Only:
                                  #  - plugins ['@typescript-eslint']
                                  #  - parser '@typescript-eslint/parser'
                                  #  - parserOptions.sourceType 'module'
plugin:@typescript-eslint/        #ESLint (not @typescript-eslint) rules that make sense when using TypeScript
 eslint-recommended               #  - disabled because already handled by TypeScript
                                  #  - enabled because provides better typing (e.g. `prefer-const`)
                                  #Inherits @typescript-eslint/base
plugin:@typescript-eslint/        #Sets of recommended rules.
 recommended                      #Inherits @typescript-eslint/base + eslint-recommended
plugin:@typescript-eslint/
 recommended-requiring-type-      #Sets of recommended rules that require CONF.parserOptions.project
 checking                         #Inherits @typescript-eslint/base + eslint-recommended
plugin:@typescript-eslint/strict  #Sets of stricter recommended rules.
                                  #Inherits @typescript-eslint/base + eslint-recommended
plugin:@typescript-eslint/all     #All rules. Not recommended since some conflict with each other.


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:          EXTENSIONS           :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


EXTENSION RULES ==>               #Same as core ESLint rules, but fixed to work with TypeScript.
                                  #The related core ESLint rules should be disabled.

brace-style
comma-spacing
default-param-last
func-call-spacing
indent
init-declarations
keyword-spacing
no-array-constructor
no-dupe-class-members
no-duplicate-imports
no-extra-parens
no-extra-semi
no-implied-eval
no-invalid-this
no-loop-func
no-loss-of-precision
no-unused-expressions
no-unused-vars
no-useless-constructor
object-curly-spacing
quotes
require-await
semi
space-before-blocks
space-before-function-paren
space-infix-ops                   #

comma-dangle [STR] [OBJ]          #Adds OBJ:
                                  #  - enums|generics|tuples STR: same but only for those
dot-notation [OBJ]                #Adds OBJ:
                                  #  - allowIndexSignaturePropertyAccess BOOL (def: false):
                                  #     - allows OBJ['VAR'] if index signature
                                  #     - always true if TSCONF.noPropertyAccessFromIndexSignature true
                                  #  - allowProtected|PrivateClassPropertyAccess BOOL (def: false):
                                  #     - allows OBJ['VAR'] if protected|private class field
lines-between-class-members       #Adds OBJ:
 [STR] [OBJ]                      #  - exceptAfterOverload BOOL (def: true): ignore overloaded methods
no-empty-function [OBJ]           #Adds OBJ.allow: 'private|protected-constructors', 'decoratedFunctions', 'overrideMethods'
no-magic-numbers [OBJ]            #Adds OBJ:
                                  #  - ignoreEnums BOOL (def: false)
                                  #  - ignoreNumericLiteralTypes BOOL (def: false)
                                  #  - ignoreReadonlyClassProperties BOOL (def: false)
                                  #  - ignoreTypeIndexes BOOL (def: false): ignore TYPE[NUM]
no-redeclare                      #
no-restricted-imports             #
no-shadow                         #
no-throw-literal                  #
no-use-before-define              #
padding-line-between-statements   #
return-await                      #
