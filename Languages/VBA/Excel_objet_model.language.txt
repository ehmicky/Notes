
                                  ┏━━━━━━━━━━━━━━━━━━━━━━━━┓
                                  ┃   EXCEL OBJECT MODEL   ┃
                                  ┗━━━━━━━━━━━━━━━━━━━━━━━━┛

EXTENSIONS ==>          # .xlsx sans macro, .xlsm si macro (icone avec point d'exclamation)

MODULES ==>             #Object modules sont Worksheets et Charts.
                        #Il y a un ThisWorkbook module aussi.

DEFAULT ==>             #La classe par défaut est la WORKSHEET actuelle (ou ses parents)

MEMBRES COMMUNS ==>     #
CLASS.Application       #Renvoie l'APPLICATION parente
CLASS.Parent            #Renvoie CLASS parente
CLASS.Creator           #Constructor ??

COLLECTIONS ==>         #Souvent sous la forme CLASSs.
                        #Membres un peu différent de COLLECTION normale :
COLLECTION.Add([BEFORE,
AFTER,COUNT,TYPE])      #Création d'élément vide uniquement.
COLLECTION.Delete       #Supprime dernier élément uniquement. Pas de COLLECTION.Remove

Application             #Le programme lancé, top-level classe (implicite souvent dans ce qui suit)

WORKSHEETFUNCTION.FUNC  #Permet d'utiliser ensemble des functions de Formulas

Workbook                #Classeur Excel. Contient :
                        #  - des WORKSHEET
                        #  - des Controls ActiveX (non-ActiveX font partie de la WORKSHEET)
Workbooks               #

Worksheet               #Feuille Excel
                        #Des objets aux noms des WORKSHEET sont aussi dispo
Worksheets              #
WORKSHEET.Range         #Renvoie RANGE :
(STR[,STR2])            #  - STR : "A1[:B8]..." ou "A:A", "1:1", etc.
                        #  - Si STR2, STR définit coin supérieur gauche et STR2 coin inférieur droit d'un seul RANGE
WORKSHEET.Cells
(UINT1,UINT2)           #Pareil, mais avec indices en nombre (rangée d'abord)
WORKSHEET.Rows(UINT)    #RANGE
WORKSHEET.Columns(UINT) #RANGE
WORKSHEET.Activate()

ActiveSheet()           #Renvoie la WORKSHEET active

Range                   #Range de cellules.
                        #Si cellule seule, RANGE est implicitement converti en ERROR < STRING < DOUBLE.
                        #Sinon, en VARIANTE_ARRAY.
RANGE.Value             #Equivaut à conversion implicite de RANGE.
RANGE.Value2            #Quasiment comme RANGE.Value
RANGE.Text              #Valeur STR quand Range d'une seule cellule, NULL sinon.
RANGE.Select()          #Sélection
RANGE.Cells(ARGS)
RANGE.Range(ARGS)       #Comme WORKSHEET, mais à partir seulement de RANGE (position relative)
RANGE.Row
RANGE.Column

ActiveCell()            #Renvoie le RANGE de la cellule active

Selection()             #Renvoie l'OBJET sélectionné (par exemple un RANGE)
OBJET.Copy              #Fonction de nombreuses classes (Worksheet,Range, ListBox, ComboBox), effectuant une copie sur le
                        #presse-capier de l'objet
OBJET.Paste             #Fonction de nombreuses classes (Worksheet, ListBox, ComboBox), effectuant le collage sur le
                        #presse-capier de l'objet
OBJET.Clear             #Fonction de nombreuses classes (Range, ListBox, ComboBox), clear
                        #Parfois aussi :
                        #  - ClearContents (sans le formatting) (classes Range)
                        #  - ClearFormatting (seulement le formatting) (classes Range)

CONTROLS ACTIVE-X ==>   #Voir leur VAR avec (Name) dans Properties (clic droit ou fenêtre dockable)
                        #Ils sont liés à une WORKSHEET, contrairement aux modules. Il faut donc faire WORKSHEET.CONTROL
                        #Pour les initialiser, le faire dans handler WorkBook_Open()
                        #Controls ont des propriétés dans la propriété window, mais je ne comprends pas comment cela
                        #fonctionne d'un point de vue OO
TextBox
TEXTBOX.Value           #VARIANT
TEXTBOX.Text            #STR

ListBox
LISTBOX.AddItem
(VARIANTE[,UINT])       #Rajoute un élément, à l'index UINT (déf: fin)

ComboBox                #Eléments comme ListBox : AddItem(), Value, Text

CheckBox
CHECKBOX.Value          #Si CHECKBOX est checked
CHECKBOX.Enabled        #Si CHECKBOX est locked

OptionButton            #Radio Bouton. Elements comme CheckBox : Value, Enabled

USERFORM ==>            #Il s'agit d'une pop-up ne contenant que des controls.
                        #Créer via clic droit -> insert -> user form
                        #Initialiser avec event Initialize. Clore les Cancel/OK, etc. buttons un Unload(Me)
UserForm.Show           #Affiche la pop-up
Unload(USERFORM)        #Enlève une pop-up.

EVENT HANDLER ==>       #Définir private Sub CLASSE_EVENT
                        #Events possibles :
                        #  - WorkBook : Open, BeforeClose
                        #  - CheckBox : Click
                        #  - UserForm : Initialize
