
                                  ┏━━━━━━━━━━━━━━┓
                                  ┃   STDARG.H   ┃
                                  ┗━━━━━━━━━━━━━━┛

ELLIPSES ==>            #Les va_list sont appelées "ellipses". Les ellipses sont
                        #à éviter car elles forcent à deviner :
                        #  - le type des arguments
                        #  - leur nombre
                        #Préférer d'autres mécanismes

va_list                 #Type utilisé pour enregistré une liste variable
                        #d'arguments. Peut être de différente nature en fonction
                        #de l'implémentation

FONC_VAR(VAR, [[VAR, ]  #Il est possible d'avoir une liste variable d'arguments
[..., ]]...)            #en ajoutant trois points de suspension à la place d'un
                        #arguments. Il est possible d'en définir plusieurs. Il
                        #faut utiliser va_start, va_arg et va_end pour pouvoir
                        #la manipuler

va_start(VA_LIST_VAR,   #Affecte les arguments se trouvant là où les trois
VAR1)                   #points de suspension se trouvaient, à condition que ces
                        #derniers se trouvent après l'argument VAR1 dans la 
                        #fonction), à VA_LIST_VAR (qui doit être déclarée avant)
                        #Les arguments passés ne doivent pas être une register
                        #VAR, un array statique ou pointeur d'array statique, ou
                        #un pointeur de fonction
TYPE va_arg             #Supprime le prochain argument de VA_LIST_VAR, en
(VA_LIST_VAR, TYPE)     #considérant que cet argument est de type TYPE
                    ----| et retourne cet argument (en général vers le VAR qui
                        | précède ... dans la fonction)
va_end(VA_LIST_VAR)     #Clot VA_LIST_VAR. Doit être fait sur toute VA_LIST_VAR
                        #ouverte et plus utilisée, avant perte de portée
va_copy(VA_LIST_VAR1,   #
VA_LIST_VAR2)           #Copie VA_LIST_VAR2 vers VA_LIST_VAR1
