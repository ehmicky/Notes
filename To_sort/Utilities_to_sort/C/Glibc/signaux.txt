
                                  ┏━━━━━━━━━━━━━┓
                                  ┃   SIGNAUX   ┃
                                  ┗━━━━━━━━━━━━━┛

HEADER ==>              #<signal.h>
NSIG                    #Nombre de signaux définis sur le système courant (65
                        #pour moi)

HEADER ==>              #<signal.h>

MACROS A DEFINIR ==>    #_GNU_SOURCE

sighandler_t            #Type utilisé et renvoyé par signal() de FONC_ADR, de
                        #type VOID et prenant un seul argument INT

sys_siglist             #STR_ARR utilisée par strsignal(), contenant les STR
                        #décrivant chaque signal.

sysv_signal(INT_VAL,    #Comme signal(), sauf qu'un signal(INT_VAL, SIG_DFL)
VOID_FONC_ADR)          #est exécuté après l'handler VOID_FONC_ADR lors de la
                        #première occurence du signal INT_VAL. Préférer
                        #sigaction()

strsignal(INT_VAL)  ----# Renvoie une STR décrivant le signal INT_VAL. Ne pas
                        | modifier cette dernière, ou "Unknown signal" si
                        | numéro invalide.
HEADER ==>              #<signal.h>

MACROS A DEFINIR ==>    #_SVID_SOURCE, _BSD_SOURCE

psignal(INT_VAL, STR)   #Si STR n'est pas NULL, imprime STR suivi de ": "
                        #Imprime ensuite le résultat de strsignal(INT_VAL)
HEADER ==>              #<signal.h>

MACROS A DEFINIR ==>    #_SVID_SOURCE

gsignal(INT_VAL)        #Alias obsolète de raise()
ssignal(INT_VAL,        #
VOID_FONC_ADR)          #Alias obsolète de signal()
