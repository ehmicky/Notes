
                                  ┏━━━━━━━━━━━━━━━━━━━━━━━┓
                                  ┃   OPTIONS_PROGRAMME   ┃
                                  ┗━━━━━━━━━━━━━━━━━━━━━━━┛

HEADER ==>              #<unistd.h>
MACRO A DEFINIR ==>     #_POSIX_C_SOURCE 2

optind                  #Index du prochain argument à être analysé par getopt().
                        #Commence toujours à 1. Ne traite pas les options dans
                        #leur ordre dans la ligne de commande, mais en plaçant
                        #d'abord toutes les options avant les opérandes.
optarg                  #Argument d'une option avec argument si cette option
                        #vient d'être procédé par getopt(), sous forme de STR.
                        #NULL sinon.
opterr                  #Variable permettant de définir le silent ou verbose
                        #mode de getopt() (1 par défaut, mode verbose)
optopt                  #Variable enregistrant une option si elle est illégale
                        #et vient d'être analysée par getopt()

getopt(INT_VAL,         #  - INT_VAL est le nombre d'éléments de STR_ARR, c'est-
STR_ARR, STR)           #    à-dire le nombre d'arguments (y compris $0) à être 
                        #    analysés. Si trop grand, segfault. Utiliser argc.
                        #  - STR_ARR est la suite des arguments. Utiliser argv.
                        #  - STR est une string représentant l'ensemble des 
                        #    lettres pouvant être des options.
                        #    Chaque lettre peut être suivie de :
                        #      - ":" si un argument obligatoire doit suivre
                        #      - "::" si un argument optionnel peut suivre 
                        #        (aucun whitespace ne doit alors le séparer de 
                        #        l'option)
                        #optind est incrémenté de 1
                        #Seule les short options sont possibles.
                        #Les options ne sont pas traitées dans leur ordre dans 
                        #la ligne de commande, mais dans leur ordre tel que 
                        #défini par optind. optind les traite cependant dans 
                        #leur ordre original si STR commence par "+", auquel 
                        #cas getopt renverra -1 dès la première opérande 
                        #rencontrée.
                        #main() doit être invoqué sous la forme main(int argc, 
                        #char **argv) pour utiliser ces derniers.
                    ----| Renvoie :
                        |  - si la prochaine option à l'index optind a été 
                        |    correctement parsée, cette option sous forme 
                        |    d'INT_VAL. Par ailleurs, si cette option devait 
                        |    être suivie d'un argument, optarg est affectée 
                        |    avec ce dernier. Sinon, optarg est NULL.
                        |  - si la prochaine option a mal été invoquée :
                        |     1) parce que l'option invoquée ne fait pas partie 
                        |        de STR
                        |     2) parce qu'elle existe, mais devait être suivie 
                        |        d'un argument, ce qui n'est pas le cas.
                        |    alors :
                        |      - Si le premier caractère de STR est ":" et 
                        |        qu'il s'agit du cas 2), alors ":" est renvoyé. 
                        |        Sinon, "?" est renvoyé.
                        |      - si opterr != 0, imprime un message d'erreur
                        |      - l'option problématique est affectée à optopt
                        |  - -1 si toutes les options ont été procédées.
                        | Faire donc une boucle while. Après, optind devrait 
                        | pointer le première
                        | opérande, ce qui permet de faire une deuxième boucle 
                        | pour traiter les
                        | opérandes.

EXEMPLE DE PROCESSION
DE GETOPT ==>           #Voici :

int opt, count;
opterr = 0;
while (( opt = getopt(argc, argv, ":a:b::d")) != -1 ) {
    switch (opt) {
        case 'a':
            printf("Option a avec argument %s\n", optarg);
            break;
        case 'b':
            printf("Option b");
            if ( optarg ) {
                printf(" avec argument %s\n", optarg);
            } else {
                puts("");
            }
            break;
        case 'd':
            printf("Option d\n");
            break;
        case '?':
            fprintf(stderr, "Option inconnue -%c\n", optopt);
            break;
        case ':':
            fprintf(stderr, "Argument requis pour l'option -%c\n", optopt);
            break;
        default:
            abort();
    }
}
for ( count = optind ; count < argc ; count++ )
    printf("Opérande %s\n", argv[count]);

A COMPLETER ==>
HEADER ==>              #<getopt.h>

MACROS A DEFINIR ==>    #_GNU_SOURCE

struct option           #

getopt_long(INT_VAL,    #
STR_ARR, STR,           #
STKT_OPTION_ADR,        #
INT_ADR)                #
