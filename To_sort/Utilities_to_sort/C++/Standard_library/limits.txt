
                                  ┏━━━━━━━━━━━━┓
                                  ┃   LIMITS   ┃
                                  ┗━━━━━━━━━━━━┛

HEADER ==>              #<limits>

numeric_limits <TYPE>   #Classe renfermant des static CLASSDT et CLASSFK 
                        #relatives aux limites de TYPE.
                        #Elle possèdes une spécialisation du template pour
                        #tous les types fondamentaux.
                        #Voici ses membres statiques :

numeric_limits<TYPE>::  
min()                   #Valeur minimale
numeric_limits<TYPE>::  
max()                   #Valeur maximale
numeric_limits<TYPE>::  #Nombre de chiffres binares dans la mantisse pour les 
digits                  #floats, et de chiffres tout court pour les autres.
numeric_limits<TYPE>::  
digits10                #Nombre de chiffres maximal sans perte de précision.

numeric_limits<TYPE>::  
radix                   #Base des nombres.

numeric_limits<TYPE>::  
is_signed               #Renvoie true si TYPE est signed.
numeric_limits<TYPE>::  
is_integer              #Renvoie true s'il s'agit d'un TOUINT
numeric_limits<TYPE>::  
is_exact                #Renvoie true si la représentation est exacte.
numeric_limits<TYPE>::  
is_iec559()             #Renvoie true si le TYPE adhère à IEEE-745
numeric_limits<TYPE>::  
is_bounded              #Renvoie true si les limites du type sont finies
numeric_limits<TYPE>::  #Renvoie true si le template a été spécialisé, ou false
is_specialized          #sinon.
numeric_limits<TYPE>::  
is_modulo               #Renvoie true s'il est possible de faire un %
numeric_limits<TYPE>::  #Renvoie true s'il est possible de faire trap sur le 
traps                   #type

numeric_limits<TYPE>::  
round_error()           #Maximum erreur d'arrondi
numeric_limits<TYPE>::  
round_style             #Arrondissement des nombres, de type FLOAT_ROUND_STYLE.
numeric_limits<TYPE>::  #Renvoie true si la tinyness est détectée avant 
tinyness_before         #l'arrondissement

numeric_limits<TYPE>::  
has_infinity            #Renvoie true si un infinity existe.
numeric_limits<TYPE>::  
infinity()              #Renvoie l'infinity du TYPE, s'il y en a.
numeric_limits<TYPE>::  
has_quiet_NaN           #Renvoie true si un quiet NaN existe.
numeric_limits<TYPE>::  
quiet_NaN()             #Renvoie le quiet NaN du TYPE, s'il y en a.
numeric_limits<TYPE>::  
has_signaling_NaN       #Renvoie true si un signaling NaN existe.
numeric_limits<TYPE>::  
signaling_NaN()         #Renvoie le signaling_NaN du TYPE, s'il y en a.

numeric_limits<TYPE>::  
epsilon()               #Valeur minimale sans être arrondi à 0.
numeric_limits<TYPE>::  
min_exponent10          #Valeur minimale (avec perte de précision) (en décimal)
numeric_limits<TYPE>::  
min_exponent            #Même chose pour les binaires
numeric_limits<TYPE>::  
max_exponent10          #Valeur minimale (avec perte de précision) (en décimal)
numeric_limits<TYPE>::  
max_exponent            #Même chose pour les binaires

numeric_limits<TYPE>::  #Renvoie l'absence ou non de dénormalisation sous forme
has_denorm              #de FLOAT_DENORM_STYLE.
numeric_limits<TYPE>::  
has_denorm_loss         #Renvoie true si la dénormalisation fait perdre de
                        #la précision.
numeric_limits<TYPE>::  
denorm_min()            #Plus petite valeur dénormalisée.

float_round_style       #Enum déterminant l'arrondissement :
                        #  - round_intermediate (-1) : indéterminé
                        #  - round_toward_zero (0) : vers 0
                        #  - round_to_nearest (1) : vers le plus proche.
                        #  - round_toward_infinity (2) : vers + infini
                        #  - round_toward_neg_infinity (3) : vers - infini
float_denorm_style      #Enum déterminant la dénormalisation (capacit à avoir un
                        #nombre variable de bits dans l'exponent) :
                        #  - denorm_indeterminate (-1) : ne peut pas être su
                        #    lors du compile-time
                        #  - denorm_absent (0) : absent
                        #  - denorm_present (1) : présent

VALEURS PAR DEFAUT  ==> #Voici un aperçu des valeurs que j'ai sur mon
                        #implémentations :

                          +-----------------+------------------+------+--------+
                          |min()            |max()             |digits|digits10|
+-------------------------+-----------------+------------------+------+--------+
|float                    |1.17549e-38      |3.40282e+38       |24    |6       |
|doubl                    |2.22507e-308     |1.79769e+308      |53    |15      |
|long double              |3.3621e-4932     |1.18973e+4932     |64    |18      |
|bool                     |0                |1                 |1     |0       |
|char                     |-128             |127               |7     |2       |
|unsigned char            |0                |255               |8     |2       |
|int/long/wchar_t         |-2,147,483,648   |2,147,483,647     |31    |9       |
|unsigned int/long/wchar_t|0                |4,294,967,295     |32    |9       |
|long                     |-9,223,372,036,8 |9,223,372,036,8   |63    |18      |
|                         |54,775,808       |54,775,807        |      |        |
|ulong                    |0                |18,446,744,073,7  |64    |19      |
|                         |                 |09,551,615        |      |        |
+-------------------------+-----------------+------------------+------+--------+

                +------------+-------------+
                |TOUINT      |TOUFLOAT     |  
+---------------+------------+-------------+
|is_integer     |true        |false        |                                    
|is_exact       |true        |false        |                                    
|is_iec559()    |false       |true         |                                    
|is_bounded     |true        |true         |                                    
|traps          |true        |false        |                                    
|round_style    |0           |1            |                                    
|round_error()  |0           |0.5          |     
|has_infinity   |false       |true         |                                    
|infinity()     |0           |inf          |                                    
|has_quiet_NaN  |false       |true         |                                    
|quiet_NaN()    |0           |nan          |                                    
|has_signaling  |            |             |         
|_NaN           |false       |true         |                                    
|signaling_NaN()|0           |nan          |                                    
|has_denorm     |false       |true         |                                    
+---------------+------------+-------------+
 
                +----------------+----------------+-------------+
                |SIGNED TOUINT   |UNSIGNED TOUINT |TOUFLOAT     |
+---------------+----------------+----------------+-------------+
|is_signed      |true            |false           |true         |               
+---------------+----------------+----------------+-------------+

                +------------+-------------------+
                |NON-DEFAULT |DEFAULT OU POINTEUR|
+---------------+------------+-------------------+
|is_specialized |true        |false              |                           
+---------------+------------+-------------------+

                +-----------------+-----------------+--------------+
                |TOUINT(SAUF BOOL)|TOUFLOAT         |BOOL          |
+---------------+-----------------+-----------------+--------------+
|is_modulo      |true             |false            |true          |          
+---------------+-----------------+-----------------+--------------+

                +------+
                |TOUS  |
+---------------+------+
|radix          |2     |
|has_denorm_loss|false |    
|tinyness_before|false |   
+---------------+------+

                +------------+------------+------------+-------------+
                |TOUINT      |float       |double      |long double  |
+---------------+------------+------------+------------+-------------+
|epsilon()      |0           |1.19209e-07 |2.22045e-16 |1.0842e-19   |          
|min_exponent   |0           |-125        |-1021       |-16381       |          
|min_exponent10 |0           |-37         |-307        |-4931        |          
|max_exponent   |0           |128         |1024        |16384        |         
|max_exponent10 |0           |38          |308         |4932         |         
|denorm_min()   |0           |1.4013e-45  |4.94066e-324|3.6452e-4951 |          
+---------------+------------+------------+------------+-------------+
