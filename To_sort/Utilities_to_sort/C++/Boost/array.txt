
                                  ┏━━━━━━━━━━━┓
                                  ┃   ARRAY   ┃
                                  ┗━━━━━━━━━━━┛

HEADER ==>              #<boost/array.hpp>

array <WVAR, SIZE_T_VAL>#Container list-like, mais :
                        #  - avec une taille fixe
                        #  - avec une conversion "vrai array" (ADR)-container
                        #    simplifiée.
                        #A les membres membres que std::list, sauf pas de :
                        #  - erase()
                        #  - clear()
                        #  - resize()
                        #  - insert()
                        #  - push_front()
                        #  - push_back()
                        #  - pop_front()
                        #  - pop_back()
                        #  - pas le même constructor
                        #Il rajoute cependant :
                        #  - template avec un deuxième argument, désignant sa
                        #    taille, fixe
                        #Permet d'avoir un container aussi léger qu'un built-in
                        #array, mais avec les avantages d'un container.
                        #Est serializable via boost::serialization.
                        #Ainsi que :

ARRAY = { { ... } }     #Seul constructor possible. Exemple :
                        #  - array <int, 3> = { { 2, 3, 1 } }
                        #Les derniers éléments peuvent être omis (ce sera le
                        #constructor par défaut pour ces éléments)

ARRAY.front()           #Renvoie une référence au premier élément.
ARRAY.back()            #Renvoie une référence au dernier élément.

ARRAY.data()            #Renvoie ARRAY sous forme de const WVAL_ADR
ARRAY.c_array()         #Renvoie ARRAY sous forme de WVAL_ADR

ARRAY.static_size       #Taille du container (read-only)
