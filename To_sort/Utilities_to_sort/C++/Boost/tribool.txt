
                                  ┏━━━━━━━━━━━━━┓
                                  ┃   TRIBOOL   ┃
                                  ┗━━━━━━━━━━━━━┛

HEADER ==>              #<boost/logic/tribool.hpp>
                        #<boost/logic/tribool_io.hpp> : << et indeterminate_name

IDEE ==>                #Donne une logique ternaire avec les valeurs true, false et indeterminate (parfois appelé maybe).
                        #ind. représente une valeur de vérité dont on ne connaît pas encore la valeur booléenne (true ou false)
                        #Souvent true == 1, false == 2, ind. == 0, mais pas ici.
                        #Du coup :
                        #  - ! ind., ind. && ind., ind. || ind. : ind.
                        #  - true && ind.  : pourrait être true ou false -> ind.
                        #  - false && ind. : forcément false
                        #  - true || ind.  : forcément true
                        #  - false || ind. : pourrait être true ou false -> ind.
                        #Soit :
                        #  ! x :
                        #    - true si false
                        #    - false si true
                        #    - ind. si ind.
                        #  x && y : 
                        #    - true si x et y sont true
                        #    - false si x ou y est false
                        #    - ind. sinon
                        #  x || y :
                        #    - true si x ou y est true
                        #    - false si x et y sont false
                        #    - ind. sinon
                        #  x == y, x != y : ind. si x ou y est ind.

tribool                 #Instantié avec un bool ou tribool.
                        #Peut être converti en bool : ind. sera converti en false, de sorte que :
                        #  - if ( x ) true
                        #    else if ( !x ) false
                        #    else ind.
                        #Les opérators !, &&, ||, == et != renvoient un TRIBOOL, non un BOOL.

indeterminate           #Tag servant à instantier un TRIBOOL avec ind.

indeterminate( TRIBOOL )#Equivaut à ( TRIBOOL == indeterminate )

BOOST_TRIBOOL_THIRD_    #
STATE( NOM )            #Fait que NOM devient un alias de boost::indeterminate

BASIC_OSTREAM << 
std::boolapha << TRIBOOL#Imprime "indeterminate" si TRIBOOL est ind.
BASIC_ISTREAM >>        #Marche aussi

logic::                 #FACET indiquant le nom d'indeterminate (VAL de l'instantiation), et son format (std::basic_string<T>)
indeterminate_name<T>   #Définit membres char_type et string_type, s'intantie avec une BASIC_STRING désignant le nom.
                        #Ne change cependant pas le comportement de BASIC_ISTREAM >>
                        #Ex : 
logic::get_default_     #
indeterminate_name()    #Renvoie le nom d'indeterminate sous forme de BASIC_STRING
