
                                  ┏━━━━━━━━━━━━━━━━━━━━━┓
                                  ┃   FIFO_UNAMEDPIPE   ┃
                                  ┗━━━━━━━━━━━━━━━━━━━━━┛

FIFO                    #Le terme FIFO utilisé comme type de fichier est en fait
UNAMED PIPE  ==>        #impropre et fait référence à une unamed pipe, par
                        #opposition aux anonimous pipes |
                        #Voici le fonctionnement typique, soit UNPIPEFILE 
                        #l'unamed pipe :
                        #  - Un SUBSHELL dont l'input est UNPIPEFILE attend
                        #    son input
                        #  - Une fois des octets outputés vers UNPIPEFILE,
                        #    ils sont directement redirigés vers l'input du
                        #    SUBSHELL en attente, qui n'attend alors plus, et
                        #    n'est plus lié à UNPIPEFILE
                        #ou bien :
                        #  - Un SUBSHELL dont l'output est UNPIPEFILE attend
                        #    que cette dernière soit l'input d'un autre SUBSHELL
                        #  - Une fois des octets inputés depuis UNPIPEFILE,
                        #    ils sont directement redirigés depuis l'output du
                        #    SUBSHELL en attente, qui n'attend alors plus, et
                        #    n'est plus liée à UNPIPEFILE
                        #Du point de vue de C :
                        #  - un process écrivant vers une named pipe n'attend
                        #    pas, mais laisses les octets écrits dans un buffer.
                        #  - un process lisant une named pipe attend que le
                        #    "buffer" de la named pipe se remplisse, plutôt que
                        #    de lire un EOF.
