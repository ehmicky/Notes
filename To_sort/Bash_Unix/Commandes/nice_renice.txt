
                                  ┏━━━━━━━━━━━━━━━━━┓
                                  ┃   NICE_RENICE   ┃
                                  ┗━━━━━━━━━━━━━━━━━┛

nice                    #Imprime la niceness du process courant.
nice COMMANDES          #Lance COMMANDES et invoque le syscall nice([PRIORITE])
                        #(PRIORITE est par défaut 10, et peut être négatif) au
                        #début du process.
                        #Comme la niceness est héritée, la niceness de COMMANDES
                        #devient donc celle du parent + PRIORITE.
                        #La niceness est toujours comprise dans l'intervalle
                        #-20 (meilleure priorité) à +19 (pire priorité).
                        #Elle désigne le fait que si trop de processes demandent
                        #le CPU, ceux avec une niceness plus faible auront plus
                        #souvent le CPU (utile par exemple pour les applications
                        #vidéo)
                        #Chaque user a une niceness par défaut, lors de son
                        #login.

-n NOMBRE               
--adjustment=NOMBRE     #PRIORITE devient NOMBRE.

renice PRIORITE ARGS    #La niceness des processes désignés par ARGS devient
                        #PRIORITE (qui n'est pas relative, contrairement à nice)
                        #ARGS est un ensemble de filtres -g, -p et -u, se
                        #combinant (et non s'excluant). Par défaut, s'il n'y a
                        #que des nombres sans option, -p est implicite.

-p NOMBRE
--pid NOMBRE            #Désigne tous les processes dont le PID est NOMBRE.
-g NOMBRE
--pgrp NOMBRE           #Désigne tous les processes dont le GID est NOMBRE.
-u USERNAME
--user USERNAME         #Désigne tous les processes détenus par USERNAME.

-n PRIORITE             #Permet de désigner clairement l'endroit où la priorité
--priority PRIORITE     #est spécifiée.
