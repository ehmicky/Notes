
                                  ┏━━━━━━━━━━┓
                                  ┃   READ   ┃
                                  ┗━━━━━━━━━━┛

read [VAR]...           #S'il s'agit du seul VAR :
                        #  - Lit fd0 et affecte à VAR les octets depuis l'offset
                        #    de fd0 jusqu'à DELIM (par défaut newline), sans ce
                        #    DELIM. Si VAR est précisé, supprime les leading
                        #    blanks.
                        #Sinon :
                        #  - Pour chaque VAR, lit fd0 et affecte à une VAR les
                        #    octets depuis l'offset de fd0 jusqu'à la prochaine
                        #    suite d'IFS et/ou DELIM, sans ces derniers.
                        #  - Si DELIM est rencontré, null est affecté à toutes
                        #    les VAR suivantes.
                        #  - Supprime les leading blanks pour la première VAR.
                        #
                        #Si VAR est omis, est remplacé par $REPLY : préférer
                        #cela car préserve les leading blanks.
while read ... done
< FILE
while read ... done     #Lira donc FILE ou l'output de COMMANDES, en divisant
< <(COMMANDES)          #par DELIM et en attribuant chaque ligne à un REPLY.

-p STRING               #Imprime STRING avant d'effectuer la lecture sur fd0

-s                      #l'utilisateur ne voit pas ce qu'il tape
-r                      #\ n'echappe plus rien (notamment les newlines)

-t NOMBRE               #le prompt s'interrompt apres n secondes. Bash 4 :
                        #NOMBRE peut être décimal

-d CHAR                 #DELIM devient CHAR. (Rappel : dans un prompt normal,
                        #le prompt s'interrompera lorsque DELIM est tapé)
-N NOMBRE               #Plutôt que d'utiliser DELIM, interrompt après NOMBRE
                        #caractères lus (Bash 4)
-n NOMBRE               #Même chose, mais si DELIM est rencontré avant que
                        #NOMBRE caractères soient lus, utilise DELIM

-a ARRAY                #Utilise ARRAY plutôt que VAR... La dimension de
                        #ARRAY est égal au nombre de VAR... produit (avec la
                        #division par IFS comme décrit ci-dessus) à moins
                        #qu'ARRAY existait déjà avec une dimension supérieure

-u NOMBRE               #Ne lit pas fd0 mais fdNOMBRE. Il doit s'agir d'un input
                        #fd ou d'un input/output fd. Utile par exemple pour lire
                        #un fd ouvert avec <> ou pour faire un read "normal"
                        #(prompt à l'utilisateur) à l'intérieur d'une boucle
                        #while read :
                        #  - while read VAR ; do read -p "?" -u 3 VAR2 ; done
                        #    3<&0 < FILE

-e                      #Lit depuis fd0 en utilisant readline (la manière avec
                        #laquelle Bash interprète l'entrée standard dans un
                        #terminal, avec par exemple les raccourcis clavier)
-i STRING               #Avec -e, remplit la readline avec STRING avant que
                        #l'utilisateur n'intervienne. STRING peut ensuite être
                        #supprimé ou modifié par l'utilisateur (Bash 4)
