
                                  ┏━━━━━━━━━━━━━━━━┓
                                  ┃   TIME_TIMES   ┃
                                  ┗━━━━━━━━━━━━━━━━┛

time COMMANDES          #Imprime par défaut des informations relatives au temps
                        #d'exécution de COMMANDES, sur stderr. Par défaut, 
                        #imprime :
                        #  - real   [M]MmS[S].NNNs
                        #    user   [M]MmS[S].NNNs
                        #    sys    [M]MmS[S].NNNs
                        #[M]Mm etc. indique le format des secondes, etc. Le m
                        #est littéral.
                        #Dans l'ordre :
                        #  - real est le temps d'exécution de COMMANDES
                        #  - user est le temps passé par COMMANDES à utiliser le
                        #    CPU en user mode
                        #  - sys est le temps passé par COMMANDES à utiliser le
                        #    CPU en system mode
                        #  - l'opération real - (user + sys) donne le temps 
                        #    passé par COMMANDES à utiliser autre chose que le
                        #    CPU (exemple : GPU)
                        #  - la division de real et ce dernier chiffre donne le
                        #    pourcentage d'utilisation du CPU
                        #COMMANDES peut être tout subshell : un bloc de 
                        #commandes, ou une structure, une commande, etc.
TIMEFORMAT ==>          #Si cette variable est initialisée, imprime son contenu
                        #plutôt que le comportement par défaut. TIMEFORMAT est
                        #une STRING qui ne peut pas contenir de séquences
                        #d'échappement backslash autres qu'avec $' ', et qui
                        #peut utiliser ces séquences :
                        #  - %% : % littéral
                        #  - %R : temps 'real'
                        #  - %U : temps 'user'
                        #  - %S : temps 'sys'
                        #  - %P : pourcentage d'uilisation du CPU
                        #Ces temps sont affichés au format [M]M.SSS
                        #De plus, après le % peut s'ajouter (dans l'ordre) :
                        #  - un chiffre entre 0 et 3 pour indiquer le nombre
                        #    de décimales après la virgule (par défaut 3, sauf
                        #    2 pour %P)
                        #  - un "l" pour mettre au même format que par défaut

-p                      #Imprime plutôt :
                        #  - real [M]M.SS
                        #    user [M]M.SS
                        #    sys  [M]M.SS

BUILTINS VS COMMANDE    #Il y a deux versions : un builtin et une commande
EXTERNE                 #externe. Ci-dessus était le builtin (la préférer).

time                    #Voici la commande externe. Les différences sont :
                        #  - COMMANDE ne peut pas être :
                        #    - un builtin (sans commande externe correspondante)
                        #    - un keyword (structure, etc.)
                        #  - légèrement moins précis
                        #  - plus d'options
                        #  - envoyer un signal stoppant arrête le builtin time
                        #    mais pas sa COMMANDE. Pour la commande externe, non
                        #    Cependant le temps du stop continue à être
                        #    comptabilisé.
                        #Si COMMANDE a un exit code != 0, 
                        #Implique par défaut -f avec comme STRING :
                        #%Uuser %Ssystem %Eelapsed %PCPU (%Xtext+%Ddata %Mmax)k
                        #%Iinputs+%Ooutputs (%Fmajor+%Rminor)pagefaults %Wswaps

-o FILE                 
--output=FILE           #Equivaut à time COMMANDE > FILE
-a
--append                #Avec -o, équivaut à time COMMANDE >> FILE
--quiet                 

-p                      #Equivaut à -f "real %e\nuser %U\nsys %S" (même format
--portability           #que l'option -p du builtin)
-f STRING               #Imprime STRING, suivi d'une newline. STRING peut 
                        #contenir des séquences d'échappement backslash 
                        #(uniquement \t et \n) et des percent echappement 
                        #sequences, précédés d'un % (une valeur de 0 peut 
                        #indiquer que le système ne permet de récupérer cette
                        #valeur, ceux précédés par  ne marchent pas sous 
                        #Ubuntu) :

%E                      #real elapsed time
%e                      #real elapsed time (autre format)
%U                      #User elapsed time
%S                      #System elapsed time
%P                      #Pourcentage CPU

%C                      #COMMANDES
%x                      #Exit code

%F                      #Nombre de major page faults
%R                      #Nombre de minor page faults
%Z                      #Taille des pages du système, en octets
%W                      Nombre de fois où la mémoire swap a dûe être utilisée.

%I                      #Nombre de file descriptors en input (pas sûr)
%O                      #Nombre de file descriptors en output (pas sûr)

%M                      #Taille maximum du programme en mémoire, en Ko
%t                      Taille moyenne du programme en mémoire, en Ko
%D                      Taille moyenne de l'espace alloué aux unshared data,
                        en Ko (data)
%p                      Taille moyenne de l'unshared stack, en Ko
%X                      Taille moyenne du "text" (code) partagé (libraries
                        dynamiques), en Ko
%K                      Mémoire utilisée (stack + data + text), en Ko

%k                      Nombre de signaux envoyés au process.
%r                      #Nombre de socket messages envoyés.
%s                      #Nombre de socket message reçus.

%c                      #Nombre de context switches (multitasking)
                        #involontaires : 
%w                      #Nombre de context switches volontaires, le processus
                        #donnant lui-même la main à un autre.

%%                      #% littéral

times                   #Imprime l'user puis system elapsed time du shell 
                        #courant, puis celui de tous ses enfants (en cours ou
                        #déjà terminés)
