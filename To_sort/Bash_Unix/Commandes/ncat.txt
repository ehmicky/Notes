
                                  ┏━━━━━━━━━━┓
                                  ┃   NCAT   ┃
                                  ┗━━━━━━━━━━┛

ncat HOSTNAME|IP [PORTRANGE]  #Connects to TCP sockets HOSTNAME:PORT and sends stdin
                              #PORTRANGE is PORT[-PORT2] (déf: 313337), to specify range of ports to try sequentially or, 
                              #if -r, randomly.
                              #Better version of telnet.
                              #End with EOF (Ctrl-D)

-u                            #Uses UDP instead
--sctp                        #Uses SCTP instead
-p PORTRANGE
-S IP                         #Source port and address
--proxy HOSTNAME|IP[:PORTRANG]#Uses proxy. 
                              #PORT is def. one according to --proxy-type "http|socks4"
                              #Can also specify --proxy-auth "HTTP|SOCKS"
-U                            #Uses Unix sockets. Do not use PORT then.
-4|6                          #Forces IPv4|6
-n                            #Do not do any DNS lookup

--ssl                         #Uses SSL
--ssl-cert PEMFILE            #
--ssl-key PEMFILE             #
--ssl-trustfile PEMFILE       #Déf: file ca-bundle.crt that ship with ncat
--ssl-verify                  #Verify trust and certificates

-t                            #Make it work with Telnet
-C                            #Uses CRLF line ending
-S                            #Enables TCP MD5 signature
-T "0x..."                    #Specifies IP Type of Service
-g HOST...                    #Loose source routing (LSR) hop points
-G NUM                        #LSR hop pointer (NUM must be multiple of 4)

-i TIME                       #Introduce a delay between lines of text sent|received
-d TIME                       #Idle timeout
-w TIME                       #Connection timeout

-o FILE                       #Like > FILE. Mandatory when using <FILE
-x FILE                       #Same but hexa (hexdump)
--append-output               #Uses >> FILE instead of > FILE
-v[v...]                      #Verbose

--send|recv-only              #Only sends|receives data

--broker                      #Allow clients to communicate with each other (how???)
--chat                        #Same but:
                              #  - adds an ID to each client in the message
                              #  - escape non-printing chars

-l                            #Opens and listen for a port instead of sending to a port. Print on stdout. 
                              #HOSTNAME is optional then.
-k                            #With -l, accept multiple connections
-m NUM                        #Max. simultaneous connections (déf: 100)
--allow|deny HOST...
--allow|denyfile HOSTFILE     #With -l, restrict hosts who can connect
-e STR                        #Redirect input|output from command using current $SHELL. Only works with -l
-c STR                        #Same with Bash
--lua-exec STR                #Same with Lua
