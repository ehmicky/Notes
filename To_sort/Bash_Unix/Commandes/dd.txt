
                                  ┏━━━━━━━━┓
                                  ┃   DD   ┃
                                  ┗━━━━━━━━┛

dd [if=FILE1] [of=FILE2]#Copie l'intégralité de FILE1 vers FILE2, à coup de
                        #blocks de TAILLE octets (par défaut 512)
                        #FILE2 est par défaut écrasé
                        #Si pas de if=, lit sur stdin. Si pas de of=, imprime
                        #sur stdout.
                        #Imprime ensuite :
                        #  - le nombre de blocks lus (suivi de +1 s'il y avait
                        #    un dernier block de taille incomplète, ou de +0
                        #    sinon)
                        #  - même chose pour les blocks écrits
                        #  - le nombre d'octets copiés, le temps et la vitesse
                        #    de transfert
                        #L'ensemble des NOMBRE qui suivent peuvent être écrits
                        #en human readable size
                        #Ne marche pas sur les répertoires. Les liens 
                        #symboliques sont déréférencés. Utile sur les special
                        #files.
                        #Plus TAILLE est grand, plus dd est rapide

bs=NOMBRE               #Modifie TAILLE, en lecture et en écriture
ibs=NOMBRE              #Modifie TAILLE, en lecture
obs=NOMBRE              #Modifie TAILLE, en écriture

count=NOMBRE            #Plutôt que de copier l'intégralité de FILE1, ne copie
                        #que NOMBRE blocks

seek=NOMBRE             #Ne commence à écrire le début des data qu'au block
                        #numéro NOMBRE + 1 de FILE2. Les octets au début de
                        #FILE2 ainsi préservés ne sont pas écrasés. La taille
                        #du transfert reste la même.
skip=NOMBRE             #Ne commence à lire les data à copier qu'au block numéro
                        #NOMBRE + 1 de FILE1. La taille du transfert sera donc
                        #NOMBRE blocks plus petite.

status=noxfer           #N'imprime pas la dernière ligne relative au nombre
                        #d'octets imprimés, etc.

cbs=NOMBRE              #Avec conv=block ou conv=unblock, utilise NOMBRE comme 
                        #CBLOCK
                        #
conv=OPT[,OPT]...       #Applique pendant la copie les conversions désignés par
                        #les OPT.
                        #Les OPT sont :
                        #
                        #  - "excl"    : produit une erreur si FILE2 existe déjà
                        #  - "nocreat" : produit une erreur si FILE2 n'existe 
                        #                pas
                        #  - "notrunc" : n'écrase pas le fichier entier, mais
                        #                seulement les octets copiés
                        #  - "lcase"   : convertit les lettres en lowercase
                        #  - "ucase"   : convertit les lettres en uppercase
                        #  - "swab"    : inverse chaque paire d'octets
                        #  - "block"   : pour chaque ligne (définie par rapport
                        #                aux newlines), supprime la newline, 
                        #                n'imprime que les CBLOCK premiers 
                        #                octets, et si CBLOCK > longueur de la
                        #                ligne, rajoute des espaces (0x20)
                        #                Ne marche qu'avec cbs=
                        #  - "unblock" : pour chaque groupe de CBLOCK octets,
                        #                remplace les trailings zeros par une
                        #                newline. Ne marche qu'avec cbs=
                        #  - "sync"    : rajoute des characters null à la fin de
                        #                FILE2, afin que celui-ci ait une taille
                        #                multiple de TAILLE. Si block ou unblock
                        #                (et cbs) est utilisé, effectue l'action
                        #                de block ou unblock, puis rajoute des
                        #                espaces et non des characters null
                        #  - "ascii"   : convertit de l'EBCDIC vers l'ASCII
                        #  - "ebcdic"  : convertit de l'ASCII vers l'EBCDIC
                        #  - "ibm"     : convertit de l'ASCII vers l'alternate
                        #                EBCDIC
                        #  - "noerror" : ne s'interrompt pas, même après une 
                        #                erreur de lecture

iflag=FLAG[,FLAG]...    #Applique pendant la lecture les modes désignés par les
                        #FLAG.
oflag=FLAG[,FLAG]...    #Applique pendant l'écriture les modes désignés par les
                        #FLAG.
                        #
                        #Les FLAG sont :
                        #
                        #  - "append"    : append FILE2 plutôt que de l'écraser.
                        #                  Ne marche qu'avec oflag, et si 
                        #                  conv=notrunc est activé
                        #  - "noatime"   : N'update pas l'atime
                        #  - "nofollow"  : provoque une erreur si le fichier
                        #                  est un symlink
                        #  - "sync"      : flushe les buffers avant toute 
                        #                  opération de lecture ou écriture.
                        #  - "dsync"     : comme sync, mais seulement sur les
                        #                  opérations sur les data, pas les
                        #                  metadata du file system
