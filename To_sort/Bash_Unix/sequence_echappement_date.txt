
                                  ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
                                  ┃   SEQUENCE_ECHAPPEMENT_DATE   ┃
                                  ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛

SEQUENCES D'ECHAPPEMENT #Voici les séquences d'echappement des dates, a
DES DATES ==>           #utiliser avec (ou # remplace une seule sequence
                        #d'echappement) les commandes Unix :
                        #  - find -printf "%A#" "%C#" "%T#"
                        #  - date "+%#%#..."
                        #  - du --time-style="+%#%#..."
                        #  - awk '{ strftime("%#...") ; }'
                        #  - HISTTIMEFORMAT="%#%#..."
                        #ou les fonctions C :
                        #  - strftime( ... )
                        #ou C++ :
                        #  - boost::date_time::*_facet
                        #  - Glib::Date::format_string()
                        #time (commande externe) utilise aussi des séquences
                        #commençant par %.
                        #Explication de la deuxième colonne :
                        # - "#"  : propre à Boost
                        # - "!"  : non-présent dans Boost
                        # - "*"  : pas supporté par input_facets de
                        #          boost::date_time
                        # - "**" : comportement varie selon OS, et pas
                        #          supporté par input_facets

+-------+----+--------------------------------------------------------+
| n     |    | A newline                                              |
| t     |    | A tab                                                  |
|       |    |                                                        |
| s     | !  | Seconds since 1970-01-01 00:00:00 UTC                  |
+-------+----+--------------------------------------------------------+
| Y     |    | Year (1970...)                                         |
| G     | *  | Year of ISO week number (1970...)                      |
|       |    |                                                        |
| C     | ** | Century (20..21)                                       |
|       |    |                                                        |
| y     |    | Last two digits of year (00..99)                       |
| g     | *  | Last two digits of year of ISO week number (00.99)     |
+-------+----+--------------------------------------------------------+
| U     |    | Week number of year with Sunday as first day of week   |
|       |    | (00..53)                                               |
| W     |    | Week number of year with Monday as first day of week   |
|       |    | (00..53)                                               |
| V     | ** | ISO week number of year with Monday as first day of    |
|       |    | week (01..53)                                          |
+-------+----+--------------------------------------------------------+
| m     |    | Month (01..12)                                         |
| b     |    |                                                        |
| h     | ** | Locale’s abbr. month name (Jan..Dec)                   |
| B     |    | Locale’s full month name, variable length (January..   |
|       |    | December)                                              |
+-------+----+--------------------------------------------------------+
| j     |    | Day of year (001..366)                                 |
|       |    |                                                        |
| d     |    | Day of month (01..31)                                  |
|       |    |                                                        |
| u     | *  | Day of week (1..7) 1 is Monday                         |
| w     |    | Day of week (0..6) 0 is Sunday                         |
| a     |    | Locale’s abbreviated weekday name (Sun..Sat)           |
| A     |    | Locale’s full weekday name, variable length (Sunday..  |
|       |    | Saturday)                                              |
+-------+----+--------------------------------------------------------+
| H     |    | Hour (00..23)                                          |
| I     | *  | Hour (01..12)                                          |
| k     | *  | Hour ( 0..23)                                          |
| l     | *  | Hour ( 1..12)                                          |
| p     | *  | Locale’s AM or PM                                      |
| P     | ** | Like %p, but lower case (am|pm)                        |
|       |    |                                                        |
| M     |    | Minute (00..59)                                        |
|       |    |                                                        |
| S     | !  | Second (00.00 .. 61.00). There is a fractional part.   |
| S     | #  | Second tronquée (SS)                                    |
| s     | #  | Second et micro/nanosecondes (SS.SSSSSS[SSS])          |
| F     | #  | Micro/nanosecondes [.SSSSSS[SSS]] (seulement si != 0)  |
+-------+----+--------------------------------------------------------+
| F     | !  | Date (yy-mm-dd)                                        |
| D     | ** | Date (mm/dd/yy)                                        |
| x     |    | Locale’s date                                          |
|       |    |                                                        |
| +     | *! | Date and time (YYYY-mm-dd+HH:MM:SS.SSSSSSSSSS)         |
| c     | *  | Locale’s date and time                                 |
|       |    |                                                        |
| R     | *  | Time (HH:MM)                                           |
| T     | *  | Time (HH:MM:SS)                                        |
| +     | #  | Durée (+HH:MM:SS)                                     |
| -     | #  | Durée (-HH:MM:SS)                                     |
| r     | ** | Time, 12-hour (HH:MM:SS AM|PM)                         |
| X     |    | Locale’s time representation                           |
+-------+----+--------------------------------------------------------+
| Z     | *! | Time zone (EDT)                                        |
| z     | *! | Numeric timezone (+|-HHMM)                             |
| Z     | #  | Long time zone name                                    |
| z     | #  | Short time zone name                                   |
| ZP    | #  | Posix time zone string                                 |
+-------+----+--------------------------------------------------------+

F T                     #Idee pour obtenir yy/mm/dd HH:MM:SS

DATE ==>                #Ces sequences sont specifiques a date (pas présent
                        #dans boost::date non plus, sauf %e)

N                       #Nanoseconds (000000000..999999999))
:z                      #Numeric timezone (+|-HH:MM)
::z                     #Numeric timezone (+|-HH:MM:SS)
:::z                    #Numeric time zone with : if necessary (-04, +05:30))
e                       #Same as %_d

FLAGS ET WIDTH ==>      #Les flags et width ne sont pas disponibles avec find.
                        #Le format est %FLAGwidthLETTRE ou LETTRE fait
                        #reference aux lettres variableues precedemment
                        #FLAG ajoute un element de padding a gauche d'un
                        #element qui n'aurait pas la largeur maximale de la
                        #categorie, afin de toujours avoir une largeur fixe,
                        #par exemple les jours de 1 a 9 dans un mois de 31
                        #jours peuvent recevoir un espace ou un 0
                        #
                        #La "width" est un nombre controlant la largeur minimale
                        #du padding
                        #
                        #Les flags sont :
                        #
0                       #des zeros sont utilises comme padding (defaut)
_                       #des espaces sont utilises comme padding
-                       #aucun padding n'est effectue (ne marche pas avec tout)
                        #
                        #Ces flages peuvent aussi etre utilises pour la casse :
                        #
^                       #Rend uppercase
#                       #Change la casse vers la casse opposee

FIND ==>                #Ces sequences sont specifiques a find :

@                       #Seconds since Jan. 1, 1970, 00:00 GMT
