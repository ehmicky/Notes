
             
   QUICK-LRU  
             



ALTERNATIVES ==>                  #See lru-cache

VERSION ==>                       #7.0.0
                                  #Node/browser

new QuickLru([OPTS])              #LRU cache
                                  #OPTS:
                                  #  - maxSize NUM
                                  #  - maxAge NUM (in ms, def: Infinity)
                                  #  - onEviction('KEY', VAL): called when a value is about to be removed from cache due to
                                  #    maxSize|maxAge being hit
                                  #get|set|delete|clear() update recentness, not has|peek()

QUICKLRU.*                        #Is a MAP, i.e. can use any of its methods
QUICKLRU.get|peek('KEY')->VAL     #
QUICKLRU.set('KEY', VAL[, OPTS])  #OPTS: maxAge NUM
 ->QUICKLRU
QUICKLRU.delete('KEY')->BOOL      #
QUICKLRU.clear()                  #

QUICKLRU.has('KEY')->BOOL         #
QUICKLRU.size                     #NUM
QUICKLRU.maxSize                  #NUM
QUICKLRU.resize(NUM)              #Might discard items if decreasing
QUICKLRU.keys()->ITERATOR_'KEY'   #
QUICKLRU.values()->ITERATOR_VAL   #
QUICKLRU                          #Is ITERATOR of ['KEY', VAL]
QUICKLRU.
 entriesAscending|Descending()
 ->ITERATOR_['KEY', VAL]          #Same but guarantees order from oldest to most recent (or vice-versa)
