
       
   MEM  
       



VERSION ==>                       #9.0.2

MEM(FUNC[, OPTS])->MFUNC          #Return memoized MFUNC
                                  #If return value is PROMISE, memoized the same, regardless of resolved|rejected
memDecorator([OPTS])->DFUNC       #Same as decorator

memClear(FUNC)                    #Clear cache

OPTS.cacheKey(ARGS_ARR)->VAL      #Key used for comparison.
                                  #Comparison always use shallow === on key
                                  #By default, use ARGS_ARR[0] as is
                                  #  - i.e. compare first argument only, and with ===
                                  #`this` is never used as key.

OPTS.maxAge                       #NUM (def: Infinity, in ms)
                                  #Uses setTimeout().unref() under the hood

OPTS.cache                        #Underlying storage.
                                  #Def: new MAP()
                                  #Must implement MAP methods: has|get|set|delete|clear()
                                  #When cache key is always OBJ and OPTS.cacheKey is not defined, new WeakMap() can make sense instead.

P-MEMOIZE ==>                     #Same except for async FUNCs:
                                  #  - once PROMISE resolved, the resolved value is cached instead
                                  #     - unless OPTS.cache false, in which case only cache while PROMISE is ongoing
                                  #  - if PROMISE rejected, not cached
                                  #  - OPTS.cache has|get|set() can be async
                                  #  - bigger bundle size
                                  #Version 7.1.1
