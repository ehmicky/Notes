
                
   P-CANCELABLE  
                



VERSION ==>                       #3.0.0

new P-CANCELABLE
 (FUNC(resolve, reject, onCancel))
PPROMISE.then(FUNC, FUNC2)
PPROMISE.catch(FUNC2)
PPROMISE.finally(FUNC3)           #Inherits from Promise

PPROMISE.cancel([ERROR|'ERROR'])  #Reject PPROMISE but also:
                                  #  - fire callbacks registered with onCancel()
                                  #     - if throw synchronously, PPROMISE is rejected with it instead
                                  #  - use a CancelError
                                  #Noop if already resolved|rejected
PPROMISE.isCanceled               #BOOL

onCancel(FUNC())                  #Register callbacks
onCancel.shouldReject             #If false (def: true), do not reject PPROMISE on cancel(). Instead only fire callbacks.

CancelError                       #
CANCEL_ERROR.name                 #'CancelError'
CANCEL_ERROR.message              #Defaults to 'Promise was canceled'

fn(FUNC(...ARGS, onCancel)->PRMIS)
 ->FUNC2(...ARGS)
 ->PPROMISE                       #Convenience method to add onCancel to an async FUNC
