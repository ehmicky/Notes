
                                  ┏━━━━━━━━━━━━━━┓
                                  ┃   THROUGH2   ┃
                                  ┗━━━━━━━━━━━━━━┛

ALTERNATIVES ==>                  #Serial:
                                  #  - core STREAM.Transform() (preferred)
                                  #  - through2 (preferred)
                                  #  - through: not maintained
                                  #Parallel:
                                  #  - through2-based:
                                  #     - through2-concurrent (preferred): max parallel
                                  #     - throughv
                                  #     - rapid-stream: not maintained, max parallel
                                  #  - parallel-transform: not maintained, max parallel, keep output order
                                  #  - concurrent-transform: not maintained, max parallel

VERSION ==>                       #4.0.2

THROUGH2                          #Returns a IOSTREAM that maps its input:
 ([OPTS, ][FUNC(SVAL, 'ENCODING', #  - FUNC() is fired serially for each SVAL
 FUNC2([ERROR][, SVAL2]))]        #     - it defaults to a passthrough
 [, FUNC3(FUNC4([ERROR]))])       #  - this.push(SVAL2) or FUNC2(..., SVAL2) can be fired 0|1|n times to add output
 ->IOSTREAM                       #  - FUNC2() must be called once to notify it's finished or errored, to start next SVAL
                                  #  - FUNC3 is after after all SVAL processed
                                  #Consider using UTIL.callbackify on FUNC()
                                  #OPTS are any ISTREAM|OSTREAM OPTS
THROUGH2.obj(...)                 #Same with OPTS: objectMode true
THROUGH2.ctor(...)                #Same but returns a constructor FUNC(OPTS)->IOSTREAM
