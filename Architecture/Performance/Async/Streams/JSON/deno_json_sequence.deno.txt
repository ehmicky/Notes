
                      
   DENO_JSON_SEQUENCE  
                      



VERSION ==>                       #Part of Deno
                                  #Browser compatible

std/json/json_stringify_stream.ts #
new JsonStringifyStream([OPTS])   #Apply JSON.stringify() on each chunk
 ->TSTREAM                        #Examples of formats:
                                  #  - start '' end '\n' (def) or '\r\n': ndjson|jsonlines (see its doc)
                                  #  - start U+001E, end U+000A: json text sequence (see its doc)
                                  #JSON.stringify() automatically escapes most delimiters (such as '\n') used in the chunk itself.
OPTS.prefix                       #STR (def: ''). Start of each produced chunk
OPTS.suffix                       #STR (def: '\n'). End of each produced chunk

std/json/json_parse_stream.ts     #
new JsonParseStream([OPTS])       #Apply JSON.parse() on each chunk
 ->TSTREAM                        #JSON.parse():
                                  #  - trims whitespaces, i.e. works with ndjson|jsonlines
                                  #  - but not U+001E, which throws, i.e. does not work with json text sequences
                                  #Ignore chunks with only whitespaces
                                  #  - as required|recommended by most formats
                                  #JSON.stringify|parse() errors are propagated
                                  #  - required by ndjson, but forbidden by json text sequences

std/json/
 concatenated_json_parse_stream.ts#
new ConcatenatedJsonParseStream
 ([OPTS])->TSTREAM                #Like JsonParseStream, but for concatenated JSON (see its doc)
