
       
   STS  
       



VERSION ==>                   #2022-11-16

IAM ==>                       #Part of IAM: ROLE, INSTANCE_PROFILE, SERVICE_LINKED_ROLE, SAML_PROVIDER, OPENID_PROVIDER, SUMMARY_MAP
                              #See IAM doc for: CALLER_IDENTITY, ACCESS_KEY_INFO, DECODED_AUTH_MESSAGE

SUMMARY ==>                   #???

                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:              API              :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


NAME ==>                      #Security Token Service

PAGINATION ==>                #Req: Marker STR, MaxItems STR (def|max: 1e4)
                              #Res: IsTruncated BOOL, Marker STR

PRICING ==>                   #Free


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:            REGION             :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


SetSecurityToken              #Req: TOKEN_VERSION
 ServicePreferences()         #Res: empty

TOKEN_VERSION                 #Either:
 .GlobalEndpointTokenVersion  #  - 'v1Token' (def)
                              #     - global STS endpoint
                              #     - does not work in REGIONs not enabled by default (like Hong Kong)
                              #  - 'v2Token'
                              #     - REGION-specific STS endpoint
                              #        - can be manually disabled in the UI
                              #     - lower latency
                              #     - works in all REGIONs
                              #     - longer (more characters)
SUMMARY_MAP
 .GlobalEndpointTokenVersion  #1|2


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:          CREDENTIALS          :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


TEMP_CREDS                    #Temporary credentials
                              #Must accompany ACCESS_KEY
                              #Allows:
                              #  - expiration
                              #  - not revealing access key secret
                              #  - session policy, i.e. further restrictions than current user
                              #Very few SERVICE|ACTIONs are not allowed when authenticated with TEMP_CREDS.
                              #Also created in the background when using:
                              #  - the UI, even if authenticated with LOGIN_PROFILE
                              #  - a DEPENDENT_ACTION
                              #Prefered over long-term CREDENTIALs
                              #  - e.g. prefer FEDERATED_USER|ASSUMED_ROLE over USER
TEMP_CREDS.AccessKeyId        #ACCESS_KEY_ID
TEMP_CREDS.SecretAccessKey    #SECRET_ACCESS_KEY
TEMP_CREDS.SessionToken       #'SESSION_TOKEN'.
                              #To include as part of authentication.

TEMP_CREDS.Expiration         #'DATE'
                              #Computed by *_REQ.DurationSeconds NUM
                              #Min: 15m
                              #With Get*Token(), unless root:
                              #  - def: 12h, max: 36h
                              #Otherwise:
                              #  - def|max: 1h
                              #  - with AssumeRole*(): max can be changed with ROLE.MaxSessionDuration
aws:TokenIssueTime            #'DATE' CONDITION_KEY. TEMP_CREDS creation time.


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:              MFA              :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


getSessionToken()             #Req: MFA_REQ
                              #Res: Credentials TEMP_CREDS

MFA_REQ                       #Request a TEMP_CREDS using a [VIRTUAL_]MFA_DEVICE
                              #Permissions:
                              #  - same as [VIRTUAL_]MFA_DEVICE's owner
                              #  - sts:* -> only sts:AssumeRole|GetCallerIdentity
                              #  - iam:* -> must include MFA information
                              #  - cannot signin to UI with SSO
MFA_REQ.SerialNumber
MFA_REQ.TokenCode
MFA_REQ.DurationSeconds       #Like ASSUME_ROLE_REQ.*


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:        FEDERATED USER         :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


GetFederationToken()          #Req: FEDERATED_REQ
                              #Res: FEDERATED_CREDS

FEDERATED_REQ                 #Request a FEDERATED_CREDS
FEDERATED_REQ.DurationSeconds
FEDERATED_REQ.Tags            #Like ASSUME_ROLE_REQ.*
FEDERATED_REQ.Policy
FEDERATED_REQ.PolicyArns      #Like ASSUME_ROLE_REQ.*, except default is to deny all

FEDERATED_REQ.Name            #'FEDERATED_USER'

FEDERATED_CREDS               #TEMP_CREDS based on current user.
                              #I.e. superuser delegating permissions to temporary users.
                              #  - often authentication happens in a separate system
                              #Permissions:
                              #  - same as current USER, but restricted by session policy
                              #  - sts:* -> only sts:GetCallerIdentity
                              #  - iam:* -> must use UI (not CLI|API)
                              #  - cannot signin to UI with SSO
FEDERATED_CREDS.Credentials
FEDERATED_CREDS
 .PackedPolicySize            #Like ASSUMED_ROLE.*

FEDERATED_CREDS.FederatedUser #FEDERATED_USER. Temporary user using a FEDERATED_CREDS
FEDERATED_USER.Arn            #FEDERATED_USER_ARN. 'arn:aws:sts::ACCOUNT_ID:federated-user/FEDERATED_USER'
FEDERATED_USER.FederatedUserId#FEDERATED_USER_MID


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:          ASSUME ROLE          :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


AssumeRole()                  #Req: ASSUMED_ROLE_REQ
                              #Res: ASSUMED_ROLE

ASSUMED_ROLE_REQ              #Request an ASSUMED_ROLE

ASSUMED_ROLE                  #TEMP_CREDS based on a POLICY (ROLE.AssumeRolePolicyDocument).
                              #Permissions:
                              #  - same as ROLE
                              #  - sts:* -> no sts:Get*Token
ASSUMED_ROLE.Credentials      #TEMP_CREDS
ASSUMED_ROLE.AssumedRoleUser  #ASSUMED_ROLE_USER

ASSUMED_ROLE_REQ.RoleArn      #ROLE_ARN to assume

ASSUMED_ROLE_USER.Arn         #ASSUMED_ROLE_ARN. 'arn:aws:sts::ACCOUNT_ID:assumed-role/ASSUMED_ROLE'
ASSUMED_ROLE_USER
 .AssumedRoleId               #'ASSUMED_ROLE_MID:ASSUMED_ROLE'

ASSUMED_ROLE_REQ
 .RoleSessionName             #'ASSUMED_ROLE'
sts:RoleSessionName           #'ASSUMED_ROLE' CONDITION_KEY, in AssumeRole() request

ASSUMED_ROLE_REQ              #STR
 .SourceIdentity              #Similar to 'ASSUMED_ROLE' except:
                              #  - kept with role chaining
                              #  - i.e. identify the original entity, not most recent
                              #Max length 64
sts:SourceIdentity            #STR CONDITION_KEY with ASSUMED_ROLE_REQ.SourceIdentity, in AssumeRole*|SetSourceIdentity() PACTION
sts:SetSourceIdentity         #PACTION to allow using ASSUMED_ROLE_REQ.SourceIdentity
                              #Must be done on both the PRINCIPAL, and the ROLE trust policy
ASSUMED_ROLE_USER
 .SourceIdentity              #ASSUMED_ROLE_REQ.SourceIdentity
aws:SourceIdentity            #STR CONDITION_KEY with ASSUMED_ROLE_USER|SAML_ROLE|WEB_ID_ROLE.SourceIdentity, in the requests made by the ROLE

ASSUMED_ROLE_REQ.ExternalId   #STR
                              #Similar to 'ASSUME_ROLE' except:
                              #  - meant for identifier which has a meaning only outside of AWS
                              #  - not present in CloudTrail logs
                              #Max length 1224
sts:ExternalId                #STR CONDITION_KEY with ASSUMED_ROLE_REQ.ExternalId, in AssumeRole() request()

ASSUMED_ROLE_REQ
 .DurationSeconds             #NUM

ASSUMED_ROLE_REQ.Policy       #POLICY_DOC.
                              #"Session policy" restricting the identity-based permissions
                              #Def: allow all
                              #Max 2KB
ASSUMED_ROLE_REQ.PolicyArns   #Same but as POLICY_ARN_ARR
                              #Max length 10
ASSUMED_ROLE.PackedPolicySize #0-1 percentage of POLICYs size / max size

ASSUMED_ROLE_REQ.SerialNumber #[VIRTUAL_]MFA_DEVICE.SerialNumber
                              #Optional. Meant when ROLE.AssumeRolePolicyDocument uses CONDITION_KEY aws:MultiFactorAuthPresent
ASSUMED_ROLE_REQ.TokenCode    #STR. Token shown by MFA device

ASSUMED_ROLE_REQ.Tags         #AWS TAGS
ASSUMED_ROLE_REQ              #'TAG'_ARR that should be inherited with role chaining
 .TransitiveTagKeys           #Def: none
sts:TransitiveTagKeys         #'TAG'_ARR CONDITION_KEY
sts:TagSession                #PACTION to specify ASSUMED_ROLE_REQ.Tags


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:             ROLE              :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


CreateRole()                  #Req: ROLE
                              #  - no Arn, RoleId, CreateDate, RoleLastUsed
                              #Res: Role ROLE
UpdateRole()                  #Req:
                              #  - no Arn, RoleId, CreateDate, RoleLastUsed, Path, AssumeRolePolicyDocument, Tags
                              #Res: empty
UpdateAssumeRolePolicy()      #Req: ROLE
                              #  - only RoleName
                              #  - only AssumeRolePolicyDocument -> PolicyDocument
                              #Res: empty
GetRole()                     #Req: ROLE
                              #  - only RoleName
                              #Res: Role ROLE
ListRoles()                   #Req: ROLE
                              #  - only Path -> PathPrefix
                              #Res: Roles ROLE_ARR
DeleteRole()                  #Req: ROLE
                              #  - only RoleName
                              #Res: empty

ROLE                          #Like a group, but with temporary assigned USERs.
                              #Must authenticate using AssumeRole*()
                              #"Role chaining": a ROLE assuming another ROLE2
                              #Max 1000 (up to 5000 on request) (SUMMARY_MAP.Roles[Quota])
ROLE.Arn                      #ROLE_ARN. 'arn:aws:iam::ACCOUNT_ID:role[/PATH]/NAME'
ROLE.RoleId                   #ROLE_MID
ROLE.RoleName                 #'ROLE'
ROLE.Path                     #ARN_PATH
ROLE.CreateDate               #'DATE'
ROLE.RoleLastUsed             #ROLE_LAST_USED
ROLE_LAST_USED.LastUsedDate   #'DATE'. null if not used in last 400 days
ROLE_LAST_USED.Region         #'REGION'
ROLE.Description              #STR
ROLE.MaxSessionDuration       #NUM (in secs). Max value of ASSUME_*_REQ.DurationSeconds
                              #Min|def 1h, max 12h
TagRole()
ListRoleTags()
UntagRole()                   #AWS TAGS
ROLE.Tags                     #RESOURCE_NAME: RoleName 'ROLE'

ROLE.AssumeRolePolicyDocument #Resource-based POLICY_DOC. "Trust policy"
                              #Only for sts:* PACTIONs
                              #  - i.e. conditions to authenticate as this ROLE
                              #  - as opposed to other POLICYs of this ROLE
                              #     - i.e. permissions once authenticated as this ROLE
                              #Def: allow all
                              #  - which is not secure
                              #Root is never allowed to sts:*
                              #Max 2KB (up to 4KB on request) (SUMMARY_MAP.AssumeRolePolicySizeQuota)


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:       INSTANCE PROFILE        :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


CreateInstanceProfile()       #Req: INSTANCE_PROFILE
                              #  - only InstanceProfileName, Path, Tags
                              #Res: InstanceProfile INSTANCE_PROFILE
GetInstanceProfile()          #Req: INSTANCE_PROFILE
                              #  - only InstanceProfileName
                              #Res: InstanceProfile INSTANCE_PROFILE
ListInstanceProfiles()        #Req: INSTANCE_PROFILE
                              #  - only Path -> PathPrefix
                              #Res: InstanceProfiles INSTANCE_PROFILE_ARR
DeleteInstanceProfile()       #Req: INSTANCE_PROFILE
                              #  - only InstanceProfileName
                              #Res: empty

INSTANCE_PROFILE              #Container for a ROLE.
                              #Creates and rotates TEMP_CREDS automatically.
                              #Only for EC2
                              #Max 1000 (up to 5000 on request) (SUMMARY_MAP.InstanceProfiles[Quota])
INSTANCE_PROFILE.Arn          #INSTANCE_PROFILE_ARN. 'arn:aws:iam::ACCOUNT_ID:instance-profile[/PATH]/NAME'
INSTANCE_PROFILE
 .InstanceProfileId           #INSTANCE_PROFILE_MID
INSTANCE_PROFILE
 .InstanceProfileName         #'INSTANCE_PROFILE'
INSTANCE_PROFILE.Path         #ARN_PATH
INSTANCE_PROFILE.CreatedDate  #'DATE'
INSTANCE_PROFILE.Roles        #ROLE_ARR. Always single item
TagInstanceProfile()
ListInstanceProfileTags()
UntagInstanceProfile()        #AWS TAGS
INSTANCE_PROFILE.Tags         #RESOURCE_NAME: InstanceProfileName 'INSTANCE_PROFILE'

AddRoleToInstanceProfile()    #Req: INSTANCE_PROFILE_ROLE
                              #Res: empty
ListInstanceProfilesForRole() #Req: INSTANCE_PROFILE_ROLE
                              #  - only RoleName
                              #Res: InstanceProfiles INSTANCE_PROFILE_ARR
RemoveRoleToInstanceProfile() #Req: INSTANCE_PROFILE_ROLE
                              #Res: empty

INSTANCE_PROFILE_ROLE         #ROLE of an INSTANCE_PROFILE
INSTANCE_PROFILE_ROLE
 .InstanceProfileName         #'INSTANCE_PROFILE'
INSTANCE_PROFILE_ROLE.RoleName#'ROLE'


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:         SERVICE ROLE          :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


SERVICE_PRINCIPAL             #When PRINCIPAL is 'SERVICE_DOMAIN'
                              #Happens when either SERVICE_ASYNC_ACTION|SERVICE_ROLE
                              #But not for DEPENDENT_ACTION, which keeps current PRINCIPAL
aws:SourceArn                 #ARN CONDITION_KEY of the resource making a request using a SERVICE_PRINCIPAL
aws:SourceAccount             #ACCOUNT_ID CONDITION_KEY of the resource making a request using a SERVICE_PRINCIPAL

DEPENDENT_ACTION              #ACTION calling another SERVICE under the hood, from ongoing request, without using a ROLE
aws:ViaAWSService             #BOOL CONDITION_KEY. Whether the request is a DEPENDENT_ACTION
aws:CalledVia                 #'SERVICE_DOMAIN'_ARR when the request is a DEPENDENT_ACTION
aws:CalledViaFirst            #Like aws:CalledVia, but only least recent 'SERVICE_DOMAIN' in the ARR
aws:CalledViaLast             #Like aws:CalledVia, but only most recent 'SERVICE_DOMAIN' in the ARR

SERVICE_ASYNC_ACTION          #ACTION calling another SERVICE, not directly initiated by an ongoing request, without using a ROLE
aws:PrincipalIsAWSService     #BOOL CONDITION_KEY. Whether the request is a SERVICE_ASYNC_ACTION
aws:PrincipalServiceName      #'SERVICE_DOMAIN' CONDITION_KEY when the request is a SERVICE_ASYNC_ACTION
aws:PrincipalServiceNameList  #Same but using a 'SERVICE_DOMAIN'_ARR, for SERVICEs where REGION is included in 'SERVICE_DOMAIN'

SERVICE_ROLE                  #ROLE assumed by a SERVICE.
                              #Either STANDARD_SERVICE_ROLE, SERVICE_LINKED_ROLE or INSTANCE_PROFILE
STANDARD_SERVICE_ROLE         #SERVICE_ROLE that is (unlike SERVICE_LINKED_ROLE):
                              #  - optional
                              #  - managed by user
                              #  - usually meant to allow only a few specific ACTIONs
iam:PassRole                  #PACTION to allow an IDENTITY to assign a SERVICE_ROLE to a SERVICE
                              #Should restrict using STATEMENT.Resource
iam:PassedToService           #'SERVICE_DOMAIN' CONDITION_KEY of the SERVICE assuming a SERVICE_ROLE
                              #Only with PACTION 'iam:PassRole'
iam:AssociatedResourceArn     #ARN CONDITION_KEY of the resource assuming a SERVICE_ROLE
                              #Only with PACTION 'iam:PassRole'


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:      SERVICE LINKED ROLE      :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


CreateServiceLinkedRole()     #Req: SERVICE_LINKED_ROLE
                              #  - no RoleName
                              #Res: Role ROLE
DeleteServiceLinkedRole()     #Req: SERVICE_LINKED_ROLE
                              #  - only RoleName
                              #Res: SERVICE_LINKED_ROLE_DEL_START
GetServiceLinkedRole          #Req: SERVICE_LINKED_ROLE_DEL_START
 DeletionStatus()             #Res: SERVICE_LINKED_ROLE_DEL_END

SERVICE_LINKED_ROLE           #ROLE used by a SERVICE itself
                              #  - with permissions it needs to function
                              #  - managed by SERVICE
                              #Each SERVICE has 0|1|n SERVICE_LINKED_ROLEs
                              #Most SERVICE_LINKED_ROLEs:
                              #  - are automatically created|deleted when creating|deleting specific resources of the SERVICE
                              #  - otherwise, must be manually created|deleted for SERVICE to use
                              #Most SERVICE_LINKED_ROLEs have a trust policy which allows them to be assumed only by their SERVICE
                              #ROLE is readonly except:
                              #  - ROLE.description
                              #  - changing indentity-based POLICYs, depending on SERVICE, either:
                              #     - manual attachment
                              #     - through ACTIONs on that SERVICE
                              #        - e.g. request parameter when creating a resource
                              #     - not allowed
SERVICE_LINKED_ROLE           #'[PREFIX.]SERVICE_DOMAIN'
 .AWSServiceName              #'PREFIX' is SERVICE-specific, and only present when a SERVICE has multiplee SERVICE_LINKED_ROLEs
iam:AWSServiceName            #'[PREFIX.]SERVICE_DOMAIN' CONDITION_KEY when using *ServiceLinkedRole*()
SERVICE_LINKED_ROLE.RoleName  #'ROLE'
SERVICE_LINKED_ROLE           #STR appended to RoleName.
 .CustomSuffix                #Allows multiple SERVICE_LINKED_ROLE per SERVICE, since ROLE.RoleName is only based on 'SERVICE'
                              #Only for specific SERVICEs
SERVICE_LINKED_ROLE
 .Description                 #STR

SERVICE_LINKED_ROLE_DEL_START #Starting deleting a SERVICE_LINKED_ROLE
SERVICE_LINKED_ROLE_DEL_START
 .DeletionTaskId              #'task/aws-service-role/SERVICE/ROLE/UUID'

SERVICE_LINKED_ROLE_DEL_END   #Ending deleting a SERVICE_LINKED_ROLE
SERVICE_LINKED_ROLE_DEL_END
 .Status                      #'NOT_STARTED', 'IN_PROGRESS' or 'SUCCEEDED|FAILED'
SERVICE_LINKED_ROLE_DEL_END
 .Reason                      #DEL_ERROR when Status 'FAILED'
DEL_ERROR.Reason              #'ERROR'
DEL_ERROR.RoleUsageList       #RESOURCE_ERROR_ARR
RESOURCE_ERROR                #Resource using the SERVICE_LINKED_ROLE, prevening its deletion
RESOURCE_ERROR.Region         #'REGION'
RESOURCE_ERROR.Resources      #STR_ARR. Resource names


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:         SAML PROVIDER         :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


IDENTITY PROVIDER ==>         #SAML_PROVIDER|OPENID_PROVIDER

CreateSAMLProvider()          #Req: SAML_PROVIDER
                              #  - no SAMLProviderArn, CreateDate, ValidUntil
                              #Res: SAML_PROVIDER
                              #  - only SAMLProviderArn, Tags
UpdateSAMLProvider()          #Req: SAML_PROVIDER
                              #  - no Name, CreateDate, ValidUntil, Tags
                              #Res: SAML_PROVIDER
                              #  - only SAMLProviderArn
GetSAMLProvider()             #Req: SAML_PROVIDER
                              #  - only SAMLProviderArn
                              #Res: SAML_PROVIDER
                              #  - no SAMLProviderArn, Name
ListSAMLProviders()           #Req: empty
                              #Res: SAMLProviderList SAML_PROVIDER:
                              #  - no Name, SAMLMetadataDocument, Tags
                              #  - SAMLProviderArn -> Arn
DeleteSAMLProvider()          #Req: SAML_PROVIDER
                              #  - only SAMLProviderArn
                              #Res: empty

SAML_PROVIDER                 #Create a SAML 2.0 identity provider
                              #Max 100 (SUMMARY_MAP.Providers)
                              #Max 10 keys per SAML_PROVIDER
SAML_PROVIDER.SAMLProviderArn #SAML_PROVIDER_ARN. 'arn:aws:iam::ACCOUNT_ID:saml-provider/NAME'
SAML_PROVIDER.Name            #'SAML_PROVIDER'
SAML_PROVIDER.CreateDate      #'DATE'
SAML_PROVIDER.ValidUntil      #'DATE'
SAML_PROVIDER
 .SAMLMetadataDocument        #'XML' with the issuer's name, expiration and keys

TagSAMLProvider()
ListSAMLProviderTags()
UntagSAMLProvider()           #AWS TAGS
SAML_PROVIDER.Tags            #RESOURCE_NAME: SAMLProviderArn SAML_PROVIDER_ARN
                              #Can also use TransitiveTagKeys SAML attribute, like ASSUMED_ROLE_REQ.TransitiveTagKeys


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:           SAML ROLE           :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


AssumeRoleWithSAML()          #Req: SAML_ROLE_REQ
                              #Res: SAML_ROLE

SAML_ROLE_REQ                 #Request a SAML_ROLE
SAML_ROLE_REQ.RoleArn
SAML_ROLE_REQ.DurationSeconds
SAML_ROLE_REQ.Policy
SAML_ROLE_REQ.PolicyArns      #Like ASSUMED_ROLE_REQ.*

SAML_ROLE_REQ.PrincipalArn    #SAML_PROVIDER_ARN checking the authentication
SAML_ROLE_REQ.SAMLAssertion   #'BASE64' given by the SAML_PROVIDER
                              #Max 100KB

SAML_ROLE                     #Like ASSUMED_ROLE, but authenticating with SAML as well.
SAML_ROLE.Credentials
SAML_ROLE.AssumedRoleUser
SAML_ROLE.PackedPolicySize    #Like ASSUMED_ROLE.*
SAML_ROLE.SourceIdentity      #Like ASSUMED_ROLE.* but comes from SAML as 'https://aws.amazon.com/SAML/Attributes/SourceIdentity' property

SAML_ROLE.NameQualifier       #STR. SAML_ROLE identifier.
                              #Hash(Issuer, ACCOUNT_ID, 'SAML_PROVIDER')
SAML_ROLE.Audience            #STR. SAML's SubjectConfirmationData.Recipient
SAML_ROLE.Issuer              #STR. SAML's Issuer
SAML_ROLE.Subject             #STR. SAML's Subject.NameID
SAML_ROLE.SubjectType         #STR. SAML's Subject.NameID.Format

saml:namequalifier
saml:sub                      #STR CONDITION_KEYs. To use on action PACTION, not only AssumeRoleWithSAML()
saml:sub_type                 #Taken from SAML_ROLE_REQ.SAMLAssertion

saml:aud                      #STR CONDITION_KEY. To use on ROLE.AssumeRolePolicyDocument with PACTION AssumeRoleWithSAML|TagSession()
saml:doc                      #'ACCOUND_ID/SAML_PROVIDER' CONDITION_KEY. To use on ROLE.AssumeRolePolicyDocument with PACTION AssumeRoleWithSAML|TagSession()
saml:
 edupersonprimaryaffiliation
saml:
 edupersonprimaryorgunitdn
saml:edupersonprincipalname   #STR CONDITION_KEYs. To use on ROLE.AssumeRolePolicyDocument with PACTION AssumeRoleWithSAML()
saml:iss                      #Taken from SAML_ROLE_REQ.SAMLAssertion
saml:commonName
saml:cn
saml:edupersonaffiliation
saml:edupersonassurance
saml:edupersonentitlement
saml:edupersonnickname
saml:edupersonorgdn
saml:edupersonorgunitdn
saml:
 edupersonscopedaffiliation
saml:edupersontargetedid
saml:eduorghomepageuri
saml:
 eduorgidentityauthnpolicyuri
saml:eduorglegalname
saml:eduorgsuperioruri
saml:eduorgwhitepagesuri
saml:givenName
saml:mail
saml:name
saml:organizationStatus
saml:primaryGroupSID
saml:surname
saml:uid                      #STR_ARR CONDITION_KEYs. To use on ROLE.AssumeRolePolicyDocument with PACTION AssumeRoleWithSAML()
saml:x500UniqueIdentifier     #Taken from SAML_ROLE_REQ.SAMLAssertion


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:        OPENID PROVIDER        :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


CreateOpenIDConnectProvider() #Req: OPENID_PROVIDER
                              #  - no Arn, CreateDate
                              #Res: OPENID_PROVIDER
                              #  - only OpenIDConnectProviderArn, Tags
AddClientIDTo                 #Req: OPENID_PROVIDER
 OpenIDConnectProvider()      #  - only OpenIDConnectProviderArn, ClientIDList -> ClientID 'CLIENT_ID'
                              #Res: empty
RemoveClientIDFrom            #Req: OPENID_PROVIDER
 OpenIDConnectProvider()      #  - only OpenIDConnectProviderArn, ClientIDList -> ClientID 'CLIENT_ID'
                              #Res: empty
UpdateOpenIDConnectProvider   #Req: OPENID_PROVIDER
 Thumbprint()                 #  - only OpenIDConnectProviderArn, ThumbprintList
                              #Res: empty
GetOpenIDConnectProvider()    #Req: OPENID_PROVIDER
                              #  - only OpenIDConnectProviderArn
                              #Res: OPENID_PROVIDER
                              #  - no OpenIDConnectProviderArn
ListOpenIDConnectProviders()  #Req: empty
                              #Res: OPENID_PROVIDER_ARR
                              #  - only OpenIDConnectProviderArn -> Arn
DeleteOpenIDConnectProvider() #Req: OPENID_PROVIDER
                              #  - only OpenIDConnectProviderArn
                              #Res: empty

OPENID_PROVIDER               #Create an OpenID Connect provider
                              #Built-in, i.e. no need to create a OPENID_PROVIDER:
                              #  - 'cognito-identity.amazonaws.com'
                              #  - 'accounts.google.com'
                              #  - 'graph.facebook.com'
                              #Max 100 (SUMMARY_MAP.Providers)
OPENID_PROVIDER
 .OpenIDConnectProviderArn    #OPENID_PROVIDER_ARN. 'arn:aws:iam::ACCOUNT_ID:oidc-provider/NAME'
OPENID_PROVIDER.CreateDate    #'DATE'
OPENID_PROVIDER.Url           #'URL' of provider
OPENID_PROVIDER.ClientIDList  #'CLIENT_ID'_ARR
                              #ID of the web|mobile application.
                              #Sent as ?client_id=CLIENT_ID in OpenID Connect flow.
                              #Max length 100
OPENID_PROVIDER               #'THUMBPRINT'_ARR. Hex SHA1 checksum of each SERVER_CERTIFICATE.
 .ThumbprintList              #Max length 5

TagOpenIDConnectProvider()
ListOpenIDConnectProviderTags
 ()
UntagOpenIDConnectProvider()  #AWS TAGS
OPENID_PROVIDER.Tags          #RESOURCE_NAME: OpenIDConnectProviderArn OPENID_PROVIDER_ARN
                              #Can also use TransitiveTagKeys in OAuth2|OpenID token, like ASSUMED_ROLE_REQ.TransitiveTagKeys
                              #  - using property 'https://aws.amazon.com/tags' OBJ: principal_tags OBJ2, transitive_tag_keys 'TAG'_ARR


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:         WEB IDENTITY          :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


AssumeRoleWithWebIdentity()   #Req: WEB_ID_ROLE_REQ
                              #Res: WEB_ID_ROLE

WEB_ID_ROLE_REQ               #Request a WEB_ID_ROLE
WEB_ID_ROLE_REQ.RoleArn
WEB_ID_ROLE_REQ
 .RoleSessionName
WEB_ID_ROLE_REQ
 .DurationSeconds
WEB_ID_ROLE_REQ.Policy
WEB_ID_ROLE_REQ.PolicyArns    #Like ASSUMED_ROLE_REQ.*

WEB_ID_ROLE_REQ.ProviderId    #'www.amazon.com' or 'graph.facebook.com'
                              #Only with OAuth 2.0, not OpenID
WEB_ID_ROLE_REQ
 .WebIdentityToken            #'OAUTH2_TOKEN|OPEN_ID_TOKEN' returned by OpenID|OAuth provider

WEB_ID_ROLE                   #Like ASSUMED_ROLE, but authenticating with either OpenID or OAuth 2.0 (Amazon|Facebook only) as well.
WEB_ID_ROLE.Credentials
WEB_ID_ROLE.AssumedRoleUser
WEB_ID_ROLE.PackedPolicySize  #Like ASSUMED_ROLE.*
WEB_ID_ROLE.SourceIdentity    #Like ASSUMED_ROLE.* but comes from WebIdentityToken as 'https://aws.amazon.com/source_identity' property.

WEB_ID_ROLE                   #STR. WEB_ID_ROLE identifier.
 .SubjectFromWebIdentity      #Based on OpenID's sub.
WEB_ID_ROLE.Audience          #STR. 'CLIENT_ID'
WEB_ID_ROLE.Provider          #STR. OpenID's iss, or (for OAuth 2.0) WEB_ID_ROLE_REQ.ProviderId

WEB_ID_DOMAIN:aud             #STR CONDITION_KEY. To use on ROLE.AssumeRolePolicyDocument with PACTION AssumeRoleWithWebIdentity()
                              #Only with 'cognito-identity.amazonaws.com|accounts.google.com'
WEB_ID_DOMAIN:sub             #STR CONDITION_KEY. To use on ROLE.AssumeRolePolicyDocument with PACTION AssumeRoleWithWebIdentity()
                              #Only with 'cognito-identity.amazonaws.com|accounts.google.com'
WEB_ID_DOMAIN:oaud            #STR CONDITION_KEY. To use on ROLE.AssumeRolePolicyDocument with PACTION AssumeRoleWithWebIdentity()
                              #Only with 'accounts.google.com'
WEB_ID_DOMAIN:amr             #STR_ARR CONDITION_KEY. To use on ROLE.AssumeRolePolicyDocument with PACTION AssumeRoleWithWebIdentity()
                              #["unauthenticated"] or ["authenticated", 'WEB_ID_WEB_ID_DOMAIN']
                              #Only with 'cognito-identity.amazonaws.com'
WEB_ID_DOMAIN:id              #STR CONDITION_KEY. To use on ROLE.AssumeRolePolicyDocument with PACTION AssumeRoleWithWebIdentity()
                              #Only with 'graph.facebook.com'
WEB_ID_DOMAIN:app_id          #STR CONDITION_KEY. To use on ROLE.AssumeRolePolicyDocument with PACTION AssumeRoleWithWebIdentity()
                              #Only with 'graph.facebook.com|www.amazon.com'
WEB_ID_DOMAIN:user_id         #STR CONDITION_KEY. To use on ROLE.AssumeRolePolicyDocument with PACTION AssumeRoleWithWebIdentity()
                              #Only with 'www.amazon.com'

aws:FederatedProvider         #'WEB_ID_DOMAIN' CONDITION_KEY, if PRINCIPAL SAML|OpenID


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:         BEARER TOKEN          :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


BEARER_TOKEN                  #Like TEMP_CREDS but as a single STR.
                              #Meant to be passed in a HTTP header or ENVVAR
                              #  - as opposed to usual AWS signature headers
                              #Only for specific SERVICEs like CodeArtifact
                              #The specific SERVICE provides an ACTION to create the BEARER_TOKEN
                              #Re-uses PRINCIPAL's current permissions
sts:GetServiceBearerToken     #PACTION required to perform the ACTION creating the BEARER_TOKEN

sts:AWSServiceName            #'SERVICE_DOMAIN' CONDITION_KEY of the SERVICE using the BEARER_TOKEN
                              #Meant to be used with sts:GetServiceBearerToken PACTION
sts:DurationSeconds           #NUM CONDITION_KEY when using a BEARER_TOKEN
