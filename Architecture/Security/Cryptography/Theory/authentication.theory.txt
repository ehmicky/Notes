
                                  ┏━━━━━━━━━━━━━━━━━━━━┓
                                  ┃   AUTHENTICATION   ┃
                                  ┗━━━━━━━━━━━━━━━━━━━━┛

Credentials:
  - types:
     - can be:
        - knowledge: 
           - password/passphrase, secret questions, etc.
           - problems:
              - because need to memorized:
                 - incentive to keep entropy low
                    - e.g. dictionary attacks
                 - might be written down
              - easiest to steal
        - possession:
           - security token, key/lock
           - can be disconnected (tells user credentials) or connected (tells computer credentials directly)
           - problems: can be stolen
        - inherence: 
           - biometrics: fingerprint, retina reader, voice recognition
           - problems: hard to implement
     - multifactor authentication (MFA):
        - using different types together
        - 2-factor authentication (2FA): when two types
  - lifetime:
     - long-lived: most convenient, but if not confidential anymore, must revoke
     - long-lived -> one-time|temp token: middle-way
     - one-time|temp tokens: 
        - less convenient, but if not confidential anymore, no need to revoke
        - one-time|temp can be:
           - time-wise: 
              - server-side expiration time
              - timestamp hashed in token (TOTP)
           - request-wise: e.g. only for this specific request/response (using nonce)
  - creation issuer:
     - user-picked: more convenient but less entropy
     - server-picked: less convenient but more entropy
  - scope:
     - shared among websites:
        - often goes along user-picked
        - if not confidential anymore, compromise other websites
        - can prevent problem by persisting only hash
     - unique for specific website

