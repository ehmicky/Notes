
                                  ┏━━━━━━━━━━━━━┓
                                  ┃   PADDING   ┃
                                  ┗━━━━━━━━━━━━━┛

Padding scheme :
  - padding nécessaire pour qu'un message de taille variable soit de taille divisible par n pour être utilisé par bloc :
    - attention risques du padding
    - taille clef peut être plus facilement devinée
  - pour :
    - hash functions : Merkle-Damgård construction (MD-Compliant)
    - block ciphers : avec certains modes of operations avec taille input > 1 : CBC, PCBC, ECB
  - susceptibles à des timing attacks

Méthodes :
  - ajouter des octets de valeur fixe N (en général '\0'):
    - jamais utilisé car problème si plaintext se termine par un ou plusieurs octet de cette valeur
  - ajouter un bit 1, suivi d'une suite de bits 0
  - ANSI X.923 : ajouter N octets, tous remplis de '\0', sauf dernier octet dont valeur == N
  - ISO 10126 : pareil, mais octets remplis aléatoirement
  - PKCS7/PKCS5 : pareil, mais octets tous remplis avec N
  - CTS
  - Residual block termination

Padding scheme MD-compliant :
  - doit :
    - si p₁ == p₂, alors pad(p₁) == pad(p₂)
      - par exemple, pas de padding aléatoire
    - si p₁ != p₂, alors dernier block de pad(p₁) != celui de pad(p₂)
      - par exemple, pas de padding avec que des '\0', car si p₁ == p₂∥ '\0', dernier block de pad(p₁) == celui de pad(p₂)
  - souvent utilise ANSI X.923

CTS (ciphertext stealing) :
  - un padding scheme permettant d'éviter d'augmenter taille du ciphertext
    - V signifie chiffrement, ◢ signifie simple concaténation, ⊕ signifie xor
    - pour déchiffrer, faire sens inverse
    - avec ECB :
                          Avant-dernier    Dernier bloc
                          bloc plaintext    plaintext
                          +------------+    +--------+
                                   |             |
                                   |   __________|_____
                                   v  /          ◢     ◢
                          +--------+---+    +--------+---+
                                  \_________________/
                                __/\____________
                               V                ◢
                          +------------+    +--------+
                          Avant-dernier     Dernier bloc
                         bloc ciphertext    ciphertext
    - avec CBC :
                          Avant-dernier  Dernier bloc Zero
                          bloc plaintext    plaintext Padding
                          +------------+    +--------+---+
                                   |                 |
                    /--------------⊕   /-------------⊕
                   /               v  /              ◢
                  /       +--------+---+    +------------+
                 |        +--------+---+    +------------+
                 |                \_________________/
                 |              __/\____________
                 |             V                ◢
        +------------+    +------------+    +--------+
     Avant-avant-dernier  Avant-dernier     Dernier bloc
       bloc ciphertext   bloc ciphertext    ciphertext
    - plaintext doit avoir taille > 1 bloc pour ECB, pas pour CBC, car l'IV peut être utilisé (auquel cas l'IV modifié doit
      être envoyé) (à moins que l'on ne puisse pas modifier l'IV)
    - si taille du stream à chiffrer est inconnu, il faut toujours garder les deux derniers blocs sans les chiffrer en
      attendant de recevoir un End of Transmission
    - l'error propagation diffère de celle d'un ECB ou CBC normal
    - alternative : utiliser un mode of operation ne demandant pas de padding

Residual block termination :
  - alternative à CTS pour CBC :
    - utiliser CBC pour tous les blocs sauf dernier
    - utiliser OFB pour dernier bloc, c'est-à-dire :
      - rechiffrer l'avant-dernier bloc
      - xor le dernier bloc avec l'avant-dernier bloc
