
                                  ┏━━━━━━━━━━┓
                                  ┃   CORS   ┃
                                  ┗━━━━━━━━━━┛

                                  ┌──────────┐
                                  │   MAIN   │
                                  └──────────┘

CORS ==>                          #Cross Origin Resource Sharing
                                  #Server requesting client to not enforce SOP for specific ORIGINs on specific resources
                                  #I.e. loosens SOP restrictions for content types usually forbidden to be cross-domain

Origin: ORIGIN ... [C]            #Cannot be forged in browsers
                                  #  - CORS does not help when client can forge Origin [C]
                                  #Always sent if not same origin
                                  #ORIGIN can be null (for privacy)

Access-Control-Allow-Origin:      #Request client not to enforce SOP
 ORIGIN [S]                       #Must match one of Origin [C]
                                  #Can be * but should avoid it

                                  ┌───────────────────────┐
                                  │   PREFLIGHT REQUEST   │
                                  └───────────────────────┘

PREFLIGHT REQUEST ==>             #Pre-request that asks for CORS info from server
                                  #Uses OPTIONS method + Origin [C]

SIMPLE REQUEST ==>                #Skipping preflight request. Only allowed if all of:
                                  #  - GET|HEAD|POST
                                  #  - Content-Type [C] is 'application/x-www-urlencoded', 'multipart/form-data' or 'text/plain'
                                  #  - only HTTP headers: Accept, Accept-Language, Content-Language, Content-Type, Range, Last-Event-ID, Downlink, client hints
                                  #  - no RSTREAM is used

Access-Control-Request-* [C]      #Inform server about the upcoming request
Access-Control-Request-Method:
 METHOD [C]                       #
Access-Control-Request-Headers:
 HEADER,... [C]                   #

                                  ┌─────────┐
                                  │   DOM   │
                                  └─────────┘

REQ[Q].mode                       #With fetch(), whether to make CORS request (if cross-origin):
                                  #  - 'cors' (def): yes
                                  #  - 'navigate': yes
                                  #     - set from user interaction (e.g. clicking on link), cannot be set programmatically
                                  #     - RES.type will be 'basic'
                                  #  - 'no-cors': yes, if no preflight
                                  #     - RES.type will be 'opaque'
                                  #  - 'same-origin': no

XHR|EVENTSOURCE[_OPTS]            #BOOL (def: false). Must be true if using one of:
 .withCredentials                 #  - Cookie [C]
                                  #  - [Proxy-]Authentication [C]
                                  #  - client-side SSL certificates
REQ[Q].credentials                #Same but value is:
                                  #  - 'omit': forbidden even if same-origin
                                  #  - 'same-origin' (def): allowed if same-origin
                                  #  - 'include': allowed

<script|link|img|audio|video      #Make CORS request
 crossorigin[="STR"]>             #STR decides REQ.credentials:
                                  #  - nothing|''|'anonymous': 'same-origin'
                                  #  - 'use-credentials': 'include'
                                  #By default, does not allow CORS requests

                                  ┌────────────────────────┐
                                  │   PREFLIGHT RESPONSE   │
                                  └────────────────────────┘

PREFLIGH RESPONSE ==>             #If success, 204
                                  #If failure, 401

Access-Control-Allow-* [S]        #Inform client about all allowed request

Access-Control-Allow-Origin:
 ORIGIN [S]                       #
Vary: ORIGIN [S]                  #Should be set with same value, except if using *
Access-Control-Allow-Methods:
 METHOD,... [S]                   #Can use *
Access-Control-Allow-Headers:
 HEADER,... [S]                   #Can use *

Access-Control-Allow-Credentials:
 true [S]                         #Not allowed if Access-Control-Allow-Origin: *

Access-Control-Max-Age: NUM [S]   #How many seconds client should cache preflight response
                                  #Def: 5s
                                  #Max: 2h (Chrome), 24h (Firefox)

Access-Control-Expose-Headers:    #Which HEADER to show to end user in final response
 HEADER,... [S]                   #By default (and always shown), only show:
                                  #Content-Type, Cache-Control, Content-Language, Expires, Pragma, Last-Modified
                                  #Can use *
