
       
   JSR  
       



VERSION ==>                       #0.13.0

deno ...                          #Built-in commands to use JSR from Deno
ENVVAR DENO_BIN_PATH              #Def: use ENVVAR PATH

jsr                               #Npm package to use JSR from Node
--npm|yarn|pnpm|bun               #Which package manager to use under the hood
--verbose                         #

CONFIG                            #Deno config

@SCOPE                            #3 per user
@SCOPE/PKGNAME                    #PKG
@std/PKGNAME                      #Deno std package

import ... 'jsr:PKG[@RANGE]'      #Def RANGE: latest

ENVVAR JSR_URL                    #Custom URL, instead of https://jsr.io
https://jsr.io/PKG@X.Y.Z/PATH     #Download specific file

https://jsr.io/PKG/meta.json      #PKG_META, i.e. description of PKG
PKG_META.scope                    #'@USER'
PKG_META.name                     #'PKGNAME'
PKG_META.latest                   #'X.Y.Z'
PKG_META.versions['X.Y.Z']        #OBJ

jsr info|show|view PKG[@RANGE]    #Print PKG information:
                                  #  - version[s]
                                  #  - package description
                                  #  - npm URI
                                  #  - publish time

deno add PKG[@RANGE]              #Adds CONFIG.imports.PKG 'jsr:PKG@RANGE'
                                  #RANGE:
                                  #  - def: latest
                                  #  - always adds ^ unless ~ specified
                                  #  - X.Y.Z even if only X or X.Y specified

jsr add|install|i PKG[@RANGE]...  #Adds package.json dependencies
--save-prod|-P
--save-dev|-D
--save-optional|-O                #Like npm

jsr remove|uninstall|r PKG        #Removes CONFIG.imports.PKG

https://npm.jsr.io                #npm API-compatible proxy of JSR registry
.npmrc                            #Automatically updated to add '@jsr:registry=https://npm.jsr.io'
npm:PKG@X.Y.Z                     #In package.json dependencies, when using npm.jsr.io
                                  #Slashes converted to __

jsr [run] SCRIPT                  #Run package.json script

CONFIG.name                       #'PKG'
CONFIG.version                    #'X.Y.Z'
CONFIG.exports                    #'PATH' to main file

jsr publish                      !#Publish package in current directory (including monorepo)
--token TOKEN                     #Auth token
                                  #Created through UI
                                  #Def: done through browser (preferred on local machine)
                                  #For GitHub actions, prefer using OIDC
                                  #Can set expiration
                                  #Can restrict to specific @USER or PKG
--dry-run                         #
--allow-slow-types                #Unless set, forbid TypeScript types that are slow
--allow-dirty                     #Unless set, forbid uncommitted changes with git
--no-provenance                   #Unless set, use GitHub actions provenance attestion, which autenticates the package

https://jsr.io/PKG                #UI showing:
                                  #  - package description
                                  #  - runtime compatibility
                                  #  - README.md
                                  #  - files
                                  #  - versions
                                  #  - automatic docs
                                  #  - dependencies and dependents
                                  #  - JSR score
PACKAGE DESCRIPTION ==>           #Added through UI
RUNTIME COMPATIBILITY ==>         #Added through UI
                                  #Browsers, Deno, Node.js, Bun, Cloudflare workers
AUTOMATIC DOCS ==>                #Based on TypeScript types
                                  #Also /** */ comments on exported fields
                                  #Also /** */ comments on main files, using @module ("module doc")

JSR SCORE ==>                     #For ordering. Following fields:
README ==>                        #Has README.md or module doc
                                  #2 points
MODULE DOC ==>                    #Has module doc
                                  #1 point
EXAMPLES ==>                      #Code block in README.md or module doc
                                  #1 point
EXPORTED FILEDS COMMENT ==>       #/** */ comment on >=80% of exported fields
                                  #5 points
NO SLOW TYPES ==>                 #TypeScript types are not slow
                                  #5 points
UI DESCRIPTION ==>                #Must be manually added
                                  #1 point
RUNTIME COMPATIBLITY ==>          #At least 2
                                  #2 points
PROVENANCE ==>                    #Through GitHub action
                                  #1 point
