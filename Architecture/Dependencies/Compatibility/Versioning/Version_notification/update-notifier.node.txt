
                   
   UPDATE-NOTIFIER  
                   



VERSION ==>                       #6.0.2
                                  #Prints CLI message when new version of current package is available
                                  #Meant for binaries

UPDATE-NOTIFIER(OPTS)->NOTIFIER   #Same as new UpdateNotifier(OPTS) + NOTIFIER.check()

new UpdateNofifier(OPTS)          #OPTS:
                                  #  - pkg OBJ:
                                  #     - package.json of package to check
                                  #     - only PACKAGE.name|version used (both required)
                                  #  - distTag STR (def: 'latest'): npm TAG that is checked
                                  #  - updateCheckInterval NUM (in ms, def: 1 day): throttle NOTIFIER.check()
                                  #  - disabled BOOL (def: false)
                                  #     - always disabled in CI
                                  #     - make NOTIFIER.check() a noop (but not NOTIFIER.notify())
                                  #     - can also use:
                                  #        - ENVVAR NO_UPDATE_NOTIFIER=1
                                  #        - --no-update-notifier in process.argv
                                  #        - CONFIGSTORE.optOut true
                                  #  - shouldNotifyInNpmScript BOOL (def: false)
NOTIFIER.config                   #State using CONFIGSTORE (see its doc), i.e. in global config dir

NOTIFIER.fetchInfo()->PROMISE_OBJ #Returns if current package is latest version.
                                  #Do it by doing HTTP request to npm
                                  #OBJ:
                                  #  - name STR (same as OPTS.pkg.name)
                                  #  - current 'VERSION' (same as OPTS.pkg.version)
                                  #  - latest 'VERSION2'
                                  #  - type:
                                  #     - if new version: '[pre]major|minor|patch' or 'prerelease|build'
                                  #     - otherwise: same as OPTS.distTag
NOTIFIER.check()                  #Sets CONFIGSTORE.update = checkNpm()
                                  #Do it in an detached child process (unref()'d, stdio 'ignore')
CONFIGSTORE.update                #OBJ. Last checkNpm() result

NOTIFIER.notify([NOPTS])          #Prints message on stderr that new version is available if CONFIGSTORE.update indicates it.
                                  #NOPTS:
                                  #  - message STR
                                  #     - def: 'Update available {currentVersion} -> {latestVersion}\nRun {updateCommand} to update' with colors
                                  #     - can use any of the {VAR} above and also {packageName}
                                  #  - boxenOptions OBJ
                                  #     - BOXEN options (see its doc)
                                  #     - def: {padding: 1, margin: 1, align: 'center', borderColor: 'yellow', borderStyle: 'round'}
                                  #  - defer BOOL (def: true): do it on process 'exit' instead of now
                                  #Show command to update:
                                  #  - if globally installed by Yarn (or NOPTS.isYarnGlobal true): 'yarn global add OPTS.pkg.name'
                                  #  - if globally installed (or NOPTS.isGlobal true): 'npm i -g OPTS.pkg.name'
                                  #  - if locally installed by Yarn: 'yarn add OPTS.pkg.name'
                                  #  - otherwise: 'npm i OPTS.pkg.name'
                                  #Not run if:
                                  #  - stdout not TTY
                                  #  - inside npm script (unless OPTS.shouldNotifyInNpmScript true)
