
                                  ┏━━━━━━━━━━━━━━━┓
                                  ┃   JSON-MASK   ┃
                                  ┗━━━━━━━━━━━━━━━┛

VERSION ==>                       #2.0.0

                                  ┌──────────┐
                                  │   MAIN   │
                                  └──────────┘

ANY_VAL                           #If not OBJ|ARR, noop

JSON-MASK(ANY_VAL, 'QUERY')
 ->ANY_VAL2                       #Only pick fields matched by QUERY

JSON-MASK.compile('QUERY')->FILTER
JSON-MASK.filter
 (ANY_VAL, FILTER)->ANY_VAL2      #Same but in two steps, for performance

                                  ┌───────────┐
                                  │   QUERY   │
                                  └───────────┘

QUERY                             #'VARR,...'
                                  #Must \-escape , * ( ) \

VARR                              #/-separated list of VAR or *
                                  #Can use VARR(VARR2,...)
                                  #If missing intermediate VAR, does not fail, just ignore

                                  ┌─────────┐
                                  │   CLI   │
                                  └─────────┘

json-mask "QUERY" [FILE.json]     #CLI
                                  #Def FILE.json: stdin (if TTY)

                                  ┌─────────────┐
                                  │   EXPRESS   │
                                  └─────────────┘

express-partial-response          #Version 1.0.4

EXPRESS-PARTIAL-RESPONSE([OPTS])  #Patches RES.json[p](VAL) so it applies JSON-MASK(VAL, 'QUERY')
 ->EXPRESS_MDWR                   #Only if RES.statusCode 2**

OPTS.query                        #'VAR' (def: 'fields')
                                  #Uses REQ.query.VAR as 'QUERY'

                                  ┌───────────┐
                                  │   MIDDY   │
                                  └───────────┘

@middy/http-partial-response      #See Middy doc

MIDDY-PARTIAL-RESPONSE([OPTS])    #Applies JSON-MASK(RES.body, 'QUERY')
 ->MIDDY_MDWR                     #If RES.body is a JSON string, parse it and re-serialize it
                                  #Uses normalizeHttpResponse() (see @middy/http-response-serializer doc)
                                  #Done in 'after' STEP

OPTS.filteringKeyName             #'VAR' (def: 'fields')
                                  #Uses REQ.queryStringParameters.VAR as 'QUERY'
