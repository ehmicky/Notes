
               
   DENO_SAMPLE  
               



VERSION ==>                       #Part of Deno
                                  #Browser compatible

@std/collections/sample.ts
sample(ARR)->VAL                  #Returns random item, using Math.random()

@std/random/sample
sample(ARR[, OPTS])->VAL         !#Same
OPTS.*                            #Like randomBetween() (see its doc)
OPTS.weights                      #NUM_ARR (def: equal)

@std/random/seeded
randomSeeded(BIGINT)             !#Seeded randomness, using PCG32 algorithm
 ->FUNC()->NUM                    #Range is [0, 1)
                                  #32 bits of entropy

@std/random/[integer-]between
random[Integer]Between           !#NUM >= NUM3 > NUM2
 (NUM, NUM2[, OPTS])->NUM3        #If Integer, cannot be floats
OPTS.prng                         #FUNC()->0-1 (def: Math.random)
