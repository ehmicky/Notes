
               
   DENO_REDUCE  
               



VERSION ==>                       #Part of Deno
                                  #Browser compatible

std/collections/reduce_groups.ts
reduceGroups
 (OBJ, FUNC(MEMO, VAL)->MEMO)
 ->OBJ                            #Apply ARR.reduce() on OBJ values ARR

std/collections/
 aggregate_groups.ts
aggregateGroups(OBJ,
 FUNC(VAL, KEY, BOOL, MEMO)->MEMO)#Apply ARR.reduce() on OBJ values ARR
 ->OBJ                            #FUNC third argument is whether index is 0

std/collections/running_reduce.ts
runningReduce(ARR,
 FUNC(MEMO, VAL, NUM)->MEMO, MEMO)
 ->ARR2                           #Like ARR.reduce() but returns ARR2 of each FUNC return value

