
                  
   DENO_PARTITION  
                  



VERSION ==>                       #Part of Deno
                                  #Browser compatible

std/collections/partition.ts
partition(ARR, FUNC(VAL)->BOOL)
 ->[ARR2, ARR3]                   #Split ARR into 2 sub-ARRs: with true (ARR2) and false (ARR3)

std/collections/
 partition_entries.ts
partition
 (OBJ, FUNC(['KEY', VAL])->BOOL)
 ->[OBJ2, OBJ3]                   #Split OBJ into 2 sub-OBJs: with true (OBJ2) and false (OBJ3)

std/collections/chunk.ts
chunk(ARR, NUM)->ARR_ARR          #Split ARR into sub-ARRs of size NUM, with different items

std/collections/sliding_windows.ts
slidingWindows(ARR, NUM[, OPTS])
 ->ARR_ARR                        #Split ARR into sub-ARRs of size NUM, with sliding items,
                                  #i.e. each sub-ARR starts|ends only OPTS.step items after the previous ones.
OPTS.step                         #NUM (def: 1)
OPTS.partial                      #BOOL (def: false). Also return last sub-ARRs of size < NUM

