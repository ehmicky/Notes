
                                  ┏━━━━━━━━━━━━━━━┓
                                  ┃   EMPTINESS   ┃
                                  ┗━━━━━━━━━━━━━━━┛

UNDEFINED ==>                     #Nothing, e.g. no argument passed or no value assigned

NULL ==>                          #Value (i.e. something) but noop
                                  #  - for functions: empty functions
                                  #  - in OOP, "null objects", implementing all methods as empty functions
                                  #     - which might be different from "null" constants in many languages
                                  #  - with pointers, "null pointer", often with an address === 0
                                  #A type is "nullable" if it is a union containing null:
                                  #  - "option type": when the nullability is represented by a type itself, e.g. Option<String>

BOTTOM TYPE ==>                   #Enum with no value.
                                  #Also called "zero|empty type"
                                  #Often represented by "void" or "undefined"
                                  #Often used to represent:
                                  #  - a function that does not return anything
                                  #  - an error
                                  #Constrasts with "top type" (see types documentation)
