
                                  ┏━━━━━━━━━━━━━━━━━━━━━━━━┓
                                  ┃   NEGOTIATOR_ACCEPTS   ┃
                                  ┗━━━━━━━━━━━━━━━━━━━━━━━━┛

ALTERNATIVES ==>                  #  - negotiator|accepts (preferred with Node)
                                  #  - deno negotiation (preferred with Deno)

                                  ┌────────────────┐
                                  │   NEGOTIATOR   │
                                  └────────────────┘

VERSION ==>                       #1.0.0

new Negotiator(REQ)               #
NEGOTIATOR.encodings              #Parses Accept-Encoding [C]
 ([STR2_ARR[, OPTS]])->STR_ARR    #If STR2_ARR, only accept those
NEGOTIATOR.encoding
 ([STR2_ARR[, OPTS]])[->STR]      #Same but only the first one (i.e. most preferred)
OPTS.preferred                    #STR2_ARR that are preferred, from most to least

NEGOTIATOR.language[s](...)       #Same for Accept-Language [C]. No OPTS.preferred.
NEGOTIATOR.charset[s](...)        #Same for Accept-Charset [C]. No OPTS.preferred.
NEGOTIATOR.mediaType[s](...)      #Same for Accept [C]. No OPTS.preferred.

                                  ┌─────────────┐
                                  │   ACCEPTS   │
                                  └─────────────┘

VERSION ==>                       #2.0.0

new Accepts(REQ)                  #Uses NEGOTIATOR

ACCEPTS.encodings()->STR_ARR      #
ACCEPTS.encoding
 (STR2_ARR or STR2,...)
 ->STR|false                      #

ACCEPTS.language[s](...)          #
ACCEPTS.charset[s](...)           #
ACCEPTS.type[s](...)              #Can use not only 'MIME' but also 'PATH.EXT' (must have a /)
